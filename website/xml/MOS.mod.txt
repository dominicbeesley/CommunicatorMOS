                                               ; 6502bench SourceGen v1.8.1
                                               CO_off_stack    .eq     0      {const}    ;coroutine stack
                                               COP_00_OPWRC    .eq     0      {const}    ;OPWRC - write character in A to VDU
                                               __EVESC         .eq     1      {const}    ;ESCape flag
                                               COP_01_OPWRS    .eq     1      {const}    ;Print the zero-terminate text following the cop instruction
                                               HDMMM           .eq     1      {const}    ;MM Global handle - ???
                                               MM_HANDLE_1_SPECIAL_QRY .eq 1      {const}
                                               __EVPRE         .eq     2      {const}    ;Event mask indicates a pre-empt
                                               __MMFP          .eq     $02    {const}    ;Free a pool
                                               CO_off_Parent   .eq     2      {const}    ;Pointer to parent coroutine
                                               COP_02_OPWRA    .eq     2      {const}    ;OPWRA - write string at BHA
                                               HND_type_2_CBMEM .eq    2      {const}    ;Handle type - Memory block
                                               COP_03_OPNLI    .eq     3      {const}    ;OSNEWL
                                               __MMBP          .eq     4      {const}    ;Undocumented mm call - TODO check for deprecated
                                               CO_off_flags    .eq     4      {const}    ;Coroutine block offset - flags
                                               COP_04_OPRDC    .eq     $04    {const}
                                               HND_type_4_CBSIND .eq   4      {const}    ;Handle type - module call reference - QRY used in STCSI
                                               CO_off_B        .eq     5      {const}    ;offset in couroutine of bank register
                                               __MMASD         .eq     6      {const}    ;Allocate small descending
                                               CO_off_DP       .eq     6      {const}    ;offset in couroutine block of DP pointer
                                               COP_06_OPOSB    .eq     6      {const}    ;OSBYTE
                                               HND_type_6_CBCO .eq     6      {const}    ;Handle type - coroutine
                                               COP_07_OPOSW    .eq     7      {const}    ;OSWORD
                                               HDMMW           .eq     7      {const}    ;A memory pool well known handle - QRY - looks to be used with some unknown hardare at 450000
                                               VDU_07_BELL     .eq     7      {const}
                                               CO_off_8_BRKBLOCK .eq   8      {const}    ;Contains a pointer to block that contains a pointer to a break handler in bank 0
                                               HND_type_8_CBCO2 .eq    8      {const}    ;Handle type - coroutine break handler QRY
                                               VDUMOD_OPX_8_EXPLODE .eq 8      {const}
                                               __MMASA         .eq     $0a    {const}    ;Allocate small ascending
                                               __STGIT         .eq     $0a    {const}    ;ST 0A - STGIT - GSINIT start reading GSTRANS string CR or space terminates
                                               COP_0A_OPBGT    .eq     $0a    {const}    ;BGET
                                               HND_type_A_CBLCB .eq    $0a    {const}    ;Handle type - ???
                                               VDUMOD_OPX_A    .eq     $0a    {const}
                                               COP_0B_OPBPT    .eq     $0b    {const}    ;BPUT
                                               COP_0B_OPBPUT   .eq     $0b    {const}    ;BPUT
                                               HND_off_B_type  .eq     $0b    {const}    ;Offset of the type byte in a handle block
                                               __MMALA         .eq     $0c    {const}    ;Allocate large asending area
                                               __STGLN         .eq     $0c    {const}    ;ST 0C - STGLN - GSINIT read line only <CR> terminates
                                               HND_type_C_CBMOD .eq    $0c    {const}    ;Handle type - module QRY
                                               VDUMOD_OPX_C_HIMEM .eq  $0c    {const}
                                               VDU_0D_CR       .eq     $0d    {const}
                                               __MMBAS         .eq     $0e    {const}    ;Return Pool Base in BHA
                                               __STGRD         .eq     $0e    {const}    ;ST 0E - STGRD - GSREAD
                                               COP_0E_OPCOM    .eq     $0e    {const}    ;Interpret command in BHA
                                               HND_type_E_CBIQ .eq     $0e    {const}    ;Handle type - Interrupt handler
                                               VDUMOD_OPX_E_HIMEMBYX .eq $0e    {const}
                                               COP_0F_OPERR    .eq     $0f    {const}
                                               COP_10_OPADP    .eq     $10    {const}    ;Allocate direct page
                                               HND_type_10_CBHN .eq    $10    {const}    ;Handle type - device handle
                                               MMLEN           .eq     $10    {const}    ;COPMM reason code, Y contains handle, exit BHA contains length
                                               VDUMOD_OPX_10_GETCURSOR .eq $10    {const}
                                               __DVOPN         .eq     $12    {const}    ;DVOPN - 12 - Open device / file
                                               __MMTOP         .eq     $12    {const}    ;Return the address of the top of the pool
                                               HND_type_12_CBDFR .eq   $12    {const}    ;Handle type - ???
                                               COP_13_OPAST    .eq     $13    {const}    ;allocate stack
                                               __DVCLS         .eq     $14    {const}    ;DVCLS - 14 - close device/file
                                               __STSBK         .eq     $14    {const}    ;ST 14 - STSBK - Read Break Signature
                                               VDUMOD_OPX_14_FLASH_QRY .eq $14    {const}
                                               VDU_15_DELLN    .eq     $15    {const}
                                               __DVBGT         .eq     $16    {const}    ;DVBGT - 16 - BGET from device
                                               __STTBK         .eq     $16    {const}    ;ST 16 - STTBK - Read BRK message text
                                               VDUMOD_OPX_16_GETCHARXY .eq $16    {const}
                                               __DVBPT         .eq     $18    {const}    ;DVBPT - 18 - BPUT to device
                                               __MMAZB         .eq     $18    {const}    ;Allocate Bank 0 area
                                               COP_18_OPRLH    .eq     $18    {const}    ;Read hex number
                                               VDUMOD_OPX_24_READVDUVAR .eq 24     {const}
                                               __DVCGT         .eq     $1a    {const}    ;DVCGT - 1A - device control byte get
                                               __DVCPT         .eq     $1c    {const}    ;DVCPT - 14 - send a control byte to the device
                                               __STGAD         .eq     $1c    {const}    ;ST 1C - STGAD - add Y to GSREAD pointer
                                               __DVEOF         .eq     $1e    {const}    ;DVEOF - 1E - Check for device EOF
                                               __STBMB         .eq     $20    {const}    ;ST 20 - STBMB - Get last BRK address to BHA
                                               COFLAG_hasBRKhandler .eq $20    {const}   ;When set there's a break handler
                                               COP_20_OPSEV    .eq     $20    {const}    ;Set Event - QRY - set escape when called with A=0003
                                               MHCFS           .eq     $20    {const}    ;Module type bits $20 - FS interface support
                                               COP_21_OPPRE    .eq     $21    {const}    ;allow pre-emption
                                               VDUMOD_OPX_22_READSTATUS .eq $22    {const}
                                               __DVLOD         .eq     $24    {const}    ;DVLOD - 24 - Load a file
                                               COP_24_OPCVD    .eq     $24    {const}    ;Convert direct page index
                                               __DVSAV         .eq     $26    {const}    ;DVSAV - 26 - save a file
                                               COP_26_OPBHA    .eq     $26    {const}    ;Set BHA to start of string immediate
                                               __DVRLE         .eq     $28    {const}    ;DVRLE - 28 - Read Load/Execute address
                                               COP_28_OPCMD    .eq     $28    {const}
                                               COP_29_OPRFR    .eq     $29    {const}    ;Find reference to module, entry BHA points name, X contains pointer in DP to 8 byte block
                                               __DVWLE         .eq     $2a    {const}    ;DVWLE - 2A - Write Load/Execute address
                                               __DVRAT         .eq     $2c    {const}    ;DVRAT - 2C - read file attributes
                                               COP_2C_OPFMA    .eq     $2c    {const}    ;Find module by address
                                               COP_2D_OPWRM    .eq     $2d    {const}    ;OPWRM - write module name
                                               __DVWAT         .eq     $2e    {const}    ;DVWAT - 2E - write file attributes
                                               COP_2F_OPIIQ    .eq     $2f    {const}    ;intercept interrupt
                                               __DVRSP         .eq     $30    {const}    ;DVRSP - 30 - read sequential pointer
                                               __DVWSP         .eq     $32    {const}    ;DVWSP - 32 - write sequential pointer
                                               COP_32_OPSUM    .eq     $32    {const}    ;Compute end-around-carry sum
                                               __DVRPL         .eq     $34    {const}    ;DVRPL - 34 - read file phyiscal length
                                               COP_34_OPRMI    .eq     $34    {const}    ;Read module info
                                               __DVRLL         .eq     $36    {const}    ;DVRLL - 36 - read file logical length
                                               COP_36_OPNLU    .eq     $36    {const}    ;Name lookup
                                               __DVWLL         .eq     $38    {const}    ;DVWLL - 38 - write file logical length
                                               __DVRCH         .eq     $3a    {const}    ;DVRCH - 3A - read catalog header
                                               __DVRFN         .eq     $3c    {const}    ;DVRFN - 3C - read file / object from directory
                                               __DVDEL         .eq     $3e    {const}    ;DCDEL - 3E - delete a file
                                               __DVREN         .eq     $40    {const}    ;DVREN - 40 - rename a file
                                               COFLAG_HASDP    .eq     $40    {const}    ;coroutine block flags bitmask for has valid DP
                                               __DVUNK         .eq     $42    {const}    ;DVUNK - 42 - ???
                                               __VDU_42        .eq     $42    {const}    ;Vdu module command 42
                                               __VDU_44        .eq     $44    {const}    ;Copy screen contents to BHA
                                               COP_44_OPOPN    .eq     $44    {const}
                                               COP_45_OPCLS    .eq     $45    {const}    ;Close file
                                               __VDU_46        .eq     $46    {const}    ;Restore variables
                                               COP_46_OPEND    .eq     $46    {const}    ;Check for EOF
                                               __VDU_48        .eq     $48    {const}    ;restore the screen contents
                                               __VDU_4A        .eq     $4a    {const}    ;VDU module call 4A
                                               COP_4F_OPSAV    .eq     $4f    {const}    ;save a file from memory
                                               COP_50_OPRLE    .eq     $50    {const}    ;Read Load/Execute/Length of file
                                               COP_51_OPWLE    .eq     $51    {const}    ;Write Load/Exec address of file
                                               COP_57_OPRLL    .eq     $57    {const}    ;read logical length (extent)
                                               COP_59_OPRCH    .eq     $59    {const}    ;OPRCH - read catalogue header information
                                               COP_5A_OPRFN    .eq     $5a    {const}    ;OPRFN - read file object info
                                               COP_5C_OPREN    .eq     $5c    {const}    ;rename file
                                               COP_61_OPERC    .eq     $61    {const}
                                               DPLOC_SYS       .eq     $ac00  {const}
                                               STACKTOP_SYS_QRY .eq    $adff  {const}    ;Set at reset QRY
                                               STACKTOP_RESET  .eq     $ffe0  {const}    ;Stack during reset
                                               DPCOP_Y         .eq     1      {addr/2}   ;offset of Y in COP entry/exit frame
                                               DPCOP_X         .eq     3      {addr/3}   ;offset of X in COP entry/exit frame
                                               DPCOP_AH        .eq     5      {addr/2}   ;offset of AH in COP entry/exit frame
                                               DPCOP_B         .eq     7      {addr/1}   ;offset of B(ank) in COP entry/exit frame
                                               DPCOP_DP        .eq     8      {addr/2}   ;offset of DP in COP entry/exit frame
                                               DPCOP_P         .eq     10     {addr/1}   ;offset of P in COP entry/exit frame
                                               DPCOP_PC        .eq     11     {addr/2}   ;offset of PC in COP entry/exit frame
                                               DPCOP_K         .eq     13     {addr/1}   ;offset of K (program bank) in COP entry/exit frame
                                               __MMFND         .eq     $14               ;Find a memory pool by task pool handle
                                               COP_1A_OPFZB    .eq     $1a               ;free zero bank pool
                                               COP_2E_OPFPO    .eq     $2e               ;find pool owner
                                               COP_31_OPMIQ    .eq     $31               ;modify interrupt intercept
                                               __VDU_40        .eq     $40               ;VDU module call 40 - QRY get screen size in HA
                                               COP_4E_OPLOD    .eq     $4e               ;load a file into memory
                                               COP_5B_OPDEL    .eq     $5b               ;delete file
                                               VDU_7F_BKSP     .eq     $7f               ;Backspace
                                               DPSYS_D8_B_SAV  .eq     $d8    {addr/1}   ;OSWORD saves caller's bank register
                                               BANK0_MEM_IRQ6502 .eq   $4040             ;QRY? Vector for IRQ in 6502 mode set at reset
                                               SYSVARS         .eq     $a500  {addr/207} ;QRY SYSVARS
                                               QOSBY_VECTOR    .eq     $a524  {addr/2}
                                               SYSVARS_INSV    .eq     $a52a  {addr/2}
                                               SYSVARS_REMV    .eq     $a52c  {addr/2}
                                               SYSVARS_CNPV    .eq     $a52e  {addr/2}
                                               SYSVAR_CFS_TIMEOUT .eq  $a540  {addr/1}
                                               SYSVAR_41_input_stream .eq $a541          ;Currently selected input stream
                                               SYSVAR_42_KEYSEMAPHORE .eq $a542  {addr/1} ;Keyboard scan semaphore
                                               SYSVAR_RS232_MODE .eq   $a545  {addr/1}
                                               SYSVAR_48_UNKNOWN_ULA .eq $a548
                                               SYSVAR_51_FLASHCTDN .eq $a551  {addr/1}
                                               SYSVAR_FLASH_MARK .eq   $a553
                                               SYSVAR_58_ESCBRK_EFFECT .eq $a558  {addr/1}
                                               SYSVAR_ELK_ULA_IE .eq   $a55b  {addr/1}   ;Soft copy of ULA interrupt mask
                                               SYSVAR_ELK_SOFTKEY_STRLEN .eq $a55d  {addr/1}
                                               SYSVAR_FLAGS_SOMETHINGOSBYTEY .eq $a55e  {addr/1}
                                               SYSVAR_SOFTKEY_STRLEN .eq $a568  {addr/1}
                                               SYSVAR_VDU_QLEN .eq     $a56a  {addr/1}
                                               SYSVAR_SOUND_EXT_FLAG .eq $a56b  {addr/1}
                                               SYSVARS_6C_ESCCHAR .eq  $a56c  {addr/1}
                                               SYSVARS_75_ESCACTION .eq $a575  {addr/1}
                                               SYSVARS_7C_OUTDEST .eq  $a57c  {addr/1}   ;output destination - FX3
                                               SYSVARS_ULA_MISC_COPY .eq $a582  {addr/1}
                                               SYSVAR_SOFTKEY_CONS .eq $a584
                                               SYSVARS_8d_lastbreak .eq $a58d
                                               SYSVAR_OSBYTE_255_STARTUP .eq $a58f
                                               SYSVARS_B0_INKEYCTDN .eq $a5b0  {addr/2}
                                               SYSVARS_OSWORD_0_PARMS .eq $a5b2  {addr/3}
                                               SYSVARS_ELK_BUFFER_BUSY .eq $a5c3  {addr/8}
                                               DPSYS_OSWORD0_BUFPTR .eq $a5e3  {addr/2}
                                               SOUND_QRY_T     .eq     $a814
                                               SOUND_QRY_S     .eq     $a81b
                                               SOUND_STATUS_QRY .eq    $a820  {addr/1}
                                               SOUND_TONE_QRY  .eq     $a821  {addr/1}
                                               SOUND_QRY_X     .eq     $a822  {addr/1}
                                               SOUND_CUR_CHAN_QRY .eq  $a825  {addr/1}
                                               SYSFNK          .eq     $ab00  {addr/256} ;Soft Keys Area
                                               DPSYS           .eq     $ac00  {addr/256} ;System's direct page area
                                               DPSYS_PAGEMODE_CTR .eq  $ac69
                                               DPSYS_DP_ECO    .eq     $ac9d  {addr/2}   ;Econet Direct Page Save QRY
                                               DPSYS_MOD_ECONET .eq    $ac9f  {addr/8}   ;module reference for econet
                                               DPSYS_MOD_NET   .eq     $acaf  {addr/6}   ;Module block for high level network module QRY - find out name
                                               DPSYS_MOD_VDU   .eq     $acbf  {addr/8}   ;vdu module reference
                                               DPSYS_DP_KEYBOARD .eq   $acc7  {addr/8}   ;module reference for keyboard module
                                               DPSYS_D1_EXEC_handle .eq $acd1  {addr/2}
                                               DPVAR_ACD4_HANDSET_STATUS_QRY .eq $acd4  {addr/1}
                                               DPSYS_D6_OSW_DPSAV .eq  $acd6  {addr/2}   ;OSWORD caller's saved DP
                                               DPSYS_GSREAD_flags .eq  $acdd  {addr/1}   ;bit 7 is quotes detected, bit 6 is terminate on space
                                               DPSYS_OSB_X     .eq     $acea  {addr/1}   ;OSBYTE saved X
                                               DPSYS_OSB_Y     .eq     $aceb  {addr/1}   ;OSBYTE saved Y
                                               DPSYS_OSB_A     .eq     $acec  {addr/1}   ;OSBYTE save in SYS DP
                                               DPSYS_GSREAD_ptr .eq    $aced  {addr/3}   ;GSREAD pointer in __ST
                                               DPSYS_OSB_IND   .eq     $acf6  {addr/2}
                                               B0LST_OPEN_FILES .eq    $fdfe  {addr/2}   ;QRY - list of all open files (handle type 10)
                                               B0LST_FREE_BLOCKS .eq   $fe00  {addr/2}   ;A list of free [handle block]s
                                               B0LSTEND_FREE_BLOCKS .eq $fe02  {addr/2}  ;points to the last entry in the free list
                                               B0LST_IRQ_HANDLER .eq   $fe06  {addr/2}   ;looks to be a list of interrupt handlers
                                               DP_HANDLE_VIDEO_QRY .eq $fe0c  {addr/2}   ;QRY see fe/d355
                                               B0LST_MODULES_QRY .eq   $fe0e  {addr/2}
                                               B0_IRQ_STACK    .eq     $fe10  {addr/2}   ;contains a stack pointer to be used for interrupts
                                               tblB0JumpTableFE80_QRY .eq $fe80  {addr/52} ;QRY set up from ROM during reset at FEb4e8
                                               tblB0JumpTableFEE0_QRY .eq $fee0  {addr/32}
                                               EXSYS           .eq     $ff00  {addr/256} ;Extended system variables
                                               MM_HANDLE_TAB   .eq     $ff00  {addr/80}  ;Looks to contain a set of memory handles
                                               EXSYS_HANDLEBLOCK_LONGPTR .eq $ff02  {addr/3}
                                               EXSYS_CO_A_SAVE .eq     $ff05  {addr/2}   ;used in CCO
                                               EXSYS_0D_BRKADDR_SAVE .eq $ff0d  {addr/3}
                                               EXSYS_CUR_COROUTINE .eq $ff10  {addr/2}   ;Stores the current coroutine's pointer
                                               SYS_ESCAPE_FLAG_QRY .eq $ff13
                                               tblB0JumpTableFF80_QRY .eq $ff80  {addr/80} ;jump table that branches to jmls to default cop handlers QRY?
                                               BANK0_HW_VECTORS .eq    $ffe0  {addr/32}
                                               BANK0_HW_NMI816 .eq     $ffea  {addr/2}   ;Native mode IRQ HW vector
                                               BANK0_HW_IRQ6502 .eq    $fffe  {addr/2}   ;hardware vector 6502 IRQ
                                               BANK0_HW_NMI816_SHAD1M .eq $10ffea {addr/2}
                                               BANK0_HW_IRQ6502_SHAD1M .eq $10fffe {addr/2} ;IRQ for 6502 mode in 1M shadow bank QRY? see reset
                                               HW_ECONET       .eq     $410000
                                               VIA_ORB         .eq     $420000 {addr/1}
                                               VIA_ORA         .eq     $420001 {addr/1}
                                               VIA_DDRB        .eq     $420002 {addr/1}
                                               VIA_DDRA        .eq     $420003 {addr/1}
                                               VIA_T1C_L       .eq     $420004 {addr/1}
                                               VIA_T1C_H       .eq     $420005 {addr/1}
                                               VIA_T1L_L       .eq     $420006 {addr/1}
                                               VIA_T1L_H       .eq     $420007 {addr/1}
                                               VIA_ACR         .eq     $42000b {addr/1}
                                               VIA_PCR         .eq     $42000c {addr/1}
                                               VIA_IFR         .eq     $42000d {addr/1}
                                               VIA_IER         .eq     $42000e {addr/1}
                                               HW_VIDEO_BASE   .eq     $450000 {addr/10000} ;Video ULA / Screen memory
                                               sheila_ULA_IRQ_CTL .eq  $45fe00
                                               sheila_ULA_CASSH .eq    $45fe04 {addr/1}
                                               sheila_ULA_PAG_IRQCLR .eq $45fe05 {addr/1}
                                               sheila_UKA_TONE .eq     $45fe06
                                               shiela_ULA_MISC .eq     $45fe07 {addr/1}  ;ULA misc control
                                               sheila_ULA_PAL  .eq     $45fe08 {addr/8}
                                               HW_EXTIO        .eq     $800000 {addr/10000} ;External IO space
                                               HW_TYPE_DETECT_QRY .eq  $f0fff8           ;QRY Seems to detect different motherboard types
                                               SYSVAR_IRQCTL_COPY .eq  $fea55b {addr/1}

                                                               .addrs  $feae00
                                                               .rwid   shortm,shortx
+000000 fe/ae00: 82 f2 00     ??MXd??? e @T.#. MOSSTART        brl     ServiceEnter      ;Branch to Service Routine

+000003 fe/ae03: 65 50 00                .....                 .dd3    $005065           ;Module length-2
+000006 fe/ae06: 00 01                   .....                 .dd2    $0100             ;version BCD
+000008 fe/ae08: 02 00 00 00             .T...                 .dd4    $00000002         ;FLAGS
+00000c fe/ae0c: 00 00                   .T...                 .dd2    $0000             ;RESV
+00000e fe/ae0e: 4d 4f 53 2f+            .....                 .zstr   “MOS/HELP/LOAD/SAVE/KEY/FX/EXEC/RESET/LCB/CLOSEALL/DELETE/RENAM” ;Command Table
                                                                +      “E/CAT/EX”
+000055 fe/ae55: 2f 2f 66 69+            .....                 .zstr   “//file [load_addr]/file [from_addr] [to_addr||+len] [exec_addr” ;Command help table
                                                                +      “] [load_addr]/key_num [string]/fx_num [x] [y]/[file]//num//fil”
                                                                +      “e/file1 file2/[fs:][dir]/[fs:][dir]”

                                               ; Service Call Handler
                                               ; 
                                               ; Dispatches to routine index in X
                                               ; 
                                               ; DP is hard coded to AC00
                                                               .rwid   longm,longx
+0000f5 fe/aef5: 08           ??mxd??? e ....> ServiceEnter    php
+0000f6 fe/aef6: c2 30        ??mxd??? e .....                 rep     #$30
+0000f8 fe/aef8: e0 0a 00     ??mxd??? e .....                 cpx     #$000a
+0000fb fe/aefb: b0 0e        ??mxd??? e .....                 bcs     @ServiceExitFail
+0000fd fe/aefd: f4 00 ac     ??mxd??c e .....                 pea     DPSYS
+000100 fe/af00: 2b           ??mxd??c e .....                 pld                       ;Set DP register tp AC00
+000101 fe/af01: e2 30        ??mxd??c e .....                 sep     #$30
                                                               .rwid   shortm,shortx
+000103 fe/af03: fc 0e af     ??MXd??c e .....                 jsr     (tblServices,x)
+000106 fe/af06: b0 03        ??MXd??? e .....                 bcs     @ServiceExitFail
+000108 fe/af08: 28           ??MXd??c e .....                 plp
                                                               .rwid   longm,longx
+000109 fe/af09: 18           ??mxd??? e .....                 clc
+00010a fe/af0a: 6b           ??mxd??c e ...#.                 rtl

                                                               .rwid   shortm,shortx
+00010b fe/af0b: 28           ????d??C e ....> @ServiceExitFail plp
                                                               .rwid   longm,longx
+00010c fe/af0c: 38           ??mxd??? e .....                 sec
+00010d fe/af0d: 6b           ??mxd??C e ...#.                 rtl

+00010e fe/af0e: 18 af                   ..... tblServices     .dd2    Serv0_starCommand & $ffff
+000110 fe/af10: 4f b0                   .....                 .dd2    Serv2_RESET & $ffff
+000112 fe/af12: 8a af                   .....                 .dd2    Serv4_QRY & $ffff
+000114 fe/af14: a3 af                   .....                 .dd2    Serv6_QRY & $ffff
+000116 fe/af16: e0 e8                   .....                 .dd2    Serv8_QRY & $ffff

                                                               .rwid   shortm,shortx
+000118 fe/af18: bb           ??MXd??? e @T... Serv0_starCommand tyx
+000119 fe/af19: a0 00        ??MXd??? e .....                 ldy     #$00
+00011b fe/af1b: 18           n?MXd?Z? e .....                 clc
+00011c fe/af1c: e2 30        n?MXd?Zc e .....                 sep     #$30
+00011e fe/af1e: fc 22 af     n?MXd?Zc e .....                 jsr     (tblStarCommandDispatch,x)
+000121 fe/af21: 60           ??MXd??? e ...#.                 rts

+000122 fe/af22: 47 af                   ..... tblStarCommandDispatch .dd2 starMOS & $ffff
+000124 fe/af24: 47 af                   .....                 .dd2    starMOS & $ffff
+000126 fe/af26: fb df                   .....                 .dd2    starLOAD & $ffff
+000128 fe/af28: ff df                   .....                 .dd2    starSAVE & $ffff
+00012a fe/af2a: 19 e1                   .....                 .dd2    starKEY & $ffff
+00012c fe/af2c: 20 e1                   .....                 .dd2    starFX & $ffff
+00012e fe/af2e: 0c ee                   .....                 .dd2    starEXEC & $ffff
+000130 fe/af30: b9 de                   .....                 .dd2    starRESET & $ffff
+000132 fe/af32: 1c e1                   .....                 .dd2    starLCB & $ffff
+000134 fe/af34: 3e af                   .....                 .dd2    starCLOSEALL & $ffff
+000136 fe/af36: 7a f9                   .....                 .dd2    starDELETE & $ffff
+000138 fe/af38: 7d f9                   .....                 .dd2    starRENAME & $ffff
+00013a fe/af3a: 88 f9                   .....                 .dd2    starCAT & $ffff
+00013c fe/af3c: 80 f9                   .....                 .dd2    starEX & $ffff

+00013e fe/af3e: 08           ??MXd??? e @T... starCLOSEALL    php
+00013f fe/af3f: c2 30        ??MXd??? e .....                 rep     #$30
                                                               .rwid   longm,longx
+000141 fe/af41: 4b           ??mxd??? e .....                 phk
+000142 fe/af42: 20 ba f7     ??mxd??? e .....                 jsr     closeAllFiles     ;long call
+000145 fe/af45: 28           ??mxd??? e .....                 plp
                                                               .rwid   shortm,shortx
+000146 fe/af46: 60           ??MXd??? e ...#.                 rts

+000147 fe/af47: 02 01        ??MXd??? e @T... starMOS         cop     COP_01_OPWRS
+000149 fe/af49: 43 6f 6d 6d+            .T...                 .zstr   “Communicator Operating System”,$0a,$0d,“Version 1.00 13/Nov/86”
                                                                +      “ (C)1986”,$0a,$0d
+000189 fe/af89: 60           ??MXd??? e .T.#.                 rts

+00018a fe/af8a: f4 00 00     ??MXd??? e @T... Serv4_QRY       pea     $0000
+00018d fe/af8d: ab           ??MXd??? e .....                 plb
                                                               .dbank  $00
+00018e fe/af8e: ab           ??MXd??? e .....                 plb                       ;Data Bank to 0
+00018f fe/af8f: 48           ??MXd??? e .....                 pha
+000190 fe/af90: a8           ??MXd??? e .....                 tay
+000191 fe/af91: 20 2e e2     ??MXd??? e .....                 jsr     writeToInputBuffer0
+000194 fe/af94: fa           ??MXd??? e .....                 plx
+000195 fe/af95: a9 00        ??MXd??? e .....                 lda     #$00
+000197 fe/af97: ec 6c a5     n?MXd?Z? e .....                 cpx     SYSVARS_6C_ESCCHAR
+00019a fe/af9a: d0 06        ??MXd??? e .....                 bne     LFEAFA2
+00019c fe/af9c: ae 75 a5     ??MXd?Z? e .....                 ldx     SYSVARS_75_ESCACTION
+00019f fe/af9f: d0 01        ??MXd??? e .....                 bne     LFEAFA2
+0001a1 fe/afa1: 1a           ??MXd?Z? e .....                 inc     A
+0001a2 fe/afa2: 60           ??MXd??? e ...#> LFEAFA2         rts

+0001a3 fe/afa3: f4 00 00     ??MXd??? e @T... Serv6_QRY       pea     $0000
+0001a6 fe/afa6: ab           ??MXd??? e .....                 plb
+0001a7 fe/afa7: ab           ??MXd??? e .....                 plb
+0001a8 fe/afa8: 49 00        ??MXd??? e .....                 eor     #$00
+0001aa fe/afaa: f0 10        ??MXd??? e .....                 beq     LFEAFBC
+0001ac fe/afac: 78           ??MXd?z? e .....                 sei
+0001ad fe/afad: a5 d5        ??MXdIz? e .....                 lda     $d5
+0001af fe/afaf: c9 81        ??MXdI?? e .....                 cmp     #$81
+0001b1 fe/afb1: 90 07        ??MXdI?? e .....                 bcc     LFEAFBA
+0001b3 fe/afb3: 58           ??MXdI?C e .....                 cli
+0001b4 fe/afb4: a5 d5        ??MXdi?C e ....> LFEAFB4         lda     $d5
+0001b6 fe/afb6: c9 80        ??MXdi?C e .....                 cmp     #$80
+0001b8 fe/afb8: b0 fa        ??MXdi?? e .....                 bcs     LFEAFB4
+0001ba fe/afba: a9 ff        ??MXd??c e ....> LFEAFBA         lda     #$ff
+0001bc fe/afbc: 85 d3        ??MXd??? e ....> LFEAFBC         sta     $d3
+0001be fe/afbe: 60           ??MXd??? e ...#.                 rts

+0001bf fe/afbf: e9 e0                   ..... tblInitSysVars  .dd2    defaultUSERV & $ffff ;USERV
+0001c1 fe/afc1: 34 b6                   .....                 .dd2    default_IVBRK & $ffff ;BRKV
+0001c3 fe/afc3: 00 00                   .....                 .dd2    $0000             ;IRQ1V
+0001c5 fe/afc5: 00 00                   .....                 .dd2    $0000             ;IRQ2V
+0001c7 fe/afc7: 9f dd                   .....                 .dd2    doLNCLI & $ffff   ;CLIV
+0001c9 fe/afc9: cc e7                   .....                 .dd2    doDispatchOSBYTE & $ffff
+0001cb fe/afcb: 3d e8                   .....                 .dd2    enterOSWORD_BHA & $ffff
+0001cd fe/afcd: ff de                   .....                 .dd2    TFEDEFF & $ffff
+0001cf fe/afcf: 72 e2                   .....                 .dd2    int_OPRDC & $ffff
+0001d1 fe/afd1: 47 ee                   .....                 .dd2    donothingRTS & $ffff
+0001d3 fe/afd3: 47 ee                   .....                 .dd2    donothingRTS & $ffff
+0001d5 fe/afd5: 47 ee                   .....                 .dd2    donothingRTS & $ffff
+0001d7 fe/afd7: 47 ee                   .....                 .dd2    donothingRTS & $ffff
+0001d9 fe/afd9: 47 ee                   .....                 .dd2    donothingRTS & $ffff
+0001db fe/afdb: 47 ee                   .....                 .dd2    donothingRTS & $ffff
+0001dd fe/afdd: 47 ee                   .....                 .dd2    donothingRTS & $ffff
+0001df fe/afdf: 47 ee                   .....                 .dd2    donothingRTS & $ffff
+0001e1 fe/afe1: 47 ee                   .....                 .dd2    donothingRTS & $ffff
+0001e3 fe/afe3: 47 ee                   .....                 .dd2    donothingRTS & $ffff
+0001e5 fe/afe5: 47 ee                   .....                 .dd2    donothingRTS & $ffff
+0001e7 fe/afe7: 00 00                   .....                 .dd2    $0000             ;KEYV - QRY assume this gets set up by KEYBOARD module?
+0001e9 fe/afe9: f1 e1                   .....                 .dd2    defaultINSV & $ffff ;ISNV
+0001eb fe/afeb: a2 e1                   .....                 .dd2    defaultREMV & $ffff ;REMV
+0001ed fe/afed: 78 df                   .....                 .dd2    defaultCNPV & $ffff ;CNPV
+0001ef fe/afef: 47 ee                   .....                 .dd2    donothingRTS & $ffff ;IND1V
+0001f1 fe/aff1: 47 ee                   .....                 .dd2    donothingRTS & $ffff ;IND2V
+0001f3 fe/aff3: 47 ee                   .....                 .dd2    donothingRTS & $ffff ;IND3V
+0001f5 fe/aff5: 90 a4                   .....                 .dd2    SYSVARS-112       ;&236 - address of OS vars (A6)
+0001f7 fe/aff7: 9f 0d                   .....                 .dd2    $0d9f             ;&238 - address of vector table QRY
+0001f9 fe/aff9: a0 a5                   .....                 .dd2    $a5a0             ;&23A - address of ROM info table QRY
+0001fb fe/affb: 00 00                   .....                 .dd2    $0000             ;&23C - address of key translation table QRY
+0001fd fe/affd: 00 00                   .....                 .dd2    $0000             ;&23E - address of VDU variables QRY
+0001ff fe/afff: 00                      .....                 .dd1    $00
+000200 fe/b000: 00                      .....                 .dd1    $00
+000201 fe/b001: ff                      .....                 .dd1    $ff
+000202 fe/b002: 00                      .....                 .dd1    $00
+000203 fe/b003: 00                      .....                 .dd1    $00
+000204 fe/b004: 00                      .....                 .dd1    $00
+000205 fe/b005: 00                      .....                 .dd1    $00
+000206 fe/b006: 00                      .....                 .dd1    $00
+000207 fe/b007: 00                      .....                 .dd1    $00
+000208 fe/b008: 00                      .....                 .dd1    $00
+000209 fe/b009: 00                      .....                 .dd1    $00
+00020a fe/b00a: ff                      .....                 .dd1    $ff
+00020b fe/b00b: 04                      .....                 .dd1    $04
+00020c fe/b00c: 04                      .....                 .dd1    $04
+00020d fe/b00d: 00                      .....                 .dd1    $00
+00020e fe/b00e: ff                      .....                 .dd1    $ff
+00020f fe/b00f: 00                      .....                 .dd1    $00
+000210 fe/b010: 19                      .....                 .dd1    $19
+000211 fe/b011: 19                      .....                 .dd1    $19
+000212 fe/b012: 19                      .....                 .dd1    $19
+000213 fe/b013: 32                      .....                 .dd1    $32
+000214 fe/b014: 08                      .....                 .dd1    $08
+000215 fe/b015: 00                      .....                 .dd1    $00
+000216 fe/b016: 00                      .....                 .dd1    $00
+000217 fe/b017: 00                      .....                 .dd1    $00
+000218 fe/b018: 00                      .....                 .dd1    $00
+000219 fe/b019: 00                      .....                 .dd1    $00
+00021a fe/b01a: ff                      .....                 .dd1    $ff
+00021b fe/b01b: 00                      .....                 .dd1    $00
+00021c fe/b01c: 00                      .....                 .dd1    $00
+00021d fe/b01d: 00                      .....                 .dd1    $00
+00021e fe/b01e: 00                      .....                 .dd1    $00
+00021f fe/b01f: 00                      .....                 .dd1    $00
+000220 fe/b020: 50                      .....                 .dd1    $50
+000221 fe/b021: 00                      .....                 .dd1    $00
+000222 fe/b022: 03                      .....                 .dd1    $03
+000223 fe/b023: 90                      .....                 .dd1    $90
+000224 fe/b024: 64                      .....                 .dd1    $64
+000225 fe/b025: 06                      .....                 .dd1    $06
+000226 fe/b026: 81                      .....                 .dd1    $81
+000227 fe/b027: 00                      .....                 .dd1    $00
+000228 fe/b028: 00                      .....                 .dd1    $00
+000229 fe/b029: 00                      .....                 .dd1    $00
+00022a fe/b02a: 00                      .....                 .dd1    $00
+00022b fe/b02b: 1b                      .....                 .dd1    $1b
+00022c fe/b02c: 01                      .....                 .dd1    $01
+00022d fe/b02d: d0                      .....                 .dd1    $d0
+00022e fe/b02e: e0                      .....                 .dd1    $e0
+00022f fe/b02f: f0                      .....                 .dd1    $f0
+000230 fe/b030: 01                      .....                 .dd1    $01
+000231 fe/b031: 80                      .....                 .dd1    $80
+000232 fe/b032: 90                      .....                 .dd1    $90
+000233 fe/b033: 00                      .....                 .dd1    $00
+000234 fe/b034: 00                      .....                 .dd1    $00
+000235 fe/b035: 00                      .....                 .dd1    $00
+000236 fe/b036: ff                      .....                 .dd1    $ff
+000237 fe/b037: ff                      .....                 .dd1    $ff
+000238 fe/b038: ff                      .....                 .dd1    $ff
+000239 fe/b039: 00                      .....                 .dd1    $00
+00023a fe/b03a: 00                      .....                 .dd1    $00
+00023b fe/b03b: 00                      .....                 .dd1    $00
+00023c fe/b03c: 00                      .....                 .dd1    $00
+00023d fe/b03d: 00                      .....                 .dd1    $00
+00023e fe/b03e: 00                      .....                 .dd1    $00
+00023f fe/b03f: 00                      .....                 .dd1    $00
+000240 fe/b040: 00                      .....                 .dd1    $00
+000241 fe/b041: 00                      .....                 .dd1    $00
+000242 fe/b042: 05                      .....                 .dd1    $05
+000243 fe/b043: ff                      .....                 .dd1    $ff
+000244 fe/b044: 00                      .....                 .dd1    $00
+000245 fe/b045: 0a                      .....                 .dd1    $0a
+000246 fe/b046: 00                      .....                 .dd1    $00
+000247 fe/b047: 00                      .....                 .dd1    $00
+000248 fe/b048: 00                      .....                 .dd1    $00
+000249 fe/b049: 00                      .....                 .dd1    $00
+00024a fe/b04a: 00                      .....                 .dd1    $00
+00024b fe/b04b: ff                      .....                 .dd1    $ff
+00024c fe/b04c: ea                      .....                 .dd1    $ea
+00024d fe/b04d: 4f                      .....                 .dd1    $4f
+00024e fe/b04e: b0                      .....                 .dd1    $b0

+00024f fe/b04f: 78           ??MXd??? e @T... Serv2_RESET     sei
+000250 fe/b050: 18           ??MXdI?? e .....                 clc
+000251 fe/b051: fb           ??MXdI?c e .....                 xce                       ;Enter native mode
+000252 fe/b052: af 00 00 40  ??MXdI?c e .....                 ldal    $400000           ;Disable boot rom mapping QRY
+000256 fe/b056: 78           ??MXdI?c e .....                 sei
+000257 fe/b057: 18           ??MXdI?c e .....                 clc
+000258 fe/b058: fb           ??MXdI?c e .....                 xce                       ;re-enter naitve mode WHY?
+000259 fe/b059: c2 38        ??MXdI?c e .....                 rep     #$38              ;16 bits and clear decimal flag
                                                               .rwid   longm,longx
+00025b fe/b05b: e2 20        ??mxdI?c e .....                 sep     #$20
                                                               .rwid   shortm
+00025d fe/b05d: a9 10        ??MxdI?c e .....                 lda     #$10              ;Clear Screen interrupt if
+00025f fe/b05f: 8f 07 fe 45  n?MxdIzc e .....                 stal    shiela_ULA_MISC
+000263 fe/b063: c2 20        n?MxdIzc e .....                 rep     #$20
                                                               .rwid   longm
+000265 fe/b065: a9 f0 0f     n?mxdIzc e .....                 lda     #$0ff0            ;palette to white on blue QRY?
+000268 fe/b068: 8f 08 fe 45  n?mxdIzc e .....                 stal    sheila_ULA_PAL
+00026c fe/b06c: 8f 0a fe 45  n?mxdIzc e .....                 stal    sheila_ULA_PAL+2
+000270 fe/b070: 8f 0c fe 45  n?mxdIzc e .....                 stal    sheila_ULA_PAL+4
+000274 fe/b074: 8f 0e fe 45  n?mxdIzc e .....                 stal    sheila_ULA_PAL+6
+000278 fe/b078: a9 40 40     n?mxdIzc e .....                 lda     #BANK0_MEM_IRQ6502
+00027b fe/b07b: 8f fe ff 00  n?mxdIzc e .....                 stal    f:BANK0_HW_IRQ6502
+00027f fe/b07f: 8f fe ff 10  n?mxdIzc e .....                 stal    BANK0_HW_IRQ6502_SHAD1M
+000283 fe/b083: a9 fe ff     n?mxdIzc e .....                 lda     #BANK0_HW_IRQ6502
+000286 fe/b086: 8f ea ff 00  n?mxdIzc e .....                 stal    f:BANK0_HW_NMI816
+00028a fe/b08a: 8f ea ff 10  n?mxdIzc e .....                 stal    BANK0_HW_NMI816_SHAD1M
+00028e fe/b08e: a9 e0 ff     n?mxdIzc e .....                 lda     #STACKTOP_RESET   ;we need a temporary stack for the next instructions
+000291 fe/b091: 1b           n?mxdIzc e .....                 tcs
+000292 fe/b092: 4b           n?mxdIzc e .....                 phk
                                                               .dbank  K (auto)
+000293 fe/b093: ab           n?mxdIzc e .....                 plb
+000294 fe/b094: 10 04        ??mxdI?c e .....                 bpl     @runninglow       ;if running from bank 0/low memory skip ahead, else vector through FFFFF0
                                               ; QRY - not sure what happens here, does the jml somehow do memory mapping or
                                               ; does the 440000 load?
+000296 fe/b096: 5c f0 ff ff  N?mxdI?c e ...#.                 jml     $fffff0           ;Not sure what this will do looks to jump into padding at end of Calculator if rom1 is at top of address space!?! QRY

+00029a fe/b09a: af 00 00 44  n?mxdI?c e ....> @runninglow     ldal    $440000           ;we're not sure why it does a read here QRY QRYMAME
+00029e fe/b09e: a9 ff ad     ??mxdI?c e .....                 lda     #STACKTOP_SYS_QRY
+0002a1 fe/b0a1: 1b           n?mxdIzc e .....                 tcs                       ;set system stack
+0002a2 fe/b0a2: a9 00 ac     n?mxdIzc e .....                 lda     #DPLOC_SYS
+0002a5 fe/b0a5: 5b           n?mxdIzc e .....                 tcd                       ;set system DP
+0002a6 fe/b0a6: a9 0e fe     ??mxdI?c e .....                 lda     #B0LST_MODULES_QRY ;empty modules list
+0002a9 fe/b0a9: 8f 0e fe 00  n?mxdIzc e .....                 stal    f:B0LST_MODULES_QRY
+0002ad fe/b0ad: a9 fe fd     n?mxdIzc e .....                 lda     #$fdfe
+0002b0 fe/b0b0: 8f fe fd 00  n?mxdIzc e .....                 stal    f:B0LST_OPEN_FILES
+0002b4 fe/b0b4: a9 00 00     n?mxdIzc e .....                 lda     #$0000
+0002b7 fe/b0b7: 8f 12 fe 00  n?mxdIZc e .....                 stal    f:$00fe12
+0002bb fe/b0bb: 20 e1 b4     n?mxdIZc e .....                 jsr     initialize_default_vectors_QRY
+0002be fe/b0be: e2 30        ??mxdI?? e .....                 sep     #$30
                                                               .rwid   shortm,shortx
+0002c0 fe/b0c0: 20 59 cf     ??MXdI?? e .....                 jsr     LFECF59
+0002c3 fe/b0c3: 20 b5 cd     ??MXdI?? e .....                 jsr     LFECDB5
+0002c6 fe/b0c6: 20 b8 d2     ??MXdI?? e .....                 jsr     LFED2B8
+0002c9 fe/b0c9: 20 fc b2     ??MXdI?? e .....                 jsr     LFEB2FC
+0002cc fe/b0cc: 20 a7 b3     ??MXdI?? e .....                 jsr     doTDCbadly        ;TODO: remove altogether
+0002cf fe/b0cf: 20 7c fd     ??MXdI?? e .....                 jsr     setupIRQstackandhandlers
+0002d2 fe/b0d2: 4b           ??MXdI?? e .....                 phk
+0002d3 fe/b0d3: 20 48 ee     ??MXdI?? e .....                 jsr     LFEEE48
+0002d6 fe/b0d6: c2 30        ??MXdI?? e .....                 rep     #$30
                                                               .rwid   longm,longx
+0002d8 fe/b0d8: 20 0a fe     ??mxdI?? e .....                 jsr     LFEFE0A
+0002db fe/b0db: e2 30        ??mxdI?? e .....                 sep     #$30
                                                               .rwid   shortm,shortx
+0002dd fe/b0dd: f4 00 00     ??MXdI?? e .....                 pea     $0000
+0002e0 fe/b0e0: ab           ??MXdI?? e .....                 plb
+0002e1 fe/b0e1: ab           ??MXdI?? e .....                 plb
+0002e2 fe/b0e2: 20 eb b3     ??MXdI?? e .....                 jsr     LFEB3EB
+0002e5 fe/b0e5: 20 00 b4     ??MXdI?? e .....                 jsr     LFEB400
+0002e8 fe/b0e8: 20 30 b4     ??MXdI?? e .....                 jsr     resIrqLastBreak
+0002eb fe/b0eb: 20 b8 b4     ??MXdI?? e .....                 jsr     LFEB4B8
+0002ee fe/b0ee: a9 80        ??MXdI?? e .....                 lda     #$80
+0002f0 fe/b0f0: 8d 8e a5     N?MXdIz? e .....                 sta     $a58e
+0002f3 fe/b0f3: 8e 84 a5     N?MXdIz? e .....                 stx     $a584
+0002f6 fe/b0f6: 0b           N?MXdIz? e .....                 phd
+0002f7 fe/b0f7: f4 00 ff     N?MXdIz? e .....                 pea     $ff00
+0002fa fe/b0fa: 2b           N?MXdIz? e .....                 pld
+0002fb fe/b0fb: a9 70        ??MXdI?? e .....                 lda     #$70
+0002fd fe/b0fd: 85 0d        n?MXdIz? e .....                 sta     DPCOP_K
+0002ff fe/b0ff: a9 e8        n?MXdIz? e .....                 lda     #$e8
+000301 fe/b101: 85 0e        N?MXdIz? e .....                 sta     $0e
+000303 fe/b103: 4b           N?MXdIz? e .....                 phk
+000304 fe/b104: 68           N?MXdIz? e .....                 pla
+000305 fe/b105: 85 0f        ??MXdI?? e .....                 sta     $0f
+000307 fe/b107: 2b           ??MXdI?? e .....                 pld
+000308 fe/b108: f4 00 00     ??MXdI?? e .....                 pea     $0000
+00030b fe/b10b: ab           ??MXdI?? e .....                 plb
                                                               .dbank  $00
+00030c fe/b10c: ab           ??MXdI?? e .....                 plb
+00030d fe/b10d: a9 f8        ??MXdI?? e .....                 lda     #$f8
+00030f fe/b10f: 8d 8f a5     N?MXdIz? e .....                 sta     SYSVAR_OSBYTE_255_STARTUP
+000312 fe/b112: a2 90        N?MXdIz? e .....                 ldx     #$90
+000314 fe/b114: a0 8d        N?MXdIz? e .....                 ldy     #$8d
+000316 fe/b116: a9 01        N?MXdIz? e .....                 lda     #$01
+000318 fe/b118: 8d 8d a5     n?MXdIz? e .....                 sta     SYSVARS_8d_lastbreak
+00031b fe/b11b: b8           n?MXdIz? e .....                 clv
+00031c fe/b11c: 18           nvMXdIz? e .....                 clc
+00031d fe/b11d: 08           nvMXdIzc e .....                 php
+00031e fe/b11e: 20 11 b4     nvMXdIzc e .....                 jsr     initSYSVARS
+000321 fe/b121: 20 07 b4     ??MXdI?? e .....                 jsr     LFEB407
+000324 fe/b124: a2 02        ??MXdI?? e .....                 ldx     #$02
+000326 fe/b126: 4b           n?MXdIz? e .....                 phk
+000327 fe/b127: 20 38 fe     n?MXdIz? e .....                 jsr     callModVDU
+00032a fe/b12a: ad 8f a5     ??MXdI?? e .....                 lda     SYSVAR_OSBYTE_255_STARTUP
+00032d fe/b12d: a2 36        ??MXdI?? e .....                 ldx     #$36
+00032f fe/b12f: 4b           n?MXdIz? e .....                 phk
+000330 fe/b130: 20 38 fe     n?MXdIz? e .....                 jsr     callModVDU
+000333 fe/b133: 09 c4        ??MXdI?? e .....                 ora     #$c4
+000335 fe/b135: 8d 82 a5     N?MXdIz? e .....                 sta     SYSVARS_ULA_MISC_COPY
+000338 fe/b138: 8f 07 fe 45  N?MXdIz? e .....                 stal    shiela_ULA_MISC
+00033c fe/b13c: 8f 04 fe 45  N?MXdIz? e .....                 stal    sheila_ULA_CASSH
+000340 fe/b140: a9 0c        N?MXdIz? e .....                 lda     #$0c              ;enable display end and RTC interrupts
+000342 fe/b142: 8d 5b a5     n?MXdIz? e .....                 sta     SYSVAR_IRQCTL_COPY & $ffff
+000345 fe/b145: 8f 00 fe 45  n?MXdIz? e .....                 stal    sheila_ULA_IRQ_CTL
+000349 fe/b149: a9 88        n?MXdIz? e .....                 lda     #$88              ;rom page enable, NMI clear 6502 trumps NMI QRY
+00034b fe/b14b: 8f 05 fe 45  N?MXdIz? e .....                 stal    sheila_ULA_PAG_IRQCLR
+00034f fe/b14f: 20 30 ec     N?MXdIz? e .....                 jsr     OSBYTE_74
+000352 fe/b152: 20 6f b4     ??MXdI?? e .....                 jsr     LFEB46F
+000355 fe/b155: 20 40 b4     ??MXdI?? e .....                 jsr     LFEB440
+000358 fe/b158: 20 77 ea     ??MXdI?? e .....                 jsr     OSBYTE_12
+00035b fe/b15b: 02 26        ??MXdI?? e .....                 cop     COP_26_OPBHA      ;Set BHA to start of following string and skip
+00035d fe/b15d: 4b 45 59 42+            .T...                 .zstr   “KEYBOARD”
+000366 fe/b166: a2 c7        ??MXdI?? e .....                 ldx     #<DPSYS_DP_KEYBOARD ;offset in DP
+000368 fe/b168: a0 00        N?MXdIz? e .....                 ldy     #$00              ;must be 0?
+00036a fe/b16a: 02 29        n?MXdIZ? e .....                 cop     COP_29_OPRFR      ;Get reference to KEYBOARD module in dp at offset C7
+00036c fe/b16c: 90 1e        n?MXdIZ? e .....                 bcc     @keyboard_found
+00036e fe/b16e: 02 0f        n?MXdIZC e .....                 cop     COP_0F_OPERR      ;throw an error
+000370 fe/b170: 43 61 6e 6e+            .T...                 .zstr   “Cannot find KEYBOARD module”
+00038c fe/b18c: a2 02        n?MXdIZ? e ....> @keyboard_found ldx     #$02
+00038e fe/b18e: 22 ac ff 00  n?MXdIz? e .....                 jsl     __KB
+000392 fe/b192: a9 31        ??MXdI?? e .....                 lda     #$31
+000394 fe/b194: a2 18        n?MXdIz? e .....                 ldx     #$18
+000396 fe/b196: 22 ac ff 00  n?MXdIz? e .....                 jsl     __KB
+00039a fe/b19a: 4b           ??MXdI?? e .....                 phk
                                                               .dbank  K (auto)
+00039b fe/b19b: ab           ??MXdI?? e .....                 plb
+00039c fe/b19c: a9 16        ??MXdI?? e .....                 lda     #$16              ;22 - VDU set mode
+00039e fe/b19e: 02 00        n?MXdIz? e .....                 cop     COP_00_OPWRC
+0003a0 fe/b1a0: af 8f a5 00  n?MXdIz? e .....                 ldal    f:SYSVAR_OSBYTE_255_STARTUP
+0003a4 fe/b1a4: 02 00        ??MXdI?? e .....                 cop     COP_00_OPWRC
+0003a6 fe/b1a6: 20 46 ee     ??MXdI?? e .....                 jsr     LFEEE46
+0003a9 fe/b1a9: 8b           ??MXdI?? e .....                 phb
+0003aa fe/b1aa: 02 01        ??MXdI?? e .....                 cop     COP_01_OPWRS      ;write immed
+0003ac fe/b1ac: 0a 41 63 6f+            .T...                 .zstr   $0a,“Acorn Communicator ”
+0003c1 fe/b1c1: a0 01        ??MXdI?? e .....                 ldy     #MM_HANDLE_1_SPECIAL_QRY
+0003c3 fe/b1c3: a2 10        n?MXdIz? e .....                 ldx     #MMLEN
+0003c5 fe/b1c5: 22 8c ff 00  n?MXdIz? e .....                 jsl     __MM
+0003c9 fe/b1c9: 8b           ??MXdI?? e .....                 phb
+0003ca fe/b1ca: 68           ??MXdI?? e .....                 pla
+0003cb fe/b1cb: eb           ??MXdI?? e .....                 xba
+0003cc fe/b1cc: c2 30        ??MXdI?? e .....                 rep     #$30
                                                               .rwid   longm,longx
+0003ce fe/b1ce: 4a           ??mxdI?? e .....                 lsr     A
+0003cf fe/b1cf: 4a           n?mxdI?? e .....                 lsr     A
+0003d0 fe/b1d0: 18           n?mxdI?? e .....                 clc
+0003d1 fe/b1d1: 69 28 00     n?mxdI?c e .....                 adc     #$0028
+0003d4 fe/b1d4: 48           ??mxdI?? e .....                 pha
+0003d5 fe/b1d5: f4 00 46     ??mxdI?? e .....                 pea     $4600
+0003d8 fe/b1d8: ab           ??mxdI?? e .....                 plb
+0003d9 fe/b1d9: ab           ??mxdI?? e .....                 plb
+0003da fe/b1da: ad 00 20     ??mxdI?? e .....                 lda     $2000
+0003dd fe/b1dd: 49 80 00     ??mxdI?? e .....                 eor     #$0080
+0003e0 fe/b1e0: ae 00 00     ??mxdI?? e .....                 ldx     a:$0000
+0003e3 fe/b1e3: 8d 00 00     ??mxdI?? e .....                 sta     a:$0000
+0003e6 fe/b1e6: 4d 00 20     ??mxdI?? e .....                 eor     $2000
+0003e9 fe/b1e9: 8e 00 00     ??mxdI?? e .....                 stx     a:$0000
+0003ec fe/b1ec: f0 03        ??mxdI?? e .....                 beq     LFEB1F1
+0003ee fe/b1ee: a9 18 00     ??mxdIz? e .....                 lda     #$0018
+0003f1 fe/b1f1: 63 01        ??mxdI?? e ....> LFEB1F1         adc     $01,S
+0003f3 fe/b1f3: fa           ??mxdI?? e .....                 plx
+0003f4 fe/b1f4: 20 82 b3     ??mxdI?? e .....                 jsr     LFEB382
+0003f7 fe/b1f7: e2 30        ??mxdI?? e .....                 sep     #$30
                                                               .rwid   shortm,shortx
+0003f9 fe/b1f9: 02 01        ??MXdI?? e .....                 cop     COP_01_OPWRS
+0003fb fe/b1fb: 4b 0d 0a 0a+            .T...                 .zstr   “K”,$0d,$0a,$0a
+000400 fe/b200: ab           ??MXdI?? e .....                 plb
+000401 fe/b201: 80 00        ??MXdI?? e ...#.                 bra     LFEB203

+000403 fe/b203: 4b           ??MXdI?? e ....> LFEB203         phk
                                                               .dbank  K (auto)
+000404 fe/b204: ab           ??MXdI?? e .....                 plb
+000405 fe/b205: a2 00        ??MXdI?? e .....                 ldx     #$00
+000407 fe/b207: 80 04        n?MXdIZ? e ...#.                 bra     @lpstart

+000409 fe/b209: 8a           ??MXdI?c e ....> @lp             txa
+00040a fe/b20a: 69 03        ??MXdI?c e .....                 adc     #$03
+00040c fe/b20c: aa           ??MXdI?? e .....                 tax
+00040d fe/b20d: bd ea b2     ??MXdI?? e ....> @lpstart        lda     LFEB2EA & $ffff,x
+000410 fe/b210: f0 05        ??MXdI?? e .....                 beq     LFEB217
+000412 fe/b212: 20 f3 b2     ??MXdIz? e .....                 jsr     LFEB2F3
+000415 fe/b215: 90 f2        ??MXdI?? e .....                 bcc     @lp
+000417 fe/b217: da           ??MXdI?? e ....> LFEB217         phx
+000418 fe/b218: a2 18        ??MXdI?? e .....                 ldx     #$18
+00041a fe/b21a: 22 ac ff 00  n?MXdIz? e .....                 jsl     __KB
+00041e fe/b21e: fa           ??MXdI?? e .....                 plx
+00041f fe/b21f: bd eb b2     ??MXdI?? e .....                 lda     LFEB2EB & $ffff,x
+000422 fe/b222: f0 0d        ??MXdI?? e .....                 beq     LFEB231
+000424 fe/b224: da           ??MXdIz? e .....                 phx
+000425 fe/b225: a2 02        ??MXdIz? e .....                 ldx     #$02
+000427 fe/b227: 02 28        n?MXdIz? e .....                 cop     COP_28_OPCMD
+000429 fe/b229: 45 43 4f 4e+            .T...                 .zstr   “ECONET”
+000430 fe/b230: fa           n?MXdIz? e .T...                 plx
+000431 fe/b231: bd ec b2     ??MXdI?? e ....> LFEB231         lda     LFEB2EC & $ffff,x
+000434 fe/b234: d0 24        ??MXdI?? e .....                 bne     LFEB25A
+000436 fe/b236: 02 26        ??MXdIZ? e .....                 cop     COP_26_OPBHA
+000438 fe/b238: 4d 45 4e 55+            .T...                 .zstr   “MENU”
+00043d fe/b23d: a0 00        ??MXdIZ? e .....                 ldy     #$00
+00043f fe/b23f: c2 30        n?MXdIZ? e .....                 rep     #$30
                                                               .rwid   longm,longx
+000441 fe/b241: 4b           n?mxdIZ? e .....                 phk
+000442 fe/b242: 20 4b ee     n?mxdIZ? e .....                 jsr     brlFindModule
+000445 fe/b245: e2 30        ??mxdI?? e .....                 sep     #$30
                                                               .rwid   shortm,shortx
+000447 fe/b247: b0 0f        ??MXdI?? e .....                 bcs     @nomenu
+000449 fe/b249: c2 30        ??MXdI?c e .....                 rep     #$30
                                                               .rwid   longm,longx
+00044b fe/b24b: 4b           ??mxdI?c e .....                 phk
+00044c fe/b24c: 20 51 ee     ??mxdI?c e .....                 jsr     LFEEE51
+00044f fe/b24f: e2 30        ??mxdI?? e .....                 sep     #$30
                                                               .rwid   shortm,shortx
+000451 fe/b251: f4 00 00     ??MXdI?? e .....                 pea     $0000
+000454 fe/b254: ab           ??MXdI?? e .....                 plb
+000455 fe/b255: ab           ??MXdI?? e .....                 plb
+000456 fe/b256: 90 5b        ??MXdI?? e .....                 bcc     LFEB2B3
+000458 fe/b258: a9 01        ??MXdI?C e ....> @nomenu         lda     #$01
+00045a fe/b25a: c9 01        ??MXdIz? e ....> LFEB25A         cmp     #$01
+00045c fe/b25c: f0 46        ??MXdI?? e .....                 beq     LFEB2A4
+00045e fe/b25e: a9 d3        ??MXdIz? e .....                 lda     #$d3
+000460 fe/b260: 20 f3 b2     N?MXdIz? e .....                 jsr     LFEB2F3
+000463 fe/b263: 90 3f        ??MXdI?? e .....                 bcc     LFEB2A4
+000465 fe/b265: 02 26        ??MXdI?C e .....                 cop     COP_26_OPBHA
+000467 fe/b267: 52 41 4d 69+            .T...                 .zstr   “RAMinitialise”,$0d
+000476 fe/b276: 02 0e        ??MXdI?C e .....                 cop     COP_0E_OPCOM
+000478 fe/b278: 02 01        ??MXdI?C e .....                 cop     COP_01_OPWRS
+00047a fe/b27a: 43 4d 4f 53+            .T...                 .zstr   “CMOS MEMORY INITIALISED - NOW REBOOT”,$0d,$0a,$0a
+0004a2 fe/b2a2: 80 fe        ??MXdI?C e ...#> LFEB2A2         bra     LFEB2A2

+0004a4 fe/b2a4: 02 26        ??MXdI?? e ....> LFEB2A4         cop     COP_26_OPBHA
+0004a6 fe/b2a6: 42 41 53 49+            .T...                 .zstr   “BASIC”
+0004ac fe/b2ac: a2 00        ??MXdI?? e .....                 ldx     #$00
+0004ae fe/b2ae: 9b           n?MXdIZ? e .....                 txy
+0004af fe/b2af: 02 34        ??MXdI?? e .....                 cop     COP_34_OPRMI
+0004b1 fe/b2b1: b0 fe        ??MXdI?? e ....> LFEB2B1         bcs     LFEB2B1
+0004b3 fe/b2b3: 8b           ??MXdI?c e ....> LFEB2B3         phb
+0004b4 fe/b2b4: eb           ??MXdI?c e .....                 xba
+0004b5 fe/b2b5: 48           ??MXdI?c e .....                 pha
+0004b6 fe/b2b6: eb           ??MXdI?c e .....                 xba
+0004b7 fe/b2b7: 48           ??MXdI?c e .....                 pha
+0004b8 fe/b2b8: f4 00 02     ??MXdI?c e .....                 pea     $0200
+0004bb fe/b2bb: 2b           ??MXdI?c e .....                 pld
+0004bc fe/b2bc: a2 02        ??MXdI?c e .....                 ldx     #$02
+0004be fe/b2be: 22 90 ff 00  n?MXdIzc e .....                 jsl     __CO
+0004c2 fe/b2c2: 90 1a        ??MXdI?? e .....                 bcc     LFEB2DE
+0004c4 fe/b2c4: 00 00        ??MXdI?C e ...#.                 brk     $00

+0004c6 fe/b2c6: 43 61 6e 6e+            .....                 .zstr   “Cannot start BASIC/MENU”

+0004de fe/b2de: 68           ??MXdI?c e ....> LFEB2DE         pla
+0004df fe/b2df: eb           ??MXdI?c e .....                 xba
+0004e0 fe/b2e0: 68           ??MXdI?c e .....                 pla
+0004e1 fe/b2e1: eb           ??MXdI?c e .....                 xba
+0004e2 fe/b2e2: ab           ??MXdI?c e .....                 plb
+0004e3 fe/b2e3: a2 02        ??MXdI?c e .....                 ldx     #$02
+0004e5 fe/b2e5: 20 35 dc     n?MXdIzc e .....                 jsr     LFEDC35
+0004e8 fe/b2e8: 80 fe        ??MXdI?? e ...#> LFEB2E8         bra     LFEB2E8

+0004ea fe/b2ea: b1                      ..... LFEB2EA         .dd1    $b1
+0004eb fe/b2eb: ff                      ..... LFEB2EB         .dd1    $ff
+0004ec fe/b2ec: 01                      ..... LFEB2EC         .dd1    $01
+0004ed fe/b2ed: e8                      .....                 .dd1    $e8
+0004ee fe/b2ee: ff                      .....                 .dd1    $ff
+0004ef fe/b2ef: 02                      .....                 .dd1    $02
+0004f0 fe/b2f0: 00                      .....                 .dd1    $00
+0004f1 fe/b2f1: ff                      .....                 .dd1    $ff
+0004f2 fe/b2f2: 00                      .....                 .dd1    $00

+0004f3 fe/b2f3: da           ??MXdIz? e ....> LFEB2F3         phx
+0004f4 fe/b2f4: a2 10        ??MXdIz? e .....                 ldx     #$10
+0004f6 fe/b2f6: 22 ac ff 00  n?MXdIz? e .....                 jsl     __KB
+0004fa fe/b2fa: fa           ??MXdI?? e .....                 plx
+0004fb fe/b2fb: 60           ??MXdI?? e ...#.                 rts

+0004fc fe/b2fc: 08           ??MXdI?? e ....> LFEB2FC         php
+0004fd fe/b2fd: 0b           ??MXdI?? e .....                 phd
+0004fe fe/b2fe: 8b           ??MXdI?? e .....                 phb
+0004ff fe/b2ff: c2 30        ??MXdI?? e .....                 rep     #$30
                                                               .rwid   longm,longx
+000501 fe/b301: a9 00 01     ??mxdI?? e .....                 lda     #$0100
+000504 fe/b304: a2 18 00     n?mxdIz? e .....                 ldx     #__MMAZB
+000507 fe/b307: 22 8c ff 00  n?mxdIz? e .....                 jsl     __MM
+00050b fe/b30b: 90 1f        ??mxdI?? e .....                 bcc     LFEB32C
+00050d fe/b30d: 02 0f        ??mxdI?C e ....> LFEB30D         cop     COP_0F_OPERR
+00050f fe/b30f: 4d 4f 53 20+            .T...                 .zstr   “MOS couldn't allocate memory”
+00052c fe/b32c: f4 00 ff     ??mxdI?? e ....> LFEB32C         pea     EXSYS
+00052f fe/b32f: 2b           ??mxdI?? e .....                 pld
+000530 fe/b330: 48           ??mxdI?? e .....                 pha
+000531 fe/b331: 8b           ??mxdI?? e .....                 phb
+000532 fe/b332: 8b           ??mxdI?? e .....                 phb
+000533 fe/b333: a9 e0 00     ??mxdI?? e .....                 lda     #$00e0
+000536 fe/b336: 85 00        n?mxdIz? e .....                 sta     $00
+000538 fe/b338: 0b           n?mxdIz? e .....                 phd
+000539 fe/b339: a2 10 00     n?mxdIz? e .....                 ldx     #MMLEN
+00053c fe/b33c: 22 8c ff 00  n?mxdIz? e .....                 jsl     __MM
+000540 fe/b340: 2b           ??mxdI?? e .....                 pld
+000541 fe/b341: fa           ??mxdI?? e .....                 plx
+000542 fe/b342: 86 03        ??mxdI?? e .....                 stx     $03
+000544 fe/b344: fa           ??mxdI?? e .....                 plx
+000545 fe/b345: 86 02        ??mxdI?? e .....                 stx     $02
+000547 fe/b347: 87 02        ??mxdI?? e .....                 sta     [$02]
+000549 fe/b349: a8           ??mxdI?? e .....                 tay
+00054a fe/b34a: a9 00 00     ??mxdI?? e .....                 lda     #$0000
+00054d fe/b34d: 88           n?mxdIZ? e .....                 dey
+00054e fe/b34e: 88           ??mxdI?? e .....                 dey
+00054f fe/b34f: 97 02        ??mxdI?? e ....> LFEB34F         sta     [DPCOP_Y+1],y
+000551 fe/b351: 88           ??mxdI?? e .....                 dey
+000552 fe/b352: 88           ??mxdI?? e .....                 dey
+000553 fe/b353: d0 fa        ??mxdI?? e .....                 bne     LFEB34F
+000555 fe/b355: af 04 fe 00  ??mxdIZ? e .....                 ldal    f:$00fe04
+000559 fe/b359: a0 02 00     ??mxdI?? e .....                 ldy     #$0002
+00055c fe/b35c: 97 02        n?mxdIz? e .....                 sta     [DPCOP_Y+1],y
+00055e fe/b35e: a2 10 00     n?mxdIz? e .....                 ldx     #$0010
+000561 fe/b361: a0 05 00     n?mxdIz? e .....                 ldy     #$0005
+000564 fe/b364: 22 8c ff 00  n?mxdIz? e .....                 jsl     __MM
+000568 fe/b368: 5b           ??mxdI?? e .....                 tcd
+000569 fe/b369: a2 0e 00     ??mxdI?? e .....                 ldx     #$000e
+00056c fe/b36c: a0 05 00     n?mxdIz? e .....                 ldy     #$0005
+00056f fe/b36f: 22 8c ff 00  n?mxdIz? e .....                 jsl     __MM
+000573 fe/b373: b0 98        ??mxdI?? e .....                 bcs     LFEB30D
+000575 fe/b375: a2 04 00     ??mxdI?c e .....                 ldx     #$0004
+000578 fe/b378: 22 8c ff 00  n?mxdIzc e .....                 jsl     __MM
+00057c fe/b37c: b0 8f        ??mxdI?? e .....                 bcs     LFEB30D
+00057e fe/b37e: ab           ??mxdI?c e .....                 plb
+00057f fe/b37f: 2b           ??mxdI?c e .....                 pld
+000580 fe/b380: 28           ??mxdI?c e .....                 plp
+000581 fe/b381: 60           ??mx???? e ...#.                 rts

+000582 fe/b382: a2 64 00     ??mxdI?? e ....> LFEB382         ldx     #$0064
+000585 fe/b385: 20 91 b3     n?mxdIz? e .....                 jsr     LFEB391
+000588 fe/b388: a2 0a 00     ??mxdI?? e .....                 ldx     #$000a
+00058b fe/b38b: 20 91 b3     n?mxdIz? e .....                 jsr     LFEB391
+00058e fe/b38e: a2 01 00     ??mxdI?? e .....                 ldx     #$0001
+000591 fe/b391: da           n?mxdIz? e ....> LFEB391         phx
+000592 fe/b392: a2 ff ff     n?mxdIz? e .....                 ldx     #$ffff
+000595 fe/b395: e8           ??mxdI?? e ....> LFEB395         inx
+000596 fe/b396: 38           ??mxdI?? e .....                 sec
+000597 fe/b397: e3 01        ??mxdI?C e .....                 sbc     $01,S
+000599 fe/b399: b0 fa        ??mxdI?? e .....                 bcs     LFEB395
+00059b fe/b39b: 63 01        ??mxdI?c e .....                 adc     $01,S
+00059d fe/b39d: 48           ??mxdI?? e .....                 pha
+00059e fe/b39e: 8a           ??mxdI?? e .....                 txa
+00059f fe/b39f: 09 30 00     ??mxdI?? e .....                 ora     #$0030
+0005a2 fe/b3a2: 02 00        ??mxdIz? e .....                 cop     COP_00_OPWRC
+0005a4 fe/b3a4: 68           ??mxdIz? e .....                 pla
+0005a5 fe/b3a5: fa           ??mxdI?? e .....                 plx
+0005a6 fe/b3a6: 60           ??mxdI?? e ...#.                 rts

                                               ; TODO: this looks like a load of nonsense? could be replaced with a TDC?
                                                               .rwid   shortm,shortx
+0005a7 fe/b3a7: 08           ??MXdI?? e ....> doTDCbadly      php
+0005a8 fe/b3a8: 8b           ??MXdI?? e .....                 phb
+0005a9 fe/b3a9: 4b           ??MXdI?? e .....                 phk
                                                               .dbank  K (auto)
+0005aa fe/b3aa: ab           ??MXdI?? e .....                 plb
+0005ab fe/b3ab: 0b           ??MXdI?? e .....                 phd
+0005ac fe/b3ac: 7b           ??MXdI?? e .....                 tdc
+0005ad fe/b3ad: c2 30        ??MXdI?? e .....                 rep     #$30
                                                               .rwid   longm,longx
+0005af fe/b3af: 2b           ??mxdI?? e .....                 pld
+0005b0 fe/b3b0: ab           ??mxdI?? e .....                 plb
+0005b1 fe/b3b1: 28           ??mxdI?? e .....                 plp
                                                               .rwid   shortm,shortx
+0005b2 fe/b3b2: 60           ??MXdI?? e ...#.                 rts

                                                               .rwid   longm,longx
+0005b3 fe/b3b3: da           ??mxdI?? e ....> makeCallBackBlockHnd4 phx
+0005b4 fe/b3b4: 2b           ??mxdI?? e .....                 pld                       ;set DP to X
+0005b5 fe/b3b5: 48           ??mxdI?? e .....                 pha
+0005b6 fe/b3b6: a9 04 00     ??mxdI?? e .....                 lda     #HND_type_4_CBSIND
+0005b9 fe/b3b9: 20 01 ce     n?mxdIz? e .....                 jsr     obtainFreeBlock
+0005bc fe/b3bc: b0 2b        ??mxdI?? e .....                 bcs     LFEB3E9
+0005be fe/b3be: ad e2 b3     ??mxdI?c e .....                 lda     templateModCallBack2 & $ffff
+0005c1 fe/b3c1: 9f 00 00 00  ??mxdI?c e .....                 stal    f:$000000,x
+0005c5 fe/b3c5: ad e7 b3     ??mxdI?c e .....                 lda     0+(templateModCallBack2 & $ffff)+5
+0005c8 fe/b3c8: 9f 05 00 00  ??mxdI?c e .....                 stal    f:$000005,x
+0005cc fe/b3cc: a5 01        ??mxdI?c e .....                 lda     $01
+0005ce fe/b3ce: 9f 02 00 00  ??mxdI?c e .....                 stal    f:$000002,x
+0005d2 fe/b3d2: a5 02        ??mxdI?c e .....                 lda     $02
+0005d4 fe/b3d4: 9f 03 00 00  ??mxdI?c e .....                 stal    f:$000003,x
+0005d8 fe/b3d8: 64 02        ??mxdI?c e .....                 stz     $02
+0005da fe/b3da: 86 01        ??mxdI?c e .....                 stx     $01
+0005dc fe/b3dc: 68           ??mxdI?c e .....                 pla
+0005dd fe/b3dd: 9f 08 00 00  ??mxdI?c e .....                 stal    f:$000008,x
+0005e1 fe/b3e1: 60           ??mxdI?c e ...#.                 rts

                                                               .rwid   shortm,shortx
+0005e2 fe/b3e2: 0b           ??MXd??? e @T... templateModCallBack2 phd
+0005e3 fe/b3e3: 22 00 00 00  ??MXd??? e .....                 jsl     $000000
+0005e7 fe/b3e7: 2b           ??MXd??? e .....                 pld
+0005e8 fe/b3e8: 6b           ??MXd??? e ...#.                 rtl

                                                               .rwid   longm,longx
+0005e9 fe/b3e9: 80 fe        ??mxdI?C e ...#> LFEB3E9         bra     LFEB3E9

                                                               .rwid   shortm,shortx
+0005eb fe/b3eb: a9 53        ??MXdI?? e ....> LFEB3EB         lda     #$53
+0005ed fe/b3ed: 8f 06 00 40  n?MXdIz? e .....                 stal    $400006
+0005f1 fe/b3f1: 8f 06 00 40  n?MXdIz? e .....                 stal    $400006
+0005f5 fe/b3f5: a9 00        n?MXdIz? e .....                 lda     #$00
+0005f7 fe/b3f7: 8f 04 00 40  n?MXdIZ? e .....                 stal    $400004
+0005fb fe/b3fb: 8f 02 00 40  n?MXdIZ? e .....                 stal    $400002
+0005ff fe/b3ff: 60           n?MXdIZ? e ...#.                 rts

+000600 fe/b400: a9 03        ??MXdI?? e ....> LFEB400         lda     #$03
+000602 fe/b402: 8f 00 00 43  n?MXdIz? e .....                 stal    $430000
+000606 fe/b406: 60           n?MXdIz? e ...#.                 rts

+000607 fe/b407: a9 00        ??MXdI?? e ....> LFEB407         lda     #$00
+000609 fe/b409: a2 cf        n?MXdIZ? e .....                 ldx     #$cf
+00060b fe/b40b: 95 00        ??MXdIz? e ....> LFEB40B         sta     $00,x
+00060d fe/b40d: e8           ??MXdIz? e .....                 inx
+00060e fe/b40e: d0 fb        ??MXdI?? e .....                 bne     LFEB40B
+000610 fe/b410: 60           ??MXdIZ? e ...#.                 rts

+000611 fe/b411: 8b           nvMXdIzc e ....> initSYSVARS     phb
+000612 fe/b412: 4b           nvMXdIzc e .....                 phk
                                                               .dbank  K (auto)
+000613 fe/b413: ab           nvMXdIzc e .....                 plb
+000614 fe/b414: a9 00        ?vMXdI?c e .....                 lda     #$00
+000616 fe/b416: e0 c3        ?vMXdI?? e ....> @blanklp        cpx     #$c3
+000618 fe/b418: 90 02        ?vMXdI?? e .....                 bcc     @sk1
+00061a fe/b41a: a9 ff        ?vMXdI?C e .....                 lda     #$ff
+00061c fe/b41c: 9f 00 a5 00  ?vMXdI?? e ....> @sk1            stal    f:SYSVARS,x
+000620 fe/b420: e8           ?vMXdI?? e .....                 inx
+000621 fe/b421: d0 f3        ?vMXdI?? e .....                 bne     @blanklp
+000623 fe/b423: bb           ?vMXdIZ? e .....                 tyx
+000624 fe/b424: bd be af     ?vMXdI?? e ....> @cpylp          lda     0+(tblInitSysVars & $ffff)-1,x
+000627 fe/b427: 9f ff a4 00  ?vMXdI?? e .....                 stal    f:SYSVARS-1,x
+00062b fe/b42b: ca           ?vMXdI?? e .....                 dex
+00062c fe/b42c: d0 f6        ?vMXdI?? e .....                 bne     @cpylp
+00062e fe/b42e: ab           ?vMXdIZ? e .....                 plb
+00062f fe/b42f: 60           ?vMXdI?? e ...#.                 rts

+000630 fe/b430: a9 00        ??MXdI?? e ....> resIrqLastBreak lda     #$00
+000632 fe/b432: 8f 00 fe 45  n?MXdIZ? e .....                 stal    sheila_ULA_IRQ_CTL
+000636 fe/b436: 8d 8d a5     n?MXdIZ? e .....                 sta     SYSVARS_8d_lastbreak
+000639 fe/b439: a9 f8        n?MXdIZ? e .....                 lda     #$f8
+00063b fe/b43b: 8f 05 fe 45  N?MXdIz? e .....                 stal    sheila_ULA_PAG_IRQCLR
+00063f fe/b43f: 60           N?MXdIz? e ...#.                 rts

+000640 fe/b440: af f8 ff f0  ??MXdI?? e ....> LFEB440         ldal    HW_TYPE_DETECT_QRY
+000644 fe/b444: f0 28        ??MXdI?? e .....                 beq     LFEB46E
+000646 fe/b446: af 00 00 42  ??MXdIz? e .....                 ldal    VIA_ORB
+00064a fe/b44a: 29 df        ??MXdI?? e .....                 and     #$df
+00064c fe/b44c: 8f 00 00 42  ??MXdI?? e .....                 stal    VIA_ORB
+000650 fe/b450: af ff 9f 45  ??MXdI?? e .....                 ldal    $459fff
+000654 fe/b454: 29 0f        ??MXdI?? e .....                 and     #$0f
+000656 fe/b456: 85 cf        n?MXdI?? e .....                 sta     $cf
+000658 fe/b458: af ff bf 45  n?MXdI?? e .....                 ldal    $45bfff
+00065c fe/b45c: 0a           ??MXdI?? e .....                 asl     A
+00065d fe/b45d: 0a           ??MXdI?? e .....                 asl     A
+00065e fe/b45e: 0a           ??MXdI?? e .....                 asl     A
+00065f fe/b45f: 0a           ??MXdI?? e .....                 asl     A
+000660 fe/b460: 05 cf        ??MXdI?? e .....                 ora     $cf
+000662 fe/b462: 85 cf        ??MXdI?? e .....                 sta     $cf
+000664 fe/b464: af 00 00 42  ??MXdI?? e .....                 ldal    VIA_ORB
+000668 fe/b468: 09 20        ??MXdI?? e .....                 ora     #$20
+00066a fe/b46a: 8f 00 00 42  ??MXdIz? e .....                 stal    VIA_ORB
+00066e fe/b46e: 60           ??MXdI?? e ...#> LFEB46E         rts

+00066f fe/b46f: a9 90        ??MXdI?? e ....> LFEB46F         lda     #$90
+000671 fe/b471: 8f 0e 00 42  N?MXdIz? e .....                 stal    VIA_IER
+000675 fe/b475: a9 00        N?MXdIz? e .....                 lda     #$00
+000677 fe/b477: 8f 01 00 42  n?MXdIZ? e .....                 stal    VIA_ORA
+00067b fe/b47b: a9 ff        n?MXdIZ? e .....                 lda     #$ff
+00067d fe/b47d: 8f 03 00 42  N?MXdIz? e .....                 stal    VIA_DDRA
+000681 fe/b481: a9 6e        N?MXdIz? e .....                 lda     #$6e
+000683 fe/b483: 8f 00 00 42  n?MXdIz? e .....                 stal    VIA_ORB
+000687 fe/b487: af f8 ff f0  n?MXdIz? e .....                 ldal    HW_TYPE_DETECT_QRY
+00068b fe/b48b: d0 04        ??MXdI?? e .....                 bne     LFEB491
+00068d fe/b48d: a9 66        ??MXdIZ? e .....                 lda     #$66
+00068f fe/b48f: 80 02        n?MXdIz? e ...#.                 bra     LFEB493

+000691 fe/b491: a9 f6        ??MXdIz? e ....> LFEB491         lda     #$f6
+000693 fe/b493: 8f 02 00 42  ??MXdIz? e ....> LFEB493         stal    VIA_DDRB
+000697 fe/b497: a9 29        ??MXdIz? e .....                 lda     #$29
+000699 fe/b499: 8f 0c 00 42  n?MXdIz? e .....                 stal    VIA_PCR
+00069d fe/b49d: a9 a1        n?MXdIz? e .....                 lda     #$a1
+00069f fe/b49f: 8f 04 00 42  N?MXdIz? e .....                 stal    VIA_T1C_L
+0006a3 fe/b4a3: 8f 06 00 42  N?MXdIz? e .....                 stal    VIA_T1L_L
+0006a7 fe/b4a7: a9 01        N?MXdIz? e .....                 lda     #$01
+0006a9 fe/b4a9: 8f 05 00 42  n?MXdIz? e .....                 stal    VIA_T1C_H
+0006ad fe/b4ad: 8f 07 00 42  n?MXdIz? e .....                 stal    VIA_T1L_H
+0006b1 fe/b4b1: a9 40        n?MXdIz? e .....                 lda     #$40
+0006b3 fe/b4b3: 8f 0b 00 42  n?MXdIz? e .....                 stal    VIA_ACR
+0006b7 fe/b4b7: 60           n?MXdIz? e ...#.                 rts

+0006b8 fe/b4b8: 0b           ??MXdI?? e ....> LFEB4B8         phd
+0006b9 fe/b4b9: 8b           ??MXdI?? e .....                 phb
+0006ba fe/b4ba: 02 26        ??MXdI?? e .....                 cop     COP_26_OPBHA
+0006bc fe/b4bc: 52 41 4d 73+            .T...                 .zstr   “RAMstart”,$0d
+0006c6 fe/b4c6: 02 0e        ??MXdI?? e .....                 cop     COP_0E_OPCOM
+0006c8 fe/b4c8: ab           ??MXdI?? e .....                 plb
+0006c9 fe/b4c9: 2b           ??MXdI?? e .....                 pld
+0006ca fe/b4ca: 60           ??MXdI?? e ...#.                 rts

                                               ; moves program bytes from this rom to bank 0
                                               ; 
                                               ; number of bytes must be even and contained in HA
                                                               .rwid   longm,longx
+0006cb fe/b4cb: 4b           n?mxdIz? e ....> movPrg2B0       phk
                                                               .dbank  K (auto)
+0006cc fe/b4cc: ab           n?mxdIz? e .....                 plb
+0006cd fe/b4cd: 3a           ??mxdI?? e ....> @lp             dec     A
+0006ce fe/b4ce: 3a           ??mxdI?? e .....                 dec     A
+0006cf fe/b4cf: 30 0f        ??mxdI?? e .....                 bmi     @ex
+0006d1 fe/b4d1: 48           n?mxdI?? e .....                 pha
+0006d2 fe/b4d2: b9 00 00     n?mxdI?? e .....                 lda     $0000,y
+0006d5 fe/b4d5: 9f 00 00 00  ??mxdI?? e .....                 stal    f:$000000,x
+0006d9 fe/b4d9: 68           ??mxdI?? e .....                 pla
+0006da fe/b4da: e8           ??mxdI?? e .....                 inx
+0006db fe/b4db: e8           ??mxdI?? e .....                 inx
+0006dc fe/b4dc: c8           ??mxdI?? e .....                 iny
+0006dd fe/b4dd: c8           ??mxdI?? e .....                 iny
+0006de fe/b4de: 80 ed        ??mxdI?? e ...#.                 bra     @lp

+0006e0 fe/b4e0: 60           N?mxdI?? e ...#> @ex             rts

+0006e1 fe/b4e1: 08           n?mxdIZc e ....> initialize_default_vectors_QRY php
+0006e2 fe/b4e2: 78           n?mxdIZc e .....                 sei
+0006e3 fe/b4e3: c2 30        n?mxdIZc e .....                 rep     #$30
+0006e5 fe/b4e5: a0 3d b5     n?mxdIZc e .....                 ldy     #tblDefaultRoutines & $ffff
+0006e8 fe/b4e8: a2 80 fe     n?mxdIzc e .....                 ldx     #tblB0JumpTableFE80_QRY
+0006eb fe/b4eb: a9 34 00     n?mxdIzc e .....                 lda     #$0034
+0006ee fe/b4ee: 20 cb b4     n?mxdIzc e .....                 jsr     movPrg2B0
+0006f1 fe/b4f1: e2 20        ??mxdI?? e .....                 sep     #$20
                                               ; Resets all the jml bank addresses to point to current ROM
                                                               .rwid   shortm
+0006f3 fe/b4f3: 4b           ??MxdI?? e .....                 phk
+0006f4 fe/b4f4: 68           ??MxdI?? e .....                 pla
+0006f5 fe/b4f5: a2 33 00     ??MxdI?? e .....                 ldx     #$0033
+0006f8 fe/b4f8: 9f 80 fe 00  n?MxdI?? e ....> @lp0            stal    f:LFE80,x
+0006fc fe/b4fc: ca           n?MxdI?? e .....                 dex
+0006fd fe/b4fd: ca           ??MxdI?? e .....                 dex
+0006fe fe/b4fe: ca           ??MxdI?? e .....                 dex
+0006ff fe/b4ff: ca           ??MxdI?? e .....                 dex
+000700 fe/b500: 10 f6        ??MxdI?? e .....                 bpl     @lp0
+000702 fe/b502: c2 20        N?MxdI?? e .....                 rep     #$20
                                                               .rwid   longm
+000704 fe/b504: a0 71 b5     N?mxdI?? e .....                 ldy     #tblDefaultRoutines2Pre & $ffff
+000707 fe/b507: a2 80 ff     n?mxdIz? e .....                 ldx     #tblB0JumpTableFF80_QRY
+00070a fe/b50a: a9 34 00     n?mxdIz? e .....                 lda     #$0034
+00070d fe/b50d: 20 cb b4     n?mxdIz? e .....                 jsr     movPrg2B0
+000710 fe/b510: a0 a5 b5     ??mxdI?? e .....                 ldy     #tblDefaultHwJml & $ffff
+000713 fe/b513: a2 e0 fe     n?mxdIz? e .....                 ldx     #tblB0JumpTableFEE0_QRY
+000716 fe/b516: a9 20 00     n?mxdIz? e .....                 lda     #$0020
+000719 fe/b519: 20 cb b4     n?mxdIz? e .....                 jsr     movPrg2B0
+00071c fe/b51c: e2 20        ??mxdI?? e .....                 sep     #$20
                                               ; Resets all the jml bank addresses to point to current ROM
                                                               .rwid   shortm
+00071e fe/b51e: 4b           ??MxdI?? e .....                 phk
+00071f fe/b51f: 68           ??MxdI?? e .....                 pla                       ;this ROM's bank 
+000720 fe/b520: a2 1f 00     ??MxdI?? e .....                 ldx     #$001f
+000723 fe/b523: 9f e0 fe 00  n?MxdI?? e ....> LFEB523         stal    f:LFEE0,x
+000727 fe/b527: ca           n?MxdI?? e .....                 dex
+000728 fe/b528: ca           ??MxdI?? e .....                 dex
+000729 fe/b529: ca           ??MxdI?? e .....                 dex
+00072a fe/b52a: ca           ??MxdI?? e .....                 dex
+00072b fe/b52b: 10 f6        ??MxdI?? e .....                 bpl     LFEB523
+00072d fe/b52d: c2 20        N?MxdI?? e .....                 rep     #$20
                                                               .rwid   longm
+00072f fe/b52f: a0 c6 b5     N?mxdI?? e .....                 ldy     #tblHWVectors & $ffff
+000732 fe/b532: a2 e0 ff     n?mxdIz? e .....                 ldx     #BANK0_HW_VECTORS
+000735 fe/b535: a9 20 00     n?mxdIz? e .....                 lda     #$0020
+000738 fe/b538: 20 cb b4     n?mxdIz? e .....                 jsr     movPrg2B0
+00073b fe/b53b: 28           ??mxdI?? e .....                 plp
+00073c fe/b53c: 60           n?mxdIZc e ...#.                 rts

                                               ********************************************************************************
                                               * ; Note: the following table is copied to bank 0 at fe80 and then all the     *
                                               * bank addresses are tweaked to point back at this ROM                         *
                                               *                                                                              *
                                               * TODO: tidy the arithmetic below to & 0x00FFFF                                *
                                               ********************************************************************************
        fe/b53d:                               tblDefaultRoutines
                                                               .addrs  $fe80
                                                               .rwid   shortm,shortx
+00073d 00/fe80: 5c e6 b5 00  ??MXd??? e @T.#> LFE80           jml     default__TB-$fe0000

+000741 00/fe84: 5c 04 b6 00  ??MXd??? e @T.#> LFE84           jml     default__LN-$fe0000

+000745 00/fe88: 5c bb cf 00  ???????? e .T.#> LFE88           jml     default__ST-$fe0000

+000749 00/fe8c: 5c 85 d2 00  ????d??? e .T.#> LFE8C           jml     default__MM-$fe0000

+00074d 00/fe90: 5c 12 da 00  ??MXd??? e .T.#> LFE90           jml     default__CO-$fe0000

+000751 00/fe94: 5c 48 dc 00  ??MXd??? e @T.#> LFE94           jml     default__CCO-$fe0000

+000755 00/fe98: 5c ad dc 00  ??MXd??? e @T.#> LFE98           jml     default__CWT-$fe0000

+000759 00/fe9c: 5c 1b dc 00  ??MXd??? e @T.#> LFE9C           jml     default__CRS-$fe0000

+00075d 00/fea0: 5c 97 ed 00  ??MXd??? e @T.#> LFEA0           jml     default__OSB-$fe0000

+000761 00/fea4: 5c 9a ed 00  ??MXd??? e @T.#> LFEA4           jml     default__OSW-$fe0000

+000765 00/fea8: 5c 03 b6 00  ??MXd??? e @T.#> LFEA8           jml     default__VDU-$fe0000

+000769 00/feac: 5c 5d fe 00  ??MXd??? e .T.#> LFEAC           jml     default__KB-$fe0000

+00076d 00/feb0: 5c cb ed 00  ????d??? e @T.#> LFEB0           jml     default__EV-$fe0000
                                                               .adrend ↑ $fe80

                                               ********************************************************************************
                                               * BRL's to the jump table above for "well known" entry points                  *
                                               *                                                                              *
                                               * QRY not clear why this double indirection is needed?                         *
                                               ********************************************************************************
        fe/b571:                               tblDefaultRoutines2Pre
                                                               .addrs  *-$fdb5f1
+000771 00/ff80: 82 fd fe     ??MXd??? e @T.#. __TB            brl     LFE80

+000774 00/ff83: ea           ??MXd??? e @T...                 nop
+000775 00/ff84: 82 fd fe     ??MXd??? e ...#. __LN            brl     LFE84

+000778 00/ff87: ea           ??MXd??? e @T...                 nop
+000779 00/ff88: 82 fd fe     ???????? e ...#> __ST            brl     LFE88

+00077c 00/ff8b: ea           ??MXd??? e @T...                 nop
+00077d 00/ff8c: 82 fd fe     ????d??? e ...#> __MM            brl     LFE8C

+000780 00/ff8f: ea           ??MXd??? e @T...                 nop
+000781 00/ff90: 82 fd fe     ??MXd??? e ...#> __CO            brl     LFE90

+000784 00/ff93: ea           ??MXd??? e @T...                 nop
+000785 00/ff94: 82 fd fe     ??MXd??? e ...#. __CCO           brl     LFE94

+000788 00/ff97: ea           ??MXd??? e @T...                 nop
+000789 00/ff98: 82 fd fe     ??MXd??? e ...#> __CWT           brl     LFE98

+00078c 00/ff9b: ea           ??MXd??? e @T...                 nop
+00078d 00/ff9c: 82 fd fe     ??MXd??? e ...#. __CRS           brl     LFE9C

+000790 00/ff9f: ea           ??MXd??? e @T...                 nop
+000791 00/ffa0: 82 fd fe     ??MXd??? e ...#. __OSB           brl     LFEA0

+000794 00/ffa3: ea           ??MXd??? e @T...                 nop
+000795 00/ffa4: 82 fd fe     ??MXd??? e ...#. OSW             brl     LFEA4

+000798 00/ffa7: ea           ??MXd??? e @T...                 nop
+000799 00/ffa8: 82 fd fe     ??MXd??? e ...#. __VDU           brl     LFEA8

+00079c 00/ffab: ea           ??MXd??? e @T...                 nop
+00079d 00/ffac: 82 fd fe     ??MXd??? e ...#> __KB            brl     LFEAC

+0007a0 00/ffaf: ea           ??MXd??? e @T...                 nop
+0007a1 00/ffb0: 82 fd fe     ????d??? e ...#> __EV            brl     LFEB0

+0007a4 00/ffb3: ea           ??MXd??? e @T...                 nop
                                                               .adrend ↑ $ff80

                                               ; ZXXXXXXX
        fe/b5a5:                               tblDefaultHwJml
                                                               .addrs  $fee0
+0007a5 00/fee0: 5c a5 b5 00  ??MXd??? e @T.#. LFEE0           jml     tblDefaultHwJml-$fe0000

+0007a9 00/fee4: 5c a9 b5 00  ??MXd??? e @T.#.                 jml     tblDefaultHwJml-$fdfffc ;TODO - fix this up to reference self &FFFF

+0007ad 00/fee8: 5c 55 b6 00  ??MXd??? e @T.#. hwjmpvecCOP     jml     default_IVCOP-$fe0000 ;COP

+0007b1 00/feec: 5c 34 b6 00  ??MXd??? e @T.#. hwjmpvecBRK     jml     default_IVBRK-$fe0000 ;BRK

+0007b5 00/fef0: 5c 4f b0 00  ??MXd??? e @T.#. hwjmpvecABORT   jml     Serv2_RESET-$fe0000 ;ABORT - causes a RESET

+0007b9 00/fef4: 5c c5 b5 00  ??MXd??? e @T.#. hwjmpvecNMI     jml     default_IVNMI-$fe0000 ;NMI

+0007bd 00/fef8: 5c 4f b0 00  ??MXd??? e @T.#. hwjmpvecRESET   jml     Serv2_RESET-$fe0000 ;RESET

+0007c1 00/fefc: 5c c2 fb 00  ??MXd??? e @T.#. hwjmpvecIRQ     jml     default_IVIRQ-$fe0000 ;IRQ
                                                               .adrend ↑ $fee0

+0007c5 fe/b5c5: 40           ???????? e @T.#. default_IVNMI   rti

+0007c6 fe/b5c6: 00 00                   .T... tblHWVectors    .dd2    $0000
+0007c8 fe/b5c8: 00 00                   .T...                 .dd2    $0000
+0007ca fe/b5ca: e8 fe                   .T...                 .dd2    hwjmpvecCOP
+0007cc fe/b5cc: ec fe                   .T...                 .dd2    hwjmpvecBRK
+0007ce fe/b5ce: f0 fe                   .T...                 .dd2    hwjmpvecABORT
+0007d0 fe/b5d0: f4 fe                   .T...                 .dd2    hwjmpvecNMI
+0007d2 fe/b5d2: f8 fe                   .T...                 .dd2    hwjmpvecRESET
+0007d4 fe/b5d4: fc fe                   .T...                 .dd2    hwjmpvecIRQ
+0007d6 fe/b5d6: 00 00                   .T...                 .dd2    $0000
+0007d8 fe/b5d8: 00 00                   .T...                 .dd2    $0000
+0007da fe/b5da: 00 00                   .T...                 .dd2    $0000
+0007dc fe/b5dc: 00 00                   .T...                 .dd2    $0000
+0007de fe/b5de: f0 fe                   .T...                 .dd2    hwjmpvecABORT
+0007e0 fe/b5e0: f4 fe                   .T...                 .dd2    hwjmpvecNMI
+0007e2 fe/b5e2: f8 fe                   .T...                 .dd2    hwjmpvecRESET
+0007e4 fe/b5e4: 00 ff                   .T...                 .dd2    $ff00
+0007e6 fe/b5e6: 02 0f        ??MXd??? e @T... default__TB     cop     COP_0F_OPERR
+0007e8 fe/b5e8: 46 43 20 69+            .T...                 .zstr   “FC interface not supported”
+000803 fe/b603: 6b           ??MXd??? e .T.#. default__VDU    rtl

                                               ********************************************************************************
                                               * LN - ????                                                                    *
                                               *                                                                              *
                                               * QRY this is a "well known" entry point at 00/FF84                            *
                                               *                                                                              *
                                               * op 0 calls __ST/0 (get string pointer to "SYSTEM")                           *
                                               * op 2 calls the CLI vector                                                    *
                                               ********************************************************************************
+000804 fe/b604: 08           ??MXd??? e @T... default__LN     php
+000805 fe/b605: c2 30        ??MXd??? e .....                 rep     #$30
                                                               .rwid   longm,longx
+000807 fe/b607: e0 04 00     ??mxd??? e .....                 cpx     #$0004
+00080a fe/b60a: b0 12        ??mxd??? e .....                 bcs     @retsec
+00080c fe/b60c: 0b           ??mxd??c e .....                 phd
+00080d fe/b60d: 8b           ??mxd??c e .....                 phb
+00080e fe/b60e: f4 00 ac     ??mxd??c e .....                 pea     DPSYS
+000811 fe/b611: 2b           ??mxd??c e .....                 pld
+000812 fe/b612: e2 30        ??mxd??c e .....                 sep     #$30
                                                               .rwid   shortm,shortx
+000814 fe/b614: fc 21 b6     ??MXd??c e .....                 jsr     (tblLnFunctions,x)
+000817 fe/b617: ab           ??MXd??? e .....                 plb
+000818 fe/b618: 2b           ??MXd??? e .....                 pld
+000819 fe/b619: b0 03        ??MXd??? e .....                 bcs     @retsec
+00081b fe/b61b: 28           ??MXd??c e .....                 plp
+00081c fe/b61c: 18           ??MXd??? e .....                 clc
+00081d fe/b61d: 6b           ??MXd??c e ...#.                 rtl

+00081e fe/b61e: 28           ????d??C e ....> @retsec         plp
+00081f fe/b61f: 38           ??MXd??? e .....                 sec
+000820 fe/b620: 6b           ??MXd??C e ...#.                 rtl

+000821 fe/b621: 25 b6                   ..... tblLnFunctions  .dd2    __ST_0 & $ffff    ;0 - do __ST_0
+000823 fe/b623: 9f dd                   .....                 .dd2    doLNCLI & $ffff   ;2 - __LNCLI

                                               ********************************************************************************
                                               * __ST operation 0                                                             *
                                               *                                                                              *
                                               * return long pointer BHA to string "SYSTEM"                                   *
                                               ********************************************************************************
+000825 fe/b625: c2 30        ??MXd??? e @T... __ST_0          rep     #$30
                                                               .rwid   longm,longx
+000827 fe/b627: 4b           ??mxd??? e .....                 phk
                                                               .dbank  K (auto)
+000828 fe/b628: ab           ??mxd??? e .....                 plb
+000829 fe/b629: a9 2d b6     ??mxd??? e .....                 lda     #strSYSTEM & $ffff
+00082c fe/b62c: 60           n?mxd?z? e ...#.                 rts

+00082d fe/b62d: 53 59 53 54+            ..... strSYSTEM       .zstr   “SYSTEM”

                                               ********************************************************************************
                                               * Main BRK handler - saves the registers on the stack and passes control to    *
                                               * the coroutine BRK handler                                                    *
                                               ********************************************************************************
                                                               .rwid   shortm,shortx
+000834 fe/b634: d8           ???????? e @T... default_IVBRK   cld
+000835 fe/b635: c2 30        ????d??? e .....                 rep     #$30
                                                               .rwid   longm,longx
+000837 fe/b637: 0b           ??mxd??? e .....                 phd
+000838 fe/b638: 8b           ??mxd??? e .....                 phb
+000839 fe/b639: 48           ??mxd??? e .....                 pha
+00083a fe/b63a: da           ??mxd??? e .....                 phx
+00083b fe/b63b: 5a           ??mxd??? e .....                 phy
                                               ; stack/DP contains
                                               ; +D  K
                                               ; +B  PC
                                               ; +A  FLAGS
                                               ; +8  DP
                                               ; +7  B
                                               ; +5  HA
                                               ; +3  X
                                               ; +1  Y
+00083c fe/b63c: 3b           ??mxd??? e .....                 tsc
+00083d fe/b63d: 5b           ??mxd??? e .....                 tcd
+00083e fe/b63e: a5 0c        ??mxd??? e .....                 lda     $0c
+000840 fe/b640: 8f 0e ff 00  ??mxd??? e .....                 stal    f:EXSYS_0D_BRKADDR_SAVE+1 ;store 24 bit pointer to byte after the BRK instruction
+000844 fe/b644: a5 0b        ??mxd??? e .....                 lda     $0b
+000846 fe/b646: 3a           ??mxd??? e .....                 dec     A
+000847 fe/b647: 8f 0d ff 00  ??mxd??? e .....                 stal    f:EXSYS_0D_BRKADDR_SAVE
+00084b fe/b64b: a2 3c 00     ??mxd??? e .....                 ldx     #$003c            ;TODO: what VDU function?
+00084e fe/b64e: 4b           n?mxd?z? e .....                 phk
+00084f fe/b64f: 20 38 fe     n?mxd?z? e .....                 jsr     callModVDU
+000852 fe/b652: 4c fa dc     ??mxd??? e ...#.                 jmp     coHandleBRK

                                               ********************************************************************************
                                               * The COP handler                                                              *
                                               ********************************************************************************
                                                               .rwid   shortm,shortx
+000855 fe/b655: 28           ???????? e @T... default_IVCOP   plp
+000856 fe/b656: 08           ???????? e .....                 php                       ;Not sure what this sequence is for, reestablish caller's SEI or SED flags - seems dodgy
+000857 fe/b657: c2 38        ???????? e .....                 rep     #$38
                                                               .rwid   longm,longx
+000859 fe/b659: 0b           ??mxd??? e .....                 phd                       ;8
+00085a fe/b65a: 8b           ??mxd??? e .....                 phb                       ;7
+00085b fe/b65b: 48           ??mxd??? e .....                 pha                       ;5
+00085c fe/b65c: da           ??mxd??? e .....                 phx                       ;3
+00085d fe/b65d: 5a           ??mxd??? e .....                 phy                       ;1
+00085e fe/b65e: 3b           ??mxd??? e .....                 tsc
                                               ; at this point D and S point to the stack
                                               ; 
                                               ; +13   PBR
                                               ; +11   PC
                                               ; +10   P
                                               ; +8    DP
                                               ; +7    B
                                               ; +5    A
                                               ; +3    X
                                               ; +1    Y
+00085f fe/b65f: 5b           ??mxd??? e .....                 tcd
+000860 fe/b660: c6 0b        ??mxd??? e .....                 dec     DPCOP_PC          ;decrement 16 bit return pointer to point at the signature byte
+000862 fe/b662: a7 0b        ??mxd??? e .....                 lda     [DPCOP_PC]        ;get signature byte
+000864 fe/b664: 0a           ??mxd??? e .....                 asl     A                 ;multiply by 2 to get index
+000865 fe/b665: 29 ff 00     ??mxd??? e .....                 and     #$00ff            ;mask off whatever we fetched in high byte
+000868 fe/b668: c9 c4 00     n?mxd??? e .....                 cmp     #$00c4            ;compare to C4 - 2*$62
+00086b fe/b66b: b0 1b        ??mxd??? e .....                 bcs     @handlege62       ;jump forward for high COPs
+00086d fe/b66d: aa           ??mxd??? e ....> @dispatch       tax                       ;transfer index to X
+00086e fe/b66e: a5 05        ??mxd??? e .....                 lda     DPCOP_AH          ;restore A from stack
+000870 fe/b670: 4b           ??mxd??? e .....                 phk
                                               ; The callee stack will now look like this:
                                               ; 
                                               ; +16   PBR
                                               ; +14   PC
                                               ; +13   P
                                               ; +11   DP
                                               ; +10   B
                                               ; +8    A
                                               ; +6    X
                                               ; +4    Y
                                               ; +1    FE/B673 - return address of COP dispatcher
                                               ; 
                                               ; The DP register will point at byte below Y
                                               ; 
                                               ; +13   PBR
                                               ; +11   PC
                                               ; +10   P
                                               ; +8    DP
                                               ; +7    B
                                               ; +5    A
                                               ; +3    X
                                               ; +1    Y
+000871 fe/b671: fc 9d b6     ??mxd??? e .....                 jsr     (tblCOPDispatch,x) ;long jump to handler in dispatch table
+000874 fe/b674: c2 30        ??mxd??? e ....> @ret            rep     #$30
+000876 fe/b676: 7a           ??mxd??? e .....                 ply                       ;restore all regs except plp
+000877 fe/b677: fa           ??mxd??? e .....                 plx
+000878 fe/b678: 68           ??mxd??? e .....                 pla
+000879 fe/b679: ab           ??mxd??? e .....                 plb
+00087a fe/b67a: 2b           ??mxd??? e .....                 pld
+00087b fe/b67b: b0 03        ??mxd??? e .....                 bcs     @retSEC           ;check for CS and jump forward for return with CS
+00087d fe/b67d: 28           ??mxd??c e .....                 plp
                                                               .rwid   shortm,shortx
+00087e fe/b67e: 18           ???????? e .....                 clc
+00087f fe/b67f: 6b           ???????c e ...#.                 rtl

                                                               .rwid   longm,longx
+000880 fe/b680: 28           ??mxd??C e ....> @retSEC         plp
                                                               .rwid   shortm,shortx
+000881 fe/b681: 38           ???????? e .....                 sec
+000882 fe/b682: 6b           ???????C e ...#.                 rtl

                                                               .rwid   longm,longx
+000883 fe/b683: 64 03        ??mxd??? e ....> @ret_unimplemented stz  DPCOP_X           ;clear saved X
+000885 fe/b685: 38           ??mxd??? e .....                 sec                       ;return error
+000886 fe/b686: 80 ec        ??mxd??C e ...#.                 bra     @ret

+000888 fe/b688: c9 e0 00     ??mxd??C e ....> @handlege62     cmp     #$00e0
+00088b fe/b68b: 90 f6        ??mxd??? e .....                 bcc     @ret_unimplemented ;less than E0 - i.e COP 31..6F
+00088d fe/b68d: a7 0b        ??mxd??C e .....                 lda     [DPCOP_PC]        ;get cop number as 16 bits (will be nn7x)
+00088f fe/b68f: e6 0b        ??mxd??C e .....                 inc     DPCOP_PC          ;step return address past it
+000891 fe/b691: eb           ??mxd??C e .....                 xba                       ;swap byte order will now be somethig like 7xnn
+000892 fe/b692: 0a           ??mxd??C e .....                 asl     A                 ;now Exnn or Fxnn
+000893 fe/b693: c9 00 e0     ??mxd??? e .....                 cmp     #$e000
+000896 fe/b696: b0 eb        ??mxd??? e .....                 bcs     @ret_unimplemented ;QRY - this looks like a bug? they must all surely be >= e000?!?!
+000898 fe/b698: e9 3b df     ??mxd??c e .....                 sbc     #$df3b            ;subtract df3e to put in range 
+00089b fe/b69b: 80 d0        ??mxd??? e ...#.                 bra     @dispatch

+00089d fe/b69d: 95 b7                   ..... tblCOPDispatch  .dd2    COP_00 & $ffff    ;OPWRC 00 = OSWRCH
+00089f fe/b69f: 0d b8                   .....                 .dd2    COP_01 & $ffff    ;OPWRS 01 = Write String Immediate
+0008a1 fe/b6a1: 1d b8                   .....                 .dd2    COP_02 & $ffff    ;OPWRA 02 = Write string at BHA
+0008a3 fe/b6a3: 8b b7                   .....                 .dd2    COP_03 & $ffff    ;OPNLI 03 = OSNEWL - write CR/LF
+0008a5 fe/b6a5: 6f b8                   .....                 .dd2    COP_04 & $ffff    ;OPRDC 04 = read character
+0008a7 fe/b6a7: 83 b8                   .....                 .dd2    COP_05 & $ffff    ;OPCLI 05 = OSCLI = execute command
+0008a9 fe/b6a9: 9e b8                   .....                 .dd2    COP_06 & $ffff    ;OPOSB 06 - OSBYTE
+0008ab fe/b6ab: b9 b8                   .....                 .dd2    COP_07 & $ffff    ;OPOSW 07 - OSWORD
+0008ad fe/b6ad: 61 b7                   .....                 .dd2    copBadCOP & $ffff
+0008af fe/b6af: 61 b7                   .....                 .dd2    copBadCOP & $ffff
+0008b1 fe/b6b1: 98 ba                   .....                 .dd2    COP_0A & $ffff    ;OPBGT 0A - BGET
+0008b3 fe/b6b3: a1 ba                   .....                 .dd2    COP_0B & $ffff    ;OPBPT 0B - BPUT
+0008b5 fe/b6b5: 61 b7                   .....                 .dd2    copBadCOP & $ffff
+0008b7 fe/b6b7: 16 b9                   .....                 .dd2    COP_0D & $ffff    ;???? 0D - Throws a not implemented error
+0008b9 fe/b6b9: 86 b8                   .....                 .dd2    COP_OE & $ffff    ;OPCOM 0E - OSCLI with string in BHA
+0008bb fe/b6bb: 61 bd                   .....                 .dd2    COP_0F & $ffff    ;OPERR 0E - Raise an error
+0008bd fe/b6bd: c2 bd                   .....                 .dd2    COP_10 & $ffff    ;OPADP 10 - Allocate direct page
+0008bf fe/b6bf: c2 bd                   .....                 .dd2    COP_10 & $ffff    ;OPADF 11 - Allocate direct page - supposed to be fast but isnt...or is it?
+0008c1 fe/b6c1: 07 be                   .....                 .dd2    COP_12 & $ffff    ;OPFD  12 - QRY not in docco
+0008c3 fe/b6c3: 34 be                   .....                 .dd2    COP_13 & $ffff    ;OPAST 13 - Allocate Stack
+0008c5 fe/b6c5: 5e be                   .....                 .dd2    COP_14 & $ffff    ;OPFST 14 - Free Stack
+0008c7 fe/b6c7: 83 b7                   .....                 .dd2    COP_15 & $ffff    ;OPASC 15 - Write ASCII convert <CR> to <CR><LF>
+0008c9 fe/b6c9: 89 be                   .....                 .dd2    COP_16 & $ffff    ;OPAEV 16 - Acknowledge Event
+0008cb fe/b6cb: 40 b9                   .....                 .dd2    COP_17 & $ffff    ;OPBYX 17 - Convert BYXD to BHA
+0008cd fe/b6cd: 65 c1                   .....                 .dd2    COP_18 & $ffff    ;OPRLH 18 - Read hex number
+0008cf fe/b6cf: 78 c2                   .....                 .dd2    COP_19 & $ffff    ;OPRLS 19 - read literal string QRY not documented
+0008d1 fe/b6d1: 0b be                   .....                 .dd2    COP_1A & $ffff    ;OPFZB 1A - free bank 0 memory
+0008d3 fe/b6d3: 9d b7                   .....                 .dd2    COP_1B & $ffff    ;OPARM 1B - call Arithmetic module
+0008d5 fe/b6d5: c8 c2                   .....                 .dd2    COP_1C & $ffff    ;OPSCX 1C - Save Context 
+0008d7 fe/b6d7: ef c2                   .....                 .dd2    COP_1D & $ffff    ;OPRCX 1D - Restore Context
+0008d9 fe/b6d9: 0c c3                   .....                 .dd2    COP_1E & $ffff    ;OPSSC 1E - Save the screen
+0008db fe/b6db: 2a c3                   .....                 .dd2    COP_1F & $ffff    ;OPRSC 1F - Restore the screen
+0008dd fe/b6dd: a1 be                   .....                 .dd2    COP_20 & $ffff    ;OPSEV 20 - QRY set even
+0008df fe/b6df: 65 b9                   .....                 .dd2    COP_21 & $ffff    ;OPPRE 21 - Allow preemption
+0008e1 fe/b6e1: b2 b9                   .....                 .dd2    COP_22 & $ffff    ;OPRLN 22 - Read a line to buffer
+0008e3 fe/b6e3: a1 b9                   .....                 .dd2    COP_23 & $ffff    ;OPCVS 23 - Convert stack index
+0008e5 fe/b6e5: 95 b9                   .....                 .dd2    COP_24 & $ffff    ;OPCVD 24 - convert direct page index
+0008e7 fe/b6e7: cb c3                   .....                 .dd2    COP_25 & $ffff    ;OPCRC 25 - superceded use OPSUM
+0008e9 fe/b6e9: b9 b7                   .....                 .dd2    COP_26 & $ffff    ;OPBHA 26 - Get BHA address of immediate string
+0008eb fe/b6eb: 31 bd                   .....                 .dd2    COP_27 & $ffff    ;OPREF 27 - ?
+0008ed fe/b6ed: 77 bc                   .....                 .dd2    COP_28 & $ffff    ;OPCMD 28 - call a module
+0008ef fe/b6ef: 09 bd                   .....                 .dd2    COP_29 & $ffff    ;OPRFR 29 - reference a module
+0008f1 fe/b6f1: cb bc                   .....                 .dd2    COP_2A & $ffff    ;OPURF 2A - Unreference a module
+0008f3 fe/b6f3: f4 b7                   .....                 .dd2    COP_2B & $ffff    ;OPDIS 2B - ?
+0008f5 fe/b6f5: 52 c1                   .....                 .dd2    COP_2C & $ffff    ;OPFMA 2C - find module by address
+0008f7 fe/b6f7: 2e c1                   .....                 .dd2    COP_2D & $ffff    ;OPWRM 2D - write module name
+0008f9 fe/b6f9: ee c0                   .....                 .dd2    COP_2E & $ffff    ;OPFPO 2E - find pool owner
+0008fb fe/b6fb: 27 fc                   .....                 .dd2    COP_2F & $ffff    ;OPIIQ 2F - intercept interrupt
+0008fd fe/b6fd: 44 fd                   .....                 .dd2    COP_30 & $ffff    ;OPRIQ 30 - release interrupt
+0008ff fe/b6ff: 07 fd                   .....                 .dd2    COP_31 & $ffff    ;OPMIQ 31 - modify interrupt
+000901 fe/b701: bc c0                   .....                 .dd2    COP_32 & $ffff    ;OPSUM 32 - compute end around carry checksum
+000903 fe/b703: ea bb                   .....                 .dd2    COP_33 & $ffff    ;OPSLM 33 - scan list of modules
+000905 fe/b705: a6 bb                   .....                 .dd2    COP_34 & $ffff    ;OPRMI 34 - read module info
+000907 fe/b707: 70 bb                   .....                 .dd2    COP_35 & $ffff    ;OPAM 35 - Add module
+000909 fe/b709: 61 bb                   .....                 .dd2    COP_36 & $ffff    ;OPNLU 36 - name lookup
+00090b fe/b70b: 61 b7                   .....                 .dd2    copBadCOP & $ffff ;37
+00090d fe/b70d: 23 bb                   .....                 .dd2    COP_38 & $ffff    ;OPAH 38 - allocate a 16 bit handle
+00090f fe/b70f: 43 bb                   .....                 .dd2    COP_39 & $ffff    ;OPFH 39 - free handle
+000911 fe/b711: 4c bb                   .....                 .dd2    COP_3A & $ffff    ;OPCUH 3A - call device driver using handle
+000913 fe/b713: 61 b7                   .....                 .dd2    copBadCOP & $ffff ;3B
+000915 fe/b715: b5 c8                   .....                 .dd2    COP_3C & $ffff    ;OPDTD 3C - ???
+000917 fe/b717: ab c0                   .....                 .dd2    COP_3D & $ffff    ;OPGSR 3D
+000919 fe/b719: ac c0                   .....                 .dd2    COP_3E & $ffff    ;OPADY 3E - Add Y to BHA
+00091b fe/b71b: 62 c0                   .....                 .dd2    COP_3F & $ffff    ;OPATR 3F - ???
+00091d fe/b71d: 9a c0                   .....                 .dd2    COP_40 & $ffff    ;OPFTR 40 - ???
+00091f fe/b71f: 07 c0                   .....                 .dd2    COP_41 & $ffff    ;OPECO 41 - call low-level Econet routines
+000921 fe/b721: df bf                   .....                 .dd2    COP_42 & $ffff    ;OPRHL 42 - ???
+000923 fe/b723: ca bf                   .....                 .dd2    COP_43 & $ffff    ;OPXKC 43 - Examine keyboard character
+000925 fe/b725: a8 ba                   .....                 .dd2    COP_44 & $ffff    ;OPOPN 44 - open device driver
+000927 fe/b727: be ba                   .....                 .dd2    COP_45 & $ffff    ;OPCLS 45 - close device driver
+000929 fe/b729: c5 ba                   .....                 .dd2    COP_46 & $ffff    ;OPEND 46 - test for EOF
+00092b fe/b72b: df b8                   .....                 .dd2    COP_47 & $ffff    ;OPMM 47 - call memory management module
+00092d fe/b72d: 7d b7                   .....                 .dd2    COP_48 & $ffff    ;OPVER 48 - return OS version number
+00092f fe/b72f: 3a c3                   .....                 .dd2    COP_49 & $ffff    ;OPFSC 49 - free screen
+000931 fe/b731: 37 c0                   .....                 .dd2    COP_4A & $ffff    ;OPNET 4A - high level Econet routines
+000933 fe/b733: ce ba                   .....                 .dd2    COP_4B & $ffff    ;OPVH 4B - validate handle
+000935 fe/b735: fb c3                   .....                 .dd2    COP_4C & $ffff    ;OPBGB 4C - get a block of bytes from a file
+000937 fe/b737: 05 c4                   .....                 .dd2    COP_4D & $ffff    ;OPBPB 4D - put a block of bytes to a file
+000939 fe/b739: b7 c4                   .....                 .dd2    COP_4E & $ffff    ;OPLOD 4E - load file
+00093b fe/b73b: c1 c4                   .....                 .dd2    COP_4F & $ffff    ;OPSAV 4F - save a file
+00093d fe/b73d: 0f c6                   .....                 .dd2    COP_50 & $ffff    ;OPRLE 50 - read file load/exec/length
+00093f fe/b73f: 6b c6                   .....                 .dd2    COP_51 & $ffff    ;OPWLE 51 - write file load/exec
+000941 fe/b741: 70 c6                   .....                 .dd2    COP_52 & $ffff    ;OPRAT 52 - read attributes
+000943 fe/b743: 75 c6                   .....                 .dd2    COP_53 & $ffff    ;OPWAT 53 - write file attributes
+000945 fe/b745: 7a c6                   .....                 .dd2    COP_54 & $ffff    ;OPRSP 54 - read sequential pointer
+000947 fe/b747: 7f c6                   .....                 .dd2    COP_55 & $ffff    ;OPWSP 55 - write sequential pointer
+000949 fe/b749: 84 c6                   .....                 .dd2    COP_56 & $ffff    ;OPRPL 56 - read physical length
+00094b fe/b74b: 89 c6                   .....                 .dd2    COP_57 & $ffff    ;OPRLL 57 - read logical length
+00094d fe/b74d: 8e c6                   .....                 .dd2    COP_58 & $ffff    ;OPWLL 58 - write logical length
+00094f fe/b74f: 93 c6                   .....                 .dd2    COP_59 & $ffff    ;OPRCH 59 - read catalogue header information
+000951 fe/b751: 98 c6                   .....                 .dd2    COP_5A & $ffff    ;OPRFN 5A - read object file names from directory
+000953 fe/b753: 41 c7                   .....                 .dd2    COP_5B & $ffff    ;OPDEL 5B - delete a named object
+000955 fe/b755: d2 c6                   .....                 .dd2    COP_5C & $ffff    ;OPREN 5C - rename object
+000957 fe/b757: 7f b8                   .....                 .dd2    COP_5D & $ffff    ;OPSTAR 5D - execute star command and print error
+000959 fe/b759: 44 c3                   .....                 .dd2    COP_5E & $ffff    ;OPFCX 5E - free vdu context including fonts
+00095b fe/b75b: b4 b8                   .....                 .dd2    COP_5F & $ffff    ;OPOSX 5F - call OSWORD with pointer in X QRY
+00095d fe/b75d: 4c bf                   .....                 .dd2    COP_60 & $ffff    ;OPDFR 60 - ???
+00095f fe/b75f: ce be                   .....                 .dd2    COP_61 & $ffff    ;OPERC 61 - ???? error something ???

+000961 fe/b761: 02 0f        ??mxd??? e @T... copBadCOP       cop     COP_0F_OPERR
+000963 fe/b763: 42 61 64 20+            .T...                 .zstr   “Bad COP - use new version”
                                               ********************************************************************************
                                               * COP 48 - OPVER - return version number                                       *
                                               *                                                                              *
                                               * Action: Puts the operating system version in A                               *
                                               *                                                                              *
                                               * On Entry: No requirements                                                    *
                                               * On Exit:  A = version number                                                 *
                                               *           DBXY preserved                                                     *
                                               *                                                                              *
                                               * returns 1 in A                                                               *
                                               ********************************************************************************
+00097d fe/b77d: a9 01 00     ??mxd??? e ..... COP_48          lda     #$0001
+000980 fe/b780: 85 05        n?mxd?z? e .....                 sta     DPCOP_AH          ;this is the saved A register
+000982 fe/b782: 6b           n?mxd?z? e ...#.                 rtl

                                               ********************************************************************************
                                               * COP 15 - OPASC - BBC OPASCI                                                  *
                                               *                                                                              *
                                               * Action: Send the byte in A to the VDU drivers. If the byte is &0D (carriage  *
                                               * return) then send &0A, &0D to the VDU drivers (line feed+ carriage return).  *
                                               *                                                                              *
                                               * On entry: A = character code.                                                *
                                               * On exit:  DBAXY preserved                                                    *
                                               ********************************************************************************
+000983 fe/b783: 29 ff 00     ??mxd??? e @T... COP_15          and     #$00ff
+000986 fe/b786: c9 0d 00     n?mxd??? e .....                 cmp     #$000d
+000989 fe/b789: d0 0a        ??mxd??? e .....                 bne     COP_00
                                               ********************************************************************************
                                               * COP 03 - OSNLI - BBC OSNEWL                                                  *
                                               *                                                                              *
                                               * Action: Send LF CR to the VDU drivers. Line feed is ASCII 10 (decimal),      *
                                               * carriage return is ASCII 13 (decimal).                                       *
                                               *                                                                              *
                                               * On entry: No requirement                                                     *
                                               * On exit:  DBAXY preserved                                                    *
                                               ********************************************************************************
+00098b fe/b78b: a9 0a 00     ??mxd?Z? e .T... COP_03          lda     #$000a
+00098e fe/b78e: 4b           n?mxd?z? e .....                 phk
+00098f fe/b78f: 20 95 b7     n?mxd?z? e .....                 jsr     COP_00
+000992 fe/b792: a9 0d 00     ??mxd??? e .....                 lda     #$000d
                                               ********************************************************************************
                                               * COP 00 - OPWRC - Write Char in A                                             *
                                               *                                                                              *
                                               * Action: Send the byte in A to the VDU drivers.                               *
                                               *                                                                              *
                                               * On entry: A = character code                                                 *
                                               * On exit:  DBAXY preserved                                                    *
                                               *                                                                              *
                                               ********************************************************************************
+000995 fe/b795: a2 04 00     ??mxd??? e .T..> COP_00          ldx     #$0004
+000998 fe/b798: 4b           n?mxd?z? e .....                 phk
+000999 fe/b799: 20 38 fe     n?mxd?z? e .....                 jsr     callModVDU
+00099c fe/b79c: 6b           ??mxd??? e ...#.                 rtl

                                               ********************************************************************************
                                               * COP 1B - call the ARITHMETIC module                                          *
                                               *                                                                              *
                                               * On Entry: Reason code in X, arithmetic stack pointer in BHA                  *
                                               *                                                                              *
                                               * On Exit:  BHA updated                                                        *
                                               ********************************************************************************
+00099d fe/b79d: a6 03        ??mxd??? e @T... COP_1B          ldx     DPCOP_X
+00099f fe/b79f: 0b           ??mxd??? e .....                 phd
+0009a0 fe/b7a0: 02 28        ??mxd??? e .....                 cop     COP_28_OPCMD
+0009a2 fe/b7a2: 41 52 49 54+            .T...                 .zstr   “ARITHMETIC”
+0009ad fe/b7ad: 2b           ??mxd??? e .....                 pld
+0009ae fe/b7ae: 86 03        ??mxd??? e .....                 stx     DPCOP_X
+0009b0 fe/b7b0: 85 05        ??mxd??? e .....                 sta     DPCOP_AH
+0009b2 fe/b7b2: e2 20        ??mxd??? e .....                 sep     #$20
                                                               .rwid   shortm
+0009b4 fe/b7b4: 8b           ??Mxd??? e .....                 phb
+0009b5 fe/b7b5: 68           ??Mxd??? e .....                 pla
+0009b6 fe/b7b6: 85 07        ??Mxd??? e .....                 sta     DPCOP_B
+0009b8 fe/b7b8: 6b           ??Mxd??? e ...#.                 rtl

                                               ********************************************************************************
                                               * COP 26 - OPBHA                                                               *
                                               *                                                                              *
                                               * returns the immediate string following the COP call as BHA                   *
                                               ********************************************************************************
                                                               .rwid   longm
+0009b9 fe/b7b9: a5 0c        ??mxd??? e @T... COP_26          lda     DPCOP_PC+1
+0009bb fe/b7bb: 85 06        ??mxd??? e .....                 sta     DPCOP_AH+1
+0009bd fe/b7bd: a5 0b        ??mxd??? e .....                 lda     DPCOP_PC
+0009bf fe/b7bf: 1a           ??mxd??? e .....                 inc     A
+0009c0 fe/b7c0: 85 05        ??mxd??? e .....                 sta     DPCOP_AH
                                               ; This skips over any string following the cop call
+0009c2 fe/b7c2: e6 0b        ??mxd??? e ....> @copExitImmedStr inc    DPCOP_PC
+0009c4 fe/b7c4: a7 0b        ??mxd??? e .....                 lda     [DPCOP_PC]
+0009c6 fe/b7c6: 29 ff 00     ??mxd??? e .....                 and     #$00ff
+0009c9 fe/b7c9: d0 f7        n?mxd??? e .....                 bne     @copExitImmedStr
+0009cb fe/b7cb: 6b           n?mxd?Z? e ...#.                 rtl

+0009cc fe/b7cc: a9 06 00     ??mxd??? e ....> LFEB7CC         lda     #$0006
+0009cf fe/b7cf: a2 4e 00     n?mxd?z? e .....                 ldx     #$004e
+0009d2 fe/b7d2: a0 00 00     n?mxd?z? e .....                 ldy     #$0000
+0009d5 fe/b7d5: 4b           n?mxd?Z? e .....                 phk
+0009d6 fe/b7d6: 20 38 fe     n?mxd?Z? e .....                 jsr     callModVDU
+0009d9 fe/b7d9: a9 0c 00     ??mxd??? e .....                 lda     #$000c
+0009dc fe/b7dc: a2 4e 00     n?mxd?z? e .....                 ldx     #$004e
+0009df fe/b7df: a0 00 00     n?mxd?z? e .....                 ldy     #$0000
+0009e2 fe/b7e2: 4b           n?mxd?Z? e .....                 phk
+0009e3 fe/b7e3: 20 38 fe     n?mxd?Z? e .....                 jsr     callModVDU
+0009e6 fe/b7e6: a9 0a 00     ??mxd??? e .....                 lda     #$000a
+0009e9 fe/b7e9: a2 4e 00     n?mxd?z? e .....                 ldx     #$004e
+0009ec fe/b7ec: a0 00 00     n?mxd?z? e .....                 ldy     #$0000
+0009ef fe/b7ef: 4b           n?mxd?Z? e .....                 phk
+0009f0 fe/b7f0: 20 38 fe     n?mxd?Z? e .....                 jsr     callModVDU
+0009f3 fe/b7f3: 60           ??mxd??? e ...#.                 rts

                                               ********************************************************************************
                                               * COP 2B - OPDIS                                                               *
                                               *                                                                              *
                                               * QRY                                                                          *
                                               ********************************************************************************
+0009f4 fe/b7f4: 20 cc b7     ??mxd??? e @T... COP_2B          jsr     LFEB7CC
+0009f7 fe/b7f7: e6 0b        ??mxd??? e ....> LFEB7F7         inc     DPCOP_PC
+0009f9 fe/b7f9: a7 0b        ??mxd??? e .....                 lda     [DPCOP_PC]
+0009fb fe/b7fb: 29 ff 00     ??mxd??? e .....                 and     #$00ff
+0009fe fe/b7fe: f0 0c        n?mxd??? e .....                 beq     LFEB80C
+000a00 fe/b800: a2 4e 00     n?mxd?z? e .....                 ldx     #$004e
+000a03 fe/b803: a0 00 00     n?mxd?z? e .....                 ldy     #$0000
+000a06 fe/b806: 4b           n?mxd?Z? e .....                 phk
+000a07 fe/b807: 20 38 fe     n?mxd?Z? e .....                 jsr     callModVDU
+000a0a fe/b80a: 80 eb        ??mxd??? e ...#.                 bra     LFEB7F7

+000a0c fe/b80c: 6b           n?mxd?Z? e ...#> LFEB80C         rtl

                                               ********************************************************************************
                                               * COP 01 - OPWRS - write string immediate                                      *
                                               *                                                                              *
                                               * read characters from bytes following cop, check for 0 and pass on to write   *
                                               * character routine                                                            *
                                               ********************************************************************************
+000a0d fe/b80d: e6 0b        ??mxd??? e @T..> COP_01          inc     DPCOP_PC
+000a0f fe/b80f: a7 0b        ??mxd??? e .....                 lda     [DPCOP_PC]
+000a11 fe/b811: 29 ff 00     ??mxd??? e .....                 and     #$00ff
+000a14 fe/b814: f0 06        n?mxd??? e .....                 beq     @ret
+000a16 fe/b816: 4b           n?mxd?z? e .....                 phk
+000a17 fe/b817: 20 95 b7     n?mxd?z? e .....                 jsr     COP_00
+000a1a fe/b81a: 80 f1        ??mxd??? e ...#.                 bra     COP_01

+000a1c fe/b81c: 6b           n?mxd?Z? e ...#> @ret            rtl

                                               ********************************************************************************
                                               * COP 02 - OPWRA - write string at BHA                                         *
                                               *                                                                              *
                                               * TODO: DOCO: NOTE: This seems to imply that X is set to 0 for 0 terminated, 1 *
                                               * for control terminated string - not in systems manual                        *
                                               *                                                                              *
                                               ********************************************************************************
+000a1d fe/b81d: a5 03        ??mxd??? e @T... COP_02          lda     DPCOP_X           ;get passed X and check is < 2 and use to determine type of terminator
+000a1f fe/b81f: 4a           ??mxd??? e .....                 lsr     A
+000a20 fe/b820: c9 02 00     n?mxd??? e .....                 cmp     #$0002
+000a23 fe/b823: 90 29        ??mxd??? e .....                 bcc     @skok
+000a25 fe/b825: 00 00        ??mxd??C e ...#.                 brk     $00

+000a27 fe/b827: 43 4f 50 20+            .....                 .zstr   “COP `OPWRA: invalid termination option”

+000a4e fe/b84e: aa           ??mxd??c e ....> @skok           tax
+000a4f fe/b84f: a0 00 00     ??mxd??c e .....                 ldy     #$0000
+000a52 fe/b852: b7 05        ??mxd??? e ....> @lp             lda     [DPCOP_AH],y      ;use BHA at 05 as pointer
+000a54 fe/b854: 29 ff 00     ??mxd??? e .....                 and     #$00ff
+000a57 fe/b857: f0 15        n?mxd??? e .....                 beq     @ret              ;check for 0 terminator
+000a59 fe/b859: e0 01 00     n?mxd?z? e .....                 cpx     #$0001
+000a5c fe/b85c: d0 05        ??mxd??? e .....                 bne     @sknocc           ;if X<>1 skip forwards
+000a5e fe/b85e: c9 20 00     ??mxd?Z? e .....                 cmp     #$0020
+000a61 fe/b861: 90 0b        ??mxd??? e .....                 bcc     @ret              ;else exit on control character
+000a63 fe/b863: da           ??mxd??? e ....> @sknocc         phx
+000a64 fe/b864: 5a           ??mxd??? e .....                 phy
+000a65 fe/b865: 4b           ??mxd??? e .....                 phk
+000a66 fe/b866: 20 95 b7     ??mxd??? e .....                 jsr     COP_00
+000a69 fe/b869: 7a           ??mxd??? e .....                 ply
+000a6a fe/b86a: fa           ??mxd??? e .....                 plx
+000a6b fe/b86b: c8           ??mxd??? e .....                 iny
+000a6c fe/b86c: 80 e4        ??mxd??? e ...#.                 bra     @lp

+000a6e fe/b86e: 6b           ??mxd??? e ...#> @ret            rtl

                                               ********************************************************************************
                                               * COP 04 - OPRDC - read a character from input                                 *
                                               *                                                                              *
                                               * No conditions                                                                *
                                               *                                                                              *
                                               * On exit:                                                                     *
                                               * if C = 0 then A contains the ASCII value of the character.                   *
                                               * if C = 1 then                                                                *
                                               *   if HA = $1B (@SCESC) then the ESCAPE key was pressed                       *
                                               *   if HA = $00 (@SCPRE) then the current task was pre-empted.                 *
                                               *                                                                              *
                                               * DBXY preserved                                                               *
                                               ********************************************************************************
+000a6f fe/b86f: 0b           ??mxd??? e @T... COP_04          phd
+000a70 fe/b870: f4 00 ac     ??mxd??? e .....                 pea     $ac00
+000a73 fe/b873: 2b           ??mxd??? e .....                 pld                       ;set DP = AC00
+000a74 fe/b874: e2 30        ??mxd??? e .....                 sep     #$30
                                                               .rwid   shortm,shortx
+000a76 fe/b876: 20 72 e2     ??MXd??? e .....                 jsr     int_OPRDC
+000a79 fe/b879: 2b           ??MXd??? e .....                 pld
+000a7a fe/b87a: 85 05        ??MXd??? e .....                 sta     DPCOP_AH          ;return in A, clear B
+000a7c fe/b87c: 64 06        ??MXd??? e .....                 stz     DPCOP_AH+1
+000a7e fe/b87e: 6b           ??MXd??? e ...#.                 rtl

                                               ********************************************************************************
                                               * COP 5D - OPSTAR - execute command in BHA                                     *
                                               *                                                                              *
                                               * Action: QRY looks to call OPCOM and if there's an error prints the error     *
                                               ********************************************************************************
                                                               .rwid   longm,longx
+000a7f fe/b87f: 20 5f f9     ??mxd??? e @T... COP_5D          jsr     doOPSTAR
+000a82 fe/b882: 6b           ??mxd??? e ...#.                 rtl

                                               ********************************************************************************
                                               * COP 05 - OPCLI - execute command line                                        *
                                               *                                                                              *
                                               * Action: This call sends the address of a command line string to the          *
                                               * operating system's command line interpreter. The string must be terminated   *
                                               * by CR (ASCII &0D).                                                           *
                                               * On entry: either: BYX contains the absolute address of the start of the      *
                                               * command line                                                                 *
                                               * OR: Y is 0 and X contains an offset from the direct page register D. The     *
                                               * start of the command line is in the direct page at address D+X.              *
                                               * On exit: No registers preserved                                              *
                                               ********************************************************************************
+000a83 fe/b883: 20 4c b9     ??mxd??? e @T... COP_05          jsr     makeBXYptr
                                               ********************************************************************************
                                               * COP 0E OPCOM - execute command at BHA                                        *
                                               *                                                                              *
                                               * Action: This call sends the address of a command line string to the          *
                                               * operating system's command line interpreter. The string must be terminated   *
                                               * by CR (ASCII &0D).                                                           *
                                               * On entry: BHA points to the start of the command                             *
                                               * On exit: No registers preserved                                              *
                                               ********************************************************************************
+000a86 fe/b886: 0b           ??mxd??? e .T... COP_OE          phd
+000a87 fe/b887: f4 00 ac     ??mxd??? e .....                 pea     DPLOC_SYS
+000a8a fe/b88a: 2b           ??mxd??? e .....                 pld
+000a8b fe/b88b: 20 9f dd     ??mxd??? e .....                 jsr     doLNCLI
+000a8e fe/b88e: 2b           ??mxd??? e .....                 pld                       ;back to COP DP that points at user stack
+000a8f fe/b88f: c2 30        ??mxd??? e .....                 rep     #$30              ;and update saved registers with results of OSCLI
+000a91 fe/b891: 85 05        ??mxd??? e .....                 sta     DPCOP_AH
+000a93 fe/b893: 86 03        ??mxd??? e .....                 stx     DPCOP_X
+000a95 fe/b895: 84 01        ??mxd??? e .....                 sty     DPCOP_Y
+000a97 fe/b897: e2 30        ??mxd??? e .....                 sep     #$30
                                                               .rwid   shortm,shortx
+000a99 fe/b899: 8b           ??MXd??? e .....                 phb
+000a9a fe/b89a: 68           ??MXd??? e .....                 pla
+000a9b fe/b89b: 85 07        ??MXd??? e .....                 sta     DPCOP_B
+000a9d fe/b89d: 6b           ??MXd??? e ...#.                 rtl

                                               ********************************************************************************
                                               * COP 06 - OPOSB = OSBYTE                                                      *
                                               *                                                                              *
                                               * This call caries out various operations, the specific operation depending on *
                                               * the contents of A on entry. Other data can be passed in X and Y. If results  *
                                               * are generated, these are returned in X and Y. Only a very small subset of    *
                                               * BBC OSBYTE calls is supported.                                               *
                                               * On entry: A contains the reason code. The reason code determines the         *
                                               * function of the call.                                                        *
                                               *                                                                              *
                                               * On exit: X and Y will contain results if the call produces them.             *
                                               *                                                                              *
                                               * D preserved                                                                  *
                                               ********************************************************************************
                                                               .rwid   longm,longx
+000a9e fe/b89e: 0b           ??mxd??? e @T... COP_06          phd
+000a9f fe/b89f: a6 03        ??mxd??? e .....                 ldx     DPCOP_X
+000aa1 fe/b8a1: e2 30        ??mxd??? e .....                 sep     #$30
                                                               .rwid   shortm,shortx
+000aa3 fe/b8a3: 20 cc e7     ??MXd??? e .....                 jsr     doDispatchOSBYTE
+000aa6 fe/b8a6: 2b           ??MXd??? e .....                 pld
+000aa7 fe/b8a7: e2 30        ??MXd??? e .....                 sep     #$30
+000aa9 fe/b8a9: 86 03        ??MXd??? e .....                 stx     DPCOP_X
+000aab fe/b8ab: 64 04        ??MXd??? e .....                 stz     DPCOP_X+1
+000aad fe/b8ad: e2 30        ????d??? e ....> copret8bitY     sep     #$30
+000aaf fe/b8af: 84 01        ??MXd??? e .....                 sty     DPCOP_Y
+000ab1 fe/b8b1: 64 02        ??MXd??? e .....                 stz     DPCOP_Y+1
+000ab3 fe/b8b3: 6b           ??MXd??? e ...#.                 rtl

                                               ********************************************************************************
                                               * COP 5F - OPOSX - QRY                                                         *
                                               *                                                                              *
                                               * looks to call OSWORD but with a different pointer arrangement BYY?           *
                                               ********************************************************************************
                                                               .rwid   longm,longx
+000ab4 fe/b8b4: 0b           ??mxd??? e @T... COP_5F          phd
+000ab5 fe/b8b5: d4 01        ??mxd??? e .....                 pei     (DPCOP_Y)
+000ab7 fe/b8b7: 80 08        ??mxd??? e ...#.                 bra     LFEB8C1

                                               ********************************************************************************
                                               * COP 07 - OPOSW = OSWORD                                                      *
                                               *                                                                              *
                                               * Action: This call caries out various operations, the specific operation      *
                                               * depending on the contents of A on entry. BYX points to a control block in    *
                                               * memory, and this block contains data for the call, and will contain results  *
                                               * from the call.                                                               *
                                               * On entry:                                                                    *
                                               * EITHER: BYX points to a control block in memory                              *
                                               * OR: Y = 0 and X contains an offset from the direct page register D. The      *
                                               * start of the control block is in the direct page at address D+X.             *
                                               * A contains the reason code. The reason code determines the function of the   *
                                               * call.                                                                        *
                                               * On exit: D preserved                                                         *
                                               *                                                                              *
                                               * For OPOSW with A = 0 (read line from input)                                  *
                                               * Y = line length (including CR if applicable).                                *
                                               * If C = 0 then CR termimated input.                                           *
                                               * If C = 1 then ESCAPE terminated input                                        *
                                               ********************************************************************************
+000ab9 fe/b8b9: 0b           ??mxd??? e @T... COP_07          phd
+000aba fe/b8ba: a6 03        ??mxd??? e .....                 ldx     DPCOP_X
+000abc fe/b8bc: 20 4c b9     ??mxd??? e .....                 jsr     makeBXYptr
                                               ; The DP register will point at byte below Y BHA will have been rearranged if
                                               ; Y=0 so that BHA = 0/DP+X
                                               ; 
                                               ; +13   PBR
                                               ; +11   PC
                                               ; +10   P
                                               ; +8    DP
                                               ; +7    B
                                               ; +5    A
                                               ; +3    X
                                               ; +1    Y
+000abf fe/b8bf: d4 05        ??mxd??? e .....                 pei     (DPCOP_AH)        ;caller A
+000ac1 fe/b8c1: d4 06        ??mxd??? e ....> LFEB8C1         pei     (DPCOP_B-1)       ;caller H,B
+000ac3 fe/b8c3: d4 08        ??mxd??? e .....                 pei     (DPCOP_DP)        ;caller DP
+000ac5 fe/b8c5: f4 00 ac     ??mxd??? e .....                 pea     DPSYS
+000ac8 fe/b8c8: 2b           ??mxd??? e .....                 pld
+000ac9 fe/b8c9: fa           ??mxd??? e .....                 plx
+000aca fe/b8ca: 86 d6        ??mxd??? e .....                 stx     <DPSYS_D6_OSW_DPSAV
+000acc fe/b8cc: e2 30        ??mxd??? e .....                 sep     #$30
                                                               .rwid   shortm,shortx
+000ace fe/b8ce: fa           ??MXd??? e .....                 plx
+000acf fe/b8cf: fa           ??MXd??? e .....                 plx
+000ad0 fe/b8d0: 86 d8        ??MXd??? e .....                 stx     DPSYS_D8_B_SAV    ;caller's Bank
+000ad2 fe/b8d2: c2 30        ??MXd??? e .....                 rep     #$30
                                                               .rwid   longm,longx
+000ad4 fe/b8d4: fa           ??mxd??? e .....                 plx                       ;caller's A (OSWORD number)
+000ad5 fe/b8d5: e2 30        ??mxd??? e .....                 sep     #$30
                                                               .rwid   shortm,shortx
+000ad7 fe/b8d7: 20 3d e8     ??MXd??? e .....                 jsr     enterOSWORD_BHA
+000ada fe/b8da: c2 30        ??MXd??? e .....                 rep     #$30
                                                               .rwid   longm,longx
+000adc fe/b8dc: 2b           ??mxd??? e .....                 pld
+000add fe/b8dd: 80 ce        ??mxd??? e ...#.                 bra     copret8bitY

                                               ********************************************************************************
                                               * COP 47 - OPMM - call the memory management routine                           *
                                               *                                                                              *
                                               * Action: This calls the memory management routine. The reason code is passed  *
                                               * in X, and the pool handle is passed in Y. All handles arc 16-bit. so calls   *
                                               * to OPMM must be made in 16-bit XY mode.                                      *
                                               *                                                                              *
                                               * On entry: X = reason code.                                                   *
                                               *           Y = pool handle.                                                   *
                                               * On exit:  If C = 0 then the call succeeded.                                  *
                                               *           If C = I then the call failed. X = error code. BHA points to       *
                                               *           zero-terminated error message.                                     *
                                               *           D preserved                                                        *
                                               ********************************************************************************
+000adf fe/b8df: 0b           ??mxd??? e @T... COP_47          phd
+000ae0 fe/b8e0: d4 03        ??mxd??? e .....                 pei     (DPCOP_X)
+000ae2 fe/b8e2: d4 08        ??mxd??? e .....                 pei     (DPCOP_DP)
+000ae4 fe/b8e4: 2b           ??mxd??? e .....                 pld
+000ae5 fe/b8e5: fa           ??mxd??? e .....                 plx
+000ae6 fe/b8e6: 22 8c ff 00  ??mxd??? e .....                 jsl     __MM
+000aea fe/b8ea: 2b           ??mxd??? e .....                 pld
+000aeb fe/b8eb: b0 0f        ??mxd??? e .....                 bcs     LFEB8FC
+000aed fe/b8ed: 85 05        ??mxd??c e .....                 sta     DPCOP_AH
+000aef fe/b8ef: 86 03        ??mxd??c e .....                 stx     DPCOP_X
+000af1 fe/b8f1: 84 01        ??mxd??c e .....                 sty     DPCOP_Y
+000af3 fe/b8f3: e2 20        ??mxd??c e .....                 sep     #$20
                                                               .rwid   shortm
+000af5 fe/b8f5: 8b           ??Mxd??c e .....                 phb
+000af6 fe/b8f6: 68           ??Mxd??c e .....                 pla
+000af7 fe/b8f7: 85 07        ??Mxd??c e .....                 sta     DPCOP_B
+000af9 fe/b8f9: c2 20        ??Mxd??c e .....                 rep     #$20
                                                               .rwid   longm
+000afb fe/b8fb: 6b           ??mxd??c e ...#.                 rtl

+000afc fe/b8fc: 02 26        ??mxd??C e ....> LFEB8FC         cop     COP_26_OPBHA
+000afe fe/b8fe: 4d 65 6d 6f+            .T...                 .zstr   “Memory call failed”
+000b11 fe/b911: a2 01 00     ??mxd??C e .....                 ldx     #$0001
+000b14 fe/b914: 38           n?mxd?zC e .....                 sec
+000b15 fe/b915: 6b           n?mxd?zC e ...#.                 rtl

                                               ********************************************************************************
                                               * COP 0D - ERR not implemented                                                 *
                                               *                                                                              *
                                               * Not implemented - throws an error                                            *
                                               ********************************************************************************
+000b16 fe/b916: 02 0f        ??mxd??? e @T... COP_0D          cop     COP_0F_OPERR
+000b18 fe/b918: 4f 50 46 4e+            .T...                 .zstr   “OPFND used - interface not longer valid”
                                               ********************************************************************************
                                               * COP 17 - OPBYX                                                               *
                                               *                                                                              *
                                               * Converts a BBC-type BYX pointer to a Communicator-type BHA pointer, ir Y is  *
                                               * non-zero then YX Ls simply copied to HA. If Y is zero then X is taken as an  *
                                               * ofTset from the direct page register D. BHA is calculated as the absolute    *
                                               * value of this direct page address.                                           *
                                               *                                                                              *
                                               * Entry:                                                                       *
                                               *     BYX points to an address, or Y = 0 and XD points to a direct page        *
                                               * address.                                                                     *
                                               * Exit:                                                                        *
                                               *     BHA points to equivalent address.                                        *
                                               *                                                                              *
                                               *     D preserved                                                              *
                                               ********************************************************************************
+000b40 fe/b940: 20 4c b9     ??mxd??? e .T... COP_17          jsr     makeBXYptr
+000b43 fe/b943: 85 05        ??mxd??? e .....                 sta     DPCOP_AH          ;store HA on stack frame at 05
+000b45 fe/b945: e2 30        ??mxd??? e .....                 sep     #$30
                                                               .rwid   shortm,shortx
+000b47 fe/b947: 8b           ??MXd??? e .....                 phb
+000b48 fe/b948: 68           ??MXd??? e .....                 pla
+000b49 fe/b949: 85 07        ??MXd??? e .....                 sta     DPCOP_B           ;store caller's B at 07
+000b4b fe/b94b: 6b           ??MXd??? e ...#.                 rtl

                                               ********************************************************************************
                                               * either: BYX contains the absolute address                                    *
                                               * OR: Y(16) = 0 and X contains an offset from the direct page register D. The  *
                                               * pointer is D+X.                                                              *
                                               *                                                                              *
                                               * This assumes a COP entry frame in DP                                         *
                                               *                                                                              *
                                               ********************************************************************************
                                                               .rwid   longm,longx
+000b4c fe/b94c: 08           ??mxd??? e ....> makeBXYptr      php
+000b4d fe/b94d: e2 30        ??mxd??? e .....                 sep     #$30
                                                               .rwid   shortm,shortx
+000b4f fe/b94f: 98           ??MXd??? e .....                 tya                       ;A(8)=Y(8)
+000b50 fe/b950: eb           ??MXd??? e .....                 xba                       ;put Y in H
+000b51 fe/b951: a5 03        ??MXd??? e .....                 lda     DPCOP_X           ;get X in A
+000b53 fe/b953: c2 30        ??MXd??? e .....                 rep     #$30
                                                               .rwid   longm,longx
+000b55 fe/b955: a4 01        ??mxd??? e .....                 ldy     DPCOP_Y           ;check for 0 in Y
+000b57 fe/b957: d0 0a        ??mxd??? e .....                 bne     @ret
+000b59 fe/b959: 18           ??mxd?Z? e .....                 clc                       ;if Y is zero
+000b5a fe/b95a: a5 03        ??mxd?Zc e .....                 lda     DPCOP_X           ;add original X to DP and set B=0
+000b5c fe/b95c: 65 08        ??mxd??c e .....                 adc     DPCOP_DP
                                                               .dbank  $00
+000b5e fe/b95e: f4 00 00     ??mxd??? e .....                 pea     $0000
+000b61 fe/b961: ab           ??mxd??? e .....                 plb
+000b62 fe/b962: ab           ??mxd??? e .....                 plb
+000b63 fe/b963: 28           ??mxd??? e ....> @ret            plp
+000b64 fe/b964: 60           ??mxd??? e ...#.                 rts

                                               ********************************************************************************
                                               * COP 21 - OPPRE - allow preemption                                            *
                                               *                                                                              *
                                               * Action: This call is used lo allow pre-emption of the current task at a      *
                                               * convenient point. The call allows the MOS to check whether the user has      *
                                               * selected another task. If another task has been requested then the call      *
                                               * returns with the carry set, and the event must be acknowledged using OPAEV.  *
                                               *                                                                              *
                                               * On entry: No requirements.                                                   *
                                               *                                                                              *
                                               * On exit:  If C = 0 then the module was not pre-empted.                       *
                                               *           If C = 1 then the module was pre-empted.                           *
                                               *           DBHAXY preserved                                                   *
                                               ********************************************************************************
+000b65 fe/b965: f4 00 ac     ??mxd??? e @T... COP_21          pea     $ac00
+000b68 fe/b968: 2b           ??mxd??? e .....                 pld
+000b69 fe/b969: 4b           ??mxd??? e .....                 phk
                                                               .dbank  K (auto)
+000b6a fe/b96a: ab           ??mxd??? e .....                 plb
+000b6b fe/b96b: e2 30        ??mxd??? e .....                 sep     #$30
                                                               .rwid   shortm,shortx
+000b6d fe/b96d: af 41 a5 00  ??MXd??? e .....                 ldal    f:SYSVAR_41_input_stream
+000b71 fe/b971: aa           ??MXd??? e .....                 tax
+000b72 fe/b972: 20 8e e1     ??MXd??? e .....                 jsr     OSBYTE_98
+000b75 fe/b975: b0 1c        ??MXd??? e .....                 bcs     @noparent
+000b77 fe/b977: c9 f0        ??MXd??c e .....                 cmp     #$f0
+000b79 fe/b979: 90 18        ??MXd??? e .....                 bcc     @noparent
+000b7b fe/b97b: 20 83 dd     ??MXd??C e .....                 jsr     getCurCorParent
+000b7e fe/b97e: b0 13        ??MXd??? e .....                 bcs     @noparent
+000b80 fe/b980: eb           ??MXd??c e .....                 xba
+000b81 fe/b981: a9 00        ??MXd??c e .....                 lda     #$00
+000b83 fe/b983: eb           n?MXd?Zc e .....                 xba
+000b84 fe/b984: a2 08        ??MXd??c e .....                 ldx     #$08
+000b86 fe/b986: 22 98 ff 00  n?MXd?zc e .....                 jsl     __CWT
+000b8a fe/b98a: a9 00        ??MXd??? e .....                 lda     #>__EVPRE
+000b8c fe/b98c: eb           n?MXd?Z? e .....                 xba
+000b8d fe/b98d: a9 02        ??MXd??? e .....                 lda     #__EVPRE
+000b8f fe/b98f: 02 20        n?MXd?z? e .....                 cop     COP_20_OPSEV
+000b91 fe/b991: 38           n?MXd?z? e .....                 sec
+000b92 fe/b992: 6b           n?MXd?zC e ...#.                 rtl

+000b93 fe/b993: 18           ??MXd??? e ....> @noparent       clc
+000b94 fe/b994: 6b           ??MXd??c e ...#.                 rtl

                                               ********************************************************************************
                                               * COP 24 - OPCVD - convert DP index                                            *
                                               *                                                                              *
                                               * Action: This call takes a direct page relative address and converts it to an *
                                               * absolute BHA address.                                                        *
                                               *                                                                              *
                                               * On entry: HA contains a 16 bit offset from the direct page register.         *
                                               * On exit:  If C = 0 then BHA contains the absolute address (D+HA).            *
                                               *           If C = 1 then the direct page offset is invalid.                   *
                                               *           DXY preserved                                                      *
                                               ********************************************************************************
                                                               .rwid   longm,longx
+000b95 fe/b995: 18           ??mxd??? e @T... COP_24          clc
+000b96 fe/b996: 65 08        ??mxd??c e .....                 adc     DPCOP_DP
+000b98 fe/b998: b0 06        ??mxd??? e .....                 bcs     @ret
+000b9a fe/b99a: 85 05        ??mxd??c e .....                 sta     DPCOP_AH
+000b9c fe/b99c: e2 20        ??mxd??c e .....                 sep     #$20
                                                               .rwid   shortm
+000b9e fe/b99e: 64 07        ??Mxd??c e .....                 stz     DPCOP_B
+000ba0 fe/b9a0: 6b           ???xd??? e ...#> @ret            rtl

                                               ********************************************************************************
                                               * COP 23 - OPCVS - convert stack index                                         *
                                               *                                                                              *
                                               * Action: This call takes a stack pointer relative address and converts it to  *
                                               * an absolute BHA address.                                                     *
                                               *                                                                              *
                                               * On entry: HA contains a 16 bit offset from the stack pointer.                *
                                               * On exit:  If C = 0 then BHA contains the absolute address (S+HA).            *
                                               *           If C = 1 then the stack offset is invalid.                         *
                                               ********************************************************************************
                                                               .rwid   longm
+000ba1 fe/b9a1: 0b           ??mxd??? e @T... COP_23          phd
+000ba2 fe/b9a2: 18           ??mxd??? e .....                 clc
+000ba3 fe/b9a3: 63 01        ??mxd??c e .....                 adc     $01,S
+000ba5 fe/b9a5: 69 0d 00     ??mxd??? e .....                 adc     #$000d
+000ba8 fe/b9a8: 2b           ??mxd??? e .....                 pld
+000ba9 fe/b9a9: b0 06        ??mxd??? e .....                 bcs     @ret
+000bab fe/b9ab: 85 05        ??mxd??c e .....                 sta     DPCOP_AH
+000bad fe/b9ad: e2 20        ??mxd??c e .....                 sep     #$20
                                                               .rwid   shortm
+000baf fe/b9af: 64 07        ??Mxd??c e .....                 stz     DPCOP_B
+000bb1 fe/b9b1: 6b           ???xd??? e ...#> @ret            rtl

                                               ********************************************************************************
                                               * COP 22 - OPRLN - Read a line to buffer                                       *
                                               *                                                                              *
                                               * Action: This call will read a line of characters from the keyboard. The call *
                                               * uses a control block which gives the address at which the characters are to  *
                                               * be put, the length of this buffer, and the number of characters to be sent   *
                                               * to the VDU drivers. Ihis number can be zero in which case no characters are  *
                                               * printed.                                                                     *
                                               *                                                                              *
                                               * During this call the current task may be pre-empted, in which case the carry *
                                               * flag will indicate as much. If either ESCAPE is pressed or a preempt occurs  *
                                               * then the next cal1 must be to OPAEV to acknowledge the event.                *
                                               *                                                                              *
                                               * On entry:  BHA points to a control block somewhere in memory.                *
                                               *            The format of the control block is as follows.                    *
                                               *   +0 4 byte pointer to the keyboard buffer.                                  *
                                               *        The least significant byte first (0) and the most significant byte    *
                                               *        last (3). The most significant byte mu.stbe zero (&00}.               *
                                               *   +4 2 byte buffer size. The buffer can be any size up to 6SS3S characters.  *
                                               *   +6 2 byte prefix length. This is the number of characters in the buffer    *
                                               *        which will be sent to the VDU drivers. Therefore it must not be       *
                                               *        greater than the buffer size. If the prefix length is zero then no    *
                                               *        characters are sent to the VDU drivers                                *
                                               *   +8 4 byte 0 word for future expansion                                      *
                                               *                                                                              *
                                               * On exit:   If C = 0 then the lirte has been read and the characters are in   *
                                               *            the buffer.                                                       *
                                               *            A contains the terminator of the input siring (CR ASCII 13        *
                                               * decimal).                                                                    *
                                               *            The length of the string in the buffer is given by the 2 bytes at *
                                               *            offset +6 in the control block.                                   *
                                               *            If C = 1 then                                                     *
                                               *            if HA = @SCESC% (£SCESC in MASM) then the ESCAPE key was pressed  *
                                               * or                                                                           *
                                               *            if HA = @SCPRE% (£SCPRE in MASM) then the current task was pre-   *
                                               *            empted.                                                           *
                                               *            DBXY preserved                                                    *
                                               *            Offsets 0 to 5 remain the same.                                   *
                                               ********************************************************************************
                                                               .rwid   longm
+000bb2 fe/b9b2: a0 02 00     ??mxd??? e @T... COP_22          ldy     #$0002
+000bb5 fe/b9b5: b7 05        n?mxd?z? e .....                 lda     [DPCOP_AH],y
+000bb7 fe/b9b7: eb           ??mxd??? e .....                 xba
+000bb8 fe/b9b8: 48           ??mxd??? e .....                 pha
+000bb9 fe/b9b9: ab           ??mxd??? e .....                 plb
+000bba fe/b9ba: ab           ??mxd??? e .....                 plb
+000bbb fe/b9bb: a7 05        ??mxd??? e .....                 lda     [DPCOP_AH]
+000bbd fe/b9bd: 48           ??mxd??? e .....                 pha
+000bbe fe/b9be: a0 04 00     ??mxd??? e .....                 ldy     #$0004
+000bc1 fe/b9c1: b7 05        n?mxd?z? e .....                 lda     [DPCOP_AH],y
+000bc3 fe/b9c3: 48           ??mxd??? e .....                 pha
+000bc4 fe/b9c4: a0 06 00     ??mxd??? e .....                 ldy     #$0006
+000bc7 fe/b9c7: b7 05        n?mxd?z? e .....                 lda     [DPCOP_AH],y
+000bc9 fe/b9c9: 48           ??mxd??? e .....                 pha
+000bca fe/b9ca: aa           ??mxd??? e .....                 tax
+000bcb fe/b9cb: f0 10        ??mxd??? e .....                 beq     LFEB9DD
+000bcd fe/b9cd: c3 03        ??mxd?z? e .....                 cmp     $03,S
+000bcf fe/b9cf: f0 0c        ??mxd??? e .....                 beq     LFEB9DD
+000bd1 fe/b9d1: 90 03        ??mxd?z? e .....                 bcc     LFEB9D6
+000bd3 fe/b9d3: 82 7e 00     ??mxd?zC e ...#.                 brl     LFEBA54

+000bd6 fe/b9d6: a3 03        ??mxd?zc e ....> LFEB9D6         lda     $03,S
+000bd8 fe/b9d8: d0 03        ??mxd??c e .....                 bne     LFEB9DD
+000bda fe/b9da: 82 77 00     ??mxd?Zc e ...#.                 brl     LFEBA54

+000bdd fe/b9dd: 20 7b ea     ??mxd??? e ....> LFEB9DD         jsr     LFEEA7B
+000be0 fe/b9e0: 58           ??mxd??? e .....                 cli
+000be1 fe/b9e1: a3 01        ??mxdi?? e .....                 lda     $01,S
+000be3 fe/b9e3: a8           ??mxdi?? e .....                 tay
+000be4 fe/b9e4: 80 07        ??mxdi?? e ...#.                 bra     LFEB9ED

+000be6 fe/b9e6: a9 07 00     ??mxdi?? e ....> LFEB9E6         lda     #$0007
+000be9 fe/b9e9: 88           n?mxdiz? e .....                 dey
+000bea fe/b9ea: c8           ??mxdi?? e ....> LFEB9EA         iny
+000beb fe/b9eb: 02 00        ??mxdi?? e ....> LFEB9EB         cop     COP_00_OPWRC
+000bed fe/b9ed: da           ??mxdi?? e ....> LFEB9ED         phx
+000bee fe/b9ee: a9 00 00     ??mxdi?? e .....                 lda     #$0000
+000bf1 fe/b9f1: eb           n?mxdiZ? e .....                 xba
+000bf2 fe/b9f2: a9 03 00     ??mxdi?? e .....                 lda     #$0003
+000bf5 fe/b9f5: a2 02 00     n?mxdiz? e .....                 ldx     #$0002
+000bf8 fe/b9f8: 22 b0 ff 00  n?mxdiz? e .....                 jsl     __EV
+000bfc fe/b9fc: fa           ??mxdi?? e .....                 plx
+000bfd fe/b9fd: b0 6d        ??mxdi?? e .....                 bcs     LFEBA6C
+000bff fe/b9ff: 02 04        ??mxdi?c e .....                 cop     COP_04_OPRDC
+000c01 fe/ba01: b0 69        ??mxdi?c e ..!..                 bcs     LFEBA6C
+000c03 fe/ba03: c9 7f 00     ??mxdi?c e .....                 cmp     #$007f
+000c06 fe/ba06: d0 08        ??mxdi?? e .....                 bne     LFEBA10
+000c08 fe/ba08: c0 00 00     ??mxdiZ? e .....                 cpy     #$0000
+000c0b fe/ba0b: f0 e0        ??mxdi?? e .....                 beq     LFEB9ED
+000c0d fe/ba0d: 88           ??mxdiz? e .....                 dey
+000c0e fe/ba0e: 80 db        ??mxdi?? e ...#.                 bra     LFEB9EB

+000c10 fe/ba10: c9 18 00     ??mxdiz? e ....> LFEBA10         cmp     #$0018
+000c13 fe/ba13: f0 05        ??mxdi?? e .....                 beq     LFEBA1A
+000c15 fe/ba15: c9 15 00     ??mxdiz? e .....                 cmp     #$0015
+000c18 fe/ba18: d0 0d        ??mxdi?? e .....                 bne     LFEBA27
+000c1a fe/ba1a: 98           ??mxdiZ? e ....> LFEBA1A         tya
+000c1b fe/ba1b: f0 d0        ??mxdi?? e .....                 beq     LFEB9ED
+000c1d fe/ba1d: a9 7f 00     ??mxdiz? e .....                 lda     #$007f
+000c20 fe/ba20: 02 00        ??mxdiz? e ....> LFEBA20         cop     COP_00_OPWRC
+000c22 fe/ba22: 88           ??mxdiz? e .....                 dey
+000c23 fe/ba23: d0 fb        ??mxdi?? e .....                 bne     LFEBA20
+000c25 fe/ba25: 80 c6        ??mxdiZ? e ...#.                 bra     LFEB9ED

+000c27 fe/ba27: c9 0e 00     ??mxdiz? e ....> LFEBA27         cmp     #$000e
+000c2a fe/ba2a: f0 bf        ??mxdi?? e .....                 beq     LFEB9EB
+000c2c fe/ba2c: c9 0f 00     ??mxdiz? e .....                 cmp     #$000f
+000c2f fe/ba2f: f0 ba        ??mxdi?? e .....                 beq     LFEB9EB
+000c31 fe/ba31: c9 0d 00     ??mxdiz? e .....                 cmp     #$000d
+000c34 fe/ba34: f0 05        ??mxdi?? e .....                 beq     LFEBA3B
+000c36 fe/ba36: c9 20 00     ??mxdiz? e .....                 cmp     #$0020
+000c39 fe/ba39: 90 ab        ??mxdi?? e .....                 bcc     LFEB9E6
+000c3b fe/ba3b: e2 20        ??mxdi?? e ....> LFEBA3B         sep     #$20
                                                               .rwid   shortm
+000c3d fe/ba3d: 93 05        ??Mxdi?? e .....                 sta     ($05,S),y
+000c3f fe/ba3f: c2 20        ??Mxdi?? e .....                 rep     #$20
                                                               .rwid   longm
+000c41 fe/ba41: c9 0d 00     ??mxdi?? e .....                 cmp     #$000d
+000c44 fe/ba44: f0 14        ??mxdi?? e .....                 beq     LFEBA5A
+000c46 fe/ba46: 48           ??mxdiz? e .....                 pha
+000c47 fe/ba47: 98           ??mxdiz? e .....                 tya
+000c48 fe/ba48: c3 05        ??mxdi?? e .....                 cmp     $05,S
+000c4a fe/ba4a: 68           ??mxdi?? e .....                 pla
+000c4b fe/ba4b: b0 99        ??mxdi?? e .....                 bcs     LFEB9E6
+000c4d fe/ba4d: c9 20 00     ??mxdi?c e .....                 cmp     #$0020
+000c50 fe/ba50: 90 9b        ??mxdi?? e .....                 bcc     LFEB9ED
+000c52 fe/ba52: 80 96        ??mxdi?C e ...#.                 bra     LFEB9EA

+000c54 fe/ba54: a2 ff ff     ??mxd??? e ....> LFEBA54         ldx     #$ffff
+000c57 fe/ba57: 38           n?mxd?z? e .....                 sec
+000c58 fe/ba58: 80 1c        n?mxd?zC e ...#.                 bra     LFEBA76

+000c5a fe/ba5a: 02 03        ??mxdiZ? e ....> LFEBA5A         cop     COP_03_OPNLI
+000c5c fe/ba5c: 48           ??mxdiZ? e .....                 pha
+000c5d fe/ba5d: a9 00 00     ??mxdiZ? e .....                 lda     #$0000
+000c60 fe/ba60: eb           n?mxdiZ? e .....                 xba
+000c61 fe/ba61: a9 01 00     ??mxdi?? e .....                 lda     #$0001
+000c64 fe/ba64: a2 02 00     n?mxdiz? e .....                 ldx     #$0002
+000c67 fe/ba67: 22 b0 ff 00  n?mxdiz? e .....                 jsl     __EV
+000c6b fe/ba6b: 68           ??mxdi?? e .....                 pla
+000c6c fe/ba6c: 29 ff 00     ??mxdi?? e ....> LFEBA6C         and     #$00ff
+000c6f fe/ba6f: aa           n?mxdi?? e .....                 tax
+000c70 fe/ba70: 98           ??mxdi?? e .....                 tya
+000c71 fe/ba71: a0 06 00     ??mxdi?? e .....                 ldy     #$0006
+000c74 fe/ba74: 97 05        n?mxdiz? e .....                 sta     [DPCOP_AH],y
+000c76 fe/ba76: 86 05        n?mxd?z? e ....> LFEBA76         stx     DPCOP_AH
+000c78 fe/ba78: 7a           n?mxd?z? e .....                 ply
+000c79 fe/ba79: 7a           ??mxd??? e .....                 ply
+000c7a fe/ba7a: 7a           ??mxd??? e .....                 ply
+000c7b fe/ba7b: 6b           ??mxd??? e ...#.                 rtl

+000c7c fe/ba7c: 4b           ??mxd??? e @T...                 phk
+000c7d fe/ba7d: 20 d4 f5     ??mxd??? e .....                 jsr     CheckEOF
+000c80 fe/ba80: b0 15        ??mxd??? e .....                 bcs     LFEBA97
+000c82 fe/ba82: 4a           ??mxd??c e .....                 lsr     A
+000c83 fe/ba83: 90 12        n?mxd??? e .....                 bcc     LFEBA97
+000c85 fe/ba85: 02 26        n?mxd??C e .....                 cop     COP_26_OPBHA
+000c87 fe/ba87: 45 6e 64 20+            .T...                 .zstr   “End of file”
+000c93 fe/ba93: a2 01 00     n?mxd??C e .....                 ldx     #$0001
+000c96 fe/ba96: 38           n?mxd?zC e .....                 sec
+000c97 fe/ba97: 6b           ??mxd??? e ...#> LFEBA97         rtl

                                               ********************************************************************************
                                               * COP 0A - OPBGT - BGET                                                        *
                                               *                                                                              *
                                               * Action: Read one byte from an open device or file. The channel must          *
                                               * previously have been opened using OPOPN.                                     *
                                               *                                                                              *
                                               * On entry: Y contains the handle from OPOPN.                                  *
                                               * On exit:  A contains the byte read from the file.                            *
                                               *           if C = I then an enor has occurred, and A is invalid.              *
                                               *           No registers preserved                                             *
                                               ********************************************************************************
+000c98 fe/ba98: 4b           ??mxd??? e @T... COP_0A          phk
+000c99 fe/ba99: 20 a2 f5     ??mxd??? e .....                 jsr     doBGET
+000c9c fe/ba9c: 85 05        ??mxd??? e .....                 sta     DPCOP_AH
+000c9e fe/ba9e: b0 11        ??mxd??? e .....                 bcs     retCopXBHA
+000ca0 fe/baa0: 6b           ??mxd??c e ...#.                 rtl

                                               ********************************************************************************
                                               * COP 0B - OPBPT - BPUT                                                        *
                                               *                                                                              *
                                               * Action: Write one byte to an open file or device. The channel must           *
                                               * previously have been opened using OPOPN.                                     *
                                               *                                                                              *
                                               * On entry: Y contains the file handle from OPOPN.                             *
                                               *           A contains the byte to be written.                                 *
                                               * On exit:  No registers preserved                                             *
                                               ********************************************************************************
+000ca1 fe/baa1: 4b           ??mxd??? e @T... COP_0B          phk
+000ca2 fe/baa2: 20 bb f5     ??mxd??? e .....                 jsr     doBPUT
+000ca5 fe/baa5: b0 0a        ??mxd??? e .....                 bcs     retCopXBHA
+000ca7 fe/baa7: 6b           ??mxd??c e ...#.                 rtl

                                               ********************************************************************************
                                               * COP 44 - OPOPN - open device driver                                          *
                                               * Action: This call opens a device driver.                                     *
                                               * On entry: BHA points to the name (with colon). terminated by CR(&0D).        *
                                               *           Y = &40 for input                                                  *
                                               *           Y = &80 for output                                                 *
                                               *           Y = &C0 for update                                                 *
                                               * On exit:  C = 0 means that the device driver is open and Y = handle.         *
                                               *           If C= I then the device failed to open, the error code is in X     *
                                               *           and BHA points to a zeroterminated error message.                  *
                                               *           D preserved                                                        *
                                               *                                                                              *
                                               * Not documented here is the option to pass Y=$60 to open a device handle and  *
                                               * bypass auto-config - this is used internally                                 *
                                               ********************************************************************************
+000ca8 fe/baa8: 4b           ??mxd??? e @T... COP_44          phk
+000ca9 fe/baa9: 20 ff f5     ??mxd??? e .....                 jsr     doOPOPN_openFile
+000cac fe/baac: b0 03        ??mxd??? e .....                 bcs     retCopXBHA
+000cae fe/baae: 84 01        ??mxd??c e .....                 sty     DPCOP_Y
+000cb0 fe/bab0: 6b           ??mxd??c e ...#.                 rtl

+000cb1 fe/bab1: 86 03        ??mxd??? e ....> retCopXBHA      stx     DPCOP_X
+000cb3 fe/bab3: 85 05        ??mxd??? e .....                 sta     DPCOP_AH
+000cb5 fe/bab5: e2 20        ??mxd??? e .....                 sep     #$20
                                                               .rwid   shortm
+000cb7 fe/bab7: 8b           ??Mxd??? e .....                 phb
+000cb8 fe/bab8: 68           ??Mxd??? e .....                 pla
+000cb9 fe/bab9: 85 07        ??Mxd??? e .....                 sta     DPCOP_B
+000cbb fe/babb: c2 20        ??Mxd??? e .....                 rep     #$20
                                                               .rwid   longm
+000cbd fe/babd: 6b           ??mxd??? e ...#.                 rtl

                                               ********************************************************************************
                                               * COP 45 - OPCLS - close device driver                                         *
                                               * Action: This call closes a device driver which has been opened using OPOPN.  *
                                               *                                                                              *
                                               * On entry: Y = handle allocated by OPOPN.                                     *
                                               * On exit:  If C = 0 then driver is closed.                                    *
                                               *           If C = 1 then the driver close failed, X = error code and BHA      *
                                               *           points to a zero-terminated error message.                         *
                                               *           D preserved                                                        *
                                               ********************************************************************************
+000cbe fe/babe: 4b           ??mxd??? e @T... COP_45          phk
+000cbf fe/babf: 20 a0 f7     ??mxd??? e .....                 jsr     closeFile
+000cc2 fe/bac2: b0 ed        ??mxd??? e .....                 bcs     retCopXBHA
+000cc4 fe/bac4: 6b           ??mxd??c e ...#.                 rtl

                                               ********************************************************************************
                                               * COP 46 - OPEND - test for end of file                                        *
                                               * Action: This call will test an open file to see if the end of file has been  *
                                               * reached.                                                                     *
                                               *                                                                              *
                                               * On entry: Y contains the file handle returned by OPOPN.                      *
                                               * On exit:  If C = 0 then                                                      *
                                               *             If lsb A = 0 the end of file has not been reached,               *
                                               *             If lsb A = 1 then the end of file has been reached.              *
                                               *           Note: only the least significant bit of A (or HA) need be tested.  *
                                               *           If C = 1 then the call failed.                                     *
                                               *           X = error code (X = 0 means "Not implemented on this driver").     *
                                               *           BHA points to a zero-terminated error message                      *
                                               *           DAXY preserved                                                     *
                                               ********************************************************************************
+000cc5 fe/bac5: 4b           ??mxd??? e @T... COP_46          phk
+000cc6 fe/bac6: 20 d4 f5     ??mxd??? e .....                 jsr     CheckEOF
+000cc9 fe/bac9: b0 e6        ??mxd??? e .....                 bcs     retCopXBHA
+000ccb fe/bacb: 85 05        ??mxd??c e .....                 sta     DPCOP_AH
+000ccd fe/bacd: 6b           ??mxd??c e ...#.                 rtl

                                               ********************************************************************************
                                               * COP 4B - OPVH - validate handle                                              *
                                               *                                                                              *
                                               * Action: Checks whether a handle is conect for the given device name.         *
                                               * On entry: BHA points to the zero-terminated device name.                     *
                                               *           Y = handle                                                         *
                                               * On exit:  If C = 0 then handle valid.                                        *
                                               *           If C = 1 then handle not valid.                                    *
                                               *           DY preserved                                                       *
                                               ********************************************************************************
+000cce fe/bace: c0 00 01     ??mxd??? e @T... COP_4B          cpy     #$0100
+000cd1 fe/bad1: 90 2b        ??mxd??? e .....                 bcc     @retNotAHandle
+000cd3 fe/bad3: bb           ??mxd??C e .....                 tyx
+000cd4 fe/bad4: bf 0b 00 00  ??mxd??C e .....                 ldal    f:$00000b,x
+000cd8 fe/bad8: 29 ff 00     ??mxd??C e .....                 and     #$00ff
+000cdb fe/badb: 49 10 00     n?mxd??C e .....                 eor     #$0010
+000cde fe/bade: c9 01 00     ??mxd??C e .....                 cmp     #$0001
+000ce1 fe/bae1: b0 1b        ??mxd??? e .....                 bcs     @retNotAHandle
+000ce3 fe/bae3: bf 03 00 00  ??mxd??c e .....                 ldal    f:DPCOP_X,x
+000ce7 fe/bae7: 48           ??mxd??c e .....                 pha
+000ce8 fe/bae8: a5 05        ??mxd??c e .....                 lda     DPCOP_AH
+000cea fe/baea: 4b           ??mxd??c e .....                 phk
+000ceb fe/baeb: 20 28 f8     ??mxd??c e .....                 jsr     getFSTrampolineFromprefix
+000cee fe/baee: 68           ??mxd??? e .....                 pla
+000cef fe/baef: b0 1e        ??mxd??? e .....                 bcs     @retBadModule
+000cf1 fe/baf1: 70 1c        ??mxd??c e .....                 bvs     @retBadModule
+000cf3 fe/baf3: 48           ?vmxd??c e .....                 pha
+000cf4 fe/baf4: 8a           ?vmxd??c e .....                 txa
+000cf5 fe/baf5: 43 01        ?vmxd??c e .....                 eor     $01,S
+000cf7 fe/baf7: c9 01 00     ?vmxd??c e .....                 cmp     #$0001
+000cfa fe/bafa: 68           ?vmxd??? e .....                 pla
+000cfb fe/bafb: b0 12        ?vmxd??? e .....                 bcs     @retBadModule
+000cfd fe/bafd: 6b           ?vmxd??c e ...#.                 rtl

+000cfe fe/bafe: 02 26        ??mxd??? e ....> @retNotAHandle  cop     COP_26_OPBHA
+000d00 fe/bb00: 4e 6f 74 20+            .T...                 .zstr   “Not a handle”
+000d0d fe/bb0d: 80 0d        ??mxd??? e ...#.                 bra     @retsecX1

+000d0f fe/bb0f: 02 26        ??mxd??? e ....> @retBadModule   cop     COP_26_OPBHA
+000d11 fe/bb11: 42 61 64 20+            .T...                 .zstr   “Bad module”
+000d1c fe/bb1c: a2 01 00     ??mxd??? e ....> @retsecX1       ldx     #$0001
+000d1f fe/bb1f: 38           n?mxd?z? e .....                 sec
+000d20 fe/bb20: 82 8e ff     n?mxd?zC e ...#.                 brl     retCopXBHA

                                               ********************************************************************************
                                               * COP 38 - OPAH - allocate 16 bit handle                                       *
                                               * Action: This call allocates a 16 bit handle lo the device whose name is      *
                                               * pointed to by BHA. The handle is returned in Y.                              *
                                               *                                                                              *
                                               * On entry: BHA points to the device name. Device drivers are called with a    *
                                               *           colon appended to the module name to distinguish them from files.  *
                                               *           For example, to allocate a handle for the driver module MODEM,     *
                                               *           BHA must point to "MODEM:"                                         *
                                               *           Y = 0.                                                             *
                                               *                                                                              *
                                               * On exit: If C = 0 then handle was allocated and Y s handle.                  *
                                               *          If C = 1 then the call failed lo allocate a handle.                 *
                                               *          No registers preserved                                              *
                                               ********************************************************************************
+000d23 fe/bb23: 4b           ??mxd??? e @T... COP_38          phk
+000d24 fe/bb24: 20 28 f8     ??mxd??? e .....                 jsr     getFSTrampolineFromprefix
+000d27 fe/bb27: b0 16        ??mxd??? e .....                 bcs     @retsec
+000d29 fe/bb29: 70 14        ??mxd??c e .....                 bvs     @retsec
+000d2b fe/bb2b: da           ?vmxd??c e .....                 phx
+000d2c fe/bb2c: a0 fe fd     ?vmxd??c e .....                 ldy     #$fdfe
+000d2f fe/bb2f: a9 10 00     nvmxd?zc e .....                 lda     #HND_type_10_CBHN
+000d32 fe/bb32: 20 e4 f8     nvmxd?zc e .....                 jsr     LFEF8E4
+000d35 fe/bb35: 68           ??mxd??? e .....                 pla
+000d36 fe/bb36: b0 07        ??mxd??? e .....                 bcs     @retsec
+000d38 fe/bb38: 9f 03 00 00  ??mxd??c e .....                 stal    f:$000003,x
+000d3c fe/bb3c: 86 01        ??mxd??c e .....                 stx     DPCOP_Y
+000d3e fe/bb3e: 6b           ??mxd??c e ...#.                 rtl

+000d3f fe/bb3f: 64 03        ??mxd??? e ....> @retsec         stz     DPCOP_X
+000d41 fe/bb41: 38           ??mxd??? e .....                 sec
+000d42 fe/bb42: 6b           ??mxd??C e ...#.                 rtl

                                               ********************************************************************************
                                               * COP 39 - OPFH - free handle                                                  *
                                               *                                                                              *
                                               * Action: This call frees the handle allocated by OPAH.                        *
                                               *                                                                              *
                                               * On entry: Y = handle.                                                        *
                                               * On exit:  If C = 0 then the handle is freed.                                 *
                                               *           If C = 1 then the call failed to free the handle.                  *
                                               *           No registers preserved                                             *
                                               ********************************************************************************
+000d43 fe/bb43: a6 01        ??mxd??? e @T... COP_39          ldx     DPCOP_Y
+000d45 fe/bb45: a0 fe fd     ??mxd??? e .....                 ldy     #$fdfe
+000d48 fe/bb48: 20 2c f9     n?mxd?z? e .....                 jsr     LFEF92C
+000d4b fe/bb4b: 6b           ??mxd??? e ...#.                 rtl

                                               ********************************************************************************
                                               * COP 3A - OPCUH - call device driver using handle                             *
                                               *                                                                              *
                                               * Action: Calls the device driver whose handle was allocated by OPAH.          *
                                               *                                                                              *
                                               * On entry: Y = handle.                                                        *
                                               *           Other registers and/br data as required by device driver.          *
                                               * On exit:  HAXYB registers as returned from device driver.                    *
                                               *           If C = 0 then the codes returned from driver are valid.            *
                                               *           If C = 1 then either the handle was invalid, or the codes returned *
                                               *                                                                              *
                                               *           by the driver are invalid.                                         *
                                               *           D preserved                                                        *
                                               *                                                                              *
                                               * QRY - caller's X is used but not documented?                                 *
                                               ********************************************************************************
+000d4c fe/bb4c: a6 03        ??mxd??? e @T... COP_3A          ldx     DPCOP_X
+000d4e fe/bb4e: 4b           ??mxd??? e .....                 phk
+000d4f fe/bb4f: 20 e9 c7     ??mxd??? e .....                 jsr     callDevHandle
+000d52 fe/bb52: c2 30        ??mxd??? e .....                 rep     #$30
+000d54 fe/bb54: 85 05        ??mxd??? e .....                 sta     DPCOP_AH
+000d56 fe/bb56: 86 03        ??mxd??? e .....                 stx     DPCOP_X
+000d58 fe/bb58: 84 01        ??mxd??? e .....                 sty     DPCOP_Y
+000d5a fe/bb5a: e2 20        ??mxd??? e .....                 sep     #$20
                                                               .rwid   shortm
+000d5c fe/bb5c: 8b           ??Mxd??? e .....                 phb
+000d5d fe/bb5d: 68           ??Mxd??? e .....                 pla
+000d5e fe/bb5e: 85 07        ??Mxd??? e .....                 sta     DPCOP_B
+000d60 fe/bb60: 6b           ??Mxd??? e ...#.                 rtl

                                               ********************************************************************************
                                               * COP 36 - OPNLU - name lookup                                                 *
                                               *                                                                              *
                                               * Action: This call checks a list of names to see if a qiecific name is        *
                                               * present. If it is then the offset of the name from the start of the list is  *
                                               * given in Y.                                                                  *
                                               *                                                                              *
                                               * On entry: The 4 byte address at D,0 points to the start of the name list.    *
                                               *           The 4 byte address at D,4 points to the name to be located.        *
                                               *           If Y = 0 then the slash "/" character is used as a delimiter.      *
                                               *           If Y <> 0 then the character whose ASCII code is in Y is used as   *
                                               *           a delimiter.                                                       *
                                               * On exit:  If C = 0 then the name is in the list at offset Y from the start   *
                                               *           If C = 1 then the name is not in the list                          *
                                               *           No registers preserved                                             *
                                               *                                                                              *
                                               * TODO: Documentation correction the actual input addresses are D,X and D,X+4  *
                                               ********************************************************************************
                                                               .rwid   longm
+000d61 fe/bb61: 0b           ??mxd??? e @T... COP_36          phd
+000d62 fe/bb62: a5 08        ??mxd??? e .....                 lda     DPCOP_DP
+000d64 fe/bb64: 18           ??mxd??? e .....                 clc
+000d65 fe/bb65: 65 03        ??mxd??c e .....                 adc     DPCOP_X
+000d67 fe/bb67: 5b           ??mxd??? e .....                 tcd
+000d68 fe/bb68: 4b           ??mxd??? e .....                 phk
+000d69 fe/bb69: 20 ed f2     ??mxd??? e .....                 jsr     doNameSearch
+000d6c fe/bb6c: 2b           ??mxd??? e .....                 pld
+000d6d fe/bb6d: 84 01        ??mxd??? e .....                 sty     DPCOP_Y
+000d6f fe/bb6f: 6b           ??mxd??? e ...#.                 rtl

                                               ********************************************************************************
                                               * Action: Adds a module to the list of modules held by the MOS.                *
                                               *                                                                              *
                                               * On entry: Y holds the handle of the memory pool in which the module has been *
                                               *           loaded.                                                            *
                                               * On exit:  C = 0 means that the module was added to the list.                 *
                                               *           C = 1 means that the module was not added to the list.             *
                                               *           No registers preserved                                             *
                                               *                                                                              *
                                               * TODO: DOCO: Further to above when C = 1, X = 1 BHA contains a reason string  *
                                               ********************************************************************************
+000d70 fe/bb70: a2 0e 00     ??mxd??? e @T... COP_35          ldx     #$000e
+000d73 fe/bb73: 22 8c ff 00  n?mxd?z? e .....                 jsl     __MM
+000d77 fe/bb77: b0 26        ??mxd??? e .....                 bcs     LFEBB9F
+000d79 fe/bb79: 0b           ??mxd??c e .....                 phd
+000d7a fe/bb7a: 8b           ??mxd??c e .....                 phb
+000d7b fe/bb7b: 8b           ??mxd??c e .....                 phb
+000d7c fe/bb7c: 48           ??mxd??c e .....                 pha
+000d7d fe/bb7d: 62 6a 35     ??mxd??c e .....                 per     tblLFEF0E1+9
+000d80 fe/bb80: 4b           ??mxd??c e .....                 phk
                                                               .dbank  K (auto)
+000d81 fe/bb81: ab           ??mxd??c e .....                 plb
+000d82 fe/bb82: 3b           ??mxd??c e .....                 tsc
+000d83 fe/bb83: 5b           ??mxd??c e .....                 tcd
+000d84 fe/bb84: 20 2d ef     ??mxd??c e .....                 jsr     LFEEF2D
+000d87 fe/bb87: b0 0b        ??mxd??? e .....                 bcs     LFEBB94
+000d89 fe/bb89: fa           ??mxd??c e .....                 plx
+000d8a fe/bb8a: da           ??mxd??c e .....                 phx
+000d8b fe/bb8b: 20 9d ef     ??mxd??c e .....                 jsr     LFEEF9D
+000d8e fe/bb8e: 68           ??mxd??? e .....                 pla
+000d8f fe/bb8f: 68           ??mxd??? e .....                 pla
+000d90 fe/bb90: 68           ??mxd??? e .....                 pla
+000d91 fe/bb91: 2b           ??mxd??? e .....                 pld
+000d92 fe/bb92: 18           ??mxd??? e .....                 clc
+000d93 fe/bb93: 6b           ??mxd??c e ...#.                 rtl

+000d94 fe/bb94: 68           ??mxd??C e ....> LFEBB94         pla
+000d95 fe/bb95: 68           ??mxd??C e .....                 pla
+000d96 fe/bb96: 68           ??mxd??C e .....                 pla
+000d97 fe/bb97: 2b           ??mxd??C e .....                 pld
+000d98 fe/bb98: 20 94 c8     ??mxd??C e .....                 jsr     cop26BadModuleX1
+000d9b fe/bb9b: 38           ??mxd??? e .....                 sec
+000d9c fe/bb9c: 82 12 ff     ??mxd??C e ...#.                 brl     retCopXBHA

+000d9f fe/bb9f: 20 a3 c8     ??mxd??C e ....> LFEBB9F         jsr     cop26BadHandleX1
+000da2 fe/bba2: 38           ??mxd??? e .....                 sec
+000da3 fe/bba3: 82 0b ff     ??mxd??C e ...#.                 brl     retCopXBHA

                                               ********************************************************************************
                                               * COP 34 - OPRMI - read module Info                                            *
                                               * Action: Read information about the module whose name is pointed to by BHA.   *
                                               * The entry address can be read, or the flag and code type bytes.              *
                                               *                                                                              *
                                               * On entry: BHA points to module name                                          *
                                               *           X = hint (returned by OPSLM) or 0.                                 *
                                               *           Y = 0 to read entry address (address of BRL).                      *
                                               *           Y = 2 to read the code type bytes.                                 *
                                               *           Y = 4 to read module version.                                      *
                                               *           Note: this COP must be called in 16-bit XY mode to read the        *
                                               *           module-type flags.                                                 *
                                               * On exit:  C = 0 means that the module was found and module information read. *
                                               *           C = 1 means that the module was not found.                         *
                                               *           If C = 0 and Y = 0 then BHA contains the entry address of the      *
                                               *           module, this being the address of the BRL, the first byte of       *
                                               *           the module header.                                                 *
                                               *           If C = 0 and Y = 2 then HA contains code type bytes 0 and 1, X     *
                                               *           contains code type bytes 2 and 3.                                  *
                                               *           If C = 0 and Y = 4 then HA = version.                              *
                                               *           D preserved                                                        *
                                               *                                                                              *
                                               ********************************************************************************
+000da6 fe/bba6: a2 00 00     ??mxd??? e @T... COP_34          ldx     #$0000
+000da9 fe/bba9: a0 00 00     n?mxd?Z? e .....                 ldy     #$0000
+000dac fe/bbac: 4b           n?mxd?Z? e .....                 phk
+000dad fe/bbad: 20 31 f2     n?mxd?Z? e .....                 jsr     findModuleByName_Q
+000db0 fe/bbb0: b0 36        ??mxd??? e .....                 bcs     LFEBBE8
+000db2 fe/bbb2: d4 01        ??mxd??c e .....                 pei     (DPCOP_Y)
+000db4 fe/bbb4: 7b           ??mxd??c e .....                 tdc
+000db5 fe/bbb5: 18           ??mxd??c e .....                 clc
+000db6 fe/bbb6: 69 05 00     ??mxd??c e .....                 adc     #$0005
+000db9 fe/bbb9: 5b           ??mxd??? e .....                 tcd
+000dba fe/bbba: 4b           ??mxd??? e .....                 phk
+000dbb fe/bbbb: 20 b7 f2     ??mxd??? e .....                 jsr     LFEF2B7
+000dbe fe/bbbe: fa           ??mxd??? e .....                 plx
+000dbf fe/bbbf: f0 17        ??mxd??? e .....                 beq     LFEBBD8
+000dc1 fe/bbc1: 7b           ??mxd?z? e .....                 tdc
+000dc2 fe/bbc2: 3a           ??mxd??? e .....                 dec     A
+000dc3 fe/bbc3: 3a           ??mxd??? e .....                 dec     A
+000dc4 fe/bbc4: 5b           ??mxd??? e .....                 tcd
+000dc5 fe/bbc5: e0 02 00     ??mxd??? e .....                 cpx     #$0002
+000dc8 fe/bbc8: d0 10        ??mxd??? e .....                 bne     LFEBBDA
+000dca fe/bbca: a0 0a 00     ??mxd?Z? e .....                 ldy     #$000a
+000dcd fe/bbcd: b7 02        n?mxd?z? e .....                 lda     [DPCOP_Y+1],y
+000dcf fe/bbcf: aa           ??mxd??? e .....                 tax
+000dd0 fe/bbd0: 88           ??mxd??? e .....                 dey
+000dd1 fe/bbd1: 88           ??mxd??? e .....                 dey
+000dd2 fe/bbd2: b7 02        ??mxd??? e .....                 lda     [DPCOP_Y+1],y
+000dd4 fe/bbd4: 86 00        ??mxd??? e .....                 stx     $00
+000dd6 fe/bbd6: 85 02        ??mxd??? e .....                 sta     DPCOP_Y+1
+000dd8 fe/bbd8: 18           ??mxd??? e ....> LFEBBD8         clc
+000dd9 fe/bbd9: 6b           ??mxd??c e ...#.                 rtl

+000dda fe/bbda: e0 04 00     ??mxd?z? e ....> LFEBBDA         cpx     #$0004
+000ddd fe/bbdd: d0 09        ??mxd??? e .....                 bne     LFEBBE8
+000ddf fe/bbdf: a0 06 00     ??mxd?Z? e .....                 ldy     #$0006
+000de2 fe/bbe2: b7 02        n?mxd?z? e .....                 lda     [DPCOP_Y+1],y
+000de4 fe/bbe4: 85 02        ??mxd??? e .....                 sta     DPCOP_Y+1
+000de6 fe/bbe6: 18           ??mxd??? e .....                 clc
+000de7 fe/bbe7: 6b           ??mxd??c e ...#.                 rtl

+000de8 fe/bbe8: 38           ??mxd??? e ....> LFEBBE8         sec
+000de9 fe/bbe9: 6b           ??mxd??C e ...#.                 rtl

                                               ********************************************************************************
                                               * COP 33 - OPSLM - scan list of modules                                        *
                                               * Action: This call returns with BHA pointing to a location containing the     *
                                               * name of the next module in the list X and Y return hints used by the         *
                                               * operating system to find this module quickly.                                *
                                               *                                                                              *
                                               * On entry: BHA either points to the name of the previous module, or to a free *
                                               *                                                                              *
                                               *           area of memory containing a number of spaces terminated by zero    *
                                               * (&00).                                                                       *
                                               *           In the latter case, BHA is preserved, and the name of the first    *
                                               *           module in the list is written to the location pointed to by BHA.   *
                                               *           The first name in the list is either truncated or padded with      *
                                               *           spaces to fit the number of spaces allocated on entry.             *
                                               *           X = hint (retunted by previous OPSLM), or 0.                       *
                                               *           Y = hint (returned by previous OPSLM), or 0.                       *
                                               *                                                                              *
                                               * On exit:  BHA points to the name of the next module.                         *
                                               *           X = hint (number used by the operating system).                    *
                                               *           Y = hint (number used by the opeiatmg system).                     *
                                               *           No registers preserved                                             *
                                               *                                                                              *
                                               * To call:                                                                     *
                                               * Example:                                                                     *
                                               * COP                                                                          *
                                               * EQUB@OPSLU% from BASIC                                                       *
                                               ********************************************************************************
+000dea fe/bbea: 8b           ??mxd??? e @T... COP_33          phb
+000deb fe/bbeb: 48           ??mxd??? e .....                 pha
+000dec fe/bbec: 8b           ??mxd??? e .....                 phb
+000ded fe/bbed: 48           ??mxd??? e .....                 pha
+000dee fe/bbee: 3b           ??mxd??? e .....                 tsc
+000def fe/bbef: 1a           ??mxd??? e .....                 inc     A
+000df0 fe/bbf0: 5b           ??mxd??? e .....                 tcd
+000df1 fe/bbf1: a0 00 00     ??mxd??? e .....                 ldy     #$0000
+000df4 fe/bbf4: b7 03        n?mxd?Z? e .....                 lda     [DPCOP_X],y
+000df6 fe/bbf6: 20 f7 f4     ??mxd??? e .....                 jsr     checkValidModnameChar
+000df9 fe/bbf9: af 0e fe 00  ??mxd??? e .....                 ldal    f:B0LST_MODULES_QRY
+000dfd fe/bbfd: b0 12        ??mxd??? e .....                 bcs     LFEBC11
+000dff fe/bbff: a5 03        ??mxd??c e .....                 lda     DPCOP_X
+000e01 fe/bc01: a2 00 00     ??mxd??c e .....                 ldx     #$0000
+000e04 fe/bc04: a0 00 00     n?mxd?Zc e .....                 ldy     #$0000
+000e07 fe/bc07: 4b           n?mxd?Zc e .....                 phk
+000e08 fe/bc08: 20 31 f2     n?mxd?Zc e .....                 jsr     findModuleByName_Q
+000e0b fe/bc0b: b0 67        ??mxd??? e .....                 bcs     LFEBC74
+000e0d fe/bc0d: bf 00 00 00  ??mxd??c e .....                 ldal    f:$000000,x
+000e11 fe/bc11: c9 0e fe     ??mxd??? e ....> LFEBC11         cmp     #$fe0e
+000e14 fe/bc14: f0 5e        ??mxd??? e .....                 beq     LFEBC74
+000e16 fe/bc16: aa           ??mxd?z? e .....                 tax
+000e17 fe/bc17: 4b           ??mxd??? e .....                 phk
+000e18 fe/bc18: 20 b7 f2     ??mxd??? e .....                 jsr     LFEF2B7
+000e1b fe/bc1b: a0 0e 00     ??mxd??? e .....                 ldy     #$000e
+000e1e fe/bc1e: 20 43 f3     n?mxd?z? e .....                 jsr     LFEF343
+000e21 fe/bc21: a0 ff ff     ??mxd??? e .....                 ldy     #$ffff
+000e24 fe/bc24: c8           ??mxd??? e ....> LFEBC24         iny
+000e25 fe/bc25: 30 4d        ??mxd??? e .....                 bmi     LFEBC74
+000e27 fe/bc27: b7 00        n?mxd??? e .....                 lda     [$00],y
+000e29 fe/bc29: 29 ff 00     ??mxd??? e .....                 and     #$00ff
+000e2c fe/bc2c: c9 2f 00     n?mxd??? e .....                 cmp     #$002f
+000e2f fe/bc2f: f0 05        ??mxd??? e .....                 beq     LFEBC36
+000e31 fe/bc31: c9 20 00     ??mxd?z? e .....                 cmp     #$0020
+000e34 fe/bc34: b0 ee        ??mxd??? e .....                 bcs     LFEBC24
+000e36 fe/bc36: bb           ??mxd??? e ....> LFEBC36         tyx
+000e37 fe/bc37: 88           ??mxd??? e ....> LFEBC37         dey
+000e38 fe/bc38: 30 0a        ??mxd??? e .....                 bmi     LFEBC44
+000e3a fe/bc3a: b7 03        n?mxd??? e .....                 lda     [DPCOP_X],y
+000e3c fe/bc3c: 29 ff 00     ??mxd??? e .....                 and     #$00ff
+000e3f fe/bc3f: c9 20 00     n?mxd??? e .....                 cmp     #$0020
+000e42 fe/bc42: b0 f3        ??mxd??? e .....                 bcs     LFEBC37
+000e44 fe/bc44: a0 00 00     ??mxd??? e ....> LFEBC44         ldy     #$0000
+000e47 fe/bc47: 98           ??mxd??? e ....> LFEBC47         tya
+000e48 fe/bc48: da           ??mxd??? e .....                 phx
+000e49 fe/bc49: c3 01        ??mxd??? e .....                 cmp     $01,S
+000e4b fe/bc4b: fa           ??mxd??? e .....                 plx
+000e4c fe/bc4c: b0 0b        ??mxd??? e .....                 bcs     LFEBC59
+000e4e fe/bc4e: e2 20        ??mxd??c e .....                 sep     #$20
                                                               .rwid   shortm
+000e50 fe/bc50: b7 00        ??Mxd??c e .....                 lda     [$00],y
+000e52 fe/bc52: 97 03        ??Mxd??c e .....                 sta     [DPCOP_X],y
+000e54 fe/bc54: c2 20        ??Mxd??c e .....                 rep     #$20
                                                               .rwid   longm
+000e56 fe/bc56: c8           ??mxd??c e .....                 iny
+000e57 fe/bc57: 80 ee        ??mxd??c e ...#.                 bra     LFEBC47

+000e59 fe/bc59: b7 03        ??mxd??C e ....> LFEBC59         lda     [DPCOP_X],y
+000e5b fe/bc5b: 29 ff 00     ??mxd??C e .....                 and     #$00ff
+000e5e fe/bc5e: c9 20 00     n?mxd??C e .....                 cmp     #$0020
+000e61 fe/bc61: 90 0b        ??mxd??? e .....                 bcc     LFEBC6E
+000e63 fe/bc63: e2 20        ??mxd??C e .....                 sep     #$20
                                                               .rwid   shortm
+000e65 fe/bc65: a9 20        ??Mxd??C e .....                 lda     #$20
+000e67 fe/bc67: 97 03        n?Mxd?zC e .....                 sta     [DPCOP_X],y
+000e69 fe/bc69: c2 20        n?Mxd?zC e .....                 rep     #$20
                                                               .rwid   longm
+000e6b fe/bc6b: c8           n?mxd?zC e .....                 iny
+000e6c fe/bc6c: 80 eb        ??mxd??C e ...#.                 bra     LFEBC59

+000e6e fe/bc6e: 18           ??mxd??c e ....> LFEBC6E         clc
+000e6f fe/bc6f: 68           ??mxd??? e ....> LFEBC6F         pla
+000e70 fe/bc70: ab           ??mxd??? e .....                 plb
+000e71 fe/bc71: 68           ??mxd??? e .....                 pla
+000e72 fe/bc72: ab           ??mxd??? e .....                 plb
+000e73 fe/bc73: 6b           ??mxd??? e ...#.                 rtl

+000e74 fe/bc74: 38           ??mxd??? e ....> LFEBC74         sec
+000e75 fe/bc75: 80 f8        ??mxd??C e ...#.                 bra     LFEBC6F

                                               ********************************************************************************
                                               * COP 22 - OPCMD call a module                                                 *
                                               *                                                                              *
                                               * Action:   Call the module whose name, tenninated by zero,follows             *
                                               * cmmediately.                                                                 *
                                               *                                                                              *
                                               * On entry: Any values required by the module to be passed in the registers.   *
                                               *                                                                              *
                                               * Inline string which is the module name terminated by zero (&00).             *
                                               *                                                                              *
                                               * On exit: Carry bit is setand X = 0 if the module was not found.              *
                                               ********************************************************************************
+000e77 fe/bc77: a5 0b        ??mxd??? e @T... COP_28          lda     DPCOP_PC          ;get caller PC
+000e79 fe/bc79: 1a           ??mxd??? e .....                 inc     A                 ;increment to point at the module name
+000e7a fe/bc7a: d4 0c        ??mxd??? e .....                 pei     (DPCOP_PC+1)      ;get caller's program bank into B
+000e7c fe/bc7c: ab           ??mxd??? e .....                 plb
+000e7d fe/bc7d: ab           ??mxd??? e .....                 plb
+000e7e fe/bc7e: a0 00 00     ??mxd??? e .....                 ldy     #$0000
+000e81 fe/bc81: 4b           n?mxd?Z? e .....                 phk
+000e82 fe/bc82: 20 4b ee     n?mxd?Z? e .....                 jsr     brlFindModule     ;look for the module
+000e85 fe/bc85: b0 3f        ??mxd??? e .....                 bcs     modNotFoundRetZ
+000e87 fe/bc87: 4b           ??mxd??c e .....                 phk
+000e88 fe/bc88: 20 51 ee     ??mxd??c e .....                 jsr     LFEEE51
+000e8b fe/bc8b: b0 39        ??mxd??? e .....                 bcs     modNotFoundRetZ
                                               ; make an rti frame that will return to an rti
+000e8d fe/bc8d: 0b           ??mxd??c e .....                 phd                       ;an rti frame that will return to an rti
+000e8e fe/bc8e: 4b           ??mxd??c e .....                 phk
+000e8f fe/bc8f: 62 16 00     ??mxd??c e .....                 per     LFEBCA8
+000e92 fe/bc92: f4 00 00     ??mxd??c e .....                 pea     $0000             ;place 0000 on the stack
+000e95 fe/bc95: ab           ??mxd??c e .....                 plb                       ;discard stacked byte
+000e96 fe/bc96: 48           ??mxd??c e .....                 pha                       ;push A (module B0 jump block)
+000e97 fe/bc97: f4 00 00     ??mxd??c e .....                 pea     $0000
+000e9a fe/bc9a: ab           ??mxd??c e .....                 plb                       ;another single 0
+000e9b fe/bc9b: d4 08        ??mxd??c e .....                 pei     (DPCOP_DP)
+000e9d fe/bc9d: d4 06        ??mxd??c e .....                 pei     (DPCOP_AH+1)
+000e9f fe/bc9f: ab           ??mxd??c e .....                 plb
+000ea0 fe/bca0: a5 05        ??mxd??c e .....                 lda     DPCOP_AH
+000ea2 fe/bca2: a6 03        ??mxd??c e .....                 ldx     DPCOP_X
+000ea4 fe/bca4: a4 01        ??mxd??c e .....                 ldy     DPCOP_Y
+000ea6 fe/bca6: ab           ??mxd??c e .....                 plb
+000ea7 fe/bca7: 2b           ??mxd??c e .....                 pld
                                               ; BHAXY are now as per caller
                                               ; 
                                               ; stack contains
                                               ; 
                                               ; +7  @rti long address for module to return to which will do another RTI - QRY
                                               ; why?
                                               ; +6  00 - bank 0
                                               ; +4  jump block entry in bank 0
                                               ; +3  00 - dummy flags
                                               ; +1  caller DP
+000ea8 fe/bca8: 40           ??mxd??c e ...#. LFEBCA8         rti

                                               ********************************************************************************
                                               * QRY - possible dead code?                                                    *
                                               ********************************************************************************
                                                               .rwid   shortm,shortx
+000ea9 fe/bca9: c2 30        ??MXd??? e @T...                 rep     #$30
                                                               .rwid   longm,longx
+000eab fe/bcab: 48           ??mxd??? e .....                 pha
+000eac fe/bcac: 0b           ??mxd??? e .....                 phd
+000ead fe/bcad: a3 05        ??mxd??? e .....                 lda     $05,S
+000eaf fe/bcaf: 5b           ??mxd??? e .....                 tcd
+000eb0 fe/bcb0: 68           ??mxd??? e .....                 pla
+000eb1 fe/bcb1: 85 08        ??mxd??? e .....                 sta     DPCOP_DP
+000eb3 fe/bcb3: 68           ??mxd??? e .....                 pla
+000eb4 fe/bcb4: 85 05        ??mxd??? e .....                 sta     DPCOP_AH
+000eb6 fe/bcb6: 2b           ??mxd??? e .....                 pld
+000eb7 fe/bcb7: 86 03        ??mxd??? e .....                 stx     DPCOP_X
+000eb9 fe/bcb9: 84 01        ??mxd??? e .....                 sty     DPCOP_Y
+000ebb fe/bcbb: e2 20        ??mxd??? e .....                 sep     #$20
                                                               .rwid   shortm
+000ebd fe/bcbd: 8b           ??Mxd??? e .....                 phb
+000ebe fe/bcbe: 68           ??Mxd??? e .....                 pla
+000ebf fe/bcbf: 85 07        ??Mxd??? e .....                 sta     DPCOP_B
+000ec1 fe/bcc1: c2 20        ??Mxd??? e .....                 rep     #$20
                                                               .rwid   longm
+000ec3 fe/bcc3: 82 fc fa     ??mxd??? e ...#.                 brl     @copExitImmedStr

+000ec6 fe/bcc6: 64 03        ??mxd??C e ....> modNotFoundRetZ stz     DPCOP_X
+000ec8 fe/bcc8: 82 f7 fa     ??mxd??C e ...#.                 brl     @copExitImmedStr

                                               ********************************************************************************
                                               * COP 2A - OPURF - unreference module                                          *
                                               * Action: Let the operating system know you no longer require access to a      *
                                               * module.                                                                      *
                                               * On entry: X points to the start of the 8 byte block in direct page which was *
                                               * initialised when the module was referenced.                                  *
                                               * On exit:  C = 0 means that the module was found and unreferenced.            *
                                               *           C = 1 means that the value in X was invalid.                       *
                                               *           DBHA preserved                                                     *
                                               ********************************************************************************
+000ecb fe/bccb: a5 08        ??mxd??? e @T... COP_2A          lda     DPCOP_DP
+000ecd fe/bccd: 18           ??mxd??? e .....                 clc
+000ece fe/bcce: 65 03        ??mxd??c e .....                 adc     DPCOP_X
+000ed0 fe/bcd0: aa           ??mxd??? e .....                 tax
+000ed1 fe/bcd1: bf 02 00 00  ??mxd??? e .....                 ldal    f:$000002,x
+000ed5 fe/bcd5: 29 ff 00     ??mxd??? e .....                 and     #$00ff
+000ed8 fe/bcd8: c9 01 00     n?mxd??? e .....                 cmp     #$0001
+000edb fe/bcdb: bf 01 00 00  ??mxd??? e .....                 ldal    f:$000001,x
+000edf fe/bcdf: b0 05        ??mxd??? e .....                 bcs     @skq
+000ee1 fe/bce1: bf 00 00 00  ??mxd??c e .....                 ldal    f:$000000,x
+000ee5 fe/bce5: 1a           ??mxd??c e .....                 inc     A
+000ee6 fe/bce6: 5b           ??mxd??? e ....> @skq            tcd
+000ee7 fe/bce7: a5 0b        ??mxd??? e .....                 lda     $0b
+000ee9 fe/bce9: 29 ff 00     ??mxd??? e .....                 and     #$00ff
+000eec fe/bcec: c9 06 00     n?mxd??? e .....                 cmp     #$0006
+000eef fe/bcef: d0 16        ??mxd??? e .....                 bne     @retSEC
+000ef1 fe/bcf1: e2 20        ??mxd?Z? e .....                 sep     #$20
                                                               .rwid   shortm
+000ef3 fe/bcf3: a5 07        ??Mxd?Z? e .....                 lda     $07
+000ef5 fe/bcf5: f0 10        ??Mxd??? e .....                 beq     @retSEC
+000ef7 fe/bcf7: c6 07        ??Mxd?z? e .....                 dec     $07
+000ef9 fe/bcf9: c2 20        ??Mxd??? e .....                 rep     #$20
                                                               .rwid   longm
+000efb fe/bcfb: da           ??mxd??? e .....                 phx
+000efc fe/bcfc: 2b           ??mxd??? e .....                 pld
+000efd fe/bcfd: 64 00        ??mxd??? e .....                 stz     $00
+000eff fe/bcff: 64 02        ??mxd??? e .....                 stz     $02
+000f01 fe/bd01: b0 02        ??mxd??? e .....                 bcs     @retCLC
+000f03 fe/bd03: 64 04        ??mxd??c e .....                 stz     $04
+000f05 fe/bd05: 18           ??mxd??? e ....> @retCLC         clc
+000f06 fe/bd06: 6b           ??mxd??c e ...#.                 rtl

                                                               .rwid   shortm
+000f07 fe/bd07: 38           ???xd??? e ....> @retSEC         sec
+000f08 fe/bd08: 6b           ???xd??C e ...#.                 rtl

                                               ********************************************************************************
                                               * COP 29 - OPRFR - reference module                                            *
                                               * Action: Set up entry and return addresses in an 8 byte block in direct page  *
                                               * for the module whose name is pointed to by BHA.                              *
                                               * On entry: BHA points to the module name which is terminated by zero (&00).   *
                                               *           X points to the start of the 8 byte block in direct page which     *
                                               * will                                                                         *
                                               *           be initialised by the OPRFR routine.                               *
                                               *           Y = 0                                                              *
                                               * On exit:  C = 0 means that the module was found and the block initialised.   *
                                               *           C = 1 means that the module was not found.                         *
                                               *           DB preserved.                                                      *
                                               ********************************************************************************
                                                               .rwid   longm
+000f09 fe/bd09: 4b           ??mxd??? e @T... COP_29          phk
+000f0a fe/bd0a: 20 31 bd     ??mxd??? e .....                 jsr     COP_27
+000f0d fe/bd0d: b0 21        ??mxd??? e .....                 bcs     @ret
+000f0f fe/bd0f: bf 01 00 00  ??mxd??c e .....                 ldal    f:$000001,x       ;adjust the address at offset 01 to be an RTL addres
+000f13 fe/bd13: 3a           ??mxd??c e .....                 dec     A                 ;i.e. subtract 1
+000f14 fe/bd14: 9f 00 00 00  ??mxd??c e .....                 stal    f:$000000,x       ;store at offset 0
+000f18 fe/bd18: a9 00 00     ??mxd??c e .....                 lda     #$0000            ;zero offset 2,3 - QRY bank address address at 01 will always be 0
+000f1b fe/bd1b: 9f 02 00 00  n?mxd?Zc e .....                 stal    f:$000002,x
+000f1f fe/bd1f: a9 63 fe     n?mxd?Zc e .....                 lda     #(LFEFE64_anRTL & $ffff)-1 ;make an RTLable address to an RTL
+000f22 fe/bd22: 9f 03 00 00  n?mxd?zc e .....                 stal    f:$000003,x
+000f26 fe/bd26: e2 20        n?mxd?zc e .....                 sep     #$20
                                                               .rwid   shortm
+000f28 fe/bd28: 4b           n?Mxd?zc e .....                 phk
+000f29 fe/bd29: 68           n?Mxd?zc e .....                 pla
+000f2a fe/bd2a: 9f 05 00 00  ??Mxd??c e .....                 stal    f:$000005,x
+000f2e fe/bd2e: c2 20        ??Mxd??c e .....                 rep     #$20
                                                               .rwid   longm
+000f30 fe/bd30: 6b           ??mxd??? e ...#> @ret            rtl

                                               ********************************************************************************
                                               * COP 27 - OPREF - OPRFR with different return structure                       *
                                               *                                                                              *
                                               * On Entry: X is a DP offset to an 8 byte block to receive a module pointer    *
                                               *           BHA points to zero terminated module name                          *
                                               *                                                                              *
                                               * On Exit:  C = 0, offset 1,2 in block contain a pointer to code to call the   *
                                               *           module                                                             *
                                               *           C = 1 for not found                                                *
                                               *                                                                              *
                                               * QRY                                                                          *
                                               *                                                                              *
                                               * This looks to be called by OPRFR but OPRFR rearranges the returned block     *
                                               * order                                                                        *
                                               *                                                                              *
                                               * This find the module, and place a                                            *
                                               *                                                                              *
                                               *   phd                                                                        *
                                               *   jsl <module service entry>                                                 *
                                               *   pld                                                                        *
                                               *   rtl                                                                        *
                                               *                                                                              *
                                               * somewhere in bank 0 and place a 16 bit pointer to this at offset 1, the rest *
                                               * of the block in zeroed                                                       *
                                               ********************************************************************************
+000f31 fe/bd31: a5 08        ??mxd??? e .T..> COP_27          lda     DPCOP_DP
+000f33 fe/bd33: 18           ??mxd??? e .....                 clc
+000f34 fe/bd34: 65 03        ??mxd??c e .....                 adc     DPCOP_X           ;HA = DPX
+000f36 fe/bd36: 69 04 00     ??mxd??? e .....                 adc     #$0004
+000f39 fe/bd39: b0 25        ??mxd??? e .....                 bcs     @ret              ;Exit with SEC if DPX+4 is outside bank 0
+000f3b fe/bd3b: e9 03 00     ??mxd??c e .....                 sbc     #$0003            ;knock back to HA = DPX
+000f3e fe/bd3e: aa           ??mxd??? e .....                 tax                       ;transfer to X
+000f3f fe/bd3f: a9 00 00     ??mxd??? e .....                 lda     #$0000            ;clear DPX+0..DPX+7
+000f42 fe/bd42: 9f 00 00 00  n?mxd?Z? e .....                 stal    f:$000000,x
+000f46 fe/bd46: 9f 02 00 00  n?mxd?Z? e .....                 stal    f:$000002,x
+000f4a fe/bd4a: 9f 04 00 00  n?mxd?Z? e .....                 stal    f:$000004,x
+000f4e fe/bd4e: 9f 06 00 00  n?mxd?Z? e .....                 stal    f:$000006,x
+000f52 fe/bd52: da           n?mxd?Z? e .....                 phx
+000f53 fe/bd53: a5 05        n?mxd?Z? e .....                 lda     DPCOP_AH          ;get back BHA (module name)
+000f55 fe/bd55: 4b           ??mxd??? e .....                 phk
+000f56 fe/bd56: 20 4e ee     ??mxd??? e .....                 jsr     brlGetModCallRef  ;long call actual module find
+000f59 fe/bd59: fa           ??mxd??? e .....                 plx                       ;get back DPX pointer
+000f5a fe/bd5a: b0 04        ??mxd??? e .....                 bcs     @ret
+000f5c fe/bd5c: 9f 01 00 00  ??mxd??c e .....                 stal    f:$000001,x       ;store pointer at offset 1
+000f60 fe/bd60: 6b           ??mxd??? e ...#> @ret            rtl

                                               ********************************************************************************
                                               * COP 0F - OPERR - system error                                                *
                                               *                                                                              *
                                               * Action: This is used as a debugging aid. When the call is executed, a fatal  *
                                               * error is generated. A zero-terminated string immediately following the COP   *
                                               * signature is printed, followed by a listing of the contents of the 6SSC8l6's *
                                               * registers. The register string is printed as:                                *
                                               *                                                                              *
                                               *     address of COP OPERR signature byte (3 bytes)                            *
                                               *     status (I byte)                                                          *
                                               *     D (2 bytes)                                                              *
                                               *     BHA (3 bytes)                                                            *
                                               *     X (2 bytes)                                                              *
                                               *     Y (2 bytes)                                                              *
                                               * The bytes are printed as pairs of hexadecimaldigits separated by spaces.     *
                                               *                                                                              *
                                               * On entry: Inline error string.                                               *
                                               * On exit:  No exit the machine "hangs".                                       *
                                               ********************************************************************************
+000f61 fe/bd61: 02 01        ??mxd??? e @T... COP_0F          cop     COP_01_OPWRS      ;Write a newline TODO: Use OPNLI
+000f63 fe/bd63: 0d 0a 00                .T...                 .zstr   $0d,$0a
+000f66 fe/bd66: 4b           ??mxd??? e .....                 phk
+000f67 fe/bd67: 20 0d b8     ??mxd??? e .....                 jsr     COP_01            ;QRY - this prints the message after the original caller's COP
+000f6a fe/bd6a: 02 01        ??mxd??? e .....                 cop     COP_01_OPWRS
+000f6c fe/bd6c: 0d 0a 2a 2a+            .T...                 .zstr   $0d,$0a,“*** Fatal System Error:”
+000f86 fe/bd86: a2 0d 00     ??mxd??? e .....                 ldx     #$000d
+000f89 fe/bd89: 20 98 bd     n?mxd?z? e .....                 jsr     @dumpregs
+000f8c fe/bd8c: 02 01        ??mxd??? e .....                 cop     COP_01_OPWRS
+000f8e fe/bd8e: 20 2a 2a 2a+            .T...                 .zstr   “ ***”,$0d,$0a,$0a
+000f96 fe/bd96: 80 fe        ??mxd??? e ...#> @here           bra     @here             ;hang up the machine

+000f98 fe/bd98: a9 20 00     ??mx??z? e ....> @dumpregs       lda     #$0020            ;dump registers
+000f9b fe/bd9b: 02 00        n?mx??z? e .....                 cop     COP_00_OPWRC
+000f9d fe/bd9d: b5 00        n?mx??z? e .....                 lda     $00,x
+000f9f fe/bd9f: 20 a6 bd     ??mx???? e .....                 jsr     printHexA
+000fa2 fe/bda2: ca           ??mx???? e .....                 dex
+000fa3 fe/bda3: d0 f3        ??mx???? e .....                 bne     @dumpregs
+000fa5 fe/bda5: 60           ??mx??Z? e ...#.                 rts

+000fa6 fe/bda6: 48           ??mx???? e ....> printHexA       pha
+000fa7 fe/bda7: 4a           ??mx???? e .....                 lsr     A
+000fa8 fe/bda8: 4a           n?mx???? e .....                 lsr     A
+000fa9 fe/bda9: 4a           n?mx???? e .....                 lsr     A
+000faa fe/bdaa: 4a           n?mx???? e .....                 lsr     A
+000fab fe/bdab: 20 af bd     n?mx???? e .....                 jsr     printHexNyb
+000fae fe/bdae: 68           ??mx???? e .....                 pla
+000faf fe/bdaf: 48           ??mx???? e ....> printHexNyb     pha
+000fb0 fe/bdb0: 08           ??mx???? e .....                 php
+000fb1 fe/bdb1: e2 20        ??mx???? e .....                 sep     #$20
                                                               .rwid   shortm
+000fb3 fe/bdb3: 29 0f        ??Mx???? e .....                 and     #$0f
+000fb5 fe/bdb5: 09 30        n?Mx???? e .....                 ora     #$30
+000fb7 fe/bdb7: c9 3a        ??Mx??z? e .....                 cmp     #$3a
+000fb9 fe/bdb9: 90 02        ??Mx???? e .....                 bcc     @sk
+000fbb fe/bdbb: 69 06        ??Mx???C e .....                 adc     #$06
+000fbd fe/bdbd: 02 00        ??Mx???? e ....> @sk             cop     COP_00_OPWRC
+000fbf fe/bdbf: 28           ??Mx???? e .....                 plp
                                                               .rwid   longm
+000fc0 fe/bdc0: 68           ??mx???? e .....                 pla
+000fc1 fe/bdc1: 60           ??mx???? e ...#.                 rts

                                               ********************************************************************************
                                               * COP 10 - OPADP - Allocate direct page                                        *
                                               *                                                                              *
                                               * Action: This call is used to request a direct page of a certain size, the    *
                                               * size being a 2 byte number which follows the call. The call returns with HA  *
                                               * pointing to an address in bank zero which can be used as the base of the     *
                                               * direct page.                                                                 *
                                               *                                                                              *
                                               * On entry: Inline 2 byte size (in bytes) of direct page requested.            *
                                               * On exit:  C = 0 means that the direct page has been allocated, and HA        *
                                               *           contains the address of the base.                                  *
                                               *           C = 1 means that the call failed to allocate a direct page.        *
                                               *           XY preserved                                                       *
                                               *           Note: D is not preserved.                                          *
                                               *                                                                              *
                                               * TODO: Check against original docuimentation (above) OPADF returns in D not   *
                                               * in HA! check but it looks like DP and HA are set to the new value.           *
                                               *                                                                              *
                                               * QRY - OPADF and OPADP are the SAME - this must surely be a mistake? Or are   *
                                               * they all fast?!                                                              *
                                               ********************************************************************************
+000fc2 fe/bdc2: a0 01 00     ??mxd??? e @T... COP_10          ldy     #$0001
+000fc5 fe/bdc5: b7 0b        n?mxd?z? e .....                 lda     [DPCOP_PC],y      ;get 16 bit parameter into A
+000fc7 fe/bdc7: e6 0b        ??mxd??? e .....                 inc     DPCOP_PC
+000fc9 fe/bdc9: e6 0b        ??mxd??? e .....                 inc     DPCOP_PC          ;step return address past it
+000fcb fe/bdcb: a2 18 00     ??mxd??? e .....                 ldx     #__MMAZB          ;allocate ZP page pool
+000fce fe/bdce: 22 8c ff 00  n?mxd?z? e .....                 jsl     __MM
+000fd2 fe/bdd2: b0 0d        ??mxd??? e .....                 bcs     @fail
+000fd4 fe/bdd4: 85 05        ??mxd??c e .....                 sta     DPCOP_AH
+000fd6 fe/bdd6: 85 08        ??mxd??c e .....                 sta     DPCOP_DP
+000fd8 fe/bdd8: 49 00 00     ??mxd??c e .....                 eor     #$0000            ;check for 0
+000fdb fe/bddb: d0 06        ??mxd??c e .....                 bne     allocOK
+000fdd fe/bddd: 4b           ??mxd?Zc e .....                 phk
+000fde fe/bdde: 20 07 be     ??mxd?Zc e .....                 jsr     COP_12            ;try and free it - TODO why would it return 0, why try and free?
+000fe1 fe/bde1: 38           ??mxd??? e ....> @fail           sec
+000fe2 fe/bde2: 6b           ??mxd??C e ...#.                 rtl

+000fe3 fe/bde3: da           ??mxd??? e ....> allocOK         phx
+000fe4 fe/bde4: d4 0c        ??mxd??? e .....                 pei     (DPCOP_PC+1)
+000fe6 fe/bde6: ab           ??mxd??? e .....                 plb
+000fe7 fe/bde7: ab           ??mxd??? e .....                 plb                       ;get return bank
+000fe8 fe/bde8: a5 0b        ??mxd??? e .....                 lda     DPCOP_PC          ;get return address
+000fea fe/bdea: 02 2c        ??mxd??? e .....                 cop     COP_2C_OPFMA      ;find the module that called us
+000fec fe/bdec: 90 11        ??mxd??? e .....                 bcc     LFEBDFF
+000fee fe/bdee: a2 14 00     ??mxd??? e @T...                 ldx     #__MMFND          ;find memory pool just returned
+000ff1 fe/bdf1: 22 8c ff 00  n?mxd?z? e .....                 jsl     __MM
+000ff5 fe/bdf5: a9 00 00     ??mxd??? e .....                 lda     #$0000
+000ff8 fe/bdf8: b0 06        n?mxd?Z? e .....                 bcs     LFEBE00
+000ffa fe/bdfa: bf 08 00 00  n?mxd?Zc e .....                 ldal    f:$000008,x
+000ffe fe/bdfe: aa           ??mxd??c e .....                 tax
+000fff fe/bdff: 8a           ??mxd??c e ....> LFEBDFF         txa
+001000 fe/be00: fa           ??mxd??? e ....> LFEBE00         plx
+001001 fe/be01: 9f 08 00 00  ??mxd??? e .....                 stal    f:DPCOP_DP,x
+001005 fe/be05: 18           ??mxd??? e .....                 clc
+001006 fe/be06: 6b           ??mxd??c e ...#.                 rtl

                                               ********************************************************************************
                                               * COP 12 - OPFD - Free direct page                                             *
                                               *                                                                              *
                                               * On Entry:  DP to free in D                                                   *
                                               * On Exit:   C = 0 freed ok                                                    *
                                               *                                                                              *
                                               * QRY no docco                                                                 *
                                               ********************************************************************************
+001007 fe/be07: a5 08        ??mxd?Zc e .T..> COP_12          lda     DPCOP_DP
+001009 fe/be09: 85 05        ??mxd??c e .....                 sta     DPCOP_AH
                                               ********************************************************************************
                                               * COP 1A - OPFZB - free bank 0 memory                                          *
                                               *                                                                              *
                                               * Action: Tells the operating system that space allocated in bank zero is      *
                                               * finished with. This should be done every time space is no longer requited so *
                                               * that bank zero is not exhausted.                                             *
                                               * On entry: HA contains the address of the bank zero pool base.                *
                                               * On exit:  If C = 0 then the pool has been freed.                             *
                                               *           If C = 1 then the routine could not free the pool.                 *
                                               *           No registers preserved                                             *
                                               ********************************************************************************
+00100b fe/be0b: f4 00 00     ??mxd??c e .T... COP_1A          pea     $0000
+00100e fe/be0e: ab           ??mxd??c e .....                 plb
                                                               .dbank  $00
+00100f fe/be0f: ab           ??mxd??c e .....                 plb
+001010 fe/be10: a0 01 00     ??mxd??c e .....                 ldy     #$0001
+001013 fe/be13: a2 14 00     n?mxd?zc e .....                 ldx     #__MMFND
+001016 fe/be16: 22 8c ff 00  n?mxd?zc e .....                 jsl     __MM
+00101a fe/be1a: b0 16        ??mxd??? e .....                 bcs     @retsec
+00101c fe/be1c: a2 0e 00     ??mxd??c e .....                 ldx     #__MMBAS
+00101f fe/be1f: 22 8c ff 00  n?mxd?zc e .....                 jsl     __MM
+001023 fe/be23: c5 05        ??mxd??? e .....                 cmp     DPCOP_AH
+001025 fe/be25: d0 0b        ??mxd??? e .....                 bne     @retsec
+001027 fe/be27: a2 02 00     ??mxd?Z? e .....                 ldx     #__MMFP
+00102a fe/be2a: 22 8c ff 00  n?mxd?z? e .....                 jsl     __MM
+00102e fe/be2e: b0 02        ??mxd??? e .....                 bcs     @retsec
+001030 fe/be30: 18           ??mxd??c e .....                 clc
+001031 fe/be31: 6b           ??mxd??c e ...#.                 rtl

+001032 fe/be32: 38           ??mxd??? e ....> @retsec         sec
+001033 fe/be33: 6b           ??mxd??C e ...#.                 rtl

                                               ********************************************************************************
                                               * COP 13 - OPAST - Allocate Stack                                              *
                                               *                                                                              *
                                               * Action: This call is used to request a stack of a certain size, the size     *
                                               * being a 2 byte number which follows the call. The call returns with HA       *
                                               * containing an address which can be transferred to the stack pointer.         *
                                               *                                                                              *
                                               * On entry: Inline 2 byte size (in bytes) of stack requested.                  *
                                               * On exit:  C = 0 means that the stack has been allocated, and HA contains     *
                                               *           the address to be transferred to the stack pointer.                *
                                               *           C = 1 means that the call failed to allocate a stack.              *
                                               *           DBXY preserved                                                     *
                                               ********************************************************************************
+001034 fe/be34: a0 01 00     ??mxd??? e @T... COP_13          ldy     #$0001
+001037 fe/be37: b7 0b        n?mxd?z? e .....                 lda     [DPCOP_PC],y
+001039 fe/be39: e6 0b        ??mxd??? e .....                 inc     DPCOP_PC
+00103b fe/be3b: e6 0b        ??mxd??? e .....                 inc     DPCOP_PC
+00103d fe/be3d: a2 18 00     ??mxd??? e .....                 ldx     #__MMAZB
+001040 fe/be40: 22 8c ff 00  n?mxd?z? e .....                 jsl     __MM
+001044 fe/be44: b0 17        ??mxd??? e .....                 bcs     @ret
+001046 fe/be46: a2 12 00     ??mxd??c e .....                 ldx     #__MMTOP
+001049 fe/be49: 22 8c ff 00  n?mxd?zc e .....                 jsl     __MM
+00104d fe/be4d: aa           ??mxd??? e .....                 tax
+00104e fe/be4e: ca           ??mxd??? e .....                 dex
+00104f fe/be4f: ca           ??mxd??? e .....                 dex
+001050 fe/be50: a9 ad de     ??mxd??? e .....                 lda     #$dead            ;Store "DEAD" above stack - checked in OPFST (free)
+001053 fe/be53: 9f 00 00 00  n?mxd?z? e .....                 stal    f:$000000,x
+001057 fe/be57: ca           n?mxd?z? e .....                 dex
+001058 fe/be58: 86 05        ??mxd??? e .....                 stx     DPCOP_AH
+00105a fe/be5a: 82 86 ff     ??mxd??? e ...#.                 brl     allocOK

+00105d fe/be5d: 6b           ??mxd??C e ...#> @ret            rtl

                                               ********************************************************************************
                                               * COP 14 - OPFST - Free a stack                                                *
                                               *                                                                              *
                                               * Action: Tells the operating system that space allocated to a stack is        *
                                               * finished with. This should be done every time a stack is no longer required. *
                                               * Only space allocated by OPAST can be freed by this call.                     *
                                               *                                                                              *
                                               * On entry: HA contains an address within the stack. (This means that the      *
                                               *           current value of the stack pointer can usually be used to free the *
                                               *           stack.)                                                            *
                                               *                                                                              *
                                               * On exit:  If C = 0 then the stack has been freed.                            *
                                               *           If C = I then the routine could not free the stack.                *
                                               *           DBAXY preserved                                                    *
                                               ********************************************************************************
+00105e fe/be5e: f4 00 00     ??mxd??? e @T... COP_14          pea     $0000
+001061 fe/be61: ab           ??mxd??? e .....                 plb
+001062 fe/be62: ab           ??mxd??? e .....                 plb
+001063 fe/be63: a2 14 00     ??mxd??? e .....                 ldx     #__MMFND
+001066 fe/be66: 22 8c ff 00  n?mxd?z? e .....                 jsl     __MM
+00106a fe/be6a: b0 1b        ??mxd??? e .....                 bcs     @retsec
+00106c fe/be6c: a2 12 00     ??mxd??c e .....                 ldx     #__MMTOP
+00106f fe/be6f: 22 8c ff 00  n?mxd?zc e .....                 jsl     __MM
+001073 fe/be73: aa           ??mxd??? e .....                 tax
+001074 fe/be74: ca           ??mxd??? e .....                 dex
+001075 fe/be75: ca           ??mxd??? e .....                 dex
+001076 fe/be76: bf 00 00 00  ??mxd??? e .....                 ldal    f:$000000,x
+00107a fe/be7a: c9 ad de     ??mxd??? e .....                 cmp     #$dead            ;check for "DEAD" at the top of stack and panic if not there
+00107d fe/be7d: d0 08        ??mxd??? e .....                 bne     @retsec
+00107f fe/be7f: a2 02 00     ??mxd?Z? e .....                 ldx     #__MMFP           ;Free it
+001082 fe/be82: 22 8c ff 00  n?mxd?z? e .....                 jsl     __MM
+001086 fe/be86: 6b           ??mxd??? e ...#.                 rtl

+001087 fe/be87: 38           ??mxd??? e ....> @retsec         sec
+001088 fe/be88: 6b           ??mxd??C e ...#.                 rtl

                                               ********************************************************************************
                                               * COP 16 - OPAEV - Acknowledge Event                                           *
                                               *                                                                              *
                                               * Action: This call acknowledges the occurrence of an event                    *
                                               *                                                                              *
                                               * On entry: HA contains the event mask which specifies the events to be        *
                                               *           acknowledged. Possible event masks arc __EVESC to acknowledge the  *
                                               *           ESCAPE event and __EVPRE to acknowledge the pre-emptevent          *
                                               * On exit:  If C = 0 then the specified event is acknowledged.                 *
                                               *           If C = 1 then an attempt was made to clear an event which had not  *
                                               *           previously been set                                                *
                                               *           DBAXY preserved                                                    *
                                               ********************************************************************************
+001089 fe/be89: 48           ??mxd??? e @T... COP_16          pha
+00108a fe/be8a: af 13 ff 00  ??mxd??? e .....                 ldal    f:SYS_ESCAPE_FLAG_QRY
+00108e fe/be8e: aa           ??mxd??? e .....                 tax
+00108f fe/be8f: 23 01        ??mxd??? e .....                 and     $01,S
+001091 fe/be91: 43 01        ??mxd??? e .....                 eor     $01,S
+001093 fe/be93: c9 01 00     ??mxd??? e .....                 cmp     #$0001
+001096 fe/be96: 8a           ??mxd??? e .....                 txa
+001097 fe/be97: 03 01        ??mxd??? e .....                 ora     $01,S
+001099 fe/be99: 43 01        ??mxd??? e .....                 eor     $01,S
+00109b fe/be9b: 8f 13 ff 00  ??mxd??? e .....                 stal    f:SYS_ESCAPE_FLAG_QRY
+00109f fe/be9f: 68           ??mxd??? e .....                 pla
+0010a0 fe/bea0: 6b           ??mxd??? e ...#.                 rtl

                                               ********************************************************************************
                                               * COP 20 - OPSEV - Set an event                                                *
                                               *                                                                              *
                                               * QRY                                                                          *
                                               *                                                                              *
                                               * On Entry: HA contains even flags mask that are to be set                     *
                                               ********************************************************************************
+0010a1 fe/bea1: 0f 13 ff 00  ??mxd??? e @T... COP_20          oral    f:SYS_ESCAPE_FLAG_QRY
+0010a5 fe/bea5: 8f 13 ff 00  ??mxd??? e .....                 stal    f:SYS_ESCAPE_FLAG_QRY
+0010a9 fe/bea9: 18           ??mxd??? e .....                 clc
+0010aa fe/beaa: 6b           ??mxd??c e ...#.                 rtl

+0010ab fe/beab: 08           ??mxd??? e @T...                 php
+0010ac fe/beac: c2 30        ??mxd??? e .....                 rep     #$30
+0010ae fe/beae: 0b           ??mxd??? e .....                 phd
+0010af fe/beaf: 8b           ??mxd??? e .....                 phb
+0010b0 fe/beb0: 48           ??mxd??? e .....                 pha
+0010b1 fe/beb1: da           ??mxd??? e .....                 phx
+0010b2 fe/beb2: 5a           ??mxd??? e .....                 phy
+0010b3 fe/beb3: 02 01        ??mxd??? e .....                 cop     COP_01_OPWRS
+0010b5 fe/beb5: 20 20 72 65+            .T...                 .zstr   “  regs:”
+0010bd fe/bebd: 3b                      .T...                 .dd1    $3b
+0010be fe/bebe: 5b           ??mxd??? e .....                 tcd
+0010bf fe/bebf: a2 0a 00     ??mxd??? e .....                 ldx     #$000a
+0010c2 fe/bec2: 20 98 bd     n?mxd?z? e .....                 jsr     @dumpregs
+0010c5 fe/bec5: 02 03        ??mxd??? e .....                 cop     COP_03_OPNLI
+0010c7 fe/bec7: 7a           ??mxd??? e .....                 ply
+0010c8 fe/bec8: fa           ??mxd??? e .....                 plx
+0010c9 fe/bec9: 68           ??mxd??? e .....                 pla
+0010ca fe/beca: ab           ??mxd??? e .....                 plb
+0010cb fe/becb: 2b           ??mxd??? e .....                 pld
+0010cc fe/becc: 28           ??mxd??? e .....                 plp
+0010cd fe/becd: 60           ??mxd??? e ...#.                 rts

                                               ********************************************************************************
                                               * OPERC 61 - ???? error something ???                                          *
                                               *                                                                              *
                                               * QRY -                                                                        *
                                               *                                                                              *
                                               * looks if X & 1 = 0 then "Error (no message)"                                 *
                                               * the string pointed to BHA is < 4 ASCII chars "Error (terse message)"         *
                                               * if it contains unprintable chars then "Error (bad message)"                  *
                                               * else pass thru BHA                                                           *
                                               ********************************************************************************
+0010ce fe/bece: a5 03        ??mxd??? e @T... COP_61          lda     DPCOP_X
+0010d0 fe/bed0: 4a           ??mxd??? e .....                 lsr     A
+0010d1 fe/bed1: 90 26        n?mxd??? e .....                 bcc     bhaErrorNoMessage
+0010d3 fe/bed3: d4 06        n?mxd??C e .....                 pei     (DPCOP_AH+1)
+0010d5 fe/bed5: ab           n?mxd??C e .....                 plb
+0010d6 fe/bed6: ab           ??mxd??C e .....                 plb
+0010d7 fe/bed7: a6 05        ??mxd??C e .....                 ldx     DPCOP_AH
+0010d9 fe/bed9: a0 00 00     ??mxd??C e .....                 ldy     #$0000
+0010dc fe/bedc: da           ??mxd??? e ....> LFEBEDC         phx
+0010dd fe/bedd: b3 01        ??mxd??? e .....                 lda     ($01,S),y
+0010df fe/bedf: fa           ??mxd??? e .....                 plx
+0010e0 fe/bee0: 29 ff 00     ??mxd??? e .....                 and     #$00ff
+0010e3 fe/bee3: f0 0d        n?mxd??? e .....                 beq     LFEBEF2
+0010e5 fe/bee5: c9 20 00     n?mxd?z? e .....                 cmp     #$0020
+0010e8 fe/bee8: 90 26        ??mxd??? e .....                 bcc     bhaErrorBadErrorMEssage
+0010ea fe/beea: c9 7f 00     ??mxd??C e .....                 cmp     #$007f
+0010ed fe/beed: b0 21        ??mxd??? e .....                 bcs     bhaErrorBadErrorMEssage
+0010ef fe/beef: c8           ??mxd??c e .....                 iny
+0010f0 fe/bef0: 80 ea        ??mxd??c e ...#.                 bra     LFEBEDC

+0010f2 fe/bef2: c0 04 00     n?mxd?Z? e ....> LFEBEF2         cpy     #$0004
+0010f5 fe/bef5: 90 31        ??mxd??? e .....                 bcc     bhaErrorTerse
+0010f7 fe/bef7: 18           ??mxd??C e .....                 clc
+0010f8 fe/bef8: 6b           ??mxd??c e ...#.                 rtl

+0010f9 fe/bef9: 02 26        n?mxd??c e ....> bhaErrorNoMessage cop   COP_26_OPBHA
+0010fb fe/befb: 45 72 72 6f+            .T...                 .zstr   “Error (no message)”
+00110e fe/bf0e: 80 30        n?mxd??c e ...#.                 bra     LFEBF40

+001110 fe/bf10: 02 26        ??mxd??? e ....> bhaErrorBadErrorMEssage cop COP_26_OPBHA
+001112 fe/bf12: 45 72 72 6f+            .T...                 .zstr   “Error (bad message)”
+001126 fe/bf26: 80 18        ??mxd??? e ...#.                 bra     LFEBF40

+001128 fe/bf28: 02 26        ??mxd??c e ....> bhaErrorTerse   cop     COP_26_OPBHA
+00112a fe/bf2a: 45 72 72 6f+            .T...                 .zstr   “Error (terse message)”
+001140 fe/bf40: 48                      .T... LFEBF40         .dd1    $48
+001141 fe/bf41: a5 03        ??mxd??c e .....                 lda     DPCOP_X
+001143 fe/bf43: 09 01 00     ??mxd??c e .....                 ora     #$0001
+001146 fe/bf46: aa           ??mxd?zc e .....                 tax
+001147 fe/bf47: 68           ??mxd??c e .....                 pla
+001148 fe/bf48: 38           ??mxd??c e .....                 sec
+001149 fe/bf49: 82 65 fb     ??mxd??C e ...#.                 brl     retCopXBHA

                                               ********************************************************************************
                                               * COP 60 - OPDFR - ????                                                        *
                                               ********************************************************************************
+00114c fe/bf4c: a9 12 00     ??mxd??? e @T... COP_60          lda     #HND_type_12_CBDFR
+00114f fe/bf4f: 20 01 ce     n?mxd?z? e .....                 jsr     obtainFreeBlock
+001152 fe/bf52: b0 37        ??mxd??? e .....                 bcs     @reterrNoRoom
+001154 fe/bf54: a9 00 00     ??mxd??c e .....                 lda     #$0000
+001157 fe/bf57: 9f 00 00 00  n?mxd?Zc e .....                 stal    f:$000000,x
+00115b fe/bf5b: a5 01        n?mxd?Zc e .....                 lda     DPCOP_Y
+00115d fe/bf5d: 9f 04 00 00  ??mxd??c e .....                 stal    f:DPCOP_X+1,x
+001161 fe/bf61: a5 03        ??mxd??c e .....                 lda     DPCOP_X
+001163 fe/bf63: 9f 06 00 00  ??mxd??c e .....                 stal    f:DPCOP_AH+1,x
+001167 fe/bf67: a5 08        ??mxd??c e .....                 lda     DPCOP_DP
+001169 fe/bf69: 9f 02 00 00  ??mxd??c e .....                 stal    f:DPCOP_Y+1,x
+00116d fe/bf6d: a5 06        ??mxd??c e .....                 lda     DPCOP_AH+1
+00116f fe/bf6f: 9f 09 00 00  ??mxd??c e .....                 stal    f:DPCOP_DP+1,x
+001173 fe/bf73: a5 05        ??mxd??c e .....                 lda     DPCOP_AH
+001175 fe/bf75: 9f 08 00 00  ??mxd??c e .....                 stal    f:DPCOP_DP,x
+001179 fe/bf79: da           ??mxd??c e .....                 phx
+00117a fe/bf7a: a9 12 fe     ??mxd??c e .....                 lda     #$fe12
+00117d fe/bf7d: aa           ??mxd?zc e ....> LFEBF7D         tax
+00117e fe/bf7e: bf 00 00 00  ??mxd??c e .....                 ldal    f:$000000,x
+001182 fe/bf82: d0 f9        ??mxd??c e .....                 bne     LFEBF7D
+001184 fe/bf84: 68           ??mxd?Zc e .....                 pla
+001185 fe/bf85: 9f 00 00 00  ??mxd??c e .....                 stal    f:$000000,x
+001189 fe/bf89: 18           ??mxd??c e .....                 clc
+00118a fe/bf8a: 6b           ??mxd??c e ...#.                 rtl

+00118b fe/bf8b: 02 26        ??mxd??C e ....> @reterrNoRoom   cop     COP_26_OPBHA
+00118d fe/bf8d: 4e 6f 20 72+            .T...                 .zstr   “No room”
+001195 fe/bf95: a2 01 00     ??mxd??C e .....                 ldx     #$0001
+001198 fe/bf98: 82 16 fb     n?mxd?zC e ...#.                 brl     retCopXBHA

                                                               .rwid   shortm,shortx
+00119b fe/bf9b: 08           ??MXd??? e ....> LFEBF9B         php
+00119c fe/bf9c: 8b           ??MXd??? e .....                 phb
+00119d fe/bf9d: 0b           ??MXd??? e ..... LFEBF9D         phd
+00119e fe/bf9e: c2 30        ??MXd??? e .....                 rep     #$30
                                                               .rwid   longm,longx
+0011a0 fe/bfa0: af 12 fe 00  ??mxd??? e .....                 ldal    f:$00fe12
+0011a4 fe/bfa4: f0 1f        ??mxd??? e .....                 beq     LFEBFC5
+0011a6 fe/bfa6: 5b           ??mxd?z? e .....                 tcd
+0011a7 fe/bfa7: aa           ??mxd??? e .....                 tax
+0011a8 fe/bfa8: a5 00        ??mxd??? e .....                 lda     $00
+0011aa fe/bfaa: 8f 12 fe 00  ??mxd??? e .....                 stal    f:$00fe12
+0011ae fe/bfae: 4b           ??mxd??? e .....                 phk
+0011af fe/bfaf: 62 eb ff     ??mxd??? e .....                 per     LFEBF9D
+0011b2 fe/bfb2: d4 09        ??mxd??? e .....                 pei     (DPCOP_DP+1)
+0011b4 fe/bfb4: d4 07        ??mxd??? e .....                 pei     (DPCOP_B)
+0011b6 fe/bfb6: ab           ??mxd??? e .....                 plb
+0011b7 fe/bfb7: d4 02        ??mxd??? e .....                 pei     (DPCOP_Y+1)
+0011b9 fe/bfb9: d4 06        ??mxd??? e .....                 pei     (DPCOP_AH+1)
+0011bb fe/bfbb: d4 04        ??mxd??? e .....                 pei     (DPCOP_X+1)
+0011bd fe/bfbd: 20 da cd     ??mxd??? e .....                 jsr     returnXToFreeList
+0011c0 fe/bfc0: 7a           ??mxd??? e .....                 ply
+0011c1 fe/bfc1: fa           ??mxd??? e .....                 plx
+0011c2 fe/bfc2: 2b           ??mxd??? e .....                 pld
+0011c3 fe/bfc3: 08           ??mxd??? e .....                 php
+0011c4 fe/bfc4: 40           ??mxd??? e ...#.                 rti

+0011c5 fe/bfc5: 2b           ??mxd?Z? e ....> LFEBFC5         pld
+0011c6 fe/bfc6: ab           ??mxd??? e .....                 plb
+0011c7 fe/bfc7: 28           ??mxd??? e .....                 plp
+0011c8 fe/bfc8: 18           ??mxd??? e .....                 clc
+0011c9 fe/bfc9: 6b           ??mxd??c e ...#.                 rtl

                                               ********************************************************************************
                                               * COP 43 - OPXKC - examine keyboard character                                  *
                                               * Action: If keyboard buffer is not empty then A becomes the first character   *
                                               * in the buffer. Note that the character is not removed from the keyboard      *
                                               * buffer so repetition of this call will yield the same result. Consequently a *
                                               * call to OPXKC cannot cause a pre-empt tooccur.                               *
                                               *                                                                              *
                                               * On entry: No requirements                                                    *
                                               * On exit:  If C = 0 then A = first character in keyboard buffer.              *
                                               *           If C = I then keyboard buffer is empty.                            *
                                               *           DX preserved                                                       *
                                               *                                                                              *
                                               ********************************************************************************
+0011ca fe/bfca: 0b           ??mxd??? e @T... COP_43          phd
+0011cb fe/bfcb: f4 00 ac     ??mxd??? e .....                 pea     $ac00
+0011ce fe/bfce: 2b           ??mxd??? e .....                 pld
+0011cf fe/bfcf: 4b           ??mxd??? e .....                 phk
                                                               .dbank  K (auto)
+0011d0 fe/bfd0: ab           ??mxd??? e .....                 plb
+0011d1 fe/bfd1: e2 30        ??mxd??? e .....                 sep     #$30
                                                               .rwid   shortm,shortx
+0011d3 fe/bfd3: af 41 a5 00  ??MXd??? e .....                 ldal    f:SYSVAR_41_input_stream
+0011d7 fe/bfd7: aa           ??MXd??? e .....                 tax
+0011d8 fe/bfd8: 20 8e e1     ??MXd??? e .....                 jsr     OSBYTE_98
+0011db fe/bfdb: 2b           ??MXd??? e .....                 pld
+0011dc fe/bfdc: 85 05        ??MXd??? e .....                 sta     DPCOP_AH
+0011de fe/bfde: 6b           ??MXd??? e ...#.                 rtl

                                               ********************************************************************************
                                               * COP 42 - OPRHL - ???                                                         *
                                               *                                                                              *
                                               * QRY - something Econet-ey                                                    *
                                               ********************************************************************************
                                                               .rwid   longm,longx
+0011df fe/bfdf: af f8 ff f0  ??mxd??? e @T... COP_42          ldal    HW_TYPE_DETECT_QRY
+0011e3 fe/bfe3: d0 06        ??mxd??? e .....                 bne     LFEBFEB
+0011e5 fe/bfe5: af 00 00 41  ??mxd?Z? e .....                 ldal    HW_ECONET
+0011e9 fe/bfe9: 80 04        ??mxd??? e ...#.                 bra     LFEBFEF

+0011eb fe/bfeb: af cf ac 00  ??mxd?z? e ....> LFEBFEB         ldal    f:DPSYS+207
+0011ef fe/bfef: 48           ??mxd??? e ....> LFEBFEF         pha
+0011f0 fe/bff0: 29 1f 00     ??mxd??? e .....                 and     #$001f
+0011f3 fe/bff3: 85 05        n?mxd??? e .....                 sta     DPCOP_AH
+0011f5 fe/bff5: 68           n?mxd??? e .....                 pla
+0011f6 fe/bff6: 64 01        ??mxd??? e .....                 stz     DPCOP_Y
+0011f8 fe/bff8: 6a           ??mxd??? e .....                 ror     A
+0011f9 fe/bff9: 6a           ??mxd??? e .....                 ror     A
+0011fa fe/bffa: 6a           ??mxd??? e .....                 ror     A
+0011fb fe/bffb: 6a           ??mxd??? e .....                 ror     A
+0011fc fe/bffc: 6a           ??mxd??? e .....                 ror     A
+0011fd fe/bffd: 6a           ??mxd??? e .....                 ror     A
+0011fe fe/bffe: 26 01        ??mxd??? e .....                 rol     DPCOP_Y
+001200 fe/c000: 6a           ??mxd??? e .....                 ror     A
+001201 fe/c001: 26 01        ??mxd??? e .....                 rol     DPCOP_Y
+001203 fe/c003: 6a           ??mxd??? e .....                 ror     A
+001204 fe/c004: 26 01        ??mxd??? e .....                 rol     DPCOP_Y
+001206 fe/c006: 6b           ??mxd??? e ...#.                 rtl

                                               ********************************************************************************
                                               * COP 41 - OPECO call low - level Econet routines                              *
                                               * Action: This call performs data transfer to and from the Econet filing       *
                                               * system. It performs several tasks depending upon the reason code in X.       *
                                               * On entry: X = reason code.                                                   *
                                               *           Other registers contain or point to arguments.                     *
                                               * On exit:  C = 0 means that the call was successful.                          *
                                               *           If C = 1 and X <> 0 then the call failed and the error code is in  *
                                               * X.                                                                           *
                                               *           If C = 1 and X = 0 then the Econet module is not present           *
                                               *           D preserved                                                        *
                                               ********************************************************************************
+001207 fe/c007: 0b           ??mxd??? e @T... COP_41          phd
+001208 fe/c008: 48           ??mxd??? e .....                 pha
+001209 fe/c009: a6 03        ??mxd??? e .....                 ldx     DPCOP_X
+00120b fe/c00b: a5 08        ??mxd??? e .....                 lda     DPCOP_DP
+00120d fe/c00d: f4 00 ac     ??mxd??? e .....                 pea     DPSYS
+001210 fe/c010: 2b           ??mxd??? e .....                 pld
+001211 fe/c011: 85 9d        ??mxd??? e .....                 sta     <DPSYS_MOD_ECONET-2 ;caller DP
+001213 fe/c013: a5 a3        ??mxd??? e .....                 lda     <DPSYS_MOD_ECONET+4
+001215 fe/c015: 05 a1        ??mxd??? e .....                 ora     <DPSYS_MOD_ECONET+2
+001217 fe/c017: 05 9f        ??mxd??? e .....                 ora     <DPSYS_MOD_ECONET
+001219 fe/c019: f0 15        ??mxd??? e .....                 beq     @noeconet
+00121b fe/c01b: 68           ??mxd?z? e .....                 pla
+00121c fe/c01c: 4b           ??mxd??? e .....                 phk
+00121d fe/c01d: 20 53 fe     ??mxd??? e .....                 jsr     _callModEconet
+001220 fe/c020: 2b           ??mxd??? e .....                 pld                       ;get back COP stack DP
+001221 fe/c021: 85 05        ??mxd??? e .....                 sta     DPCOP_AH
+001223 fe/c023: 86 03        ??mxd??? e .....                 stx     DPCOP_X
+001225 fe/c025: 84 01        ??mxd??? e .....                 sty     DPCOP_Y
+001227 fe/c027: e2 20        ??mxd??? e .....                 sep     #$20
                                                               .rwid   shortm
+001229 fe/c029: 8b           ??Mxd??? e .....                 phb
+00122a fe/c02a: 68           ??Mxd??? e .....                 pla
+00122b fe/c02b: 85 07        ??Mxd??? e .....                 sta     DPCOP_B
+00122d fe/c02d: c2 20        ??Mxd??? e .....                 rep     #$20
                                                               .rwid   longm
+00122f fe/c02f: 6b           ??mxd??? e ...#.                 rtl

+001230 fe/c030: 2b           ??mxd?Z? e ....> @noeconet       pld
+001231 fe/c031: 2b           ??mxd??? e .....                 pld
+001232 fe/c032: 2b           ??mxd??? e .....                 pld
+001233 fe/c033: 64 03        ??mxd??? e .....                 stz     DPCOP_X
+001235 fe/c035: 38           ??mxd??? e .....                 sec
+001236 fe/c036: 6b           ??mxd??C e ...#.                 rtl

                                               ********************************************************************************
                                               * COP 4A - OPNET high-level Econet routines                                    *
                                               * Action: This call performs several tasks depending upon the reason code in   *
                                               * X.                                                                           *
                                               * On entry: X = reason code.                                                   *
                                               *           Other registers contain or point to arguments.                     *
                                               * On exit:  C = 0 means that the call was successful.                          *
                                               *           If C = 1 then the call failed and the error code is in X.          *
                                               *           If C = 1 and X = 0 then the Econei module is not present.          *
                                               *           If C = 1 and X = 1 then BHA points to an error message.            *
                                               *           D preserved                                                        *
                                               ********************************************************************************
+001237 fe/c037: 0b           ??mxd??? e @T... COP_4A          phd
+001238 fe/c038: 48           ??mxd??? e .....                 pha
+001239 fe/c039: a6 03        ??mxd??? e .....                 ldx     DPCOP_X
+00123b fe/c03b: f4 00 ac     ??mxd??? e .....                 pea     DPSYS
+00123e fe/c03e: 2b           ??mxd??? e .....                 pld
+00123f fe/c03f: a5 b3        ??mxd??? e .....                 lda     <DPSYS_MOD_NET+4
+001241 fe/c041: 05 b1        ??mxd??? e .....                 ora     <DPSYS_MOD_NET+2
+001243 fe/c043: 05 af        ??mxd??? e .....                 ora     <DPSYS_MOD_NET
+001245 fe/c045: f0 15        ??mxd??? e .....                 beq     @retsec
+001247 fe/c047: 68           ??mxd?z? e .....                 pla
+001248 fe/c048: 4b           ??mxd??? e .....                 phk
+001249 fe/c049: 20 4c fe     ??mxd??? e .....                 jsr     _callModNetwork
+00124c fe/c04c: 2b           ??mxd??? e .....                 pld
+00124d fe/c04d: 85 05        ??mxd??? e .....                 sta     DPCOP_AH
+00124f fe/c04f: 86 03        ??mxd??? e .....                 stx     DPCOP_X
+001251 fe/c051: 84 01        ??mxd??? e .....                 sty     DPCOP_Y
+001253 fe/c053: e2 20        ??mxd??? e .....                 sep     #$20
                                                               .rwid   shortm
+001255 fe/c055: 8b           ??Mxd??? e .....                 phb
+001256 fe/c056: 68           ??Mxd??? e .....                 pla
+001257 fe/c057: 85 07        ??Mxd??? e .....                 sta     DPCOP_B
+001259 fe/c059: c2 20        ??Mxd??? e .....                 rep     #$20
                                                               .rwid   longm
+00125b fe/c05b: 6b           ??mxd??? e ...#.                 rtl

+00125c fe/c05c: 68           ??mxd?Z? e ....> @retsec         pla
+00125d fe/c05d: 2b           ??mxd??? e .....                 pld
+00125e fe/c05e: 64 03        ??mxd??? e .....                 stz     DPCOP_X
+001260 fe/c060: 38           ??mxd??? e .....                 sec
+001261 fe/c061: 6b           ??mxd??C e ...#.                 rtl

                                               ********************************************************************************
                                               * COP 3F - OPATR - ???                                                         *
                                               ********************************************************************************
+001262 fe/c062: a2 0e 00     ??mxd??? e @T... COP_3F          ldx     #__MMBAS
+001265 fe/c065: 22 8c ff 00  n?mxd?z? e .....                 jsl     __MM
+001269 fe/c069: b0 2c        ??mxd??? e .....                 bcs     @retSecX0
+00126b fe/c06b: a8           ??mxd??c e .....                 tay
+00126c fe/c06c: a5 08        ??mxd??c e .....                 lda     DPCOP_DP
+00126e fe/c06e: 18           ??mxd??c e .....                 clc
+00126f fe/c06f: 65 03        ??mxd??c e .....                 adc     DPCOP_X
+001271 fe/c071: aa           ??mxd??? e .....                 tax
+001272 fe/c072: 88           ??mxd??? e .....                 dey
+001273 fe/c073: 98           ??mxd??? e .....                 tya
+001274 fe/c074: 9f 00 00 00  ??mxd??? e .....                 stal    f:$000000,x
+001278 fe/c078: 8b           ??mxd??? e .....                 phb
+001279 fe/c079: 8b           ??mxd??? e .....                 phb
+00127a fe/c07a: 68           ??mxd??? e .....                 pla
+00127b fe/c07b: 9f 02 00 00  ??mxd??? e .....                 stal    f:$000002,x
+00127f fe/c07f: 62 e1 3d     ??mxd??? e .....                 per     LFEFE64_anRTL-1
+001282 fe/c082: 68           ??mxd??? e .....                 pla
+001283 fe/c083: 9f 03 00 00  ??mxd??? e .....                 stal    f:$000003,x
+001287 fe/c087: 4b           ??mxd??? e .....                 phk
+001288 fe/c088: 4b           ??mxd??? e .....                 phk
+001289 fe/c089: 68           ??mxd??? e .....                 pla
+00128a fe/c08a: 9f 05 00 00  ??mxd??? e .....                 stal    f:$000005,x
+00128e fe/c08e: a9 ad de     ??mxd??? e .....                 lda     #$dead
+001291 fe/c091: 9f 06 00 00  n?mxd?z? e .....                 stal    f:$000006,x
+001295 fe/c095: 18           n?mxd?z? e .....                 clc
+001296 fe/c096: 6b           n?mxd?zc e ...#.                 rtl

+001297 fe/c097: 64 03        ??mxd??C e ....> @retSecX0       stz     DPCOP_X
+001299 fe/c099: 6b           ??mxd??C e ...#.                 rtl

                                               ********************************************************************************
                                               * COP 40 - OPFTR - ??? free something see OPATR                                *
                                               ********************************************************************************
+00129a fe/c09a: a5 08        ??mxd??? e @T... COP_40          lda     DPCOP_DP
+00129c fe/c09c: 18           ??mxd??? e .....                 clc
+00129d fe/c09d: 65 03        ??mxd??c e .....                 adc     DPCOP_X
+00129f fe/c09f: aa           ??mxd??? e .....                 tax
+0012a0 fe/c0a0: bf 06 00 00  ??mxd??? e .....                 ldal    f:DPCOP_AH+1,x
+0012a4 fe/c0a4: 49 ad de     ??mxd??? e .....                 eor     #$dead
+0012a7 fe/c0a7: c9 01 00     ??mxd??? e .....                 cmp     #$0001
+0012aa fe/c0aa: 6b           ??mxd??? e ...#.                 rtl

                                               ********************************************************************************
                                               * COP 3D - OPGSR - ???                                                         *
                                               *                                                                              *
                                               * Does an RTL                                                                  *
                                               ********************************************************************************
+0012ab fe/c0ab: 6b           ??mxd??? e @T.#. COP_3D          rtl

                                               ********************************************************************************
                                               * COP 3E - OPADY - add Y to BHA                                                *
                                               * Action: BHA becomes BHA+Y. Y is zeroed.                                      *
                                               *                                                                              *
                                               * On entry: No requirements                                                    *
                                               * On exit:  BHA := BHA + Y                                                     *
                                               *           Y = 0                                                              *
                                               *           DBX preserved                                                      *
                                               ********************************************************************************
+0012ac fe/c0ac: 18           ??mxd??? e @T... COP_3E          clc
+0012ad fe/c0ad: 65 01        ??mxd??c e .....                 adc     DPCOP_Y
+0012af fe/c0af: 85 05        ??mxd??? e .....                 sta     DPCOP_AH
+0012b1 fe/c0b1: 90 06        ??mxd??? e .....                 bcc     LFEC0B9
+0012b3 fe/c0b3: e2 20        ??mxd??C e .....                 sep     #$20
                                                               .rwid   shortm
+0012b5 fe/c0b5: e6 07        ??Mxd??C e .....                 inc     DPCOP_B
+0012b7 fe/c0b7: c2 20        ??Mxd??C e .....                 rep     #$20
                                                               .rwid   longm
+0012b9 fe/c0b9: 64 01        ??mxd??? e ....> LFEC0B9         stz     DPCOP_Y
+0012bb fe/c0bb: 6b           ??mxd??? e ...#.                 rtl

                                               ********************************************************************************
                                               * COP 32 - OPSUM - compute end-around-carry sum                                *
                                               *                                                                              *
                                               * Action: Gives a sum of all the bits in a block whose start is pointed to by  *
                                               * BHA and whose length in bytes is in Y.                                       *
                                               *                                                                              *
                                               * On entry: BHA points to thestartof the block to be summed.                   *
                                               *           Y = length of block in bytes.                                      *
                                               * On exit:  If C = 0 then thesum has been computed and theresult is in HA.     *
                                               *           If C = 1 then either the length was zero (Y = 0) or all the bytes  *
                                               *           in the block were zero (HA = 0).                                   *
                                               *           DXY preserved                                                      *
                                               ********************************************************************************
+0012bc fe/c0bc: bb           ??mxd??? e @T... COP_32          tyx                       ;byte count into X
+0012bd fe/c0bd: f0 2b        ??mxd??? e .....                 beq     @retzsec
+0012bf fe/c0bf: a9 00 00     ??mxd?z? e .....                 lda     #$0000            ;sum
+0012c2 fe/c0c2: a8           n?mxd?Z? e .....                 tay                       ;zero offset
+0012c3 fe/c0c3: 18           ??mxd??? e .....                 clc
+0012c4 fe/c0c4: ca           ??mxd??? e ....> @lp             dex
+0012c5 fe/c0c5: d0 0e        ??mxd??? e .....                 bne     @nla              ;if zero here then 1 byte left
+0012c7 fe/c0c7: 48           ??mxd?Z? e .....                 pha
+0012c8 fe/c0c8: b7 05        ??mxd?Z? e .....                 lda     [DPCOP_AH],y
+0012ca fe/c0ca: c8           ??mxd??? e .....                 iny
+0012cb fe/c0cb: 29 ff 00     ??mxd??? e .....                 and     #$00ff
+0012ce fe/c0ce: 63 01        n?mxd??? e .....                 adc     $01,S             ;add to low part of stacked A
+0012d0 fe/c0d0: 83 01        ??mxd??? e .....                 sta     $01,S
+0012d2 fe/c0d2: 68           ??mxd??? e .....                 pla                       ;pop A
+0012d3 fe/c0d3: 80 07        ??mxd??? e ...#.                 bra     LFEC0DC           ;and return

+0012d5 fe/c0d5: 77 05        ??mxd?z? e ....> @nla            adc     [DPCOP_AH],y
+0012d7 fe/c0d7: c8           ??mxd??? e .....                 iny
+0012d8 fe/c0d8: c8           ??mxd??? e .....                 iny
+0012d9 fe/c0d9: ca           ??mxd??? e .....                 dex
+0012da fe/c0da: d0 e8        ??mxd??? e .....                 bne     @lp
+0012dc fe/c0dc: 69 00 00     ??mxd??? e ....> LFEC0DC         adc     #$0000            ;add last carry in
+0012df fe/c0df: f0 09        ??mxd??? e .....                 beq     @retzsec
+0012e1 fe/c0e1: aa           ??mxd?z? e .....                 tax
+0012e2 fe/c0e2: 57 05        ??mxd??? e .....                 eor     [DPCOP_AH],y      ;this looks to additionally check against any checksum after the block
+0012e4 fe/c0e4: 86 05        ??mxd??? e .....                 stx     DPCOP_AH
+0012e6 fe/c0e6: c9 01 00     ??mxd??? e .....                 cmp     #$0001            ;return Z for match QRY - check this
+0012e9 fe/c0e9: 6b           ??mxd??? e ...#.                 rtl

+0012ea fe/c0ea: 64 05        ??mxd?Z? e ....> @retzsec        stz     DPCOP_AH
+0012ec fe/c0ec: 38           ??mxd?Z? e .....                 sec
+0012ed fe/c0ed: 6b           ??mxd?ZC e ...#.                 rtl

                                               ********************************************************************************
                                               * COP 2E - OPFPO - find pool owner                                             *
                                               *                                                                              *
                                               * Action This call attempts to find the module which owns the memory pool      *
                                               * pointed to by BHA.                                                           *
                                               *                                                                              *
                                               * On Entry: BHA points to the pool address.                                    *
                                               *           Y = 0                                                              *
                                               * On Exit:  If C = 0 then the pool owner has been found, and BHA ptnnts to an  *
                                               *           address within the owner module.                                   *
                                               *           If C = 1 then the owner was not found.                             *
                                               *           No registers preserved                                             *
                                               *                                                                              *
                                               * TODO DOCO: Further to documented API if Y non-zero on entry then BHA is      *
                                               * ignored instead Y is used as a pool handle                                   *
                                               ********************************************************************************
+0012ee fe/c0ee: 0b           ??mxd??? e @T... COP_2E          phd
+0012ef fe/c0ef: 5a           ??mxd??? e .....                 phy
+0012f0 fe/c0f0: 7a           ??mxd??? e .....                 ply
+0012f1 fe/c0f1: d0 09        ??mxd??? e .....                 bne     LFEC0FC           ;if Y<>0 then skip MMFND and use passed Y
+0012f3 fe/c0f3: a2 14 00     ??mxd?Z? e .....                 ldx     #__MMFND
+0012f6 fe/c0f6: 22 8c ff 00  n?mxd?z? e .....                 jsl     __MM
+0012fa fe/c0fa: b0 30        ??mxd??? e .....                 bcs     @retpld
+0012fc fe/c0fc: 20 da ce     ??mxd??? e ....> LFEC0FC         jsr     getHandleYinDP
+0012ff fe/c0ff: b0 2b        ??mxd??? e .....                 bcs     @retpld
+001301 fe/c101: bf 08 00 00  ??mxd??c e .....                 ldal    f:$000008,x       ;QRY - TODO find out what __MMFND returns in X - undocumented!
+001305 fe/c105: 48           ??mxd??c e .....                 pha
+001306 fe/c106: a2 0e fe     ??mxd??c e .....                 ldx     #B0LST_MODULES_QRY ;get head of modules list
+001309 fe/c109: bf 00 00 00  ??mxd?z? e ....> LFEC109         ldal    f:$000000,x       ;get next module
+00130d fe/c10d: c9 0e fe     ??mxd??? e .....                 cmp     #B0LST_MODULES_QRY ;check for back round to start
+001310 fe/c110: f0 19        ??mxd??? e .....                 beq     @retpldpld        ;exit with C = 1
+001312 fe/c112: aa           ??mxd?z? e .....                 tax                       ;transfer A to X
+001313 fe/c113: c3 01        ??mxd??? e .....                 cmp     $01,S
+001315 fe/c115: d0 f2        ??mxd??? e .....                 bne     LFEC109
+001317 fe/c117: 3b           ??mxd?Z? e .....                 tsc
+001318 fe/c118: 5b           ??mxd??? e .....                 tcd
+001319 fe/c119: 8b           ??mxd??? e .....                 phb
+00131a fe/c11a: 4b           ??mxd??? e .....                 phk
+00131b fe/c11b: 20 2e f2     ??mxd??? e .....                 jsr     LFEF22E
+00131e fe/c11e: 68           ??mxd??? e .....                 pla
+00131f fe/c11f: ab           ??mxd??? e .....                 plb
+001320 fe/c120: 2b           ??mxd??? e .....                 pld
+001321 fe/c121: 85 05        ??mxd??? e .....                 sta     DPCOP_AH
+001323 fe/c123: e2 20        ??mxd??? e .....                 sep     #$20
                                                               .rwid   shortm
+001325 fe/c125: 8b           ??Mxd??? e .....                 phb
+001326 fe/c126: 68           ??Mxd??? e .....                 pla
+001327 fe/c127: 85 07        ??Mxd??? e .....                 sta     DPCOP_B
+001329 fe/c129: 18           ??Mxd??? e .....                 clc
+00132a fe/c12a: 6b           ??Mxd??c e ...#.                 rtl

                                                               .rwid   longm
+00132b fe/c12b: 2b           ??mxd?Z? e ....> @retpldpld      pld
+00132c fe/c12c: 2b           ??mxd??? e ....> @retpld         pld
+00132d fe/c12d: 6b           ??mxd??? e ...#.                 rtl

                                               ********************************************************************************
                                               * COP 2D - OPWRM - write module name                                           *
                                               *                                                                              *
                                               * Action: Given an address in BHA. this call will send the name of the module  *
                                               * which exists at that addressto the VDU drivers. If no module exists at that  *
                                               * address then the call returns with the carry bit set.                        *
                                               *                                                                              *
                                               * On entry: BHA points to somewhere within a module.                           *
                                               * On exit:  If C = 0 then the name of the module has been sent to the VDU      *
                                               * drivers.                                                                     *
                                               *           If C = 1 then the module was not found.                            *
                                               *           D preserved                                                        *
                                               ********************************************************************************
+00132e fe/c12e: 02 2c        ??mxd??? e @T... COP_2D          cop     COP_2C_OPFMA      ;find the module
+001330 fe/c130: b0 1f        ??mxd??? e .....                 bcs     @ret              ;branch if not found
+001332 fe/c132: 8b           ??mxd??c e .....                 phb
+001333 fe/c133: 48           ??mxd??c e .....                 pha
+001334 fe/c134: 3b           ??mxd??c e .....                 tsc
+001335 fe/c135: 5b           ??mxd??c e .....                 tcd
+001336 fe/c136: a0 00 00     ??mxd??c e .....                 ldy     #$0000
+001339 fe/c139: b7 01        ??mxd??? e ....> @lp             lda     [$01],y           ;get chars from pointer on stack
+00133b fe/c13b: 29 ff 00     ??mxd??? e .....                 and     #$00ff
+00133e fe/c13e: f0 0e        n?mxd??? e .....                 beq     @done
+001340 fe/c140: c9 2f 00     n?mxd?z? e .....                 cmp     #‘/’
+001343 fe/c143: f0 09        ??mxd??? e .....                 beq     @done             ;module name terminator
+001345 fe/c145: 20 93 e5     ??mxd?z? e .....                 jsr     modNameToUpper
+001348 fe/c148: eb           ??mxd??? e .....                 xba
+001349 fe/c149: 02 00        ??mxd??? e .....                 cop     COP_00_OPWRC
+00134b fe/c14b: c8           ??mxd??? e .....                 iny
+00134c fe/c14c: d0 eb        ??mxd??? e .....                 bne     @lp
+00134e fe/c14e: 68           ??mxd?Z? e ....> @done           pla
+00134f fe/c14f: ab           ??mxd??? e .....                 plb
+001350 fe/c150: 18           ??mxd??? e .....                 clc
+001351 fe/c151: 6b           ??mxd??? e ...#> @ret            rtl

                                               ********************************************************************************
                                               * COP 2C - OPFMA - find module given address within module                     *
                                               *                                                                              *
                                               * Action: Given an address in BHA, this call will reutm in BHA the address of  *
                                               * the name of the module tat exists at that address. If no module exists at    *
                                               * that address then the call returns with the carry bit set.                   *
                                               *                                                                              *
                                               * On entry: BHA points to somewhere within a module.                           *
                                               * On exit:  If C = 0 then BHA points to the module name.                       *
                                               *           If C = 1 then the module was not found.                            *
                                               *           D preserved                                                        *
                                               ********************************************************************************
+001352 fe/c152: 4b           ??mxd??? e @T... COP_2C          phk
+001353 fe/c153: 20 2b f2     ??mxd??? e .....                 jsr     brlFindModuleByAddress
+001356 fe/c156: 86 03        ??mxd??? e .....                 stx     DPCOP_X
+001358 fe/c158: b0 0a        ??mxd??? e .....                 bcs     @ret
+00135a fe/c15a: 85 05        ??mxd??c e .....                 sta     DPCOP_AH
+00135c fe/c15c: e2 20        ??mxd??c e .....                 sep     #$20
                                                               .rwid   shortm
+00135e fe/c15e: 8b           ??Mxd??c e .....                 phb
+00135f fe/c15f: 68           ??Mxd??c e .....                 pla
+001360 fe/c160: 85 07        ??Mxd??c e .....                 sta     DPCOP_B
+001362 fe/c162: c2 20        ??Mxd??c e .....                 rep     #$20
                                                               .rwid   longm
+001364 fe/c164: 6b           ??mxd??? e ...#> @ret            rtl

                                               ********************************************************************************
                                               * COP 18 - OPRLH - Read hex number                                             *
                                               *                                                                              *
                                               * Action: BHA points to a line of hex in meniory. This call translates a       *
                                               * certain number of hex digits into nibbles stored starting at the location    *
                                               * pointed to by DX. The number of nibbles required is in Y.                    *
                                               *                                                                              *
                                               * On entry: BHA points to line of hexcharacters.                               *
                                               *           DX points to location at which number is to be stored in direct    *
                                               *           page.                                                              *
                                               *           Y contains the number of nibbles required.                         *
                                               * On exit:  BHA points to the rest of the line.                                *
                                               *           If C = 0 then DX points to the Y nibbles in direct page.           *
                                               *           If C = 1 then the call failed.                                     *
                                               *           DXY preserved                                                      *
                                               ********************************************************************************
+001365 fe/c165: a5 08        ??mxd??? e @T... COP_18          lda     DPCOP_DP
+001367 fe/c167: 18           ??mxd??? e .....                 clc
+001368 fe/c168: 65 03        ??mxd??c e .....                 adc     DPCOP_X
+00136a fe/c16a: b0 37        ??mxd??? e .....                 bcs     @secrts
+00136c fe/c16c: aa           ??mxd??c e .....                 tax
+00136d fe/c16d: a5 01        ??mxd??c e .....                 lda     DPCOP_Y
+00136f fe/c16f: 1a           ??mxd??c e .....                 inc     A
+001370 fe/c170: f0 31        ??mxd??c e .....                 beq     @secrts
+001372 fe/c172: 4a           ??mxd?zc e .....                 lsr     A
+001373 fe/c173: f0 2e        n?mxd??? e .....                 beq     @secrts
+001375 fe/c175: a8           n?mxd?z? e .....                 tay
+001376 fe/c176: e2 20        ??mxd??? e .....                 sep     #$20
                                                               .rwid   shortm
+001378 fe/c178: da           ??Mxd??? e .....                 phx
+001379 fe/c179: 5a           ??Mxd??? e .....                 phy
+00137a fe/c17a: a9 00        ??Mxd??? e .....                 lda     #$00
+00137c fe/c17c: 9f 00 00 00  ??Mxd??? e ....> @zlp            stal    f:$000000,x       ;zero the result
+001380 fe/c180: e8           ??Mxd??? e .....                 inx
+001381 fe/c181: 88           ??Mxd??? e .....                 dey
+001382 fe/c182: d0 f8        ??Mxd??? e .....                 bne     @zlp
+001384 fe/c184: 7a           ??Mxd?Z? e .....                 ply
+001385 fe/c185: fa           ??Mxd??? e .....                 plx
+001386 fe/c186: c2 20        ??Mxd??? e .....                 rep     #$20
                                                               .rwid   longm
+001388 fe/c188: 20 f2 c1     ??mxd??? e .....                 jsr     scanHexBHA
+00138b fe/c18b: b0 16        ??mxd??? e .....                 bcs     @secrts
+00138d fe/c18d: 20 b4 c1     ??mxd??c e ....> LFEC18D         jsr     getCharBHAinc
+001390 fe/c190: b0 0c        ??mxd??? e .....                 bcs     @clcret
+001392 fe/c192: 20 cd c1     ??mxd??c e .....                 jsr     parseHexDigit
+001395 fe/c195: b0 07        ??mxd??? e .....                 bcs     @clcret
+001397 fe/c197: 20 01 c2     ??mxd??c e .....                 jsr     LFEC201
+00139a fe/c19a: b0 04        ??mxd??? e .....                 bcs     LFEC1A0
+00139c fe/c19c: 80 ef        ??mxd??c e ...#.                 bra     LFEC18D

+00139e fe/c19e: 18           ??mxd??C e ....> @clcret         clc
+00139f fe/c19f: 6b           ??mxd??c e ...#.                 rtl

+0013a0 fe/c1a0: 20 a5 c1     ??mxd??C e ....> LFEC1A0         jsr     @lp2
+0013a3 fe/c1a3: 38           ??mxd??? e ....> @secrts         sec
+0013a4 fe/c1a4: 6b           ??mxd??C e ...#.                 rtl

+0013a5 fe/c1a5: 20 b4 c1     ??mxd??? e ....> @lp2            jsr     getCharBHAinc
+0013a8 fe/c1a8: b0 09        ??mxd??? e .....                 bcs     @ret
+0013aa fe/c1aa: 20 cd c1     ??mxd??c e .....                 jsr     parseHexDigit
+0013ad fe/c1ad: 90 f6        ??mxd??? e .....                 bcc     @lp2
+0013af fe/c1af: 20 66 c2     ??mxd??C e .....                 jsr     decDPCOP_BHA
+0013b2 fe/c1b2: 18           ??mxd??? e .....                 clc
+0013b3 fe/c1b3: 60           ??mxd??? e ...#> @ret            rts

+0013b4 fe/c1b4: a7 05        ??mxd??? e ....> getCharBHAinc   lda     [DPCOP_AH]
+0013b6 fe/c1b6: 29 ff 00     ??mxd??? e .....                 and     #$00ff
+0013b9 fe/c1b9: 20 5b c2     n?mxd??? e .....                 jsr     incDPCOP_BHA
+0013bc fe/c1bc: c9 20 00     ??mxd??? e .....                 cmp     #‘ ’
+0013bf fe/c1bf: b0 05        ??mxd??? e .....                 bcs     @retclc
+0013c1 fe/c1c1: 20 66 c2     ??mxd??c e .....                 jsr     decDPCOP_BHA
+0013c4 fe/c1c4: 38           ??mxd??? e .....                 sec
+0013c5 fe/c1c5: 60           ??mxd??C e ...#.                 rts

+0013c6 fe/c1c6: c9 3a 00     ??mxd??C e ....> @retclc         cmp     #‘:’
+0013c9 fe/c1c9: 90 00        ??mxd??? e .....                 bcc     @daft             ;TODO: beautiful - I think this can go?
+0013cb fe/c1cb: 18           ??mxd??? e ....> @daft           clc
+0013cc fe/c1cc: 60           ??mxd??c e ...#.                 rts

+0013cd fe/c1cd: c9 30 00     ??mxd??c e ....> parseHexDigit   cmp     #‘0’
+0013d0 fe/c1d0: 90 1e        ??mxd??? e .....                 bcc     @retsec
+0013d2 fe/c1d2: c9 3a 00     ??mxd??C e .....                 cmp     #‘:’
+0013d5 fe/c1d5: 90 13        ??mxd??? e .....                 bcc     @sk09
+0013d7 fe/c1d7: 29 df 00     ??mxd??C e .....                 and     #$00df
+0013da fe/c1da: c9 41 00     n?mxd??C e .....                 cmp     #‘A’
+0013dd fe/c1dd: 90 11        ??mxd??? e .....                 bcc     @retsec
+0013df fe/c1df: c9 47 00     ??mxd??C e .....                 cmp     #‘G’
+0013e2 fe/c1e2: b0 0c        ??mxd??? e .....                 bcs     @retsec
+0013e4 fe/c1e4: 38           ??mxd??c e .....                 sec
+0013e5 fe/c1e5: e9 37 00     ??mxd??C e .....                 sbc     #$0037
+0013e8 fe/c1e8: 18           ??mxd??? e .....                 clc
+0013e9 fe/c1e9: 60           ??mxd??c e ...#.                 rts

+0013ea fe/c1ea: 38           ??mxd??c e ....> @sk09           sec
+0013eb fe/c1eb: e9 30 00     ??mxd??C e .....                 sbc     #‘0’
+0013ee fe/c1ee: 18           ??mxd??? e .....                 clc
+0013ef fe/c1ef: 60           ??mxd??c e ...#.                 rts

+0013f0 fe/c1f0: 38           ??mxd??? e ....> @retsec         sec
+0013f1 fe/c1f1: 60           ??mxd??C e ...#.                 rts

+0013f2 fe/c1f2: 20 b4 c1     ??mxd??? e ....> scanHexBHA      jsr     getCharBHAinc
+0013f5 fe/c1f5: b0 09        ??mxd??? e .....                 bcs     @retsec
+0013f7 fe/c1f7: 20 cd c1     ??mxd??c e .....                 jsr     parseHexDigit
+0013fa fe/c1fa: b0 f6        ??mxd??? e .....                 bcs     scanHexBHA
+0013fc fe/c1fc: 20 66 c2     ??mxd??c e .....                 jsr     decDPCOP_BHA
+0013ff fe/c1ff: 18           ??mxd??? e .....                 clc
+001400 fe/c200: 60           ??mxd??? e ...#> @retsec         rts

+001401 fe/c201: 0a           ??mxd??c e ....> LFEC201         asl     A
+001402 fe/c202: 0a           ??mxd??? e .....                 asl     A
+001403 fe/c203: 0a           ??mxd??? e .....                 asl     A
+001404 fe/c204: 0a           ??mxd??? e .....                 asl     A
+001405 fe/c205: 0a           ??mxd??? e .....                 asl     A
+001406 fe/c206: 0a           ??mxd??? e .....                 asl     A
+001407 fe/c207: 0a           ??mxd??? e .....                 asl     A
+001408 fe/c208: 0a           ??mxd??? e .....                 asl     A
+001409 fe/c209: 0a           ??mxd??? e .....                 asl     A
+00140a fe/c20a: 0a           ??mxd??? e .....                 asl     A
+00140b fe/c20b: 0a           ??mxd??? e .....                 asl     A
+00140c fe/c20c: 0a           ??mxd??? e .....                 asl     A
+00140d fe/c20d: 0a           ??mxd??? e .....                 asl     A
+00140e fe/c20e: 20 43 c2     ??mxd??? e .....                 jsr     LFEC243
+001411 fe/c211: b0 2c        ??mxd??? e .....                 bcs     LFEC23F
+001413 fe/c213: 0a           ??mxd??c e .....                 asl     A
+001414 fe/c214: 20 43 c2     ??mxd??? e .....                 jsr     LFEC243
+001417 fe/c217: b0 26        ??mxd??? e .....                 bcs     LFEC23F
+001419 fe/c219: 0a           ??mxd??c e .....                 asl     A
+00141a fe/c21a: 20 43 c2     ??mxd??? e .....                 jsr     LFEC243
+00141d fe/c21d: b0 20        ??mxd??? e .....                 bcs     LFEC23F
+00141f fe/c21f: 0a           ??mxd??c e .....                 asl     A
+001420 fe/c220: 20 43 c2     ??mxd??? e .....                 jsr     LFEC243
+001423 fe/c223: b0 1a        ??mxd??? e .....                 bcs     LFEC23F
+001425 fe/c225: a5 01        ??mxd??c e .....                 lda     DPCOP_Y
+001427 fe/c227: 4a           ??mxd??c e .....                 lsr     A
+001428 fe/c228: 90 17        n?mxd??? e .....                 bcc     LFEC241
+00142a fe/c22a: da           n?mxd??C e .....                 phx
+00142b fe/c22b: 5a           n?mxd??C e .....                 phy
+00142c fe/c22c: e2 20        n?mxd??C e .....                 sep     #$20
                                                               .rwid   shortm
+00142e fe/c22e: e8           ??Mxd??C e ....> LFEC22E         inx
+00142f fe/c22f: 88           ??Mxd??C e .....                 dey
+001430 fe/c230: d0 fc        ??Mxd??C e .....                 bne     LFEC22E
+001432 fe/c232: ca           ??Mxd?ZC e .....                 dex
+001433 fe/c233: a9 0f        ??Mxd??C e .....                 lda     #$0f
+001435 fe/c235: df 00 00 00  n?Mxd?zC e .....                 cmpl    f:$000000,x
+001439 fe/c239: c2 20        ??Mxd??? e .....                 rep     #$20
                                                               .rwid   longm
+00143b fe/c23b: 7a           ??mxd??? e .....                 ply
+00143c fe/c23c: fa           ??mxd??? e .....                 plx
+00143d fe/c23d: b0 02        ??mxd??? e .....                 bcs     LFEC241
+00143f fe/c23f: 38           ??mxd??? e ....> LFEC23F         sec
+001440 fe/c240: 60           ??mxd??C e ...#.                 rts

+001441 fe/c241: 18           ??mxd??? e ....> LFEC241         clc
+001442 fe/c242: 60           ??mxd??c e ...#.                 rts

+001443 fe/c243: 48           ??mxd??? e ....> LFEC243         pha
+001444 fe/c244: e2 20        ??mxd??? e .....                 sep     #$20
                                                               .rwid   shortm
+001446 fe/c246: da           ??Mxd??? e .....                 phx
+001447 fe/c247: 5a           ??Mxd??? e .....                 phy
+001448 fe/c248: bf 00 00 00  ??Mxd??? e ....> LFEC248         ldal    f:$000000,x
+00144c fe/c24c: 2a           ??Mxd??? e .....                 rol     A
+00144d fe/c24d: 9f 00 00 00  ??Mxd??? e .....                 stal    f:$000000,x
+001451 fe/c251: e8           ??Mxd??? e .....                 inx
+001452 fe/c252: 88           ??Mxd??? e .....                 dey
+001453 fe/c253: d0 f3        ??Mxd??? e .....                 bne     LFEC248
+001455 fe/c255: 7a           ??Mxd?Z? e .....                 ply
+001456 fe/c256: fa           ??Mxd??? e .....                 plx
+001457 fe/c257: c2 20        ??Mxd??? e .....                 rep     #$20
                                                               .rwid   longm
+001459 fe/c259: 68           ??mxd??? e .....                 pla
+00145a fe/c25a: 60           ??mxd??? e ...#.                 rts

+00145b fe/c25b: e6 05        n?mxd??? e ....> incDPCOP_BHA    inc     DPCOP_AH
+00145d fe/c25d: d0 06        ??mxd??? e .....                 bne     @sk
+00145f fe/c25f: e2 20        ??mxd?Z? e .....                 sep     #$20
                                                               .rwid   shortm
+001461 fe/c261: e6 07        ??Mxd?Z? e .....                 inc     DPCOP_B
+001463 fe/c263: c2 20        ??Mxd??? e .....                 rep     #$20
                                                               .rwid   longm
+001465 fe/c265: 60           ??mxd??? e ...#> @sk             rts

+001466 fe/c266: 48           ??mxd??? e ....> decDPCOP_BHA    pha
+001467 fe/c267: a5 05        ??mxd??? e .....                 lda     DPCOP_AH
+001469 fe/c269: c9 01 00     ??mxd??? e .....                 cmp     #$0001
+00146c fe/c26c: c6 05        ??mxd??? e .....                 dec     DPCOP_AH
+00146e fe/c26e: b0 06        ??mxd??? e .....                 bcs     @ret
+001470 fe/c270: e2 20        ??mxd??c e .....                 sep     #$20
                                                               .rwid   shortm
+001472 fe/c272: c6 07        ??Mxd??c e .....                 dec     DPCOP_B
+001474 fe/c274: c2 20        ??Mxd??c e .....                 rep     #$20
                                                               .rwid   longm
+001476 fe/c276: 68           ??mxd??? e ....> @ret            pla
+001477 fe/c277: 60           ??mxd??? e ...#.                 rts

                                               ********************************************************************************
                                               * COP 19 - OPRLS - ?                                                           *
                                               *                                                                              *
                                               * Appears to read a string surrounded by quotes into a buffer at DPX, length Y *
                                               ********************************************************************************
+001478 fe/c278: a5 08        ??mxd??? e @T... COP_19          lda     DPCOP_DP
+00147a fe/c27a: 18           ??mxd??? e .....                 clc
+00147b fe/c27b: 65 03        ??mxd??c e .....                 adc     DPCOP_X
+00147d fe/c27d: b0 38        ??mxd??? e .....                 bcs     @retsec
+00147f fe/c27f: aa           ??mxd??c e .....                 tax
+001480 fe/c280: 20 b4 c1     ??mxd??? e ....> @scanlp         jsr     getCharBHAinc     ;skip forward looking for quotes
+001483 fe/c283: b0 32        ??mxd??? e .....                 bcs     @retsec
+001485 fe/c285: c9 22 00     ??mxd??c e .....                 cmp     #‘"’
+001488 fe/c288: d0 f6        ??mxd??? e .....                 bne     @scanlp
+00148a fe/c28a: a0 00 00     ??mxd?Z? e .....                 ldy     #$0000
+00148d fe/c28d: 20 b4 c1     ??mxd??? e ....> @lp             jsr     getCharBHAinc
+001490 fe/c290: b0 25        ??mxd??? e .....                 bcs     @retsec
+001492 fe/c292: c9 22 00     ??mxd??c e .....                 cmp     #‘"’
+001495 fe/c295: d0 0a        ??mxd??? e .....                 bne     @noq
+001497 fe/c297: 20 b4 c1     ??mxd?Z? e .....                 jsr     getCharBHAinc     ;check for ""
+00149a fe/c29a: b0 10        ??mxd??? e .....                 bcs     @zetend
+00149c fe/c29c: c9 22 00     ??mxd??c e .....                 cmp     #‘"’
+00149f fe/c29f: d0 08        ??mxd??? e .....                 bne     @decretok
+0014a1 fe/c2a1: 20 b9 c2     ??mxd??? e ....> @noq            jsr     @staDPY           ;store char
+0014a4 fe/c2a4: c8           ??mxd??? e .....                 iny
+0014a5 fe/c2a5: f0 10        ??mxd??? e .....                 beq     @retsec
+0014a7 fe/c2a7: 80 e4        ??mxd?z? e ...#.                 bra     @lp

+0014a9 fe/c2a9: 20 66 c2     ??mxd?z? e ....> @decretok       jsr     decDPCOP_BHA
+0014ac fe/c2ac: a9 00 00     ??mxd??? e ....> @zetend         lda     #$0000
+0014af fe/c2af: 20 b9 c2     n?mxd?Z? e .....                 jsr     @staDPY
+0014b2 fe/c2b2: c4 01        ??mxd??? e .....                 cpy     DPCOP_Y
+0014b4 fe/c2b4: 84 01        ??mxd??? e .....                 sty     DPCOP_Y
+0014b6 fe/c2b6: 6b           ??mxd??? e ...#.                 rtl

+0014b7 fe/c2b7: 38           ??mxd??? e ....> @retsec         sec
+0014b8 fe/c2b8: 6b           ??mxd??C e ...#.                 rtl

+0014b9 fe/c2b9: c4 01        ??mxd??? e ....> @staDPY         cpy     DPCOP_Y
+0014bb fe/c2bb: b0 0a        ??mxd??? e .....                 bcs     @ret
+0014bd fe/c2bd: 0b           ??mxd??c e .....                 phd
+0014be fe/c2be: da           ??mxd??c e .....                 phx
+0014bf fe/c2bf: 2b           ??mxd??c e .....                 pld
+0014c0 fe/c2c0: e2 20        ??mxd??c e .....                 sep     #$20
                                                               .rwid   shortm
+0014c2 fe/c2c2: 97 00        ??Mxd??c e .....                 sta     [$00],y
+0014c4 fe/c2c4: c2 20        ??Mxd??c e .....                 rep     #$20
                                                               .rwid   longm
+0014c6 fe/c2c6: 2b           ??mxd??c e .....                 pld
+0014c7 fe/c2c7: 60           ??mxd??? e ...#> @ret            rts

                                               ********************************************************************************
                                               * COP 1C - OPSCX - Save context                                                *
                                               *                                                                              *
                                               * Action: Used by the menu program (and others) to save the context of the     *
                                               * screen and the operating system variables when switching to a different      *
                                               * task. It must be used only after an OPSSC call.                              *
                                               *                                                                              *
                                               * On entry: No Requirements.                                                   *
                                               * On exit:  If C = 0 then the call succeeded and Y contains the context pool   *
                                               *           handle.                                                            *
                                               *           If C = 1 then the call failed.                                     *
                                               *           D preserved                                                        *
                                               ********************************************************************************
+0014c8 fe/c2c8: a2 4a 00     ??mxd??? e @T... COP_1C          ldx     #__VDU_4A
+0014cb fe/c2cb: 4b           n?mxd?z? e .....                 phk
+0014cc fe/c2cc: 20 38 fe     n?mxd?z? e .....                 jsr     callModVDU        ;Get VDU variables size QRY - VDU mod seems to return 000080
+0014cf fe/c2cf: a2 0c 00     ??mxd??? e .....                 ldx     #$000c
+0014d2 fe/c2d2: 20 ba c3     n?mxd?z? e .....                 jsr     BXXaddHA
+0014d5 fe/c2d5: a0 02 00     ??mxd??? e .....                 ldy     #$0002
+0014d8 fe/c2d8: a2 0c 00     n?mxd?z? e .....                 ldx     #__MMALA
+0014db fe/c2db: 22 8c ff 00  n?mxd?z? e .....                 jsl     __MM
+0014df fe/c2df: b0 0d        ??mxd??? e .....                 bcs     LFEC2EE
+0014e1 fe/c2e1: 84 01        ??mxd??c e .....                 sty     DPCOP_Y
+0014e3 fe/c2e3: 20 7d c3     ??mxd??c e .....                 jsr     saveCTX
+0014e6 fe/c2e6: a2 42 00     ??mxd??? e .....                 ldx     #__VDU_42
+0014e9 fe/c2e9: 4b           n?mxd?z? e .....                 phk
+0014ea fe/c2ea: 20 38 fe     n?mxd?z? e .....                 jsr     callModVDU
+0014ed fe/c2ed: 18           ??mxd??? e .....                 clc
+0014ee fe/c2ee: 6b           ??mxd??? e ...#> LFEC2EE         rtl

                                               ********************************************************************************
                                               * COP 1D - OPRCX - Restore context                                             *
                                               *                                                                              *
                                               * Action: Used by the menu program (and othets) to restore a context           *
                                               * previously saved using OPSCX. It must be used only before an OPRSC call.     *
                                               *                                                                              *
                                               * On entry: Y = context pool handle allocated by OPSCX. Must be in 16bit       *
                                               * XYmode.                                                                      *
                                               * On exit:  If C = O then the context is restored and the pool freed.          *
                                               *           If C = I then the call failed.                                     *
                                               *           D preserved                                                        *
                                               ********************************************************************************
+0014ef fe/c2ef: a2 0e 00     ??mxd??? e @T... COP_1D          ldx     #__MMBAS
+0014f2 fe/c2f2: 22 8c ff 00  n?mxd?z? e .....                 jsl     __MM
+0014f6 fe/c2f6: b0 13        ??mxd??? e .....                 bcs     @ret
+0014f8 fe/c2f8: 20 7a c3     ??mxd??c e .....                 jsr     restoreCTX
+0014fb fe/c2fb: a2 46 00     ??mxd??? e .....                 ldx     #__VDU_46
+0014fe fe/c2fe: 4b           n?mxd?z? e .....                 phk
+0014ff fe/c2ff: 20 38 fe     n?mxd?z? e .....                 jsr     callModVDU
+001502 fe/c302: a4 01        ??mxd??? e .....                 ldy     DPCOP_Y
+001504 fe/c304: a2 02 00     ??mxd??? e .....                 ldx     #__MMFP
+001507 fe/c307: 22 8c ff 00  n?mxd?z? e .....                 jsl     __MM
+00150b fe/c30b: 6b           ??mxd??? e ...#> @ret            rtl

                                               ********************************************************************************
                                               * COP 1E - OPSSC - save the screen                                             *
                                               *                                                                              *
                                               * Action: Used by the menu program (and others) to save the contents of the    *
                                               * screen display.                                                              *
                                               *                                                                              *
                                               * On entry: Must be in 16bit XY mode.                                          *
                                               * On exit: If C = 0 then the call succeeded and Y contains the screenpool      *
                                               * handle.                                                                      *
                                               *          If C = 1 then the call failed.                                      *
                                               *          D preserved                                                         *
                                               ********************************************************************************
+00150c fe/c30c: a2 40 00     ??mxd??? e @T... COP_1E          ldx     #__VDU_40
+00150f fe/c30f: 4b           n?mxd?z? e .....                 phk
+001510 fe/c310: 20 38 fe     n?mxd?z? e .....                 jsr     callModVDU
+001513 fe/c313: a0 02 00     ??mxd??? e .....                 ldy     #$0002
+001516 fe/c316: a2 0a 00     n?mxd?z? e .....                 ldx     #__MMASA
+001519 fe/c319: 22 8c ff 00  n?mxd?z? e .....                 jsl     __MM
+00151d fe/c31d: b0 0a        ??mxd??? e .....                 bcs     LFEC329
+00151f fe/c31f: 84 01        ??mxd??c e .....                 sty     DPCOP_Y
+001521 fe/c321: a2 44 00     ??mxd??c e .....                 ldx     #__VDU_44
+001524 fe/c324: 4b           n?mxd?zc e .....                 phk
+001525 fe/c325: 20 38 fe     n?mxd?zc e .....                 jsr     callModVDU
+001528 fe/c328: 18           ??mxd??? e .....                 clc
+001529 fe/c329: 6b           ??mxd??? e ...#> LFEC329         rtl

                                               ********************************************************************************
                                               * COP 1F - OPRSC - restore the screen                                          *
                                               *                                                                              *
                                               * Action: Used by the menu program (and others) to restore the contents of a   *
                                               * screen previously saved using OPSSC.                                         *
                                               *                                                                              *
                                               * On entry: Y = screen pool handle allocated by OPSSC.                         *
                                               * On exit:  If C = O then the screen is restored and the pool freed.           *
                                               *           If C = 1 then the call failed.                                     *
                                               *           D preserved                                                        *
                                               ********************************************************************************
+00152a fe/c32a: a2 0e 00     ??mxd??? e @T... COP_1F          ldx     #__MMBAS
+00152d fe/c32d: 22 8c ff 00  n?mxd?z? e .....                 jsl     __MM              ;check the pool handle and get the base
+001531 fe/c331: b0 10        ??mxd??? e .....                 bcs     @ret
+001533 fe/c333: a2 48 00     ??mxd??c e .....                 ldx     #__VDU_48
+001536 fe/c336: 4b           n?mxd?zc e .....                 phk
+001537 fe/c337: 20 38 fe     n?mxd?zc e .....                 jsr     callModVDU        ;copy screen back
                                               ********************************************************************************
                                               * COP 49 - OPFSC - free screen                                                 *
                                               *                                                                              *
                                               * Action: Frees a saved screen which is no longer required.                    *
                                               *                                                                              *
                                               * On entry: Y = screen pool handle allocated by OPSSC.                         *
                                               * On exit:  If C = O then the screen is freed and the pool handle freed.       *
                                               *           If C = 1 then the call failed.                                     *
                                               *           D preserved                                                        *
                                               ********************************************************************************
+00153a fe/c33a: a4 01        ??mxd??? e .T..> COP_49          ldy     DPCOP_Y
+00153c fe/c33c: a2 02 00     ??mxd??? e .....                 ldx     #__MMFP
+00153f fe/c33f: 22 8c ff 00  n?mxd?z? e .....                 jsl     __MM              ;free the pool
+001543 fe/c343: 6b           ??mxd??? e ...#> @ret            rtl

                                               ********************************************************************************
                                               * COP 5E - OPFCX free context of VDU and MOS (including fonts)                 *
                                               *                                                                              *
                                               * Action: Frees a saved context that is no longer required.                    *
                                               *                                                                              *
                                               * On entry: Y = context pool handle allocated by OPSCX.                        *
                                               * On exit:  If C = 0 then the context is freed and the pool handle freed.      *
                                               *           If C = 1 then the call failed to free the context                  *
                                               *           D preserved                                                        *
                                               ********************************************************************************
+001544 fe/c344: a2 0e 00     ??mxd??? e @T... COP_5E          ldx     #__MMBAS
+001547 fe/c347: 22 8c ff 00  n?mxd?z? e .....                 jsl     __MM
+00154b fe/c34b: b0 11        ??mxd??? e .....                 bcs     @retsec
+00154d fe/c34d: 5a           ??mxd??c e .....                 phy
+00154e fe/c34e: a2 0c 00     ??mxd??c e .....                 ldx     #$000c
+001551 fe/c351: 20 ba c3     n?mxd?zc e .....                 jsr     BXXaddHA
+001554 fe/c354: a2 52 00     ??mxd??? e .....                 ldx     #$0052
+001557 fe/c357: 4b           n?mxd?z? e .....                 phk
+001558 fe/c358: 20 38 fe     n?mxd?z? e .....                 jsr     callModVDU
+00155b fe/c35b: 7a           ??mxd??? e .....                 ply
+00155c fe/c35c: 80 dc        ??mxd??? e ...#.                 bra     COP_49

+00155e fe/c35e: 38           ??mxd??C e ....> @retsec         sec
+00155f fe/c35f: 60           ??mxd??C e ...#.                 rts

                                               ; This appears to be a set of B0 locations that are saved on a context switch
+001560 fe/c360: 13 ff                   .T... tblVarsToSaveCtx .dd2   $ff13
+001562 fe/c362: 14 ff                   .T...                 .dd2    $ff14
+001564 fe/c364: 52 a5                   .T...                 .dd2    $a552
+001566 fe/c366: 53 a5                   .T...                 .dd2    $a553
+001568 fe/c368: 51 a5                   .T...                 .dd2    $a551
+00156a fe/c36a: 71 a5                   .T...                 .dd2    $a571
+00156c fe/c36c: 72 a5                   .T...                 .dd2    $a572
+00156e fe/c36e: 73 a5                   .T...                 .dd2    $a573
+001570 fe/c370: 74 a5                   .T...                 .dd2    $a574
+001572 fe/c372: 76 a5                   .T...                 .dd2    $a576
+001574 fe/c374: 7d a5                   .T...                 .dd2    $a57d
+001576 fe/c376: 3c a5                   .T...                 .dd2    $a53c
+001578 fe/c378: 00 00                   .T...                 .dd2    $0000
+00157a fe/c37a: 18           ??mxd??c e .T..> restoreCTX      clc
+00157b fe/c37b: 80 01        ??mxd??c e ...#.                 bra     LFEC37E

+00157d fe/c37d: 38           ??mxd??c e ....> saveCTX         sec
+00157e fe/c37e: 0b           ??mxd??? e ....> LFEC37E         phd
+00157f fe/c37f: 8b           ??mxd??? e .....                 phb
+001580 fe/c380: 48           ??mxd??? e .....                 pha
+001581 fe/c381: 3b           ??mxd??? e .....                 tsc
+001582 fe/c382: 5b           ??mxd??? e .....                 tcd
+001583 fe/c383: 4b           ??mxd??? e .....                 phk
                                                               .dbank  K (auto)
+001584 fe/c384: ab           ??mxd??? e .....                 plb
+001585 fe/c385: a2 00 00     ??mxd??? e .....                 ldx     #$0000
+001588 fe/c388: 9b           n?mxd?Z? e .....                 txy
+001589 fe/c389: da           ??mxd??? e ....> @ctxReStLp      phx
+00158a fe/c38a: bd 60 c3     ??mxd??? e .....                 lda     tblVarsToSaveCtx & $ffff,x
+00158d fe/c38d: f0 1b        ??mxd??? e .....                 beq     @done
+00158f fe/c38f: aa           ??mxd?z? e .....                 tax
+001590 fe/c390: e2 20        ??mxd??? e .....                 sep     #$20
                                                               .rwid   shortm
+001592 fe/c392: 90 08        ??Mxd??? e .....                 bcc     @dores
+001594 fe/c394: bf 00 00 00  ??Mxd??C e .....                 ldal    f:$000000,x
+001598 fe/c398: 97 01        ??Mxd??C e .....                 sta     [DPCOP_Y],y
+00159a fe/c39a: 80 06        ??Mxd??C e ...#.                 bra     @sk

+00159c fe/c39c: b7 01        ??Mxd??c e .T..> @dores          lda     [DPCOP_Y],y
+00159e fe/c39e: 9f 00 00 00  ??Mxd??c e .....                 stal    f:$000000,x
+0015a2 fe/c3a2: c2 20        ??Mxd??? e ....> @sk             rep     #$20
                                                               .rwid   longm
+0015a4 fe/c3a4: c8           ??mxd??? e .....                 iny
+0015a5 fe/c3a5: fa           ??mxd??? e .....                 plx
+0015a6 fe/c3a6: e8           ??mxd??? e .....                 inx
+0015a7 fe/c3a7: e8           ??mxd??? e .....                 inx
+0015a8 fe/c3a8: 80 df        ??mxd??? e ...#.                 bra     @ctxReStLp

+0015aa fe/c3aa: fa           ??mxd?Z? e ....> @done           plx
+0015ab fe/c3ab: 90 07        ??mxd??? e .....                 bcc     @skres
+0015ad fe/c3ad: a9 00 00     ??mxd??C e .....                 lda     #$0000
+0015b0 fe/c3b0: 8f 13 ff 00  n?mxd?ZC e .....                 stal    f:SYS_ESCAPE_FLAG_QRY
+0015b4 fe/c3b4: 68           ??mxd??? e ....> @skres          pla
+0015b5 fe/c3b5: ab           ??mxd??? e .....                 plb
+0015b6 fe/c3b6: 2b           ??mxd??? e .....                 pld
+0015b7 fe/c3b7: a2 0c 00     ??mxd??? e .....                 ldx     #$000c
+0015ba fe/c3ba: 08           n?mxd?z? e ....> BXXaddHA        php
+0015bb fe/c3bb: da           n?mxd?z? e .....                 phx
+0015bc fe/c3bc: 18           n?mxd?z? e .....                 clc
+0015bd fe/c3bd: 63 01        n?mxd?zc e .....                 adc     $01,S
+0015bf fe/c3bf: fa           ??mxd??? e .....                 plx
+0015c0 fe/c3c0: 90 07        ??mxd??? e .....                 bcc     @sk
+0015c2 fe/c3c2: e2 20        ??mxd??C e .....                 sep     #$20
                                                               .rwid   shortm
+0015c4 fe/c3c4: 8b           ??Mxd??C e .....                 phb
+0015c5 fe/c3c5: 68           ??Mxd??C e .....                 pla
+0015c6 fe/c3c6: 1a           ??Mxd??C e .....                 inc     A
+0015c7 fe/c3c7: 48           ??Mxd??C e .....                 pha
+0015c8 fe/c3c8: ab           ??Mxd??C e .....                 plb
+0015c9 fe/c3c9: 28           ???xd??? e ....> @sk             plp
                                                               .rwid   longm
+0015ca fe/c3ca: 60           n?mxd?z? e ...#.                 rts

                                               ********************************************************************************
                                               * COP 25 - OPCRC - superceded use COP_32 OPSUM                                 *
                                               ********************************************************************************
+0015cb fe/c3cb: 02 0f        ??mxd??? e @T... COP_25          cop     COP_0F_OPERR
+0015cd fe/c3cd: 42 61 64 20+            .T...                 .zstr   “Bad call - OPCRC has been superceded by OPSUM”
                                               ********************************************************************************
                                               * COP 4C - OPBGB get block                                                     *
                                               * Action: Reads the number of bytes specified in the control block from the    *
                                               * currently open file whose handle is in Y, to the address in memory specified *
                                               * in the control block. The bytes are read from the file starting at the       *
                                               * position given by the sequential pointer. The sequential pointer can be      *
                                               * altered using OPWSP.                                                         *
                                               *                                                                              *
                                               * On Entry: Y = handle returned by OPOPN.                                      *
                                               *           BHA points to a control block of the following form.               *
                                               *           Offset                                                             *
                                               *           +0      Start address of memory (low byte first)                   *
                                               *           +4      Length of memory to be transferred (low byte first)        *
                                               * On Exit:  If C = 0 then X = O means transfer successful.                     *
                                               *                         X = 2 means that fewer bytes were transferred than   *
                                               *                               specified in the control block, and the        *
                                               * control                                                                      *
                                               *                               block is updated to show the number of bytes   *
                                               *                               that were transferred.                         *
                                               *           If C = 1 then the transfer was unsuccessful. X = error code. BHA   *
                                               *           points to a zero terminated error message                          *
                                               ********************************************************************************
+0015fb fe/c3fb: 08           ??mxd??? e .T... COP_4C          php
+0015fc fe/c3fc: 0b           ??mxd??? e .....                 phd
+0015fd fe/c3fd: c2 30        ??mxd??? e .....                 rep     #$30
+0015ff fe/c3ff: a2 20 00     ??mxd??? e .....                 ldx     #$0020
+001602 fe/c402: da           n?mxd?z? e .....                 phx
+001603 fe/c403: 80 08        n?mxd?z? e ...#.                 bra     LFEC40D

                                               ********************************************************************************
                                               * COP 4D - OPBPB put block                                                     *
                                               * Action: Writes the number of bytes specified in the control block. from the  *
                                               * address in memory specified in the control block, to the file whose handle   *
                                               * is in Y. The bytes are written to the file starting at the position given by *
                                               * the sequential pointer. The sequential pointer can be altered using OPWSP.   *
                                               * On entry: Y = handle returned by OPOPN.                                      *
                                               *           BHA points to a control block ot the following form.               *
                                               *           Offset                                                             *
                                               *           +0 Start address of memory (low byte first)                        *
                                               *           +4 Length of memory to be transferred (low byte first)             *
                                               * On exit:  If C = 0 then transfer was successful.                             *
                                               *           If C = 1 then the transfer was unsuccessful. X = error code. BHA   *
                                               *           points to a zero terminated error message.                         *
                                               *           Y preserved                                                        *
                                               ********************************************************************************
+001605 fe/c405: 08           ??mxd??? e @T... COP_4D          php
+001606 fe/c406: 0b           ??mxd??? e .....                 phd
+001607 fe/c407: c2 30        ??mxd??? e .....                 rep     #$30
+001609 fe/c409: a2 22 00     ??mxd??? e .....                 ldx     #$0022
+00160c fe/c40c: da           n?mxd?z? e .....                 phx
+00160d fe/c40d: 5a           n?mxd?z? e ....> LFEC40D         phy
+00160e fe/c40e: 4b           n?mxd?z? e .....                 phk
+00160f fe/c40f: 20 e9 c7     n?mxd?z? e .....                 jsr     callDevHandle
+001612 fe/c412: b0 08        ??mxd??? e .....                 bcs     LFEC41C
+001614 fe/c414: 7a           ??mxd??? e ....> LFEC414         ply
+001615 fe/c415: 7a           ??mxd??? e .....                 ply
+001616 fe/c416: 7a           ??mxd??? e .....                 ply
+001617 fe/c417: 08           ??mxd??? e .....                 php
+001618 fe/c418: 7a           ??mxd??? e .....                 ply
+001619 fe/c419: 82 95 f6     ??mxd??? e ...#.                 brl     retCopXBHA

+00161c fe/c41c: 9b           ??mxd??C e ....> LFEC41C         txy
+00161d fe/c41d: d0 f5        ??mxd??C e .....                 bne     LFEC414
+00161f fe/c41f: a0 06 00     ??mxd?ZC e .....                 ldy     #$0006
+001622 fe/c422: 20 aa c6     n?mxd?zC e .....                 jsr     LFEC6AA
+001625 fe/c425: a5 07        ??mxd??? e .....                 lda     DPCOP_B
+001627 fe/c427: 05 09        ??mxd??? e .....                 ora     DPCOP_DP+1
+001629 fe/c429: f0 1a        ??mxd??? e .....                 beq     LFEC445
+00162b fe/c42b: a9 ff ff     ??mxd?z? e .....                 lda     #$ffff
+00162e fe/c42e: c6 07        n?mxd?z? e .....                 dec     DPCOP_B
+001630 fe/c430: c5 07        ??mxd??? e .....                 cmp     DPCOP_B
+001632 fe/c432: d0 02        ??mxd??? e .....                 bne     LFEC436
+001634 fe/c434: c6 09        ??mxd?Z? e .....                 dec     DPCOP_DP+1
+001636 fe/c436: a6 0d        ??mxd??? e ....> LFEC436         ldx     DPCOP_K
+001638 fe/c438: e0 20 00     ??mxd??? e .....                 cpx     #$0020
+00163b fe/c43b: d0 05        ??mxd??? e .....                 bne     LFEC442
+00163d fe/c43d: 20 4c c4     ??mxd?Z? e .....                 jsr     LFEC44C
+001640 fe/c440: 80 03        ??mxd??? e ...#.                 bra     LFEC445

+001642 fe/c442: 20 96 c4     ??mxd?z? e ....> LFEC442         jsr     LFEC496
+001645 fe/c445: 86 0d        ??mxd??? e ....> LFEC445         stx     DPCOP_K
+001647 fe/c447: fa           ??mxd??? e .....                 plx
+001648 fe/c448: 9a           ??mxd??? e .....                 txs
+001649 fe/c449: 4c bd c6     ??mxd??? e ...#.                 jmp     LFEC6BD

+00164c fe/c44c: a4 0b        ??mxd??? e ....> LFEC44C         ldy     DPCOP_PC
+00164e fe/c44e: 02 0a        ??mxd??? e .....                 cop     COP_0A_OPBGT
+001650 fe/c450: e2 30        ??mxd??? e .....                 sep     #$30
                                                               .rwid   shortm,shortx
+001652 fe/c452: 87 03        ??MXd??? e .....                 sta     [DPCOP_X]
+001654 fe/c454: c2 30        ??MXd??? e .....                 rep     #$30
                                                               .rwid   longm,longx
+001656 fe/c456: b0 1b        ??mxd??? e .....                 bcs     LFEC473
+001658 fe/c458: a9 ff ff     ??mxd??c e .....                 lda     #$ffff
+00165b fe/c45b: c6 07        n?mxd?zc e .....                 dec     DPCOP_B
+00165d fe/c45d: c5 07        ??mxd??c e .....                 cmp     DPCOP_B
+00165f fe/c45f: d0 06        ??mxd??? e .....                 bne     LFEC467
+001661 fe/c461: c6 09        ??mxd?Z? e .....                 dec     DPCOP_DP+1
+001663 fe/c463: c5 09        ??mxd??? e .....                 cmp     DPCOP_DP+1
+001665 fe/c465: f0 08        ??mxd??? e .....                 beq     LFEC46F
+001667 fe/c467: e6 03        ??mxd?z? e ....> LFEC467         inc     DPCOP_X
+001669 fe/c469: d0 e1        ??mxd??? e .....                 bne     LFEC44C
+00166b fe/c46b: e6 05        ??mxd?Z? e .....                 inc     DPCOP_AH
+00166d fe/c46d: 80 dd        ??mxd??? e ...#.                 bra     LFEC44C

+00166f fe/c46f: a2 00 00     ??mxd?Z? e ....> LFEC46F         ldx     #$0000
+001672 fe/c472: 60           n?mxd?Z? e ...#.                 rts

+001673 fe/c473: 0b           ??mxd??C e ....> LFEC473         phd
+001674 fe/c474: a5 0f        ??mxd??C e .....                 lda     $0f
+001676 fe/c476: 5b           ??mxd??C e .....                 tcd
+001677 fe/c477: a0 00 00     ??mxd??C e .....                 ldy     #$0000
+00167a fe/c47a: 38           n?mxd?ZC e .....                 sec
+00167b fe/c47b: a3 07        n?mxd?ZC e .....                 lda     $07,S
+00167d fe/c47d: f7 05        ??mxd??C e .....                 sbc     [DPCOP_AH],y
+00167f fe/c47f: a0 04 00     ??mxd??? e .....                 ldy     #$0004
+001682 fe/c482: 97 05        n?mxd?z? e .....                 sta     [DPCOP_AH],y
+001684 fe/c484: a0 02 00     n?mxd?z? e .....                 ldy     #$0002
+001687 fe/c487: a3 09        n?mxd?z? e .....                 lda     $09,S
+001689 fe/c489: f7 05        ??mxd??? e .....                 sbc     [DPCOP_AH],y
+00168b fe/c48b: a0 06 00     ??mxd??? e .....                 ldy     #$0006
+00168e fe/c48e: 97 05        n?mxd?z? e .....                 sta     [DPCOP_AH],y
+001690 fe/c490: a2 02 00     n?mxd?z? e .....                 ldx     #$0002
+001693 fe/c493: 18           n?mxd?z? e .....                 clc
+001694 fe/c494: 2b           n?mxd?zc e .....                 pld
+001695 fe/c495: 60           ??mxd??c e ...#.                 rts

+001696 fe/c496: a4 0b        ??mxd??? e ....> LFEC496         ldy     DPCOP_PC
+001698 fe/c498: a7 03        ??mxd??? e .....                 lda     [DPCOP_X]
+00169a fe/c49a: 02 0b        ??mxd??? e .....                 cop     COP_0B_OPBPT
+00169c fe/c49c: b0 18        ??mxd??? e .....                 bcs     LFEC4B6
+00169e fe/c49e: a9 ff ff     ??mxd??c e .....                 lda     #$ffff
+0016a1 fe/c4a1: c6 07        n?mxd?zc e .....                 dec     DPCOP_B
+0016a3 fe/c4a3: c5 07        ??mxd??c e .....                 cmp     DPCOP_B
+0016a5 fe/c4a5: d0 06        ??mxd??? e .....                 bne     LFEC4AD
+0016a7 fe/c4a7: c6 09        ??mxd?Z? e .....                 dec     DPCOP_DP+1
+0016a9 fe/c4a9: c5 09        ??mxd??? e .....                 cmp     DPCOP_DP+1
+0016ab fe/c4ab: f0 08        ??mxd??? e .....                 beq     LFEC4B5
+0016ad fe/c4ad: e6 03        ??mxd?z? e ....> LFEC4AD         inc     DPCOP_X
+0016af fe/c4af: d0 e5        ??mxd??? e .....                 bne     LFEC496
+0016b1 fe/c4b1: e6 05        ??mxd?Z? e .....                 inc     DPCOP_AH
+0016b3 fe/c4b3: 80 e1        ??mxd??? e ...#.                 bra     LFEC496

+0016b5 fe/c4b5: 18           ??mxd?Z? e ....> LFEC4B5         clc
+0016b6 fe/c4b6: 60           ??mxd??? e ...#> LFEC4B6         rts

                                               ********************************************************************************
                                               * COP 4E - OPLOD - load file                                                   *
                                               *                                                                              *
                                               * Action: Loads a file into memwy from the specified filing system.            *
                                               *                                                                              *
                                               * On entry: BHA points to a control block of the following form.               *
                                               *           Offset                                                             *
                                               *           +0     Pointer to name of file (low byte first)                    *
                                               *           +4     File LOAD address (low byte first)                          *
                                               *           +8     File EXEC address (low byte first)                          *
                                               *           +12    Initial memory location (low byte first)                    *
                                               *           +16    Length of memory area (low byte first)                      *
                                               *                                                                              *
                                               *           A zero length parameter will cause anylength of file to be loaded. *
                                               *                                                                              *
                                               *           The length is updated upon exit to show the number of bytes        *
                                               * actually                                                                     *
                                               *           loaded.                                                            *
                                               *           The load address and execution address are not parameters they are *
                                               *                                                                              *
                                               *           set on exit to the file's values.                                  *
                                               * On exit:  If C = 0 and X = O then the file was loaded successfully and the   *
                                               *           load and execution addresses are valid.                            *
                                               *           If C = 0 and X = 2 then the file was loaded successfully but the   *
                                               *           load and execution addressess are invalid.                         *
                                               *           If C = 1 then the load was unsuccessful, X = error code. BHA       *
                                               * points                                                                       *
                                               *           to a zero-terminated error message.                                *
                                               *           Y preserved                                                        *
                                               ********************************************************************************
+0016b7 fe/c4b7: 08           ??mxd??? e @T... COP_4E          php
+0016b8 fe/c4b8: 0b           ??mxd??? e .....                 phd
+0016b9 fe/c4b9: c2 30        ??mxd??? e .....                 rep     #$30
+0016bb fe/c4bb: a2 24 00     ??mxd??? e .....                 ldx     #__DVLOD          ;DVLOD - load a file
+0016be fe/c4be: da           n?mxd?z? e .....                 phx
+0016bf fe/c4bf: 80 08        n?mxd?z? e ...#.                 bra     LFEC4C9

                                               ********************************************************************************
                                               * COP 4F - OPSAV - save file                                                   *
                                               *                                                                              *
                                               * Action: Saves an area of memory to the specified filing system.              *
                                               *                                                                              *
                                               * On entry: BHA points to a control block of the following form.               *
                                               *           Offset                                                             *
                                               *           +0   Pointer to name of file (low byte first)                      *
                                               *           +4   File LOAD address (low byte first)                            *
                                               *           +8   File EXEC address (low byte first)                            *
                                               *           +12  Initial memory location (low byte first)                      *
                                               *           +16  Length ot memory area (low byte first)                        *
                                               * On exit:  If C = 0 and X = 0 then the file was saved successfully and the    *
                                               *           load and execution addresses were successfully updated.            *
                                               *           If C = 0 and X = 2 then the file was saved successfully but the    *
                                               *           load and execution addresses were not successfully updated.        *
                                               *           If C = 1 then the save was unsuccessful. X = error code. BHA       *
                                               * points                                                                       *
                                               *           to zero-terminated error message.                                  *
                                               *           Y preserved.                                                       *
                                               ********************************************************************************
+0016c1 fe/c4c1: 08           ??mxd??? e @T... COP_4F          php
+0016c2 fe/c4c2: 0b           ??mxd??? e .....                 phd
+0016c3 fe/c4c3: c2 30        ??mxd??? e .....                 rep     #$30
+0016c5 fe/c4c5: a2 26 00     ??mxd??? e .....                 ldx     #__DVSAV
+0016c8 fe/c4c8: da           n?mxd?z? e .....                 phx
+0016c9 fe/c4c9: 5a           n?mxd?z? e ....> LFEC4C9         phy
+0016ca fe/c4ca: 20 a1 c7     n?mxd?z? e .....                 jsr     callFSX_BHAblock
+0016cd fe/c4cd: b0 08        ??mxd??? e .....                 bcs     LFEC4D7
+0016cf fe/c4cf: 7a           ??mxd??? e ....> LFEC4CF         ply
+0016d0 fe/c4d0: 7a           ??mxd??? e .....                 ply
+0016d1 fe/c4d1: 7a           ??mxd??? e .....                 ply
+0016d2 fe/c4d2: 08           ??mxd??? e .....                 php
+0016d3 fe/c4d3: 7a           ??mxd??? e .....                 ply
+0016d4 fe/c4d4: 82 da f5     ??mxd??? e ...#.                 brl     retCopXBHA

+0016d7 fe/c4d7: 9b           ??mxd??C e ....> LFEC4D7         txy
+0016d8 fe/c4d8: d0 f5        ??mxd??C e .....                 bne     LFEC4CF
+0016da fe/c4da: a0 12 00     ??mxd?ZC e .....                 ldy     #$0012
+0016dd fe/c4dd: 20 aa c6     n?mxd?zC e .....                 jsr     LFEC6AA
+0016e0 fe/c4e0: a9 ff ff     ??mxd??? e .....                 lda     #$ffff
+0016e3 fe/c4e3: c6 13        n?mxd?z? e .....                 dec     $13
+0016e5 fe/c4e5: c5 13        ??mxd??? e .....                 cmp     $13
+0016e7 fe/c4e7: d0 02        ??mxd??? e .....                 bne     LFEC4EB
+0016e9 fe/c4e9: c6 15        ??mxd?Z? e .....                 dec     $15
+0016eb fe/c4eb: a6 19        ??mxd??? e ....> LFEC4EB         ldx     $19
+0016ed fe/c4ed: e0 24 00     ??mxd??? e .....                 cpx     #$0024
+0016f0 fe/c4f0: d0 05        ??mxd??? e .....                 bne     LFEC4F7
+0016f2 fe/c4f2: 20 01 c5     ??mxd?Z? e .....                 jsr     LFEC501
+0016f5 fe/c4f5: 80 03        ??mxd??? e ...#.                 bra     LFEC4FA

+0016f7 fe/c4f7: 20 b1 c5     ??mxd?z? e ....> LFEC4F7         jsr     LFEC5B1
+0016fa fe/c4fa: 86 19        ??mxd??? e ....> LFEC4FA         stx     $19
+0016fc fe/c4fc: fa           ??mxd??? e .....                 plx
+0016fd fe/c4fd: 9a           ??mxd??? e .....                 txs
+0016fe fe/c4fe: 4c bd c6     ??mxd??? e ...#.                 jmp     LFEC6BD

+001701 fe/c501: a5 13        ??mxd?Z? e ....> LFEC501         lda     $13
+001703 fe/c503: 25 15        ??mxd??? e .....                 and     $15
+001705 fe/c505: c9 ff ff     ??mxd??? e .....                 cmp     #$ffff
+001708 fe/c508: d0 05        ??mxd??? e .....                 bne     LFEC50F
+00170a fe/c50a: 38           ??mxd?Z? e .....                 sec
+00170b fe/c50b: a2 00 00     ??mxd?ZC e .....                 ldx     #$0000
+00170e fe/c50e: 60           n?mxd?ZC e ...#.                 rts

+00170f fe/c50f: 0b           ??mxd?z? e ....> LFEC50F         phd
+001710 fe/c510: a5 1b        ??mxd?z? e .....                 lda     $1b
+001712 fe/c512: 5b           ??mxd??? e .....                 tcd
+001713 fe/c513: e2 30        ??mxd??? e .....                 sep     #$30
                                                               .rwid   shortm,shortx
+001715 fe/c515: a5 07        ??MXd??? e .....                 lda     DPCOP_B
+001717 fe/c517: 48           ??MXd??? e .....                 pha
+001718 fe/c518: ab           ??MXd??? e .....                 plb
+001719 fe/c519: c2 30        ??MXd??? e .....                 rep     #$30
                                                               .rwid   longm,longx
+00171b fe/c51b: a5 05        ??mxd??? e .....                 lda     DPCOP_AH
+00171d fe/c51d: 2b           ??mxd??? e .....                 pld
+00171e fe/c51e: 02 50        ??mxd??? e .....                 cop     COP_50_OPRLE
+001720 fe/c520: b0 06        ??mxd??? e .....                 bcs     LFEC528
+001722 fe/c522: f4 00 00     ??mxd??c e .....                 pea     $0000
+001725 fe/c525: a8           ??mxd??c e .....                 tay
+001726 fe/c526: 80 1b        ??mxd??c e ...#.                 bra     LFEC543

+001728 fe/c528: f4 02 00     ??mxd??C e ....> LFEC528         pea     $0002
+00172b fe/c52b: a9 ff ff     ??mxd??C e .....                 lda     #$ffff
+00172e fe/c52e: 85 19        n?mxd?zC e .....                 sta     $19
+001730 fe/c530: 80 11        n?mxd?zC e ...#.                 bra     LFEC543

+001732 fe/c532: 98                      .....                 .dd1    $98
+001733 fe/c533: 18                      .....                 .dd1    $18
+001734 fe/c534: e5                      .....                 .dd1    $e5
+001735 fe/c535: 13                      .....                 .dd1    $13
+001736 fe/c536: 8a                      .....                 .dd1    $8a
+001737 fe/c537: e5                      .....                 .dd1    $e5
+001738 fe/c538: 15                      .....                 .dd1    $15
+001739 fe/c539: 90                      .....                 .dd1    $90
+00173a fe/c53a: 08                      .....                 .dd1    $08
+00173b fe/c53b: f0                      .....                 .dd1    $f0
+00173c fe/c53c: 06                      .....                 .dd1    $06

+00173d fe/c53d: fa           ??mxd?Z? e ....> LFEC53D         plx
+00173e fe/c53e: a2 00 80     ??mxd??? e .....                 ldx     #$8000
+001741 fe/c541: 38           n?mxd?z? e .....                 sec
+001742 fe/c542: 60           n?mxd?zC e ...#.                 rts

+001743 fe/c543: a0 40 00     ??mxd??? e ....> LFEC543         ldy     #$0040
+001746 fe/c546: 20 04 c6     n?mxd?z? e .....                 jsr     LFEC604
+001749 fe/c549: 90 03        ??mxd??? e .....                 bcc     LFEC54E
+00174b fe/c54b: 82 61 00     ??mxd??C e ...#.                 brl     LFEC5AF

+00174e fe/c54e: 84 17        ??mxd??c e ....> LFEC54E         sty     $17
+001750 fe/c550: 02 0a        ??mxd??? e ....> LFEC550         cop     COP_0A_OPBGT
+001752 fe/c552: b0 1f        ??mxd??? e .....                 bcs     LFEC573
+001754 fe/c554: e2 30        ??mxd??c e .....                 sep     #$30
                                                               .rwid   shortm,shortx
+001756 fe/c556: 87 0f        ??MXd??c e .....                 sta     [$0f]
+001758 fe/c558: c2 30        ??MXd??c e .....                 rep     #$30
                                                               .rwid   longm,longx
+00175a fe/c55a: a9 ff ff     ??mxd??c e .....                 lda     #$ffff
+00175d fe/c55d: c6 13        n?mxd?zc e .....                 dec     $13
+00175f fe/c55f: c5 13        ??mxd??c e .....                 cmp     $13
+001761 fe/c561: d0 06        ??mxd??? e .....                 bne     LFEC569
+001763 fe/c563: c6 15        ??mxd?Z? e .....                 dec     $15
+001765 fe/c565: c5 15        ??mxd??? e .....                 cmp     $15
+001767 fe/c567: f0 d4        ??mxd??? e .....                 beq     LFEC53D
+001769 fe/c569: a4 17        ??mxd?z? e ....> LFEC569         ldy     $17
+00176b fe/c56b: e6 0f        ??mxd??? e .....                 inc     $0f
+00176d fe/c56d: d0 e1        ??mxd??? e .....                 bne     LFEC550
+00176f fe/c56f: e6 11        ??mxd?Z? e .....                 inc     $11
+001771 fe/c571: 80 dd        ??mxd??? e ...#.                 bra     LFEC550

+001773 fe/c573: 5a           ??mxd??C e ....> LFEC573         phy
+001774 fe/c574: 02 46        ??mxd??C e .....                 cop     COP_46_OPEND
+001776 fe/c576: 7a           ??mxd??C e .....                 ply
+001777 fe/c577: da           ??mxd??C e .....                 phx
+001778 fe/c578: 48           ??mxd??C e .....                 pha
+001779 fe/c579: 8b           ??mxd??C e .....                 phb
+00177a fe/c57a: a4 17        ??mxd??C e .....                 ldy     $17
+00177c fe/c57c: 02 45        ??mxd??C e .....                 cop     COP_45_OPCLS
+00177e fe/c57e: ab           ??mxd??C e .....                 plb
+00177f fe/c57f: 68           ??mxd??C e .....                 pla
+001780 fe/c580: fa           ??mxd??C e .....                 plx
+001781 fe/c581: b0 2c        ??mxd??C e ...#.                 bcs     LFEC5AF

+001783 fe/c583: 29 01 00     ??mxd??? e @T...                 and     #$0001
+001786 fe/c586: d0 06        n?mxd??? e .....                 bne     LFEC58E
+001788 fe/c588: 38           n?mxd?Z? e .....                 sec
+001789 fe/c589: a2 00 90     n?mxd?ZC e .....                 ldx     #$9000
+00178c fe/c58c: 80 21        n?mxd?zC e ...#.                 bra     LFEC5AF

+00178e fe/c58e: 0b           n?mxd?z? e ....> LFEC58E         phd
+00178f fe/c58f: a5 1b        n?mxd?z? e .....                 lda     $1b
+001791 fe/c591: 5b           ??mxd??? e .....                 tcd
+001792 fe/c592: a0 0c 00     ??mxd??? e .....                 ldy     #$000c
+001795 fe/c595: 38           n?mxd?z? e .....                 sec
+001796 fe/c596: a3 15        n?mxd?zC e .....                 lda     $15,S
+001798 fe/c598: f7 05        ??mxd??C e .....                 sbc     [DPCOP_AH],y
+00179a fe/c59a: a0 10 00     ??mxd??? e .....                 ldy     #$0010
+00179d fe/c59d: 97 05        n?mxd?z? e .....                 sta     [DPCOP_AH],y
+00179f fe/c59f: a0 0e 00     n?mxd?z? e .....                 ldy     #$000e
+0017a2 fe/c5a2: a3 17        n?mxd?z? e .....                 lda     $17,S
+0017a4 fe/c5a4: f7 05        ??mxd??? e .....                 sbc     [DPCOP_AH],y
+0017a6 fe/c5a6: a0 12 00     ??mxd??? e .....                 ldy     #$0012
+0017a9 fe/c5a9: 97 05        n?mxd?z? e .....                 sta     [DPCOP_AH],y
+0017ab fe/c5ab: 2b           n?mxd?z? e .....                 pld
+0017ac fe/c5ac: 18           ??mxd??? e .....                 clc
+0017ad fe/c5ad: fa           ??mxd??c e .....                 plx
+0017ae fe/c5ae: 60           ??mxd??c e ...#.                 rts

+0017af fe/c5af: 7a           ??mxd??C e ....> LFEC5AF         ply
+0017b0 fe/c5b0: 60           ??mxd??C e ...#.                 rts

+0017b1 fe/c5b1: a0 80 00     ??mxd?z? e ....> LFEC5B1         ldy     #$0080
+0017b4 fe/c5b4: 20 04 c6     n?mxd?z? e .....                 jsr     LFEC604
+0017b7 fe/c5b7: 90 03        ??mxd??? e .....                 bcc     LFEC5BC
+0017b9 fe/c5b9: 82 38 00     ??mxd??C e ...#.                 brl     LFEC5F4

+0017bc fe/c5bc: a5 13        ??mxd??c e ....> LFEC5BC         lda     $13
+0017be fe/c5be: 25 15        ??mxd??c e .....                 and     $15
+0017c0 fe/c5c0: c9 ff ff     ??mxd??c e .....                 cmp     #$ffff
+0017c3 fe/c5c3: f0 1f        ??mxd??? e .....                 beq     LFEC5E4
+0017c5 fe/c5c5: 5a           ??mxd??? e ....> LFEC5C5         phy
+0017c6 fe/c5c6: a7 0f        ??mxd??? e .....                 lda     [$0f]
+0017c8 fe/c5c8: 02 0b        ??mxd??? e .....                 cop     COP_0B_OPBPT
+0017ca fe/c5ca: 7a           ??mxd??? e .....                 ply
+0017cb fe/c5cb: b0 2d        ??mxd??? e .....                 bcs     LFEC5FA
+0017cd fe/c5cd: a9 ff ff     ??mxd??c e .....                 lda     #$ffff
+0017d0 fe/c5d0: c6 13        n?mxd?zc e .....                 dec     $13
+0017d2 fe/c5d2: c5 13        ??mxd??c e .....                 cmp     $13
+0017d4 fe/c5d4: d0 06        ??mxd??? e .....                 bne     LFEC5DC
+0017d6 fe/c5d6: c6 15        ??mxd?Z? e .....                 dec     $15
+0017d8 fe/c5d8: c5 15        ??mxd??? e .....                 cmp     $15
+0017da fe/c5da: f0 08        ??mxd??? e .....                 beq     LFEC5E4
+0017dc fe/c5dc: e6 0f        ??mxd?z? e ....> LFEC5DC         inc     $0f
+0017de fe/c5de: d0 e5        ??mxd??? e .....                 bne     LFEC5C5
+0017e0 fe/c5e0: e6 11        ??mxd?Z? e .....                 inc     $11
+0017e2 fe/c5e2: 80 e1        ??mxd??? e ...#.                 bra     LFEC5C5

+0017e4 fe/c5e4: 02 45        ??mxd?Z? e ....> LFEC5E4         cop     COP_45_OPCLS
+0017e6 fe/c5e6: b0 0c        ??mxd?Z? e .....                 bcs     LFEC5F4
+0017e8 fe/c5e8: a9 03 00     ??mxd?Zc e .....                 lda     #$0003
+0017eb fe/c5eb: 02 24        n?mxd?zc e .....                 cop     COP_24_OPCVD
+0017ed fe/c5ed: 02 51        n?mxd?zc e .....                 cop     COP_51_OPWLE
+0017ef fe/c5ef: b0 04        n?mxd?zc e ..!..                 bcs     LFEC5F5
+0017f1 fe/c5f1: a2 00 00     n?mxd?zc e .....                 ldx     #$0000
+0017f4 fe/c5f4: 60           ??mxd??? e ...#> LFEC5F4         rts

+0017f5 fe/c5f5: a2 02 00     ??mxd??C e @T... LFEC5F5         ldx     #$0002
+0017f8 fe/c5f8: 18           n?mxd?zC e .....                 clc
+0017f9 fe/c5f9: 60           n?mxd?zc e ...#.                 rts

+0017fa fe/c5fa: da           ??mxd??C e ....> LFEC5FA         phx
+0017fb fe/c5fb: 8b           ??mxd??C e .....                 phb
+0017fc fe/c5fc: 48           ??mxd??C e .....                 pha
+0017fd fe/c5fd: 02 45        ??mxd??C e .....                 cop     COP_45_OPCLS
+0017ff fe/c5ff: 68           ??mxd??C e .....                 pla
+001800 fe/c600: ab           ??mxd??C e .....                 plb
+001801 fe/c601: fa           ??mxd??C e .....                 plx
+001802 fe/c602: 38           ??mxd??C e .....                 sec
+001803 fe/c603: 60           ??mxd??C e ...#.                 rts

+001804 fe/c604: a5 05        n?mxd?z? e ....> LFEC604         lda     DPCOP_AH
+001806 fe/c606: eb           ??mxd??? e .....                 xba
+001807 fe/c607: 48           ??mxd??? e .....                 pha
+001808 fe/c608: ab           ??mxd??? e .....                 plb
+001809 fe/c609: ab           ??mxd??? e .....                 plb
+00180a fe/c60a: a5 03        ??mxd??? e .....                 lda     DPCOP_X
+00180c fe/c60c: 02 44        ??mxd??? e .....                 cop     COP_44_OPOPN
+00180e fe/c60e: 60           ??mxd??? e ...#.                 rts

                                               ********************************************************************************
                                               * COP 50 - OPRLE - read load address, execute address, and length of file      *
                                               *                                                                              *
                                               * Action: Reads the load address, execute address, and length of a file.       *
                                               *                                                                              *
                                               * On Entry: BHA points to a contnd block of the following form.                *
                                               *           Offset                                                             *
                                               *           +0   Pointer to name of file (low byte first)                      *
                                               *           +4   File LOAD address (low byte first)                            *
                                               *           +8   File EXEC address (low byte first)                            *
                                               *                                                                              *
                                               *           The load address and execution address are not paramcters they     *
                                               *           are set on exit to the file's values.                              *
                                               * On Exit:  If C = 0 then the control block has been updated to give the load  *
                                               *           and execute addresses, and the length is in XHA (2 bytes in X,     *
                                               *           4 bytes in total).                                                 *
                                               *           If C = 1 then the call was unsuccessful, X = error code,           *
                                               *           BHA points to a zero-terminated error message.                     *
                                               *           Y preserved                                                        *
                                               ********************************************************************************
+00180f fe/c60f: a2 28 00     ??mxd??? e @T... COP_50          ldx     #__DVRLE
+001812 fe/c612: 20 a1 c7     n?mxd?z? e .....                 jsr     callFSX_BHAblock
+001815 fe/c615: b0 03        ??mxd??? e .....                 bcs     LFEC61A
+001817 fe/c617: 82 97 f4     ??mxd??? e ...#> LFEC617         brl     retCopXBHA

+00181a fe/c61a: 9b           ??mxd??C e ....> LFEC61A         txy
+00181b fe/c61b: d0 fa        ??mxd??C e .....                 bne     LFEC617
+00181d fe/c61d: a0 01 00     ??mxd?ZC e .....                 ldy     #$0001
+001820 fe/c620: b7 05        n?mxd?zC e .....                 lda     [DPCOP_AH],y
+001822 fe/c622: 48           ??mxd??C e .....                 pha
+001823 fe/c623: ab           ??mxd??C e .....                 plb
+001824 fe/c624: ab           ??mxd??C e .....                 plb
+001825 fe/c625: a7 05        ??mxd??C e .....                 lda     [DPCOP_AH]
+001827 fe/c627: a0 40 00     ??mxd??C e .....                 ldy     #$0040
+00182a fe/c62a: 02 44        n?mxd?zC e .....                 cop     COP_44_OPOPN
+00182c fe/c62c: 90 03        n?mxd?zC e ..!..                 bcc     LFEC631
+00182e fe/c62e: 82 80 f4     n?mxd?zC e ...#.                 brl     retCopXBHA

+001831 fe/c631: 5a           ??mxd??? e @T... LFEC631         phy
+001832 fe/c632: a9 00 00     ??mxd??? e .....                 lda     #$0000
+001835 fe/c635: a0 0a 00     n?mxd?Z? e .....                 ldy     #$000a
+001838 fe/c638: 97 05        ??mxd??? e ....> LFEC638         sta     [DPCOP_AH],y
+00183a fe/c63a: 88           ??mxd??? e .....                 dey
+00183b fe/c63b: 88           ??mxd??? e .....                 dey
+00183c fe/c63c: c0 04 00     ??mxd??? e .....                 cpy     #$0004
+00183f fe/c63f: b0 f7        ??mxd??? e .....                 bcs     LFEC638
+001841 fe/c641: 7a           ??mxd??c e .....                 ply
+001842 fe/c642: ba           ??mxd??c e .....                 tsx
+001843 fe/c643: f4 00 00     ??mxd??c e .....                 pea     $0000
+001846 fe/c646: f4 00 00     ??mxd??c e .....                 pea     $0000
+001849 fe/c649: 3b           ??mxd??c e .....                 tsc
+00184a fe/c64a: da           ??mxd??c e .....                 phx
+00184b fe/c64b: 1a           ??mxd??c e .....                 inc     A
+00184c fe/c64c: f4 00 00     ??mxd??c e .....                 pea     $0000
+00184f fe/c64f: ab           ??mxd??c e .....                 plb
+001850 fe/c650: ab           ??mxd??c e .....                 plb
+001851 fe/c651: 02 57        ??mxd??c e .....                 cop     COP_57_OPRLL
+001853 fe/c653: 90 0d        ??mxd??c e ...#.                 bcc     @clcexit

+001855 fe/c655: 4b           ??mxd??? e @T...                 phk
+001856 fe/c656: 62 02 00     ??mxd??? e .....                 per     @secexit-1
+001859 fe/c659: 82 55 f4     ??mxd??? e ...#.                 brl     retCopXBHA

                                                               .rwid   shortm,shortx
+00185c fe/c65c: 02 45        ??MXd??? e @T... @secexit        cop     COP_45_OPCLS
+00185e fe/c65e: fa           ??MXd??? e .....                 plx
+00185f fe/c65f: 9a           ??MXd??? e .....                 txs
+001860 fe/c660: 38           ??MXd??? e .....                 sec
+001861 fe/c661: 6b           ??MXd??C e ...#.                 rtl

                                                               .rwid   longm,longx
+001862 fe/c662: 02 45        ??mxd??c e ....> @clcexit        cop     COP_45_OPCLS
+001864 fe/c664: 68           ??mxd??c e .....                 pla
+001865 fe/c665: 68           ??mxd??c e .....                 pla
+001866 fe/c666: fa           ??mxd??c e .....                 plx
+001867 fe/c667: 18           ??mxd??c e .....                 clc
+001868 fe/c668: 82 46 f4     ??mxd??c e ...#.                 brl     retCopXBHA

                                               ********************************************************************************
                                               * COP 51 - OPWLE - write load address and execute address of file              *
                                               *                                                                              *
                                               * Action: Writes new load and execute addresses to a file.                     *
                                               *                                                                              *
                                               * On entry: BHA points to a control block of the following fonn.               *
                                               *           Offset                                                             *
                                               *           +0   Pointer to name of file (low byte first)                      *
                                               *           +4   File LOAD address (low byte first)                            *
                                               *           +8   File EXEC address (low byte first)                            *
                                               * On exit:  If C = 0 then the file has been updated.                           *
                                               *           If C = 1 then the update was unsuccessful. X = error code,         *
                                               *           BHA points to a zero terminated error message.                     *
                                               *           Y preserved                                                        *
                                               ********************************************************************************
+00186b fe/c66b: a2 2a 00     ??mxd??? e @T... COP_51          ldx     #__DVWLE
+00186e fe/c66e: 80 2d        n?mxd?z? e ...#.                 bra     callFSTODOrename

                                               ********************************************************************************
                                               * COP 52 - OPRAT - read attributes                                             *
                                               *                                                                              *
                                               * Action: Reads the 4-byte file attributes.                                    *
                                               *                                                                              *
                                               * On entry: BHA points to a control block of the following form.               *
                                               *           Offset                                                             *
                                               *           +0   Pointer to name of file (low byte first)                      *
                                               *           +4   File attributes (low byte first)                              *
                                               *                                                                              *
                                               * The attributes have the following meanings:                                  *
                                               * low byte   bit 0     0 not readable by owner                                 *
                                               *                      1 readable by owner                                     *
                                               *            bit 1     0 not writable by owner                                 *
                                               *                      1 writable by owner                                     *
                                               *            bit 2     undefined                                               *
                                               *            bit 3     0 not locked                                            *
                                               *                      1 locked                                                *
                                               *            bit 4     0 not readable by public                                *
                                               *                      1 readable by public                                    *
                                               *            bit 5     0 not writable by public                                *
                                               *                      1 writable by public                                    *
                                               *            bit 6     undefined                                               *
                                               *            bit 7     undefined                                               *
                                               * low middle byte      days                                                    *
                                               * high middle byte                                                             *
                                               *            bits 0..3 months                                                  *
                                               *            bits 4..7 years since 1981                                        *
                                               * high byte            undefined                                               *
                                               * On exit:   If C = 0 and X = l then a file was found and the attributes were  *
                                               *            read successfully.                                                *
                                               *            If C = 0 and X = 2 then a directory was found and the attributes  *
                                               *            were read successfully.                                           *
                                               *            If C = 1 then the call was unsuccessful, X = enor code, BHA       *
                                               * points                                                                       *
                                               *            to a zero-terminated error message.                               *
                                               *            Y preserved                                                       *
                                               ********************************************************************************
+001870 fe/c670: a2 2c 00     ??mxd??? e @T... COP_52          ldx     #__DVRAT
+001873 fe/c673: 80 28        n?mxd?z? e ...#.                 bra     callFSTODOrename

                                               ********************************************************************************
                                               * COP 53 - OPWAT - write file attributes                                       *
                                               *                                                                              *
                                               * Action: Writes the 4-byte file attributes                                    *
                                               *                                                                              *
                                               * For parameters see OPRAT above                                               *
                                               ********************************************************************************
+001875 fe/c675: a2 2e 00     ??mxd??? e @T... COP_53          ldx     #__DVWAT
+001878 fe/c678: 80 23        n?mxd?z? e ...#.                 bra     callFSTODOrename

                                               ********************************************************************************
                                               * COP 54 - OPRSP - read sequential pointer                                     *
                                               *                                                                              *
                                               * Action: Reads the sequential pointer the position within a file at which the *
                                               * next read/write operation will occur.                                        *
                                               *                                                                              *
                                               * On entry: Y = handle                                                         *
                                               *           BHA points to a control block of the following form.               *
                                               *           Offset                                                             *
                                               *           +0   Sequence number or logical length (low byte first)            *
                                               *                                                                              *
                                               * On exit:  If C = 0 then the sequential pointer was read successfully into    *
                                               *           the control block.                                                 *
                                               *           If C = 1 then the call was unsuccessful, X = error code, BHA       *
                                               * points                                                                       *
                                               *           to a zero-terminated error message.                                *
                                               *           Y preserved                                                        *
                                               ********************************************************************************
+00187a fe/c67a: a2 30 00     ??mxd??? e @T... COP_54          ldx     #__DVRSP
+00187d fe/c67d: 80 24        n?mxd?z? e ...#.                 bra     LFEC6A3

                                               ********************************************************************************
                                               * COP 55 - write sequential pointer                                            *
                                               *                                                                              *
                                               * Action: Writes a new value to the sequential pointer - the position within a *
                                               * file at which the next read/write operation will occur.                      *
                                               *                                                                              *
                                               * Parameters are as for COP 54 OPRSP                                           *
                                               ********************************************************************************
+00187f fe/c67f: a2 32 00     ??mxd??? e @T... COP_55          ldx     #__DVWSP
+001882 fe/c682: 80 1f        n?mxd?z? e ...#.                 bra     LFEC6A3

                                               ********************************************************************************
                                               * COP 56 - OPRPL - read physical length                                        *
                                               *                                                                              *
                                               * Action: Reads the physical length of a file, ie the actual length stored on  *
                                               * the media.                                                                   *
                                               *                                                                              *
                                               * On entry: BHA points to a contnd block of the following form.                *
                                               *           Offset                                                             *
                                               *           +0   Pointer to name of file (low byte first)                      *
                                               *           +4   length (low byte first)                                       *
                                               * On exit:  If C = 0 then the physical length was read successfully into the   *
                                               *           control block.                                                     *
                                               *           If C = 1 then the call was unsuccessful. X = error code, BHA       *
                                               * points                                                                       *
                                               *           to a zero-teiminaied error message.                                *
                                               *           Y preserved                                                        *
                                               ********************************************************************************
+001884 fe/c684: a2 34 00     ??mxd??? e @T... COP_56          ldx     #__DVRPL
+001887 fe/c687: 80 1a        n?mxd?z? e ...#.                 bra     LFEC6A3

                                               ********************************************************************************
                                               * COP 57 - OPRLL - read logical length                                         *
                                               * Action: Reads the logical length (extent) ot a file.                         *
                                               * On entry: Y = handle                                                         *
                                               *           BHA points to a control block of the following form.               *
                                               *           Offset                                                             *
                                               *           +0  Sequence number or length (low byte first)                     *
                                               * On exit:  If C = 0 then the logical length was read successfully into the    *
                                               *           control block.                                                     *
                                               *           If C = 1 then the call was unsuccessful, X = error code, BHA       *
                                               * points                                                                       *
                                               *           to a zero-terminated error message.                                *
                                               *           Y preserved                                                        *
                                               ********************************************************************************
+001889 fe/c689: a2 36 00     ??mxd??? e @T... COP_57          ldx     #__DVRLL
+00188c fe/c68c: 80 15        n?mxd?z? e ...#.                 bra     LFEC6A3

                                               ********************************************************************************
                                               * COP 58 - OPWLL - write logical length                                        *
                                               *                                                                              *
                                               * Action: Writes the logical length (extent) of a file.                        *
                                               *                                                                              *
                                               * On entry: Y = handle                                                         *
                                               *           BHA points to a control block of the following form.               *
                                               *           Offset                                                             *
                                               *           +0   Sequence number or length (low byte first)                    *
                                               * On exit: If C = 0 then the logical length was written successfully.          *
                                               *          If C = 1 then the call was unsuccessful. X = error code, BHA points *
                                               *                                                                              *
                                               *          to a zero-tenninated error message.                                 *
                                               *          Y preserved                                                         *
                                               ********************************************************************************
+00188e fe/c68e: a2 38 00     ??mxd??? e @T... COP_58          ldx     #__DVWLL
+001891 fe/c691: 80 10        n?mxd?z? e ...#.                 bra     LFEC6A3

                                               ********************************************************************************
                                               * COP 50 - OPRCH - read catalogue header and information                       *
                                               *                                                                              *
                                               * Action: Given the pathname, which may contain wildcards, this call will give *
                                               * the full directory name and information about that directory.                *
                                               *                                                                              *
                                               * On entry: BHA points to a control block of the following form.               *
                                               *           Offset                                                             *
                                               *           +0   Pointer to name of directory (low byte first)                 *
                                               *           +4   Pointer to 49 byte long buffer area (low byte first)          *
                                               *                                                                              *
                                               * On exit:  If C = 0, the 49 byte buffer area specified in the control block   *
                                               *           returns with the following information.                            *
                                               *           BHA undefined                                                      *
                                               *           Buffer contents after call:                                        *
                                               *           Offset                                                             *
                                               *           +0      0 = owner. &FF = public                                    *
                                               *           +1      Cycle number                                               *
                                               *           +2      Boot option                                                *
                                               *           +3..12  Directory name (without wildcards), left-justified padded  *
                                               *                   with spaces                                                *
                                               *           13..28  CSD disc name, same format (used to be last)               *
                                               *           29..38  CSD name, same format                                      *
                                               *           39..48  LIB name, same format                                      *
                                               *                                                                              *
                                               *           If C = 1 then directory not found, X = error code, BHA points to   *
                                               *           zero-terminated error message.                                     *
                                               *           Y preserved                                                        *
                                               *                                                                              *
                                               ********************************************************************************
+001893 fe/c693: a2 3a 00     ??mxd??? e @T... COP_59          ldx     #__DVRCH
+001896 fe/c696: 80 05        n?mxd?z? e ...#.                 bra     callFSTODOrename

                                               ********************************************************************************
                                               * COP 5A - OPRFN - Read file (object) names from directory                     *
                                               *                                                                              *
                                               * Action: Given the pathname, which may contain wildcards, this call will read *
                                               * the number and names of entries in the specified directory. The information  *
                                               * is put in an area of memory whose start address is supplied. Each name is    *
                                               * terminated by rero (&00).                                                    *
                                               *                                                                              *
                                               * On entry: BHA points to a control block of the following form.               *
                                               *           Offset                                                             *
                                               *           +0   Pointer to name of directory (low byte first)                 *
                                               *           +4   Pointer to start of memory area (low byte first)              *
                                               *           +8   Type of info wanted                                           *
                                               *           +10  Number of names                                               *
                                               *           +12  Filing system work space (16 bytes)                           *
                                               *           (Initially the whole area should be zero)                          *
                                               *                                                                              *
                                               *           The type of info values are:                                       *
                                               *           0 for name only (maximum 16 bytes per name) ,                      *
                                               *           1 for short information (maximum 20 bytes per entry)               *
                                               *           2 for full information (maximum 80 bytes per entry)                *
                                               *                                                                              *
                                               *           The actual content of these results is filing system dependent     *
                                               *           The number of names is a parameter which can be set so the call    *
                                               *           will read up to that number of entries. If there are any remaining *
                                               *                                                                              *
                                               *           then the call can be used again, without disturbing the control    *
                                               *           block, to carry on from where it left off. For the first call      *
                                               *           however, the workspace should be zeroed.                           *
                                               * On exit:  If C = 0 then X = the number of names read, and the names and      *
                                               *           info are in memory separated by zeros.                             *
                                               *           If C = 1 then directory not found, X = error code, BHA points to   *
                                               *           zero-terminated error message.                                     *
                                               *           Y preserved                                                        *
                                               ********************************************************************************
+001898 fe/c698: a2 3c 00     ??mxd??? e @T... COP_5A          ldx     #__DVRFN
+00189b fe/c69b: 80 00        n?mxd?z? e ...#.                 bra     callFSTODOrename  ;TODO: remove branch to next instr

+00189d fe/c69d: 20 a1 c7     n?mxd?z? e ....> callFSTODOrename jsr    callFSX_BHAblock
+0018a0 fe/c6a0: 82 0e f4     ??mxd??? e ...#.                 brl     retCopXBHA

+0018a3 fe/c6a3: 4b           n?mxd?z? e ....> LFEC6A3         phk
+0018a4 fe/c6a4: 20 e9 c7     n?mxd?z? e .....                 jsr     callDevHandle
+0018a7 fe/c6a7: 82 07 f4     ??mxd??? e ...#.                 brl     retCopXBHA

+0018aa fe/c6aa: 68           n?mxd?zC e ....> LFEC6AA         pla
+0018ab fe/c6ab: 85 03        ??mxd??C e .....                 sta     DPCOP_X
+0018ad fe/c6ad: ba           ??mxd??C e .....                 tsx
+0018ae fe/c6ae: b7 05        ??mxd??C e ....> LFEC6AE         lda     [DPCOP_AH],y
+0018b0 fe/c6b0: 48           ??mxd??C e .....                 pha
+0018b1 fe/c6b1: 88           ??mxd??C e .....                 dey
+0018b2 fe/c6b2: 88           ??mxd??C e .....                 dey
+0018b3 fe/c6b3: 10 f9        ??mxd??C e .....                 bpl     LFEC6AE
+0018b5 fe/c6b5: da           N?mxd??C e .....                 phx
+0018b6 fe/c6b6: ba           N?mxd??C e .....                 tsx
+0018b7 fe/c6b7: a5 03        ??mxd??C e .....                 lda     DPCOP_X
+0018b9 fe/c6b9: 48           ??mxd??C e .....                 pha
+0018ba fe/c6ba: 8a           ??mxd??C e .....                 txa
+0018bb fe/c6bb: 5b           ??mxd??C e .....                 tcd
+0018bc fe/c6bc: 60           ??mxd??C e ...#.                 rts

+0018bd fe/c6bd: 7a           ??mxd??? e ....> LFEC6BD         ply
+0018be fe/c6be: fa           ??mxd??? e .....                 plx
+0018bf fe/c6bf: 2b           ??mxd??? e .....                 pld
+0018c0 fe/c6c0: 86 03        ??mxd??? e .....                 stx     DPCOP_X
+0018c2 fe/c6c2: 85 05        ??mxd??? e .....                 sta     DPCOP_AH
+0018c4 fe/c6c4: e2 30        ??mxd??? e .....                 sep     #$30
                                                               .rwid   shortm,shortx
+0018c6 fe/c6c6: 8b           ??MXd??? e .....                 phb
+0018c7 fe/c6c7: 68           ??MXd??? e .....                 pla
+0018c8 fe/c6c8: 85 07        ??MXd??? e .....                 sta     DPCOP_B
+0018ca fe/c6ca: b0 03        ??MXd??? e .....                 bcs     LFEC6CF
+0018cc fe/c6cc: 28           ??MXd??c e .....                 plp
+0018cd fe/c6cd: 18           ??MX???? e .....                 clc
+0018ce fe/c6ce: 6b           ??MX???c e ...#.                 rtl

+0018cf fe/c6cf: 28           ??MXd??C e ....> LFEC6CF         plp
+0018d0 fe/c6d0: 38           ??MX???? e .....                 sec
+0018d1 fe/c6d1: 6b           ??MX???C e ...#.                 rtl

                                               ********************************************************************************
                                               * COP 5C - OPREN - rename an object                                            *
                                               *                                                                              *
                                               * Action: Will attempt to rename an object (file or directory).                *
                                               *                                                                              *
                                               * On entry: BHA points to a control block of the following form.               *
                                               *           Offset                                                             *
                                               *           +0   Pointer to old filename (low byte first)                      *
                                               *           +4   Pointer to new filename (low byte first)                      *
                                               * On exit:  If C = 0 then the object has been renamed.                         *
                                               *           If C = I then object not found or not renamed. X = error code, BHA *
                                               *                                                                              *
                                               *           points to zero terminated error message.                           *
                                               *           Y preserved                                                        *
                                               ********************************************************************************
                                                               .rwid   longm,longx
+0018d2 fe/c6d2: 0b           ??mxd??? e @T... COP_5C          phd
+0018d3 fe/c6d3: 0b           ??mxd??? e .....                 phd
+0018d4 fe/c6d4: 0b           ??mxd??? e .....                 phd
+0018d5 fe/c6d5: 0b           ??mxd??? e .....                 phd
+0018d6 fe/c6d6: 0b           ??mxd??? e .....                 phd
+0018d7 fe/c6d7: ba           ??mxd??? e .....                 tsx
+0018d8 fe/c6d8: da           ??mxd??? e .....                 phx
+0018d9 fe/c6d9: 2b           ??mxd??? e .....                 pld
+0018da fe/c6da: 4b           ??mxd??? e .....                 phk
+0018db fe/c6db: 20 d8 f7     ??mxd??? e .....                 jsr     skipSpacesBHA
+0018de fe/c6de: 4b           ??mxd??? e .....                 phk
+0018df fe/c6df: 20 28 f8     ??mxd??? e .....                 jsr     getFSTrampolineFromprefix
+0018e2 fe/c6e2: b0 42        ??mxd??? e .....                 bcs     @badfilename
+0018e4 fe/c6e4: 48           ??mxd??c e .....                 pha
+0018e5 fe/c6e5: 98           ??mxd??c e .....                 tya
+0018e6 fe/c6e6: 29 20 00     ??mxd??c e .....                 and     #$0020
+0018e9 fe/c6e9: f0 3a        n?mxd??c e .....                 beq     @plaerrBadFilename
+0018eb fe/c6eb: 68           n?mxd?zc e .....                 pla
+0018ec fe/c6ec: 85 01        ??mxd??c e .....                 sta     DPCOP_Y
+0018ee fe/c6ee: 8b           ??mxd??c e .....                 phb
+0018ef fe/c6ef: 8b           ??mxd??c e .....                 phb
+0018f0 fe/c6f0: 7a           ??mxd??c e .....                 ply
+0018f1 fe/c6f1: 84 03        ??mxd??c e .....                 sty     DPCOP_X
+0018f3 fe/c6f3: 86 05        ??mxd??c e .....                 stx     DPCOP_AH
+0018f5 fe/c6f5: 4b           ??mxd??c e .....                 phk
+0018f6 fe/c6f6: 20 04 f8     ??mxd??c e .....                 jsr     skipFileNameAndTrailingSpaces
+0018f9 fe/c6f9: 4b           ??mxd??? e .....                 phk
+0018fa fe/c6fa: 20 28 f8     ??mxd??? e .....                 jsr     getFSTrampolineFromprefix
+0018fd fe/c6fd: b0 27        ??mxd??? e .....                 bcs     @badfilename
+0018ff fe/c6ff: 50 02        ??mxd??c e .....                 bvc     LFEC703
+001901 fe/c701: a6 05        ?Vmxd??c e .....                 ldx     DPCOP_AH
+001903 fe/c703: 48           ??mxd??c e ....> LFEC703         pha
+001904 fe/c704: 98           ??mxd??c e .....                 tya
+001905 fe/c705: 29 20 00     ??mxd??c e .....                 and     #$0020
+001908 fe/c708: f0 1b        n?mxd??c e .....                 beq     @plaerrBadFilename
+00190a fe/c70a: 68           n?mxd?zc e .....                 pla
+00190b fe/c70b: e4 05        ??mxd??c e .....                 cpx     DPCOP_AH
+00190d fe/c70d: d0 17        ??mxd??? e .....                 bne     @badfilename
+00190f fe/c70f: 85 05        ??mxd?Z? e .....                 sta     DPCOP_AH
+001911 fe/c711: 8b           ??mxd?Z? e .....                 phb
+001912 fe/c712: 8b           ??mxd?Z? e .....                 phb
+001913 fe/c713: 68           ??mxd?Z? e .....                 pla
+001914 fe/c714: 85 07        ??mxd??? e .....                 sta     DPCOP_B
+001916 fe/c716: a9 01 00     ??mxd??? e .....                 lda     #$0001
+001919 fe/c719: 02 24        n?mxd?z? e .....                 cop     COP_24_OPCVD
+00191b fe/c71b: 9b           n?mxd?z? e .....                 txy
+00191c fe/c71c: a2 40 00     ??mxd??? e .....                 ldx     #__DVREN
+00191f fe/c71f: 4b           n?mxd?z? e .....                 phk
+001920 fe/c720: 20 0b c8     n?mxd?z? e .....                 jsr     callFSModuleTrampolineInY
+001923 fe/c723: 80 14        ??mxd??? e ...#.                 bra     LFEC739

+001925 fe/c725: 68           n?mxd?Zc e ....> @plaerrBadFilename pla
+001926 fe/c726: 02 26        ??mxd??? e ....> @badfilename    cop     COP_26_OPBHA
+001928 fe/c728: 42 61 64 20+            .T...                 .zstr   “Bad filename”
+001935 fe/c735: a2 01 00     ??mxd??? e .....                 ldx     #$0001
+001938 fe/c738: 38           n?mxd?z? e .....                 sec
+001939 fe/c739: 2b           ??mxd??? e ....> LFEC739         pld
+00193a fe/c73a: 2b           ??mxd??? e .....                 pld
+00193b fe/c73b: 2b           ??mxd??? e .....                 pld
+00193c fe/c73c: 2b           ??mxd??? e .....                 pld
+00193d fe/c73d: 2b           ??mxd??? e .....                 pld
+00193e fe/c73e: 82 70 f3     ??mxd??? e ...#.                 brl     retCopXBHA

                                               ********************************************************************************
                                               * COP 5B - OPDEL - delete anamed object                                        *
                                               *                                                                              *
                                               * Action: This call will attempt to delete a named object (ie a file or a      *
                                               * directory) from a directory.                                                 *
                                               *                                                                              *
                                               * On entry: BHA points to the object name.                                     *
                                               * On exit: If C = 0 then the object was deleted.                               *
                                               *          If C = 1 then object not found or not deleted, X = error code.      *
                                               *          BHA points to zero terminated error message.                        *
                                               *          Y preserved                                                         *
                                               ********************************************************************************
+001941 fe/c741: 4b           ??mxd??? e @T... COP_5B          phk
+001942 fe/c742: 20 d8 f7     ??mxd??? e .....                 jsr     skipSpacesBHA
+001945 fe/c745: 4b           ??mxd??? e .....                 phk
+001946 fe/c746: 20 28 f8     ??mxd??? e .....                 jsr     getFSTrampolineFromprefix
+001949 fe/c749: b0 13        ??mxd??? e .....                 bcs     LFEC75E
+00194b fe/c74b: 48           ??mxd??c e .....                 pha
+00194c fe/c74c: 98           ??mxd??c e .....                 tya
+00194d fe/c74d: 29 20 00     ??mxd??c e .....                 and     #$0020
+001950 fe/c750: f0 0b        n?mxd??c e .....                 beq     LFEC75D
+001952 fe/c752: 68           n?mxd?zc e .....                 pla
+001953 fe/c753: 9b           ??mxd??c e .....                 txy
+001954 fe/c754: a2 3e 00     ??mxd??c e .....                 ldx     #__DVDEL
+001957 fe/c757: 4b           n?mxd?zc e .....                 phk
+001958 fe/c758: 20 0b c8     n?mxd?zc e .....                 jsr     callFSModuleTrampolineInY
+00195b fe/c75b: 80 04        ??mxd??? e ...#.                 bra     LFEC761

+00195d fe/c75d: 68           n?mxd?Zc e ....> LFEC75D         pla
+00195e fe/c75e: 20 87 c8     ??mxd??? e ....> LFEC75E         jsr     cop26BadNameX1
+001961 fe/c761: 82 4d f3     ??mxd??? e ...#> LFEC761         brl     retCopXBHA

+001964 fe/c764: 4b           ??mxd??? e ....> LFEC764         phk
+001965 fe/c765: 20 d8 f7     ??mxd??? e .....                 jsr     skipSpacesBHA
+001968 fe/c768: 4b           ??mxd??? e .....                 phk
+001969 fe/c769: 20 28 f8     ??mxd??? e .....                 jsr     getFSTrampolineFromprefix
+00196c fe/c76c: 90 12        ??mxd??? e .....                 bcc     LFEC780
+00196e fe/c76e: 02 26        ??mxd??C e .....                 cop     COP_26_OPBHA
+001970 fe/c770: 42 61 64 20+            .T...                 .zstr   “Bad prefix”
+00197b fe/c77b: a2 01 00     ??mxd??C e .....                 ldx     #$0001
+00197e fe/c77e: 38           n?mxd?zC e .....                 sec
+00197f fe/c77f: 60           n?mxd?zC e ...#.                 rts

+001980 fe/c780: 9b           ??mxd??c e ....> LFEC780         txy
+001981 fe/c781: a2 42 00     ??mxd??c e .....                 ldx     #__DVUNK
+001984 fe/c784: 4b           n?mxd?zc e .....                 phk
+001985 fe/c785: 20 0b c8     n?mxd?zc e .....                 jsr     callFSModuleTrampolineInY
+001988 fe/c788: 90 16        ??mxd??? e .....                 bcc     LFEC7A0
+00198a fe/c78a: 48           ??mxd??C e .....                 pha
+00198b fe/c78b: 8a           ??mxd??C e .....                 txa
+00198c fe/c78c: 4a           ??mxd??C e .....                 lsr     A
+00198d fe/c78d: 68           n?mxd??? e .....                 pla
+00198e fe/c78e: b0 10        ??mxd??? e .....                 bcs     LFEC7A0
+001990 fe/c790: e8           ??mxd??c e .....                 inx
+001991 fe/c791: 02 26        ??mxd??c e .....                 cop     COP_26_OPBHA
+001993 fe/c793: 42 61 64 20+            .T...                 .zstr   “Bad command”
+00199f fe/c79f: 38           ??mxd??c e .....                 sec
+0019a0 fe/c7a0: 60           ??mxd??? e ...#> LFEC7A0         rts

                                               ********************************************************************************
                                               * This is a generic entry point for calls such as DVRLE which require a        *
                                               * pointer to a control block                                                   *
                                               *                                                                              *
                                               * The filename is parsed and the required FS module found and the call passed  *
                                               * on to the module                                                             *
                                               *                                                                              *
                                               * On Entry:                                                                    *
                                               *    BHA  Pointer to a control block                                           *
                                               *                                                                              *
                                               *    Control Block must have a long pointer to a filename                      *
                                               *                                                                              *
                                               * Everything else depends on which function call is in X                       *
                                               ********************************************************************************
+0019a1 fe/c7a1: a0 01 00     n?mxd?z? e ....> callFSX_BHAblock ldy    #$0001
+0019a4 fe/c7a4: b7 05        n?mxd?z? e .....                 lda     [DPCOP_AH],y
+0019a6 fe/c7a6: 48           ??mxd??? e .....                 pha
+0019a7 fe/c7a7: ab           ??mxd??? e .....                 plb
+0019a8 fe/c7a8: ab           ??mxd??? e .....                 plb                       ;get B from block
+0019a9 fe/c7a9: a0 00 00     ??mxd??? e .....                 ldy     #$0000
+0019ac fe/c7ac: b7 05        n?mxd?Z? e .....                 lda     [DPCOP_AH],y      ;get A from block
+0019ae fe/c7ae: 8b           ??mxd??? e .....                 phb
+0019af fe/c7af: 8b           ??mxd??? e .....                 phb
+0019b0 fe/c7b0: 48           ??mxd??? e .....                 pha
+0019b1 fe/c7b1: da           ??mxd??? e .....                 phx
                                               ; stack
                                               ; +6  B
                                               ; +5  B
                                               ; +3  A
                                               ; +1  X
+0019b2 fe/c7b2: 20 e4 c7     ??mxd??? e .....                 jsr     ljGetFsTrampolineFromPrefix
+0019b5 fe/c7b5: 9b           ??mxd??? e .....                 txy                       ;stack FS entry point in Y
+0019b6 fe/c7b6: fa           ??mxd??? e .....                 plx                       ;get back X - FS function code
+0019b7 fe/c7b7: b0 26        ??mxd??? e .....                 bcs     @badname
+0019b9 fe/c7b9: 5a           ??mxd??c e .....                 phy                       ;stash the FS trampoline
                                               ; stack
                                               ; +6  B
                                               ; +5  B
                                               ; +3  A
                                               ; +1  FS trampoline
+0019ba fe/c7ba: a0 00 00     ??mxd??c e .....                 ldy     #$0000
+0019bd fe/c7bd: 97 05        n?mxd?Zc e .....                 sta     [DPCOP_AH],y      ;update pointer in block to point just after ':'
+0019bf fe/c7bf: a0 02 00     n?mxd?Zc e .....                 ldy     #$0002
+0019c2 fe/c7c2: 8b           n?mxd?zc e .....                 phb
+0019c3 fe/c7c3: 8b           n?mxd?zc e .....                 phb
+0019c4 fe/c7c4: 68           n?mxd?zc e .....                 pla
+0019c5 fe/c7c5: 97 05        ??mxd??c e .....                 sta     [DPCOP_AH],y
+0019c7 fe/c7c7: 7a           ??mxd??c e .....                 ply                       ;get back trampoline address
+0019c8 fe/c7c8: d4 06        ??mxd??c e .....                 pei     (DPCOP_AH+1)
+0019ca fe/c7ca: ab           ??mxd??c e .....                 plb
+0019cb fe/c7cb: ab           ??mxd??c e .....                 plb                       ;set B to B from block
+0019cc fe/c7cc: a5 05        ??mxd??c e .....                 lda     DPCOP_AH          ;get AH from block
+0019ce fe/c7ce: 4b           ??mxd??c e .....                 phk
+0019cf fe/c7cf: 20 0b c8     ??mxd??c e .....                 jsr     callFSModuleTrampolineInY ;call the driver
+0019d2 fe/c7d2: a8           ??mxd??? e .....                 tay
+0019d3 fe/c7d3: 68           ??mxd??? e .....                 pla
+0019d4 fe/c7d4: 87 05        ??mxd??? e .....                 sta     [DPCOP_AH]
+0019d6 fe/c7d6: 68           ??mxd??? e .....                 pla
+0019d7 fe/c7d7: 5a           ??mxd??? e .....                 phy                       ;this is the returned A
+0019d8 fe/c7d8: a0 02 00     ??mxd??? e .....                 ldy     #$0002
+0019db fe/c7db: 97 05        n?mxd?z? e .....                 sta     [DPCOP_AH],y      ;reset BHA in block to how it was
+0019dd fe/c7dd: 68           n?mxd?z? e .....                 pla                       ;the A returned by the FS function
+0019de fe/c7de: 60           ??mxd??? e ...#.                 rts

+0019df fe/c7df: 68           ??mxd??C e ....> @badname        pla
+0019e0 fe/c7e0: 68           ??mxd??C e .....                 pla
+0019e1 fe/c7e1: 82 a3 00     ??mxd??C e ...#.                 brl     cop26BadNameX1

+0019e4 fe/c7e4: 4b           ??mxd??? e ....> ljGetFsTrampolineFromPrefix phk
+0019e5 fe/c7e5: 20 28 f8     ??mxd??? e .....                 jsr     getFSTrampolineFromprefix
+0019e8 fe/c7e8: 60           ??mxd??? e ...#.                 rts

+0019e9 fe/c7e9: 20 28 c8     ??mxd??? e ....> callDevHandle   jsr     getBlockFromHandle
+0019ec fe/c7ec: b0 1c        ??mxd??? e .....                 bcs     @ret
+0019ee fe/c7ee: 0b           ??mxd??c e .....                 phd
+0019ef fe/c7ef: 8b           ??mxd??c e .....                 phb
+0019f0 fe/c7f0: 8b           ??mxd??c e .....                 phb
+0019f1 fe/c7f1: 48           ??mxd??c e .....                 pha
+0019f2 fe/c7f2: 4b           ??mxd??c e .....                 phk
+0019f3 fe/c7f3: 62 10 00     ??mxd??c e .....                 per     @exit-1
+0019f6 fe/c7f6: f4 00 00     ??mxd??c e .....                 pea     $0000
+0019f9 fe/c7f9: ab           ??mxd??c e .....                 plb                       ;push a 0
+0019fa fe/c7fa: b9 03 00     ??mxd??c e .....                 lda     $0003,y           ;get FS trampoline
+0019fd fe/c7fd: 3a           ??mxd??c e .....                 dec     A
+0019fe fe/c7fe: 48           ??mxd??c e .....                 pha                       ;push trampoline long address - 1
+0019ff fe/c7ff: a3 09        ??mxd??c e .....                 lda     $09,S
+001a01 fe/c801: 48           ??mxd??c e .....                 pha
+001a02 fe/c802: ab           ??mxd??c e .....                 plb
+001a03 fe/c803: ab           ??mxd??c e .....                 plb
+001a04 fe/c804: a3 07        ??mxd??c e .....                 lda     $07,S             ;get back BHA pointer
+001a06 fe/c806: 6b           ??mxd??c e ...#.                 rtl                       ;call FS trampoline

                                                               .rwid   shortm,shortx
+001a07 fe/c807: 2b           ??MXd??? e @T... @exit           pld
+001a08 fe/c808: 2b           ??MXd??? e .....                 pld
+001a09 fe/c809: 2b           ??MXd??? e .....                 pld
+001a0a fe/c80a: 6b           ????d??? e ...#> @ret            rtl

                                                               .rwid   longm,longx
+001a0b fe/c80b: 0b           ??mxd??? e ....> callFSModuleTrampolineInY phd
+001a0c fe/c80c: 8b           ??mxd??? e .....                 phb
+001a0d fe/c80d: 8b           ??mxd??? e .....                 phb
+001a0e fe/c80e: 48           ??mxd??? e .....                 pha
+001a0f fe/c80f: 4b           ??mxd??? e .....                 phk
+001a10 fe/c810: 62 10 00     ??mxd??? e .....                 per     @exit-1
+001a13 fe/c813: f4 00 00     ??mxd??? e .....                 pea     $0000
+001a16 fe/c816: ab           ??mxd??? e .....                 plb
+001a17 fe/c817: 88           ??mxd??? e .....                 dey
+001a18 fe/c818: 5a           ??mxd??? e .....                 phy
                                               ; stack
                                               ; 
                                               ; +B  D
                                               ; +A  B
                                               ; +9  B
                                               ; +7  A
                                               ; +6  K
                                               ; +4  exit code pointer
                                               ; +3  $0 (bank address) of module entry
                                               ; +1  Y-1 as passed in (address of B0 module trampoline to call)
+001a19 fe/c819: a3 09        ??mxd??? e .....                 lda     $09,S
+001a1b fe/c81b: 48           ??mxd??? e .....                 pha
+001a1c fe/c81c: ab           ??mxd??? e .....                 plb
+001a1d fe/c81d: ab           ??mxd??? e .....                 plb
+001a1e fe/c81e: a3 07        ??mxd??? e .....                 lda     $07,S
+001a20 fe/c820: a0 00 00     ??mxd??? e .....                 ldy     #$0000
+001a23 fe/c823: 6b           n?mxd?Z? e ...#.                 rtl

+001a24 fe/c824: 2b           ??mxd??? e @T... @exit           pld
+001a25 fe/c825: 2b           ??mxd??? e .....                 pld
+001a26 fe/c826: 2b           ??mxd??? e .....                 pld
+001a27 fe/c827: 6b           ??mxd??? e ...#.                 rtl

+001a28 fe/c828: 48           ??mxd??? e ....> getBlockFromHandle pha
+001a29 fe/c829: da           ??mxd??? e .....                 phx
+001a2a fe/c82a: c0 00 01     ??mxd??? e .....                 cpy     #$0100
+001a2d fe/c82d: 90 13        ??mxd??? e .....                 bcc     @notAHandle
+001a2f fe/c82f: bb           ??mxd??C e .....                 tyx
+001a30 fe/c830: bf 0b 00 00  ??mxd??C e .....                 ldal    f:DPCOP_PC,x
+001a34 fe/c834: 29 ff 00     ??mxd??C e .....                 and     #$00ff
+001a37 fe/c837: 49 10 00     n?mxd??C e .....                 eor     #HND_type_10_CBHN
+001a3a fe/c83a: c9 01 00     ??mxd??C e .....                 cmp     #$0001            ;set carry if <>
+001a3d fe/c83d: b0 03        ??mxd??? e .....                 bcs     @notAHandle
+001a3f fe/c83f: fa           ??mxd??c e .....                 plx
+001a40 fe/c840: 68           ??mxd??c e .....                 pla
+001a41 fe/c841: 60           ??mxd??c e ...#.                 rts

+001a42 fe/c842: fa           ??mxd??? e ....> @notAHandle     plx
+001a43 fe/c843: fa           ??mxd??? e .....                 plx
+001a44 fe/c844: 02 26        ??mxd??? e .....                 cop     COP_26_OPBHA
+001a46 fe/c846: 4e 6f 74 20+            .T...                 .zstr   “Not a handle”
+001a53 fe/c853: a2 01 00     ??mxd??? e .....                 ldx     #$0001
+001a56 fe/c856: 38           n?mxd?z? e .....                 sec
+001a57 fe/c857: 60           n?mxd?zC e ...#.                 rts

+001a58 fe/c858: 48           ??mxd??? e @T...                 pha
+001a59 fe/c859: eb           ??mxd??? e .....                 xba
+001a5a fe/c85a: 62 02 00     ??mxd??? e .....                 per     LFEC860-1
+001a5d fe/c85d: 82 0a 00     ??mxd??? e ...#.                 brl     LFEC86A

+001a60 fe/c860: a3 01        ??mxd??? e @T... LFEC860         lda     $01,S
+001a62 fe/c862: 62 02 00     ??mxd??? e .....                 per     LFEC868-1
+001a65 fe/c865: 82 02 00     ??mxd??? e ...#.                 brl     LFEC86A

+001a68 fe/c868: 68           ??mxd??? e @T... LFEC868         pla
+001a69 fe/c869: 60           ??mxd??? e ...#.                 rts

+001a6a fe/c86a: 29 ff 00     ??mxd??? e ....> LFEC86A         and     #$00ff
+001a6d fe/c86d: 48           n?mxd??? e .....                 pha
+001a6e fe/c86e: 4a           n?mxd??? e .....                 lsr     A
+001a6f fe/c86f: 4a           n?mxd??? e .....                 lsr     A
+001a70 fe/c870: 4a           n?mxd??? e .....                 lsr     A
+001a71 fe/c871: 4a           n?mxd??? e .....                 lsr     A
+001a72 fe/c872: 62 02 00     n?mxd??? e .....                 per     LFEC878-1
+001a75 fe/c875: 82 01 00     n?mxd??? e ...#.                 brl     LFEC879

+001a78 fe/c878: 68           ??mxd??? e @T... LFEC878         pla
+001a79 fe/c879: 29 0f 00     ??mxd??? e ....> LFEC879         and     #$000f
+001a7c fe/c87c: f8           n?mxd??? e .....                 sed
+001a7d fe/c87d: c9 0a 00     n?mxD??? e .....                 cmp     #$000a
+001a80 fe/c880: 69 30 00     ??mxD??? e .....                 adc     #$0030
+001a83 fe/c883: d8           ??mxD??? e .....                 cld
+001a84 fe/c884: 02 00        ??mxd??? e .....                 cop     COP_00_OPWRC
+001a86 fe/c886: 60           ??mxd??? e ...#.                 rts

+001a87 fe/c887: 02 26        ??mxd??? e ....> cop26BadNameX1  cop     COP_26_OPBHA
+001a89 fe/c889: 42 61 64 20+            .T...                 .zstr   “Bad name”
+001a92 fe/c892: 80 1c        ??mxd??? e ...#.                 bra     retX1

+001a94 fe/c894: 02 26        ??mxd??C e .T..> cop26BadModuleX1 cop    COP_26_OPBHA
+001a96 fe/c896: 42 61 64 20+            .T...                 .zstr   “Bad module”
+001aa1 fe/c8a1: 80 0d        ??mxd??C e ...#.                 bra     retX1

+001aa3 fe/c8a3: 02 26        ??mxd??C e .T..> cop26BadHandleX1 cop    COP_26_OPBHA
+001aa5 fe/c8a5: 42 61 64 20+            .T...                 .zstr   “Bad handle”
+001ab0 fe/c8b0: a2 01 00     ??mxd??? e ....> retX1           ldx     #$0001
+001ab3 fe/c8b3: 38           n?mxd?z? e .....                 sec
+001ab4 fe/c8b4: 60           n?mxd?zC e ...#.                 rts

                                               ********************************************************************************
                                               * COP 3C - OPDTD - QRY                                                         *
                                               ********************************************************************************
+001ab5 fe/c8b5: a6 03        ??mxd??? e @T... COP_3C          ldx     DPCOP_X
+001ab7 fe/c8b7: 0b           ??mxd??? e .....                 phd
+001ab8 fe/c8b8: d4 08        ??mxd??? e .....                 pei     (DPCOP_DP)
+001aba fe/c8ba: 2b           ??mxd??? e .....                 pld
+001abb fe/c8bb: 62 02 00     ??mxd??? e .....                 per     LFEC8C1-1
+001abe fe/c8be: 82 10 00     ??mxd??? e ...#.                 brl     LFEC8D1

+001ac1 fe/c8c1: 2b           ??mxd??? e @T... LFEC8C1         pld
+001ac2 fe/c8c2: 85 05        ??mxd??? e .....                 sta     DPCOP_AH
+001ac4 fe/c8c4: 86 03        ??mxd??? e .....                 stx     DPCOP_X
+001ac6 fe/c8c6: 84 01        ??mxd??? e .....                 sty     DPCOP_Y
+001ac8 fe/c8c8: e2 30        ??mxd??? e .....                 sep     #$30
                                                               .rwid   shortm,shortx
+001aca fe/c8ca: 8b           ??MXd??? e .....                 phb
+001acb fe/c8cb: 68           ??MXd??? e .....                 pla
+001acc fe/c8cc: 85 07        ??MXd??? e .....                 sta     DPCOP_B
+001ace fe/c8ce: c2 30        ??MXd??? e .....                 rep     #$30
                                                               .rwid   longm,longx
+001ad0 fe/c8d0: 6b           ??mxd??? e ...#.                 rtl

+001ad1 fe/c8d1: 08           ??mxd??? e ....> LFEC8D1         php
+001ad2 fe/c8d2: e2 30        ??mxd??? e .....                 sep     #$30
                                                               .rwid   shortm,shortx
+001ad4 fe/c8d4: e0 00        ??MXd??? e .....                 cpx     #$00
+001ad6 fe/c8d6: d0 0c        ??MXd??? e .....                 bne     LFEC8E4
+001ad8 fe/c8d8: 85 88        ??MXd?Z? e .....                 sta     $88
+001ada fe/c8da: 38           ??MXd?Z? e .....                 sec
+001adb fe/c8db: 66 01        ??MXd?ZC e .....                 ror     DPCOP_Y
+001add fe/c8dd: 64 02        N?MXd?z? e .....                 stz     DPCOP_Y+1
+001adf fe/c8df: 64 00        N?MXd?z? e .....                 stz     $00
+001ae1 fe/c8e1: 82 e7 01     N?MXd?z? e ...#.                 brl     LFECACB

+001ae4 fe/c8e4: e0 02        ??MXd?z? e ....> LFEC8E4         cpx     #$02
+001ae6 fe/c8e6: f0 1b        ??MXd??? e .....                 beq     LFEC903
+001ae8 fe/c8e8: e0 04        ??MXd?z? e .....                 cpx     #$04
+001aea fe/c8ea: d0 0b        ??MXd??? e .....                 bne     LFEC8F7
+001aec fe/c8ec: 62 02 00     ??MXd?Z? e .....                 per     LFEC8F2-1
+001aef fe/c8ef: 82 80 02     ??MXd?Z? e ...#.                 brl     LFECB72

+001af2 fe/c8f2: b0 23        ??MXd??? e @T... LFEC8F2         bcs     LFEC917
+001af4 fe/c8f4: 82 d4 01     ??MXd??c e ...#.                 brl     LFECACB

+001af7 fe/c8f7: e0 06        ??MXd?z? e ....> LFEC8F7         cpx     #$06
+001af9 fe/c8f9: d0 1c        ??MXd??? e .....                 bne     LFEC917
+001afb fe/c8fb: 62 02 00     ??MXd?Z? e .....                 per     LFEC8FE+2
+001afe fe/c8fe: 82 83 02     ??MXd?Z? e ...#. LFEC8FE         brl     LFECB84

+001b01 fe/c901: 80                      .....                 .dd1    $80
+001b02 fe/c902: ef                      .....                 .dd1    $ef

+001b03 fe/c903: 85 03        ??MXd?Z? e ....> LFEC903         sta     DPCOP_X
+001b05 fe/c905: eb           ??MXd?Z? e .....                 xba
+001b06 fe/c906: 85 04        ??MXd??? e .....                 sta     DPCOP_X+1
+001b08 fe/c908: 8b           ??MXd??? e .....                 phb
+001b09 fe/c909: 68           ??MXd??? e .....                 pla
+001b0a fe/c90a: 85 05        ??MXd??? e .....                 sta     DPCOP_AH
+001b0c fe/c90c: 98           ??MXd??? e .....                 tya
+001b0d fe/c90d: a6 00        ??MXd??? e .....                 ldx     $00
+001b0f fe/c90f: 10 09        ??MXd??? e .....                 bpl     LFEC91A
+001b11 fe/c911: c9 20        N?MXd??? e ....> LFEC911         cmp     #$20
+001b13 fe/c913: b0 02        ??MXd??? e .....                 bcs     LFEC917
+001b15 fe/c915: 64 00        ??MXd??c e .....                 stz     $00
+001b17 fe/c917: 28           ????d??? e ....> LFEC917         plp
                                                               .rwid   longm,longx
+001b18 fe/c918: 38           ??mxd??? e .....                 sec
+001b19 fe/c919: 60           ??mxd??C e ...#.                 rts

                                                               .rwid   shortm,shortx
+001b1a fe/c91a: 95 10        n?MXd??? e ....> LFEC91A         sta     $10,x
+001b1c fe/c91c: e0 01        n?MXd??? e .....                 cpx     #$01
+001b1e fe/c91e: 90 55        ??MXd??? e .....                 bcc     LFEC975
+001b20 fe/c920: d0 37        ??MXd??C e .....                 bne     LFEC959
+001b22 fe/c922: c2 10        ??MXd?ZC e .....                 rep     #$10
                                                               .rwid   longx
+001b24 fe/c924: a0 00 00     ??Mxd?ZC e .....                 ldy     #$0000
+001b27 fe/c927: e2 20        ???xd??? e ....> LFEC927         sep     #$20
+001b29 fe/c929: b7 03        ??Mxd??? e .....                 lda     [DPCOP_X],y
+001b2b fe/c92b: f0 56        ??Mxd??? e .....                 beq     LFEC983
+001b2d fe/c92d: c5 10        ??Mxd?z? e .....                 cmp     $10
+001b2f fe/c92f: f0 0a        ??Mxd??? e .....                 beq     LFEC93B
+001b31 fe/c931: c2 30        ??Mxd?z? e .....                 rep     #$30
                                                               .rwid   longm
+001b33 fe/c933: 98           ??mxd?z? e .....                 tya
+001b34 fe/c934: 18           ??mxd??? e .....                 clc
+001b35 fe/c935: 69 0a 00     ??mxd??c e .....                 adc     #$000a
+001b38 fe/c938: a8           ??mxd??? e .....                 tay
+001b39 fe/c939: 80 ec        ??mxd??? e ...#.                 bra     LFEC927

                                                               .rwid   shortm
+001b3b fe/c93b: a2 00 00     ??Mxd?Z? e ....> LFEC93B         ldx     #$0000
+001b3e fe/c93e: c8           ??Mxd??? e ....> LFEC93E         iny
+001b3f fe/c93f: b7 03        ??Mxd??? e .....                 lda     [DPCOP_X],y
+001b41 fe/c941: 95 07        ??Mxd??? e .....                 sta     DPCOP_B,x
+001b43 fe/c943: e8           ??Mxd??? e .....                 inx
+001b44 fe/c944: e0 09 00     ??Mxd??? e .....                 cpx     #$0009
+001b47 fe/c947: 90 f5        ??Mxd??? e .....                 bcc     LFEC93E
+001b49 fe/c949: e2 30        ??Mxd??C e .....                 sep     #$30
                                                               .rwid   shortx
+001b4b fe/c94b: a5 88        ??MXd??C e .....                 lda     $88
+001b4d fe/c94d: f0 0a        ??MXd??C e .....                 beq     LFEC959
+001b4f fe/c94f: a5 07        ??MXd?zC e .....                 lda     DPCOP_B
+001b51 fe/c951: c9 86        ??MXd??C e .....                 cmp     #$86
+001b53 fe/c953: f0 04        ??MXd??? e .....                 beq     LFEC959
+001b55 fe/c955: c9 87        ??MXd?z? e .....                 cmp     #$87
+001b57 fe/c957: d0 2a        ??MXd??? e .....                 bne     LFEC983
+001b59 fe/c959: a6 00        ??MXd??? e ....> LFEC959         ldx     $00
+001b5b fe/c95b: b5 10        ??MXd??? e .....                 lda     $10,x
+001b5d fe/c95d: 24 07        ??MXd??? e .....                 bit     DPCOP_B
+001b5f fe/c95f: 30 14        ??MXd??? e .....                 bmi     LFEC975
+001b61 fe/c961: c9 3f        n?MXd??? e .....                 cmp     #$3f
+001b63 fe/c963: f0 25        ??MXd??? e .....                 beq     LFEC98A
+001b65 fe/c965: c9 25        ??MXd?z? e .....                 cmp     #$25
+001b67 fe/c967: f0 21        ??MXd??? e .....                 beq     LFEC98A
+001b69 fe/c969: c9 21        ??MXd?z? e .....                 cmp     #$21
+001b6b fe/c96b: f0 1d        ??MXd??? e .....                 beq     LFEC98A
+001b6d fe/c96d: c9 5b        ??MXd?z? e .....                 cmp     #$5b
+001b6f fe/c96f: b0 04        ??MXd??? e .....                 bcs     LFEC975
+001b71 fe/c971: c9 40        ??MXd??c e .....                 cmp     #$40
+001b73 fe/c973: b0 15        ??MXd??? e .....                 bcs     LFEC98A
+001b75 fe/c975: c9 20        ??MXd??? e ....> LFEC975         cmp     #$20
+001b77 fe/c977: 90 13        ??MXd??? e .....                 bcc     LFEC98C
+001b79 fe/c979: e6 00        ??MXd??C e .....                 inc     $00
+001b7b fe/c97b: a5 00        ??MXd??C e .....                 lda     $00
+001b7d fe/c97d: c9 20        ??MXd??C e .....                 cmp     #$20
+001b7f fe/c97f: b5 10        ??MXd??? e .....                 lda     $10,x
+001b81 fe/c981: 90 63        ??MXd??? e .....                 bcc     LFEC9E6
+001b83 fe/c983: e2 30        ??M?d??? e ....> LFEC983         sep     #$30
+001b85 fe/c985: 38           ??MXd??? e .....                 sec
+001b86 fe/c986: 66 00        ??MXd??C e .....                 ror     $00
+001b88 fe/c988: 80 87        N?MXd?z? e ...#.                 bra     LFEC911

+001b8a fe/c98a: 85 10        ??MXd??? e ....> LFEC98A         sta     $10
+001b8c fe/c98c: a9 00        ??MXd??? e ....> LFEC98C         lda     #$00
+001b8e fe/c98e: 69 00        n?MXd?Z? e .....                 adc     #$00
+001b90 fe/c990: 85 00        ??MXd??? e .....                 sta     $00
+001b92 fe/c992: 74 10        ??MXd??? e .....                 stz     $10,x
+001b94 fe/c994: 8a           ??MXd??? e .....                 txa
+001b95 fe/c995: f0 4f        ??MXd??? e .....                 beq     LFEC9E6
+001b97 fe/c997: 64 02        ??MXd?z? e .....                 stz     DPCOP_Y+1
+001b99 fe/c999: a5 07        ??MXd?z? e .....                 lda     DPCOP_B
+001b9b fe/c99b: c9 00        ??MXd??? e .....                 cmp     #$00
+001b9d fe/c99d: d0 03        ??MXd??? e .....                 bne     LFEC9A2
+001b9f fe/c99f: 82 25 01     ??MXd?Z? e ...#.                 brl     LFECAC7

+001ba2 fe/c9a2: c9 01        ??MXd?z? e ....> LFEC9A2         cmp     #$01
+001ba4 fe/c9a4: d0 03        ??MXd??? e .....                 bne     LFEC9A9
+001ba6 fe/c9a6: 82 ce 00     ??MXd?Z? e ...#.                 brl     LFECA77

+001ba9 fe/c9a9: c9 02        ??MXd?z? e ....> LFEC9A9         cmp     #$02
+001bab fe/c9ab: f0 64        ??MXd??? e .....                 beq     LFECA11
+001bad fe/c9ad: c9 83        ??MXd?z? e .....                 cmp     #$83
+001baf fe/c9af: f0 38        ??MXd??? e .....                 beq     LFEC9E9
+001bb1 fe/c9b1: c9 90        ??MXd?z? e .....                 cmp     #$90
+001bb3 fe/c9b3: d0 03        ??MXd??? e .....                 bne     LFEC9B8
+001bb5 fe/c9b5: 82 16 01     ??MXd?Z? e ...#.                 brl     LFECACE

+001bb8 fe/c9b8: c9 85        ??MXd?z? e ....> LFEC9B8         cmp     #$85
+001bba fe/c9ba: d0 03        ??MXd??? e .....                 bne     LFEC9BF
+001bbc fe/c9bc: 82 a4 00     ??MXd?Z? e ...#.                 brl     LFECA63

+001bbf fe/c9bf: c9 86        ??MXd?z? e ....> LFEC9BF         cmp     #$86
+001bc1 fe/c9c1: d0 03        ??MXd??? e .....                 bne     LFEC9C6
+001bc3 fe/c9c3: 82 68 01     ??MXd?Z? e ...#.                 brl     LFECB2E

+001bc6 fe/c9c6: c9 87        ??MXd?z? e ....> LFEC9C6         cmp     #$87
+001bc8 fe/c9c8: d0 03        ??MXd??? e .....                 bne     LFEC9CD
+001bca fe/c9ca: 82 65 01     ??MXd?Z? e ...#.                 brl     LFECB32

+001bcd fe/c9cd: 02 0f        ??MXd?z? e ....> LFEC9CD         cop     COP_0F_OPERR
+001bcf fe/c9cf: 42 61 64 20+            .T...                 .zstr   “Bad DTD parameter type”
+001be6 fe/c9e6: 82 2e ff     ????d??? e ...#> LFEC9E6         brl     LFEC917

+001be9 fe/c9e9: c2 30        ??MXd?Z? e ....> LFEC9E9         rep     #$30
                                                               .rwid   longm,longx
+001beb fe/c9eb: 62 02 00     ??mxd?Z? e .....                 per     LFEC9F1-1
+001bee fe/c9ee: 82 ff 00     ??mxd?Z? e ...#.                 brl     LFECAF0

+001bf1 fe/c9f1: a2 80 00     ??mxd??? e @T... LFEC9F1         ldx     #$0080
+001bf4 fe/c9f4: a0 06 00     n?mxd?z? e .....                 ldy     #$0006
+001bf7 fe/c9f7: 02 18        n?mxd?z? e .....                 cop     COP_18_OPRLH
+001bf9 fe/c9f9: b0 eb        n?mxd?z? e .....                 bcs     LFEC9E6
+001bfb fe/c9fb: a6 0e        n?mxd?zc e .....                 ldx     $0e
+001bfd fe/c9fd: f0 08        ??mxd??c e .....                 beq     LFECA07
+001bff fe/c9ff: a5 81        ??mxd?zc e .....                 lda     $81
+001c01 fe/ca01: 95 01        ??mxd??c e .....                 sta     DPCOP_Y,x
+001c03 fe/ca03: a5 80        ??mxd??c e .....                 lda     $80
+001c05 fe/ca05: 95 00        ??mxd??c e .....                 sta     $00,x
+001c07 fe/ca07: a5 81        ??mxd??c e ....> LFECA07         lda     $81
+001c09 fe/ca09: 48           ??mxd??c e .....                 pha
+001c0a fe/ca0a: ab           ??mxd??c e .....                 plb
+001c0b fe/ca0b: ab           ??mxd??c e .....                 plb
+001c0c fe/ca0c: a5 80        ??mxd??c e .....                 lda     $80
+001c0e fe/ca0e: 82 b6 00     ??mxd??c e ...#.                 brl     LFECAC7

                                                               .rwid   shortm,shortx
+001c11 fe/ca11: c2 30        ??MXd?Z? e ....> LFECA11         rep     #$30
                                                               .rwid   longm,longx
+001c13 fe/ca13: 64 80        ??mxd?Z? e .....                 stz     $80
+001c15 fe/ca15: a2 01 00     ??mxd?Z? e .....                 ldx     #$0001
+001c18 fe/ca18: 86 82        n?mxd?z? e .....                 stx     $82
+001c1a fe/ca1a: b5 10        ??mxd??? e ....> LFECA1A         lda     $10,x
+001c1c fe/ca1c: 29 ff 00     ??mxd??? e .....                 and     #$00ff
+001c1f fe/ca1f: e8           n?mxd??? e .....                 inx
+001c20 fe/ca20: c9 20 00     ??mxd??? e .....                 cmp     #$0020
+001c23 fe/ca23: f0 f5        ??mxd??? e .....                 beq     LFECA1A
+001c25 fe/ca25: ca           ??mxd?z? e .....                 dex
+001c26 fe/ca26: b5 10        ??mxd??? e ....> LFECA26         lda     $10,x
+001c28 fe/ca28: 29 ff 00     ??mxd??? e .....                 and     #$00ff
+001c2b fe/ca2b: f0 28        n?mxd??? e .....                 beq     LFECA55
+001c2d fe/ca2d: 38           n?mxd?z? e .....                 sec
+001c2e fe/ca2e: e9 30 00     n?mxd?zC e .....                 sbc     #$0030
+001c31 fe/ca31: c9 0a 00     ??mxd??? e .....                 cmp     #$000a
+001c34 fe/ca34: b0 b0        ??mxd??? e .....                 bcs     LFEC9E6
+001c36 fe/ca36: a4 80        ??mxd??c e .....                 ldy     $80
+001c38 fe/ca38: c0 99 19     ??mxd??c e .....                 cpy     #$1999
+001c3b fe/ca3b: 90 07        ??mxd??? e .....                 bcc     LFECA44
+001c3d fe/ca3d: d0 a7        ??mxd??C e .....                 bne     LFEC9E6
+001c3f fe/ca3f: c9 06 00     ??mxd?ZC e .....                 cmp     #$0006
+001c42 fe/ca42: b0 a2        ??mxd??? e .....                 bcs     LFEC9E6
+001c44 fe/ca44: 48           ??mxd??c e ....> LFECA44         pha
+001c45 fe/ca45: 98           ??mxd??c e .....                 tya
+001c46 fe/ca46: 0a           ??mxd??c e .....                 asl     A
+001c47 fe/ca47: 0a           ??mxd??? e .....                 asl     A
+001c48 fe/ca48: 65 80        ??mxd??? e .....                 adc     $80
+001c4a fe/ca4a: 0a           ??mxd??? e .....                 asl     A
+001c4b fe/ca4b: 63 01        ??mxd??? e .....                 adc     $01,S
+001c4d fe/ca4d: 85 80        ??mxd??? e .....                 sta     $80
+001c4f fe/ca4f: 68           ??mxd??? e .....                 pla
+001c50 fe/ca50: e8           ??mxd??? e .....                 inx
+001c51 fe/ca51: 64 82        ??mxd??? e .....                 stz     $82
+001c53 fe/ca53: 80 d1        ??mxd??? e ...#.                 bra     LFECA26

+001c55 fe/ca55: a5 82        n?mxd?Z? e ....> LFECA55         lda     $82
+001c57 fe/ca57: d0 8d        ??mxd??? e .....                 bne     LFEC9E6
+001c59 fe/ca59: a5 80        ??mxd?Z? e .....                 lda     $80
+001c5b fe/ca5b: a6 0e        ??mxd??? e .....                 ldx     $0e
+001c5d fe/ca5d: f0 02        ??mxd??? e .....                 beq     LFECA61
+001c5f fe/ca5f: 95 00        ??mxd?z? e .....                 sta     $00,x
+001c61 fe/ca61: 80 64        ??mxd??? e ...#> LFECA61         bra     LFECAC7

                                                               .rwid   shortm,shortx
+001c63 fe/ca63: c2 30        ??MXd?Z? e ....> LFECA63         rep     #$30
                                                               .rwid   longm,longx
+001c65 fe/ca65: b8           ??mxd?Z? e .....                 clv
+001c66 fe/ca66: 62 02 00     ?vmxd?Z? e .....                 per     LFECA6C-1
+001c69 fe/ca69: 82 90 00     ?vmxd?Z? e ...#.                 brl     LFECAFC

                                                               .rwid   shortm,shortx
+001c6c fe/ca6c: b0 09        ??MXd??? e @T... LFECA6C         bcs     LFECA77
+001c6e fe/ca6e: 62 02 00     ??MXd??c e .....                 per     LFECA74-1
+001c71 fe/ca71: 82 1f 01     ??MXd??c e ...#.                 brl     LFECB93

+001c74 fe/ca74: 82 a0 fe     ??MXd??? e @T.#. LFECA74         brl     LFEC917

+001c77 fe/ca77: e2 30        ??MXd??? e ....> LFECA77         sep     #$30
+001c79 fe/ca79: 18           ??MXd??? e .....                 clc
+001c7a fe/ca7a: a5 03        ??MXd??c e .....                 lda     DPCOP_X
+001c7c fe/ca7c: 65 0a        ??MXd??c e .....                 adc     DPCOP_P
+001c7e fe/ca7e: 85 80        ??MXd??? e .....                 sta     $80
+001c80 fe/ca80: a5 04        ??MXd??? e .....                 lda     DPCOP_X+1
+001c82 fe/ca82: 65 0b        ??MXd??? e .....                 adc     DPCOP_PC
+001c84 fe/ca84: 85 81        ??MXd??? e .....                 sta     $81
+001c86 fe/ca86: a5 05        ??MXd??? e .....                 lda     DPCOP_AH
+001c88 fe/ca88: 85 82        ??MXd??? e .....                 sta     $82
+001c8a fe/ca8a: a7 80        ??MXd??? e .....                 lda     [$80]
+001c8c fe/ca8c: a8           ??MXd??? e .....                 tay
+001c8d fe/ca8d: e6 80        ??MXd??? e .....                 inc     $80
+001c8f fe/ca8f: d0 06        ??MXd??? e .....                 bne     LFECA97
+001c91 fe/ca91: e6 81        ??MXd?Z? e .....                 inc     $81
+001c93 fe/ca93: d0 02        ??MXd??? e .....                 bne     LFECA97
+001c95 fe/ca95: e6 82        ??MXd?Z? e .....                 inc     $82
+001c97 fe/ca97: 0b           ??MXd??? e ....> LFECA97         phd
+001c98 fe/ca98: 18           ??MXd??? e .....                 clc
+001c99 fe/ca99: 68           ??MXd??c e .....                 pla
+001c9a fe/ca9a: 69 11        ??MXd??c e .....                 adc     #$11
+001c9c fe/ca9c: 85 84        ??MXd??? e .....                 sta     $84
+001c9e fe/ca9e: 68           ??MXd??? e .....                 pla
+001c9f fe/ca9f: 69 00        ??MXd??? e .....                 adc     #$00
+001ca1 fe/caa1: 85 85        ??MXd??? e .....                 sta     $85
+001ca3 fe/caa3: 64 86        ??MXd??? e .....                 stz     $86
+001ca5 fe/caa5: a2 80        ??MXd??? e .....                 ldx     #$80
+001ca7 fe/caa7: 02 36        N?MXd?z? e .....                 cop     COP_36_OPNLU
+001ca9 fe/caa9: 90 03        N?MXd?z? e .....                 bcc     LFECAAE
+001cab fe/caab: 82 38 ff     N?MXd?zC e ...#.                 brl     LFEC9E6

+001cae fe/caae: a5 07        N?MXd?zc e ....> LFECAAE         lda     DPCOP_B
+001cb0 fe/cab0: c9 85        ??MXd??c e .....                 cmp     #$85
+001cb2 fe/cab2: d0 08        ??MXd??? e .....                 bne     LFECABC
+001cb4 fe/cab4: a5 11        ??MXd?Z? e .....                 lda     $11
+001cb6 fe/cab6: 62 02 00     ??MXd??? e .....                 per     LFECABC-1
+001cb9 fe/cab9: 82 c8 00     ??MXd??? e ...#.                 brl     LFECB84

+001cbc fe/cabc: 98           ??MXd?z? e ....> LFECABC         tya
+001cbd fe/cabd: c2 10        ??MXd??? e .....                 rep     #$10
                                                               .rwid   longx
+001cbf fe/cabf: a6 0e        ??Mxd??? e .....                 ldx     $0e
+001cc1 fe/cac1: f0 02        ??Mxd??? e .....                 beq     LFECAC5
+001cc3 fe/cac3: 95 00        ??Mxd?z? e .....                 sta     $00,x
+001cc5 fe/cac5: e2 10        ??Mxd??? e ....> LFECAC5         sep     #$10
                                                               .rwid   shortx
+001cc7 fe/cac7: c2 30        ????d??? e ....> LFECAC7         rep     #$30
                                                               .rwid   longm,longx
+001cc9 fe/cac9: a6 08        ??mxd??? e .....                 ldx     DPCOP_DP
                                                               .rwid   shortm,shortx
+001ccb fe/cacb: 28           ????d??? e ....> LFECACB         plp
+001ccc fe/cacc: 18           ???????? e .....                 clc
+001ccd fe/cacd: 60           ???????c e ...#.                 rts

+001cce fe/cace: e2 30        ??MXd?Z? e ....> LFECACE         sep     #$30
+001cd0 fe/cad0: c2 10        ??MXd?Z? e .....                 rep     #$10
                                                               .rwid   longx
+001cd2 fe/cad2: a4 0e        ??Mxd?Z? e .....                 ldy     $0e
+001cd4 fe/cad4: f0 10        ??Mxd??? e .....                 beq     LFECAE6
+001cd6 fe/cad6: a2 01 00     ??Mxd?z? e .....                 ldx     #$0001
+001cd9 fe/cad9: b5 10        ??Mxd?z? e ....> LFECAD9         lda     $10,x
+001cdb fe/cadb: da           ??Mxd??? e .....                 phx
+001cdc fe/cadc: bb           ??Mxd??? e .....                 tyx
+001cdd fe/cadd: 95 00        ??Mxd??? e .....                 sta     $00,x
+001cdf fe/cadf: fa           ??Mxd??? e .....                 plx
+001ce0 fe/cae0: e8           ??Mxd??? e .....                 inx
+001ce1 fe/cae1: c8           ??Mxd??? e .....                 iny
+001ce2 fe/cae2: c9 00        ??Mxd??? e .....                 cmp     #$00
+001ce4 fe/cae4: d0 f3        ??Mxd??? e .....                 bne     LFECAD9
+001ce6 fe/cae6: c2 30        ??Mxd?Z? e ....> LFECAE6         rep     #$30
                                                               .rwid   longm
+001ce8 fe/cae8: 62 02 00     ??mxd?Z? e .....                 per     LFECAEE-1
+001ceb fe/caeb: 82 02 00     ??mxd?Z? e ...#.                 brl     LFECAF0

                                                               .rwid   shortm,shortx
+001cee fe/caee: 80 d7        ??MXd??? e @T.#. LFECAEE         bra     LFECAC7

                                                               .rwid   longm,longx
+001cf0 fe/caf0: f4 00 00     ??mxd?Z? e ....> LFECAF0         pea     $0000
+001cf3 fe/caf3: ab           ??mxd?Z? e .....                 plb
+001cf4 fe/caf4: ab           ??mxd??? e .....                 plb
+001cf5 fe/caf5: 0b           ??mxd??? e .....                 phd
+001cf6 fe/caf6: 68           ??mxd??? e .....                 pla
+001cf7 fe/caf7: 18           ??mxd??? e .....                 clc
+001cf8 fe/caf8: 69 11 00     ??mxd??c e .....                 adc     #$0011
+001cfb fe/cafb: 60           ??mxd??? e ...#.                 rts

+001cfc fe/cafc: e2 30        ??mxd??? e ....> LFECAFC         sep     #$30
                                                               .rwid   shortm,shortx
+001cfe fe/cafe: a0 00        ??MXd??? e .....                 ldy     #$00
+001d00 fe/cb00: b7 03        ??MXd??? e ....> LFECB00         lda     [DPCOP_X],y
+001d02 fe/cb02: 38           ??MXd??? e .....                 sec
+001d03 fe/cb03: f0 1b        ??MXd??C e .....                 beq     LFECB20
+001d05 fe/cb05: 5a           ??MXd?zC e .....                 phy
+001d06 fe/cb06: c5 11        ??MXd?zC e .....                 cmp     $11
+001d08 fe/cb08: d0 19        ??MXd??? e .....                 bne     LFECB23
+001d0a fe/cb0a: 70 0d        ??MXd?Z? e .....                 bvs     LFECB19
+001d0c fe/cb0c: 08           ?vMXd?Z? e .....                 php
+001d0d fe/cb0d: 98           ?vMXd?Z? e .....                 tya
+001d0e fe/cb0e: 18           ?vMXd??? e .....                 clc
+001d0f fe/cb0f: 69 08        ?vMXd??c e .....                 adc     #$08
+001d11 fe/cb11: a8           ??MXd??? e .....                 tay
+001d12 fe/cb12: 28           ??MXd??? e .....                 plp
+001d13 fe/cb13: c2 30        ?vMXd?Z? e .....                 rep     #$30
                                                               .rwid   longm,longx
+001d15 fe/cb15: b7 03        ?vmxd?Z? e .....                 lda     [DPCOP_X],y
+001d17 fe/cb17: f0 0a        ?vmxd??? e .....                 beq     LFECB23
                                                               .rwid   shortm,shortx
+001d19 fe/cb19: e2 10        ????d??? e ....> LFECB19         sep     #$10
+001d1b fe/cb1b: 7a           ???Xd??? e .....                 ply
+001d1c fe/cb1c: c2 30        ???Xd??? e .....                 rep     #$30
                                                               .rwid   longm,longx
+001d1e fe/cb1e: aa           ??mxd??? e .....                 tax
+001d1f fe/cb1f: 18           ??mxd??? e .....                 clc
                                                               .rwid   shortm,shortx
+001d20 fe/cb20: c2 30        ????d??? e ....> LFECB20         rep     #$30
                                                               .rwid   longm,longx
+001d22 fe/cb22: 60           ??mxd??? e ...#.                 rts

                                                               .rwid   shortm,shortx
+001d23 fe/cb23: e2 30        ????d??? e ....> LFECB23         sep     #$30
+001d25 fe/cb25: 68           ??MXd??? e .....                 pla
+001d26 fe/cb26: 08           ??MXd??? e .....                 php
+001d27 fe/cb27: 18           ??MXd??? e .....                 clc
+001d28 fe/cb28: 69 0a        ??MXd??c e .....                 adc     #$0a
+001d2a fe/cb2a: 28           ??MXd??? e .....                 plp
+001d2b fe/cb2b: a8           ?vMXd??? e .....                 tay
+001d2c fe/cb2c: 80 d2        ?vMXd??? e ...#.                 bra     LFECB00

+001d2e fe/cb2e: a9 06        ??MXd?Z? e ....> LFECB2E         lda     #$06
+001d30 fe/cb30: 80 02        n?MXd?z? e ...#.                 bra     LFECB34

+001d32 fe/cb32: a9 04        ??MXd?Z? e ....> LFECB32         lda     #$04
+001d34 fe/cb34: 85 06        n?MXd?z? e ....> LFECB34         sta     DPCOP_AH+1
+001d36 fe/cb36: e2 40        n?MXd?z? e .....                 sep     #$40
+001d38 fe/cb38: c2 30        nVMXd?z? e .....                 rep     #$30
                                                               .rwid   longm,longx
+001d3a fe/cb3a: 62 02 00     nVmxd?z? e .....                 per     LFECB40-1
+001d3d fe/cb3d: 82 bc ff     nVmxd?z? e ...#.                 brl     LFECAFC

                                                               .rwid   shortm,shortx
+001d40 fe/cb40: e2 30        ??MXd??? e @T... LFECB40         sep     #$30
+001d42 fe/cb42: b0 2b        ??MXd??? e .....                 bcs     LFECB6F
+001d44 fe/cb44: b7 03        ??MXd??c e .....                 lda     [DPCOP_X],y
+001d46 fe/cb46: 62 02 00     ??MXd??c e .....                 per     LFECB4C-1
+001d49 fe/cb49: 82 38 00     ??MXd??c e ...#.                 brl     LFECB84

+001d4c fe/cb4c: 98           ??MXd??? e @T... LFECB4C         tya
+001d4d fe/cb4d: 18           ??MXd??? e .....                 clc
+001d4e fe/cb4e: 65 06        ??MXd??c e .....                 adc     DPCOP_AH+1
+001d50 fe/cb50: a8           ??MXd??? e .....                 tay
+001d51 fe/cb51: c2 30        ??MXd??? e .....                 rep     #$30
                                                               .rwid   longm,longx
+001d53 fe/cb53: b7 03        ??mxd??? e .....                 lda     [DPCOP_X],y
+001d55 fe/cb55: 18           ??mxd??? e .....                 clc
+001d56 fe/cb56: 65 03        ??mxd??c e .....                 adc     DPCOP_X
+001d58 fe/cb58: 85 80        ??mxd??? e .....                 sta     $80
+001d5a fe/cb5a: e2 30        ??mxd??? e .....                 sep     #$30
                                                               .rwid   shortm,shortx
+001d5c fe/cb5c: a5 05        ??MXd??? e .....                 lda     DPCOP_AH
+001d5e fe/cb5e: 85 82        ??MXd??? e .....                 sta     $82
+001d60 fe/cb60: a0 00        ??MXd??? e .....                 ldy     #$00
+001d62 fe/cb62: b7 80        ??MXd??? e ....> LFECB62         lda     [$80],y
+001d64 fe/cb64: f0 09        ??MXd??? e .....                 beq     LFECB6F
+001d66 fe/cb66: 62 02 00     ??MXd?z? e .....                 per     LFECB6C-1
+001d69 fe/cb69: 82 18 00     ??MXd?z? e ...#.                 brl     LFECB84

+001d6c fe/cb6c: c8           ??MXd??? e @T... LFECB6C         iny
+001d6d fe/cb6d: 80 f3        ??MXd??? e ...#.                 bra     LFECB62

+001d6f fe/cb6f: 82 a5 fd     ??MXd??? e ...#> LFECB6F         brl     LFEC917

+001d72 fe/cb72: a9 00        ??MXd?Z? e ....> LFECB72         lda     #$00
+001d74 fe/cb74: a6 01        n?MXd?Z? e .....                 ldx     DPCOP_Y
+001d76 fe/cb76: 38           ??MXd??? e .....                 sec
+001d77 fe/cb77: 30 0a        ??MXd??C e .....                 bmi     LFECB83
+001d79 fe/cb79: e6 01        n?MXd??C e .....                 inc     DPCOP_Y
+001d7b fe/cb7b: b5 30        ??MXd??C e .....                 lda     $30,x
+001d7d fe/cb7d: d0 03        ??MXd??C e .....                 bne     LFECB82
+001d7f fe/cb7f: 38           ??MXd?ZC e .....                 sec
+001d80 fe/cb80: 66 01        ??MXd?ZC e .....                 ror     DPCOP_Y
+001d82 fe/cb82: 18           ??MXd?z? e ....> LFECB82         clc
+001d83 fe/cb83: 60           ??MXd??? e ...#> LFECB83         rts

+001d84 fe/cb84: 64 01        ??MXd??? e ....> LFECB84         stz     DPCOP_Y
+001d86 fe/cb86: a6 02        ??MXd??? e .....                 ldx     DPCOP_Y+1
+001d88 fe/cb88: e0 4f        ??MXd??? e .....                 cpx     #$4f
+001d8a fe/cb8a: b0 06        ??MXd??? e .....                 bcs     LFECB92
+001d8c fe/cb8c: 95 30        ??MXd??c e .....                 sta     $30,x
+001d8e fe/cb8e: 74 31        ??MXd??c e .....                 stz     COP_31_OPMIQ,x
+001d90 fe/cb90: e6 02        ??MXd??c e .....                 inc     DPCOP_Y+1
+001d92 fe/cb92: 60           ??MXd??? e ...#> LFECB92         rts

+001d93 fe/cb93: e2 20        ??MXd??c e .T..> LFECB93         sep     #$20
+001d95 fe/cb95: b7 03        ??MXd??c e .....                 lda     [DPCOP_X],y
+001d97 fe/cb97: 85 30        ??MXd??c e .....                 sta     $30
+001d99 fe/cb99: c2 30        ??MXd??c e .....                 rep     #$30
                                                               .rwid   longm,longx
+001d9b fe/cb9b: 5a           ??mxd??c e .....                 phy
+001d9c fe/cb9c: 98           ??mxd??c e .....                 tya
+001d9d fe/cb9d: 18           ??mxd??c e .....                 clc
+001d9e fe/cb9e: 69 01 00     ??mxd??c e .....                 adc     #$0001
+001da1 fe/cba1: a8           ??mxd??? e .....                 tay
+001da2 fe/cba2: e2 20        ??mxd??? e .....                 sep     #$20
                                                               .rwid   shortm
+001da4 fe/cba4: b7 03        ??Mxd??? e .....                 lda     [DPCOP_X],y
+001da6 fe/cba6: c2 30        ??Mxd??? e .....                 rep     #$30
                                                               .rwid   longm
+001da8 fe/cba8: 7a           ??mxd??? e .....                 ply
+001da9 fe/cba9: c9 01 00     ??mxd??? e .....                 cmp     #$0001
+001dac fe/cbac: f0 16        ??mxd??? e .....                 beq     LFECBC4
+001dae fe/cbae: c9 02 00     ??mxd?z? e .....                 cmp     #$0002
+001db1 fe/cbb1: f0 54        ??mxd??? e .....                 beq     LFECC07
+001db3 fe/cbb3: c9 83 00     ??mxd?z? e .....                 cmp     #$0083
+001db6 fe/cbb6: d0 03        ??mxd??? e .....                 bne     LFECBBB
+001db8 fe/cbb8: 82 8f 00     ??mxd?Z? e ...#.                 brl     LFECC4A

+001dbb fe/cbbb: c9 90 00     ??mxd?z? e ....> LFECBBB         cmp     #$0090
+001dbe fe/cbbe: d0 03        ??mxd??? e .....                 bne     LFECBC3
+001dc0 fe/cbc0: 82 d5 00     ??mxd?Z? e ...#.                 brl     LFECC98

+001dc3 fe/cbc3: 60           ??mxd?z? e ...#> LFECBC3         rts

+001dc4 fe/cbc4: e2 20        ??mxd?Z? e ....> LFECBC4         sep     #$20
                                                               .rwid   shortm
+001dc6 fe/cbc6: a5 05        ??Mxd?Z? e .....                 lda     DPCOP_AH
+001dc8 fe/cbc8: 85 82        ??Mxd??? e .....                 sta     $82
+001dca fe/cbca: c2 30        ??Mxd??? e .....                 rep     #$30
                                                               .rwid   longm
+001dcc fe/cbcc: 98           ??mxd??? e .....                 tya
+001dcd fe/cbcd: 18           ??mxd??? e .....                 clc
+001dce fe/cbce: 69 04 00     ??mxd??c e .....                 adc     #$0004
+001dd1 fe/cbd1: a8           ??mxd??? e .....                 tay
+001dd2 fe/cbd2: b7 03        ??mxd??? e .....                 lda     [DPCOP_X],y
+001dd4 fe/cbd4: 18           ??mxd??? e .....                 clc
+001dd5 fe/cbd5: 65 03        ??mxd??c e .....                 adc     DPCOP_X
+001dd7 fe/cbd7: 85 80        ??mxd??? e .....                 sta     $80
+001dd9 fe/cbd9: a0 00 00     ??mxd??? e .....                 ldy     #$0000
+001ddc fe/cbdc: e2 20        n?mxd?Z? e .....                 sep     #$20
                                                               .rwid   shortm
+001dde fe/cbde: b5 00        n?Mxd?Z? e .....                 lda     $00,x
+001de0 fe/cbe0: e2 30        ??Mxd??? e .....                 sep     #$30
                                                               .rwid   shortx
+001de2 fe/cbe2: aa           ??MXd??? e .....                 tax
+001de3 fe/cbe3: b7 80        ??MXd??? e ....> LFECBE3         lda     [$80],y
+001de5 fe/cbe5: f0 09        ??MXd??? e .....                 beq     LFECBF0
+001de7 fe/cbe7: c8           ??MXd?z? e .....                 iny
+001de8 fe/cbe8: c7 80        ??MXd??? e .....                 cmp     [$80]
+001dea fe/cbea: d0 f7        ??MXd??? e .....                 bne     LFECBE3
+001dec fe/cbec: ca           ??MXd?Z? e .....                 dex
+001ded fe/cbed: ca           ??MXd??? e .....                 dex
+001dee fe/cbee: 10 f3        ??MXd??? e .....                 bpl     LFECBE3
+001df0 fe/cbf0: a2 01        ??MXd??? e ....> LFECBF0         ldx     #$01
+001df2 fe/cbf2: b7 80        ??MXd??? e ....> LFECBF2         lda     [$80],y
+001df4 fe/cbf4: 95 30        ??MXd??? e .....                 sta     $30,x
+001df6 fe/cbf6: f0 08        ??MXd??? e .....                 beq     LFECC00
+001df8 fe/cbf8: c7 80        ??MXd?z? e .....                 cmp     [$80]
+001dfa fe/cbfa: f0 04        ??MXd??? e .....                 beq     LFECC00
+001dfc fe/cbfc: e8           ??MXd?z? e .....                 inx
+001dfd fe/cbfd: c8           ??MXd??? e .....                 iny
+001dfe fe/cbfe: 80 f2        ??MXd??? e ...#.                 bra     LFECBF2

+001e00 fe/cc00: 74 30        ??MXd??? e ....> LFECC00         stz     $30,x
+001e02 fe/cc02: 64 01        ??MXd??? e .....                 stz     DPCOP_Y
+001e04 fe/cc04: c2 30        ??MXd??? e .....                 rep     #$30
                                                               .rwid   longm,longx
+001e06 fe/cc06: 60           ??mxd??? e ...#.                 rts

+001e07 fe/cc07: e2 20        ??mxd?Z? e ....> LFECC07         sep     #$20
                                                               .rwid   shortm
+001e09 fe/cc09: a9 01        ??Mxd?Z? e .....                 lda     #$01
+001e0b fe/cc0b: 85 01        n?Mxd?z? e .....                 sta     DPCOP_Y
+001e0d fe/cc0d: c2 30        n?Mxd?z? e .....                 rep     #$30
                                                               .rwid   longm
+001e0f fe/cc0f: b5 00        n?mxd?z? e .....                 lda     $00,x
+001e11 fe/cc11: 62 9b 00     ??mxd??? e .....                 per     tblBin2Dec
+001e14 fe/cc14: 4b           ??mxd??? e .....                 phk
                                                               .dbank  K (auto)
+001e15 fe/cc15: ab           ??mxd??? e .....                 plb
+001e16 fe/cc16: a0 08 00     ??mxd??? e .....                 ldy     #$0008
+001e19 fe/cc19: a2 ff 00     n?mxd??? e ....> LFECC19         ldx     #$00ff
+001e1c fe/cc1c: 38           n?mxd?z? e .....                 sec
+001e1d fe/cc1d: e8           ??mxd??C e ....> LFECC1D         inx
+001e1e fe/cc1e: f3 01        ??mxd??C e .....                 sbc     ($01,S),y
+001e20 fe/cc20: b0 fb        ??mxd??? e .....                 bcs     LFECC1D
+001e22 fe/cc22: 73 01        ??mxd??c e .....                 adc     ($01,S),y
+001e24 fe/cc24: 48           ??mxd??? e .....                 pha
+001e25 fe/cc25: e2 30        ??mxd??? e .....                 sep     #$30
                                                               .rwid   shortm,shortx
+001e27 fe/cc27: 8a           ??MXd??? e .....                 txa
+001e28 fe/cc28: a6 01        ??MXd??? e .....                 ldx     DPCOP_Y
+001e2a fe/cc2a: c9 00        ??MXd??? e .....                 cmp     #$00
+001e2c fe/cc2c: d0 08        ??MXd??? e .....                 bne     LFECC36
+001e2e fe/cc2e: e0 01        ??MXd?Z? e .....                 cpx     #$01
+001e30 fe/cc30: d0 04        ??MXd??? e .....                 bne     LFECC36
+001e32 fe/cc32: c0 00        ??MXd?Z? e .....                 cpy     #$00
+001e34 fe/cc34: d0 06        ??MXd??? e .....                 bne     LFECC3C
+001e36 fe/cc36: 09 30        ??MXd??? e ....> LFECC36         ora     #$30
+001e38 fe/cc38: 95 30        ??MXd?z? e .....                 sta     $30,x
+001e3a fe/cc3a: e6 01        ??MXd?z? e .....                 inc     DPCOP_Y
+001e3c fe/cc3c: c2 30        ??MXd??? e ....> LFECC3C         rep     #$30
                                                               .rwid   longm,longx
+001e3e fe/cc3e: 68           ??mxd??? e .....                 pla
+001e3f fe/cc3f: 88           ??mxd??? e .....                 dey
+001e40 fe/cc40: 88           ??mxd??? e .....                 dey
+001e41 fe/cc41: 10 d6        ??mxd??? e .....                 bpl     LFECC19
+001e43 fe/cc43: 68           N?mxd??? e .....                 pla
+001e44 fe/cc44: e2 30        ??mxd??? e .....                 sep     #$30
                                                               .rwid   shortm,shortx
+001e46 fe/cc46: a6 01        ??MXd??? e .....                 ldx     DPCOP_Y
+001e48 fe/cc48: 80 b6        ??MXd??? e ...#.                 bra     LFECC00

                                                               .rwid   longm,longx
+001e4a fe/cc4a: e2 30        ??mxd?Z? e ....> LFECC4A         sep     #$30
                                                               .rwid   shortm,shortx
+001e4c fe/cc4c: a9 01        ??MXd?Z? e .....                 lda     #$01
+001e4e fe/cc4e: 85 01        n?MXd?z? e .....                 sta     DPCOP_Y
+001e50 fe/cc50: b5 02        n?MXd?z? e .....                 lda     DPCOP_Y+1,x
+001e52 fe/cc52: 62 02 00     ??MXd??? e .....                 per     LFECC58-1
+001e55 fe/cc55: 82 1d 00     ??MXd??? e ...#.                 brl     LFECC75

+001e58 fe/cc58: b5 01        ??MXd??? e @T... LFECC58         lda     DPCOP_Y,x
+001e5a fe/cc5a: 62 02 00     ??MXd??? e .....                 per     LFECC60-1
+001e5d fe/cc5d: 82 15 00     ??MXd??? e ...#.                 brl     LFECC75

+001e60 fe/cc60: b5 00        ??MXd??? e @T... LFECC60         lda     $00,x
+001e62 fe/cc62: 62 02 00     ??MXd??? e .....                 per     LFECC68-1
+001e65 fe/cc65: 82 0d 00     ??MXd??? e ...#.                 brl     LFECC75

+001e68 fe/cc68: a6 01        ??MXd??? e @T... LFECC68         ldx     DPCOP_Y
+001e6a fe/cc6a: e0 01        ??MXd??? e .....                 cpx     #$01
+001e6c fe/cc6c: d0 05        ??MXd??? e .....                 bne     LFECC73
+001e6e fe/cc6e: a9 30        ??MXd?Z? e .....                 lda     #$30
+001e70 fe/cc70: 95 30        n?MXd?z? e .....                 sta     $30,x
+001e72 fe/cc72: e8           n?MXd?z? e .....                 inx
+001e73 fe/cc73: 80 8b        ??MXd??? e ...#> LFECC73         bra     LFECC00

+001e75 fe/cc75: 48           ??MXd??? e ....> LFECC75         pha
+001e76 fe/cc76: 4a           ??MXd??? e .....                 lsr     A
+001e77 fe/cc77: 4a           n?MXd??? e .....                 lsr     A
+001e78 fe/cc78: 4a           n?MXd??? e .....                 lsr     A
+001e79 fe/cc79: 4a           n?MXd??? e .....                 lsr     A
+001e7a fe/cc7a: 62 02 00     n?MXd??? e .....                 per     LFECC80-1
+001e7d fe/cc7d: 82 01 00     n?MXd??? e ...#.                 brl     LFECC81

+001e80 fe/cc80: 68           ??MXd??? e @T... LFECC80         pla
+001e81 fe/cc81: da           ??MXd??? e ....> LFECC81         phx
+001e82 fe/cc82: a6 01        ??MXd??? e .....                 ldx     DPCOP_Y
+001e84 fe/cc84: 29 0f        ??MXd??? e .....                 and     #$0f
+001e86 fe/cc86: d0 04        n?MXd??? e .....                 bne     LFECC8C
+001e88 fe/cc88: e0 01        n?MXd?Z? e .....                 cpx     #$01
+001e8a fe/cc8a: f0 0a        ??MXd??? e .....                 beq     LFECC96
+001e8c fe/cc8c: f8           ??MXd?z? e ....> LFECC8C         sed
+001e8d fe/cc8d: c9 0a        ??MXD?z? e .....                 cmp     #$0a
+001e8f fe/cc8f: 69 30        ??MXD??? e .....                 adc     #$30
+001e91 fe/cc91: d8           ??MXD??? e .....                 cld
+001e92 fe/cc92: 95 30        ??MXd??? e .....                 sta     $30,x
+001e94 fe/cc94: e6 01        ??MXd??? e .....                 inc     DPCOP_Y
+001e96 fe/cc96: fa           ??MXd??? e ....> LFECC96         plx
+001e97 fe/cc97: 60           ??MXd??? e ...#.                 rts

                                                               .rwid   longm,longx
+001e98 fe/cc98: e2 20        ??mxd?Z? e ....> LFECC98         sep     #$20
                                                               .rwid   shortm
+001e9a fe/cc9a: a0 01 00     ??Mxd?Z? e .....                 ldy     #$0001
+001e9d fe/cc9d: b5 00        ??Mxd?z? e ....> LFECC9D         lda     $00,x
+001e9f fe/cc9f: da           ??Mxd??? e .....                 phx
+001ea0 fe/cca0: bb           ??Mxd??? e .....                 tyx
+001ea1 fe/cca1: 95 30        ??Mxd??? e .....                 sta     $30,x
+001ea3 fe/cca3: fa           ??Mxd??? e .....                 plx
+001ea4 fe/cca4: e8           ??Mxd??? e .....                 inx
+001ea5 fe/cca5: c8           ??Mxd??? e .....                 iny
+001ea6 fe/cca6: c9 00        ??Mxd??? e .....                 cmp     #$00
+001ea8 fe/cca8: d0 f3        ??Mxd??? e .....                 bne     LFECC9D
+001eaa fe/ccaa: 64 01        ??Mxd?Z? e .....                 stz     DPCOP_Y
+001eac fe/ccac: c2 30        ??Mxd?Z? e .....                 rep     #$30
                                                               .rwid   longm
+001eae fe/ccae: 60           ??mxd?Z? e ...#.                 rts

+001eaf fe/ccaf: 01 00                   ..... tblBin2Dec      .dd2    1
+001eb1 fe/ccb1: 0a 00                   .....                 .dd2    10
+001eb3 fe/ccb3: 64 00                   .....                 .dd2    100
+001eb5 fe/ccb5: e8 03                   .....                 .dd2    1000
+001eb7 fe/ccb7: 10 27                   .....                 .dd2    10000

                                               ; This is added to the end of the interrupt handler list
                                                               .rwid   shortm,shortx
+001eb9 fe/ccb9: 6b           ??MXd??? e @T.#. irqh_catchall   rtl

                                               ; TODO: find out what cb1 is connected to
+001eba fe/ccba: f4 00 00     ??MXd??? e @T... irqh_via_cb1    pea     $0000
+001ebd fe/ccbd: ab           ??MXd??? e .....                 plb
+001ebe fe/ccbe: ab           ??MXd??? e .....                 plb
+001ebf fe/ccbf: 8f 0d 00 42  ??MXd??? e .....                 stal    VIA_IFR
+001ec3 fe/ccc3: a0 f3        ??MXd??? e .....                 ldy     #$f3
+001ec5 fe/ccc5: 20 2e e2     N?MXd?z? e .....                 jsr     writeToInputBuffer0
+001ec8 fe/ccc8: 18           ??MXd??? e .....                 clc
+001ec9 fe/ccc9: 6b           ??MXd??c e ...#.                 rtl

+001eca fe/ccca: f4 00 00     ??MXd??? e @T... irqh_vsync      pea     $0000
+001ecd fe/cccd: ab           ??MXd??? e .....                 plb
+001ece fe/ccce: ab           ??MXd??? e .....                 plb
+001ecf fe/cccf: a2 12        ??MXd??? e .....                 ldx     #$12
+001ed1 fe/ccd1: 4b           n?MXd?z? e .....                 phk
+001ed2 fe/ccd2: 20 38 fe     n?MXd?z? e .....                 jsr     callModVDU
+001ed5 fe/ccd5: ad 51 a5     ??MXd??? e .....                 lda     $a551
+001ed8 fe/ccd8: f0 1f        ??MXd??? e .....                 beq     LFECCF9
+001eda fe/ccda: ce 51 a5     ??MXd?z? e .....                 dec     $a551
+001edd fe/ccdd: d0 1a        ??MXd??? e .....                 bne     LFECCF9
+001edf fe/ccdf: ae 52 a5     ??MXd?Z? e .....                 ldx     $a552
+001ee2 fe/cce2: ad 48 a5     ??MXd??? e .....                 lda     $a548
+001ee5 fe/cce5: f0 03        ??MXd??? e .....                 beq     LFECCEA
+001ee7 fe/cce7: ae 53 a5     ??MXd?z? e .....                 ldx     $a553
+001eea fe/ccea: 49 07        ??MXd??? e ....> LFECCEA         eor     #$07
+001eec fe/ccec: 8d 48 a5     ??MXd??? e .....                 sta     $a548
+001eef fe/ccef: 8e 51 a5     ??MXd??? e .....                 stx     $a551
+001ef2 fe/ccf2: a8           ??MXd??? e .....                 tay
+001ef3 fe/ccf3: a2 14        ??MXd??? e .....                 ldx     #$14
+001ef5 fe/ccf5: 4b           n?MXd?z? e .....                 phk
+001ef6 fe/ccf6: 20 38 fe     n?MXd?z? e .....                 jsr     callModVDU
+001ef9 fe/ccf9: ce 40 a5     ??MXd??? e ....> LFECCF9         dec     $a540
+001efc fe/ccfc: a9 10        ??MXd??? e .....                 lda     #$10
+001efe fe/ccfe: 80 07        n?MXd?z? e ...#.                 bra     LFECD07

+001f00 fe/cd00: f4 00 00     ??MXd??? e @T... irqh_ula_rtc    pea     $0000
+001f03 fe/cd03: ab           ??MXd??? e .....                 plb
                                                               .dbank  $00
+001f04 fe/cd04: ab           ??MXd??? e .....                 plb
+001f05 fe/cd05: a9 20        ??MXd??? e .....                 lda     #$20
+001f07 fe/cd07: 8f 05 fe 45  n?MXd?z? e ....> LFECD07         stal    sheila_ULA_PAG_IRQCLR
+001f0b fe/cd0b: ad 83 a5     n?MXd?z? e .....                 lda     SYSVARS+131
+001f0e fe/cd0e: aa           ??MXd??? e .....                 tax
+001f0f fe/cd0f: 49 0f        ??MXd??? e .....                 eor     #$0f
+001f11 fe/cd11: 48           ??MXd??? e .....                 pha
+001f12 fe/cd12: a8           ??MXd??? e .....                 tay
+001f13 fe/cd13: 38           ??MXd??? e .....                 sec
+001f14 fe/cd14: bd 90 a5     ??MXd??? e ....> LFECD14         lda     SYSVARS+144,x
+001f17 fe/cd17: 69 00        ??MXd??? e .....                 adc     #$00
+001f19 fe/cd19: 99 90 a5     ??MXd??? e .....                 sta     SYSVARS+144,y
+001f1c fe/cd1c: ca           ??MXd??? e .....                 dex
+001f1d fe/cd1d: f0 03        ??MXd??? e .....                 beq     LFECD22
+001f1f fe/cd1f: 88           ??MXd?z? e .....                 dey
+001f20 fe/cd20: d0 f2        ??MXd??? e .....                 bne     LFECD14
+001f22 fe/cd22: 68           ??MXd?Z? e ....> LFECD22         pla
+001f23 fe/cd23: 8d 83 a5     ??MXd??? e .....                 sta     SYSVARS+131
+001f26 fe/cd26: a2 05        ??MXd??? e .....                 ldx     #$05
+001f28 fe/cd28: fe 9a a5     ??MXd?z? e ....> LFECD28         inc     SYSVARS+154,x
+001f2b fe/cd2b: d0 08        ??MXd??? e .....                 bne     LFECD35
+001f2d fe/cd2d: ca           ??MXd?Z? e .....                 dex
+001f2e fe/cd2e: d0 f8        ??MXd??? e .....                 bne     LFECD28
+001f30 fe/cd30: a0 05        ??MXd?Z? e .....                 ldy     #$05
+001f32 fe/cd32: 20 73 e5     n?MXd?z? e .....                 jsr     LFEE573
+001f35 fe/cd35: ad b0 a5     ??MXd??? e ....> LFECD35         lda     SYSVARS_B0_INKEYCTDN
+001f38 fe/cd38: d0 08        ??MXd??? e .....                 bne     LFECD42
+001f3a fe/cd3a: ad b1 a5     ??MXd?Z? e .....                 lda     SYSVARS_B0_INKEYCTDN+1
+001f3d fe/cd3d: f0 06        ??MXd??? e .....                 beq     LFECD45
+001f3f fe/cd3f: ce b1 a5     ??MXd?z? e .....                 dec     SYSVARS_B0_INKEYCTDN+1
+001f42 fe/cd42: ce b0 a5     ??MXd??? e ....> LFECD42         dec     SYSVARS_B0_INKEYCTDN
+001f45 fe/cd45: 2c 78 a5     ??MXd??? e ....> LFECD45         bit     SYSVARS+120
+001f48 fe/cd48: 10 0b        ??MXd??? e .....                 bpl     LFECD55
+001f4a fe/cd4a: ee 78 a5     N?MXd??? e .....                 inc     SYSVARS+120
+001f4d fe/cd4d: 58           ??MXd??? e .....                 cli
+001f4e fe/cd4e: 20 49 eb     ??MXdi?? e .....                 jsr     LFEEB49
+001f51 fe/cd51: 78           ??MXdi?? e .....                 sei
+001f52 fe/cd52: ce 78 a5     ??MXdI?? e .....                 dec     SYSVARS+120
+001f55 fe/cd55: 24 d3        ??MXd??? e ....> LFECD55         bit     $d3
+001f57 fe/cd57: 30 08        ??MXd??? e .....                 bmi     LFECD61
+001f59 fe/cd59: a5 d5        n?MXd??? e .....                 lda     $d5
+001f5b fe/cd5b: e6 d5        ??MXd??? e .....                 inc     $d5
+001f5d fe/cd5d: c9 80        ??MXd??? e .....                 cmp     #$80
+001f5f fe/cd5f: b0 1b        ??MXd??? e .....                 bcs     LFECD7C
+001f61 fe/cd61: ad 42 a5     ??MXd??? e ....> LFECD61         lda     SYSVAR_42_KEYSEMAPHORE
+001f64 fe/cd64: f0 0c        ??MXd??? e .....                 beq     LFECD72
+001f66 fe/cd66: ee 42 a5     ??MXd?z? e .....                 inc     SYSVAR_42_KEYSEMAPHORE
+001f69 fe/cd69: a2 0c        ??MXd??? e .....                 ldx     #$0c
+001f6b fe/cd6b: 22 ac ff 00  n?MXd?z? e .....                 jsl     __KB
+001f6f fe/cd6f: ce 42 a5     ??MXd??? e .....                 dec     SYSVAR_42_KEYSEMAPHORE
+001f72 fe/cd72: 2c c6 a5     ??MXd??? e ....> LFECD72         bit     SYSVARS_ELK_BUFFER_BUSY+3
+001f75 fe/cd75: 30 03        ??MXd??? e .....                 bmi     LFECD7A
+001f77 fe/cd77: 4c 12 df     n?MXd??? e ...#.                 jmp     LFEDF12

+001f7a fe/cd7a: 18           N?MXd??? e ....> LFECD7A         clc
+001f7b fe/cd7b: 6b           N?MXd??c e ...#.                 rtl

+001f7c fe/cd7c: a5 d5        ??MXd??C e ....> LFECD7C         lda     $d5
+001f7e fe/cd7e: c9 82        ??MXd??C e .....                 cmp     #$82
+001f80 fe/cd80: f0 06        ??MXd??? e .....                 beq     LFECD88
+001f82 fe/cd82: c9 83        ??MXd?z? e .....                 cmp     #$83
+001f84 fe/cd84: f0 0e        ??MXd??? e .....                 beq     LFECD94
+001f86 fe/cd86: 80 ea        ??MXd??? e ...#> LFECD86         bra     LFECD72

+001f88 fe/cd88: af 00 00 42  ??MXd?Z? e ....> LFECD88         ldal    VIA_ORB
+001f8c fe/cd8c: 29 df        ??MXd??? e .....                 and     #$df
+001f8e fe/cd8e: 8f 00 00 42  ??MXd??? e .....                 stal    VIA_ORB
+001f92 fe/cd92: 80 f2        ??MXd??? e ...#.                 bra     LFECD86

+001f94 fe/cd94: 64 d4        ??MXd?Z? e ....> LFECD94         stz     $d4
+001f96 fe/cd96: 64 d5        ??MXd?Z? e .....                 stz     $d5
+001f98 fe/cd98: af 0d 00 42  ??MXd?Z? e .....                 ldal    VIA_IFR
+001f9c fe/cd9c: 29 08        ??MXd??? e .....                 and     #$08
+001f9e fe/cd9e: d0 02        n?MXd??? e .....                 bne     LFECDA2
+001fa0 fe/cda0: c6 d4        n?MXd?Z? e .....                 dec     $d4
+001fa2 fe/cda2: af 00 00 42  ??MXd??? e ....> LFECDA2         ldal    VIA_ORB
+001fa6 fe/cda6: 09 20        ??MXd??? e .....                 ora     #$20
+001fa8 fe/cda8: 8f 00 00 42  ??MXd?z? e .....                 stal    VIA_ORB
+001fac fe/cdac: a9 08        ??MXd?z? e .....                 lda     #$08
+001fae fe/cdae: 8f 0d 00 42  n?MXd?z? e .....                 stal    VIA_IFR
+001fb2 fe/cdb2: 82 ac ff     n?MXd?z? e ...#.                 brl     LFECD61

+001fb5 fe/cdb5: 08           ??MXdI?? e ....> LFECDB5         php
+001fb6 fe/cdb6: c2 30        ??MXdI?? e .....                 rep     #$30
                                                               .rwid   longm,longx
+001fb8 fe/cdb8: a9 00 00     ??mxdI?? e .....                 lda     #$0000
+001fbb fe/cdbb: 8f 00 fe 00  n?mxdIZ? e .....                 stal    f:B0LST_FREE_BLOCKS
+001fbf fe/cdbf: a9 00 fe     n?mxdIZ? e .....                 lda     #$fe00
+001fc2 fe/cdc2: 8f 02 fe 00  n?mxdIz? e .....                 stal    f:B0LSTEND_FREE_BLOCKS
+001fc6 fe/cdc6: a9 00 e0     n?mxdIz? e .....                 lda     #$e000
+001fc9 fe/cdc9: 48           ??mxdI?? e ....> LFECDC9         pha
+001fca fe/cdca: aa           ??mxdI?? e .....                 tax
+001fcb fe/cdcb: 20 da cd     ??mxdI?? e .....                 jsr     returnXToFreeList
+001fce fe/cdce: 68           ??mxdI?? e .....                 pla
+001fcf fe/cdcf: 18           ??mxdI?? e .....                 clc
+001fd0 fe/cdd0: 69 0c 00     ??mxdI?c e .....                 adc     #$000c
+001fd3 fe/cdd3: c9 f5 fc     ??mxdI?? e .....                 cmp     #$fcf5
+001fd6 fe/cdd6: 90 f1        ??mxdI?? e .....                 bcc     LFECDC9
+001fd8 fe/cdd8: 28           ??mxdI?C e .....                 plp
                                                               .rwid   shortm,shortx
+001fd9 fe/cdd9: 60           ??MXdI?? e ...#.                 rts

                                               ; QRY Appears to return the block pointed to X to the free list
                                               ; 
                                               ; On Entry:
                                               ;    X   is a pointer to a handle block
                                                               .rwid   longm,longx
+001fda fe/cdda: 5a           ??mxd??? e ....> returnXToFreeList phy
+001fdb fe/cddb: 08           ??mxd??? e .....                 php
+001fdc fe/cddc: 78           ??mxd??? e .....                 sei
+001fdd fe/cddd: c2 30        ??mxdI?? e .....                 rep     #$30
+001fdf fe/cddf: 9b           ??mxdI?? e .....                 txy                       ;Y=X
+001fe0 fe/cde0: a9 00 00     ??mxdI?? e .....                 lda     #$0000
+001fe3 fe/cde3: 9f 00 00 00  n?mxdIZ? e .....                 stal    f:$000000,x       ;clear X->[0]
+001fe7 fe/cde7: e2 20        n?mxdIZ? e .....                 sep     #$20
                                                               .rwid   shortm
+001fe9 fe/cde9: 9f 0b 00 00  n?MxdIZ? e .....                 stal    f:$00000b,x       ;clear X->[b]
+001fed fe/cded: c2 20        n?MxdIZ? e .....                 rep     #$20
                                                               .rwid   longm
+001fef fe/cdef: af 02 fe 00  n?mxdIZ? e .....                 ldal    f:B0LSTEND_FREE_BLOCKS
+001ff3 fe/cdf3: aa           ??mxdI?? e .....                 tax                       ;X = ($FE02)
+001ff4 fe/cdf4: 98           ??mxdI?? e .....                 tya                       ;A=org X
+001ff5 fe/cdf5: 9f 00 00 00  ??mxdI?? e .....                 stal    f:$000000,x
+001ff9 fe/cdf9: 8f 02 fe 00  ??mxdI?? e .....                 stal    f:B0LSTEND_FREE_BLOCKS
+001ffd fe/cdfd: 28           ??mxdI?? e .....                 plp
+001ffe fe/cdfe: 7a           ??mxdI?? e .....                 ply
+001fff fe/cdff: 18           ??mxdI?? e .....                 clc
+002000 fe/ce00: 60           ??mxdI?c e ...#.                 rts

                                               ; Appears to allocate a block from the free list
                                               ; 
                                               ; On entry A contains the type - QRY
+002001 fe/ce01: 08           n?mxd?z? e ....> obtainFreeBlock php
+002002 fe/ce02: 78           n?mxd?z? e .....                 sei
+002003 fe/ce03: c2 30        n?mxdIz? e .....                 rep     #$30
+002005 fe/ce05: aa           n?mxdIz? e .....                 tax
+002006 fe/ce06: af 00 fe 00  ??mxdI?? e .....                 ldal    f:B0LST_FREE_BLOCKS
+00200a fe/ce0a: d0 03        ??mxdI?? e .....                 bne     @ok
+00200c fe/ce0c: 28           ??mxdIZ? e .....                 plp
+00200d fe/ce0d: 38           n?mxdIz? e .....                 sec
+00200e fe/ce0e: 60           n?mxdIzC e ...#.                 rts

+00200f fe/ce0f: da           ??mxdIz? e ....> @ok             phx
+002010 fe/ce10: aa           ??mxdIz? e .....                 tax
+002011 fe/ce11: cf 02 fe 00  ??mxdI?? e .....                 cmpl    f:B0LSTEND_FREE_BLOCKS
+002015 fe/ce15: d0 07        ??mxdI?? e .....                 bne     @sk
                                               ; if this was the last block then clear the last block pointer - point the last
                                               ; block pointer at the front pointer this will cause the next "free" to
                                               ; magically update both list pointers
+002017 fe/ce17: a9 00 fe     ??mxdIZ? e .....                 lda     #B0LST_FREE_BLOCKS
+00201a fe/ce1a: 8f 02 fe 00  n?mxdIz? e .....                 stal    f:B0LSTEND_FREE_BLOCKS
+00201e fe/ce1e: bf 00 00 00  ??mxdIz? e ....> @sk             ldal    f:$000000,x       ;get the blocks next pointer
+002022 fe/ce22: 8f 00 fe 00  ??mxdI?? e .....                 stal    f:B0LST_FREE_BLOCKS ;store as the front pointer (will be 0 if last block)
+002026 fe/ce26: a9 ff ff     ??mxdI?? e .....                 lda     #$ffff            ;blank out the block
+002029 fe/ce29: 9f 0a 00 00  n?mxdIz? e .....                 stal    f:$00000a,x
+00202d fe/ce2d: 9f 08 00 00  n?mxdIz? e .....                 stal    f:$000008,x
+002031 fe/ce31: 9f 06 00 00  n?mxdIz? e .....                 stal    f:$000006,x
+002035 fe/ce35: 9f 04 00 00  n?mxdIz? e .....                 stal    f:$000004,x
+002039 fe/ce39: 9f 02 00 00  n?mxdIz? e .....                 stal    f:$000002,x
+00203d fe/ce3d: 9f 00 00 00  n?mxdIz? e .....                 stal    f:$000000,x
+002041 fe/ce41: 68           n?mxdIz? e .....                 pla
+002042 fe/ce42: e2 20        ??mxdI?? e .....                 sep     #$20
                                                               .rwid   shortm
+002044 fe/ce44: 9f 0b 00 00  ??MxdI?? e .....                 stal    f:HND_off_B_type,x ;set the type byte
+002048 fe/ce48: c2 20        ??MxdI?? e .....                 rep     #$20
                                                               .rwid   longm
+00204a fe/ce4a: 8a           ??mxdI?? e .....                 txa
+00204b fe/ce4b: 28           ??mxdI?? e .....                 plp
+00204c fe/ce4c: 18           n?mxdIzC e .....                 clc
+00204d fe/ce4d: 60           n?mxdIzc e ...#.                 rts

+00204e fe/ce4e: af 00 fe 00  ??mxd??? e ....> LFECE4E         ldal    f:B0LST_FREE_BLOCKS
+002052 fe/ce52: f0 15        ??mxd??? e .....                 beq     LFECE69
+002054 fe/ce54: a0 00 00     ??mxd?z? e .....                 ldy     #$0000
+002057 fe/ce57: c8           ??mxd??? e ....> LFECE57         iny
+002058 fe/ce58: f0 19        ??mxd??? e .....                 beq     memFreeListError
+00205a fe/ce5a: aa           ??mxd?z? e .....                 tax
+00205b fe/ce5b: bf 00 00 00  ??mxd??? e .....                 ldal    f:$000000,x
+00205f fe/ce5f: d0 f6        ??mxd??? e .....                 bne     LFECE57
+002061 fe/ce61: 8a           ??mxd?Z? e .....                 txa
+002062 fe/ce62: cf 02 fe 00  ??mxd??? e .....                 cmpl    f:B0LSTEND_FREE_BLOCKS
+002066 fe/ce66: d0 0b        ??mxd??? e .....                 bne     memFreeListError
+002068 fe/ce68: 60           ??mxd?Z? e ...#.                 rts

+002069 fe/ce69: af 02 fe 00  ??mxd?Z? e ....> LFECE69         ldal    f:B0LSTEND_FREE_BLOCKS
+00206d fe/ce6d: c9 00 fe     ??mxd??? e .....                 cmp     #$fe00
+002070 fe/ce70: d0 01        ??mxd??? e .....                 bne     memFreeListError
+002072 fe/ce72: 60           ??mxd?Z? e ...#.                 rts

+002073 fe/ce73: 02 0f        ??mxd??? e ....> memFreeListError cop    COP_0F_OPERR
+002075 fe/ce75: 4d 65 6d 6f+            .T...                 .zstr   “Memory error: list of free blocks corrupted”
+0020a1 fe/cea1: 0b           ??mxd??? e ....> allocHandleQRY  phd
+0020a2 fe/cea2: 48           ??mxd??? e .....                 pha
+0020a3 fe/cea3: f4 00 ff     ??mxd??? e .....                 pea     EXSYS
+0020a6 fe/cea6: 2b           ??mxd??? e .....                 pld
+0020a7 fe/cea7: a0 00 00     ??mxd??? e .....                 ldy     #$0000
+0020aa fe/ceaa: b7 02        n?mxd?Z? e .....                 lda     [<EXSYS_HANDLEBLOCK_LONGPTR],y ;getHandleBlockSize
+0020ac fe/ceac: 29 fe ff     ??mxd??? e .....                 and     #$fffe
+0020af fe/ceaf: f0 10        n?mxd??? e .....                 beq     @retsec
+0020b1 fe/ceb1: a8           n?mxd?z? e .....                 tay
+0020b2 fe/ceb2: 88           ??mxd??? e ....> @lp             dey
+0020b3 fe/ceb3: 88           ??mxd??? e .....                 dey
+0020b4 fe/ceb4: f0 0b        ??mxd??? e .....                 beq     @retsec
+0020b6 fe/ceb6: b7 02        ??mxd?z? e .....                 lda     [$02],y
+0020b8 fe/ceb8: d0 f8        ??mxd??? e .....                 bne     @lp
+0020ba fe/ceba: 8a           ??mxd?Z? e .....                 txa
+0020bb fe/cebb: 97 02        ??mxd??? e .....                 sta     [$02],y
+0020bd fe/cebd: 68           ??mxd??? e .....                 pla
+0020be fe/cebe: 2b           ??mxd??? e .....                 pld
+0020bf fe/cebf: 18           ??mxd??? e .....                 clc
+0020c0 fe/cec0: 60           ??mxd??c e ...#.                 rts

+0020c1 fe/cec1: 68           ??mxd?Z? e ....> @retsec         pla
+0020c2 fe/cec2: 2b           ??mxd??? e .....                 pld
+0020c3 fe/cec3: 38           ??mxd??? e .....                 sec
+0020c4 fe/cec4: 60           ??mxd??C e ...#.                 rts

+0020c5 fe/cec5: 20 da ce     ??mxd??? e ....> LFECEC5         jsr     getHandleYinDP
+0020c8 fe/cec8: 48           ??mxd??? e .....                 pha
+0020c9 fe/cec9: b0 0d        ??mxd??? e .....                 bcs     @sk
+0020cb fe/cecb: bf 0b 00 00  ??mxd??c e .....                 ldal    f:$00000b,x
+0020cf fe/cecf: 29 ff 00     ??mxd??c e .....                 and     #$00ff
+0020d2 fe/ced2: 49 02 00     n?mxd??c e .....                 eor     #$0002
+0020d5 fe/ced5: c9 01 00     ??mxd??c e .....                 cmp     #$0001
+0020d8 fe/ced8: 68           ??mxd??? e ....> @sk             pla
+0020d9 fe/ced9: 60           ??mxd??? e ...#.                 rts

                                               ; Given a handle in Y returns the [Handle Block]. For odd numbered handles (well
                                               ; known handles) the block is returned for valid handles. For even numbered
                                               ; handles, searches the [Handle Allocation Table].
                                               ; 
                                               ; On Entry:
                                               ;    Y   Contains a handle
                                               ; 
                                               ; On Exit:
                                               ;    C=0 Found
                                               ;    DP  the address of the handle block
                                               ; or C=1 Failed - no such handle allocated
                                               ; 
                                               ; TODO: corrupts X unnecessarily, lots of tax etc that is unnecessary
+0020da fe/ceda: 0b           ??mxd??? e ....> getHandleYinDP  phd
+0020db fe/cedb: 48           ??mxd??? e .....                 pha
+0020dc fe/cedc: 98           ??mxd??? e .....                 tya
+0020dd fe/cedd: f0 31        ??mxd??? e .....                 beq     @retsec
+0020df fe/cedf: 89 01 00     ??mxd?z? e .....                 bit     #$0001
+0020e2 fe/cee2: d0 10        ??mxd??? e .....                 bne     @wellknownhandle
+0020e4 fe/cee4: f4 00 ff     ??mxd?Z? e .....                 pea     EXSYS
+0020e7 fe/cee7: 2b           ??mxd?Z? e .....                 pld
+0020e8 fe/cee8: b7 02        ??mxd??? e .....                 lda     [$02],y
+0020ea fe/ceea: aa           ??mxd??? e ....> @ok             tax
+0020eb fe/ceeb: f0 23        ??mxd??? e .....                 beq     @retsec
+0020ed fe/ceed: e0 ff ff     ??mxd?z? e .....                 cpx     #$ffff
+0020f0 fe/cef0: f0 1e        ??mxd??? e .....                 beq     @retsec
+0020f2 fe/cef2: d0 18        ??mxd?z? e ...#.                 bne     @retclc

+0020f4 fe/cef4: bb           ??mxd?z? e ....> @wellknownhandle tyx
+0020f5 fe/cef5: e0 0a 00     ??mxd??? e .....                 cpx     #$000a
+0020f8 fe/cef8: b0 16        ??mxd??? e .....                 bcs     @retsec
+0020fa fe/cefa: 8b           ??mxd??c e .....                 phb
+0020fb fe/cefb: 4b           ??mxd??c e .....                 phk
                                                               .dbank  K (auto)
+0020fc fe/cefc: ab           ??mxd??c e .....                 plb
+0020fd fe/cefd: bd 13 cf     ??mxd??c e .....                 lda     0+(tblWellKnownHandlePointers & $ffff)-1,x
+002100 fe/cf00: ab           ??mxd??c e .....                 plb
+002101 fe/cf01: 49 00 00     ??mxd??c e .....                 eor     #$0000
+002104 fe/cf04: f0 0a        ??mxd??c e .....                 beq     @retsec
+002106 fe/cf06: 48           ??mxd?zc e .....                 pha
+002107 fe/cf07: 2b           ??mxd?zc e .....                 pld
+002108 fe/cf08: a5 00        ??mxd??c e .....                 lda     $00
+00210a fe/cf0a: 80 de        ??mxd??c e ...#.                 bra     @ok

+00210c fe/cf0c: 68           ??mxd?z? e ....> @retclc         pla
+00210d fe/cf0d: 2b           ??mxd??? e .....                 pld
+00210e fe/cf0e: 18           ??mxd??? e .....                 clc
+00210f fe/cf0f: 60           ??mxd??c e ...#.                 rts

+002110 fe/cf10: 68           ??mxd??? e ....> @retsec         pla
+002111 fe/cf11: 2b           ??mxd??? e .....                 pld
+002112 fe/cf12: 38           ??mxd??? e .....                 sec
+002113 fe/cf13: 60           ??mxd??C e ...#.                 rts

+002114 fe/cf14: 04 fe                   ..... tblWellKnownHandlePointers .dd2 $fe04     ;HDMMM
+002116 fe/cf16: 00 00                   .....                 .dd2    $0000             ;HDMM0 - QRY
+002118 fe/cf18: 08 fe                   .....                 .dd2    $fe08             ;HDMMC
+00211a fe/cf1a: 0a fe                   .....                 .dd2    $fe0a             ;HDMMW
+00211c fe/cf1c: 0c fe                   .....                 .dd2    $fe0c             ;HDMMV

                                               ; The [Handle Allocation Table] pointed to by long pointer at $FF02 is searched
                                               ; for this entry and its entry is zeroed if found
                                               ; 
                                               ; On entry:
                                               ;    X    contains a handle block pointer
                                               ; 
                                               ; On exit:
                                               ;    C=0  indicates block found
                                               ;    Y    contains the index of the entry (handle ? QRY?)
                                               ;    X,D  preserved
                                               ; or C=1  the pointer was not found
                                               ;    Y    contains the index of the last entry (entries are allocated descending
                                               ;         so the first in address order)
                                               ; 
                                               ; TODO: why not use the find method below!
+00211e fe/cf1e: da           ??mxd??? e ....> freeHandlePointerX phx
+00211f fe/cf1f: f4 00 ff     ??mxd??? e .....                 pea     EXSYS
+002122 fe/cf22: 2b           ??mxd??? e .....                 pld
+002123 fe/cf23: a0 00 00     ??mxd??? e .....                 ldy     #$0000
+002126 fe/cf26: b7 02        n?mxd?Z? e .....                 lda     [$02],y           ;get pointer to end of handle block + 2
+002128 fe/cf28: a8           ??mxd??? e .....                 tay
+002129 fe/cf29: 88           ??mxd??? e .....                 dey
+00212a fe/cf2a: 88           ??mxd??? e .....                 dey
+00212b fe/cf2b: b7 02        ??mxd??? e ....> @lp             lda     [$02],y
+00212d fe/cf2d: c3 01        ??mxd??? e .....                 cmp     $01,S             ;compare to passed in X
+00212f fe/cf2f: f0 07        ??mxd??? e .....                 beq     @fnd
+002131 fe/cf31: 88           ??mxd?z? e .....                 dey
+002132 fe/cf32: 88           ??mxd??? e .....                 dey                       ;move backwards through handle list
+002133 fe/cf33: d0 f6        ??mxd??? e .....                 bne     @lp
+002135 fe/cf35: fa           ??mxd?Z? e .....                 plx
+002136 fe/cf36: 38           ??mxd??? e .....                 sec
+002137 fe/cf37: 60           ??mxd??C e ...#.                 rts

+002138 fe/cf38: a9 00 00     ??mxd?Z? e ....> @fnd            lda     #$0000
+00213b fe/cf3b: 97 02        n?mxd?Z? e .....                 sta     [$02],y           ;zero out the entry and return clc
+00213d fe/cf3d: fa           n?mxd?Z? e .....                 plx
+00213e fe/cf3e: 18           ??mxd??? e .....                 clc
+00213f fe/cf3f: 60           ??mxd??c e ...#.                 rts

                                               ; The [Handle Allocation Table] pointed to by long pointer at $FF02 is searched
                                               ; for an entry that contains X
                                               ; 
                                               ; On entry:
                                               ;    X    contains a handle block pointer
                                               ; 
                                               ; On exit:
                                               ;    C=0  indicates block found
                                               ;    Y    contains the index of the entry (handle)
                                               ; or C=1  the pointer was not found
                                               ;    Y    contains the index of the last entry (entries are allocated descending
                                               ;         so the first in address order)
                                               ; 
                                               ;    X    preserved
                                               ;    D,A  corrupted   
+002140 fe/cf40: f4 00 ff     ??mxd??? e ....> findHandleByAddr pea    EXSYS
+002143 fe/cf43: 2b           ??mxd??? e .....                 pld
+002144 fe/cf44: a0 00 00     ??mxd??? e .....                 ldy     #$0000
+002147 fe/cf47: b7 02        n?mxd?Z? e .....                 lda     [$02],y
+002149 fe/cf49: a8           ??mxd??? e .....                 tay
+00214a fe/cf4a: 88           ??mxd??? e .....                 dey
+00214b fe/cf4b: 88           ??mxd??? e .....                 dey
+00214c fe/cf4c: 8a           ??mxd??? e .....                 txa
+00214d fe/cf4d: d7 02        ??mxd??? e ....> @retsec         cmp     [$02],y
+00214f fe/cf4f: f0 06        ??mxd??? e .....                 beq     @retclc
+002151 fe/cf51: 88           ??mxd?z? e .....                 dey
+002152 fe/cf52: 88           ??mxd??? e .....                 dey
+002153 fe/cf53: d0 f8        ??mxd??? e .....                 bne     @retsec
+002155 fe/cf55: 38           ??mxd?Z? e .....                 sec
+002156 fe/cf56: 60           ??mxd?ZC e ...#.                 rts

+002157 fe/cf57: 18           ??mxd?Z? e ....> @retclc         clc
+002158 fe/cf58: 60           ??mxd?Zc e ...#.                 rts

                                                               .rwid   shortm,shortx
+002159 fe/cf59: 08           ??MXdI?? e ....> LFECF59         php
+00215a fe/cf5a: 8b           ??MXdI?? e .....                 phb
+00215b fe/cf5b: c2 30        ??MXdI?? e .....                 rep     #$30
                                                               .rwid   longm,longx
+00215d fe/cf5d: f4 00 00     ??mxdI?? e .....                 pea     $0000
+002160 fe/cf60: ab           ??mxdI?? e .....                 plb
                                                               .dbank  $00
+002161 fe/cf61: ab           ??mxdI?? e .....                 plb
+002162 fe/cf62: a9 00 00     ??mxdI?? e .....                 lda     #$0000
+002165 fe/cf65: 8d 11 ff     n?mxdIZ? e .....                 sta     EXSYS_CUR_COROUTINE+1
+002168 fe/cf68: 8d 13 ff     n?mxdIZ? e .....                 sta     SYS_ESCAPE_FLAG_QRY
+00216b fe/cf6b: a9 10 00     n?mxdIZ? e .....                 lda     #$0010
+00216e fe/cf6e: 8f 20 fe 00  n?mxdIz? e .....                 stal    f:$00fe20
+002172 fe/cf72: a9 20 fe     n?mxdIz? e .....                 lda     #$fe20
+002175 fe/cf75: 20 9d cf     n?mxdIz? e .....                 jsr     LFECF9D
+002178 fe/cf78: 20 7f cf     ??mxdI?? e .....                 jsr     LFECF7F
+00217b fe/cf7b: ab           ??mxdI?? e .....                 plb
+00217c fe/cf7c: 28           ??mxdI?? e .....                 plp
                                                               .rwid   shortm,shortx
+00217d fe/cf7d: 18           ??MXdI?? e .....                 clc
+00217e fe/cf7e: 60           ??MXdI?c e ...#.                 rts

                                                               .rwid   longm,longx
+00217f fe/cf7f: 8b           ??mxdI?? e ....> LFECF7F         phb
+002180 fe/cf80: 0b           ??mxdI?? e .....                 phd
+002181 fe/cf81: f4 00 ff     ??mxdI?? e .....                 pea     $ff00
+002184 fe/cf84: 2b           ??mxdI?? e .....                 pld
+002185 fe/cf85: a9 08 00     ??mxdI?? e .....                 lda     #$0008
+002188 fe/cf88: 85 05        n?mxdIz? e .....                 sta     DPCOP_AH
+00218a fe/cf8a: f4 00 00     n?mxdIz? e .....                 pea     $0000
+00218d fe/cf8d: ab           n?mxdIz? e .....                 plb
                                                               .dbank  $00
+00218e fe/cf8e: ab           ??mxdI?? e .....                 plb
+00218f fe/cf8f: 64 03        ??mxdI?? e .....                 stz     DPCOP_X
+002191 fe/cf91: a9 05 ff     ??mxdI?? e .....                 lda     #$ff05
+002194 fe/cf94: 85 02        n?mxdIz? e .....                 sta     DPCOP_Y+1
+002196 fe/cf96: 20 9d cf     n?mxdIz? e .....                 jsr     LFECF9D
+002199 fe/cf99: 2b           ??mxdI?? e .....                 pld
+00219a fe/cf9a: ab           ??mxdI?? e .....                 plb
+00219b fe/cf9b: 18           ??mxdI?? e .....                 clc
+00219c fe/cf9c: 60           ??mxdI?c e ...#.                 rts

+00219d fe/cf9d: 08           n?mxdIz? e ....> LFECF9D         php
+00219e fe/cf9e: c2 30        n?mxdIz? e .....                 rep     #$30
+0021a0 fe/cfa0: 48           n?mxdIz? e .....                 pha
+0021a1 fe/cfa1: a0 00 00     n?mxdIz? e .....                 ldy     #$0000
+0021a4 fe/cfa4: b3 01        n?mxdIZ? e .....                 lda     ($01,S),y
+0021a6 fe/cfa6: a8           ??mxdI?? e .....                 tay
+0021a7 fe/cfa7: e2 20        ??mxdI?? e .....                 sep     #$20
                                                               .rwid   shortm
+0021a9 fe/cfa9: a9 00        ??MxdI?? e .....                 lda     #$00
+0021ab fe/cfab: 88           ??MxdI?? e ....> LFECFAB         dey
+0021ac fe/cfac: c0 02 00     ??MxdI?? e .....                 cpy     #$0002
+0021af fe/cfaf: 90 04        ??MxdI?? e .....                 bcc     LFECFB5
+0021b1 fe/cfb1: 93 01        ??MxdI?C e .....                 sta     ($01,S),y
+0021b3 fe/cfb3: 80 f6        ??MxdI?C e ...#.                 bra     LFECFAB

+0021b5 fe/cfb5: c2 20        ??MxdI?c e ....> LFECFB5         rep     #$20
                                                               .rwid   longm
+0021b7 fe/cfb7: 68           ??mxdI?c e .....                 pla
+0021b8 fe/cfb8: 28           ??mxdI?c e .....                 plp
+0021b9 fe/cfb9: 18           n?mxdIzc e .....                 clc
+0021ba fe/cfba: 60           n?mxdIzc e ...#.                 rts

                                               ********************************************************************************
                                               * ST - SYSTEM?                                                                 *
                                               *                                                                              *
                                               * This well known entry is called as 00/FF88                                   *
                                               ********************************************************************************
                                                               .rwid   shortm,shortx
+0021bb fe/cfbb: 08           ????d??? e @T... default__ST     php
+0021bc fe/cfbc: c2 30        ????d??? e .....                 rep     #$30
                                                               .rwid   longm,longx
+0021be fe/cfbe: e0 22 00     ??mxd??? e .....                 cpx     #$0022
+0021c1 fe/cfc1: b0 14        ??mxd??? e .....                 bcs     @resec
+0021c3 fe/cfc3: 0b           ??mxd??c e .....                 phd
+0021c4 fe/cfc4: 8b           ??mxd??c e .....                 phb
+0021c5 fe/cfc5: 4b           ??mxd??c e .....                 phk
                                                               .dbank  K (auto)
+0021c6 fe/cfc6: ab           ??mxd??c e .....                 plb
+0021c7 fe/cfc7: f4 00 ac     ??mxd??c e .....                 pea     DPSYS
+0021ca fe/cfca: 2b           ??mxd??c e .....                 pld
+0021cb fe/cfcb: e2 30        ??mxd??c e .....                 sep     #$30
                                               ; after this JSR (inside routine) stack is
                                               ; +6 return P (though SEC/CLC will override)
                                               ; +4 return D
                                               ; +3 return B
                                               ; +1 return address to this routine ($cfce)
                                                               .rwid   shortm,shortx
+0021cd fe/cfcd: fc da cf     ??MXd??c e .....                 jsr     (tbl__ST_dispatch,x)
+0021d0 fe/cfd0: ab           ??MXd??? e .....                 plb
+0021d1 fe/cfd1: 2b           ??MXd??? e .....                 pld
+0021d2 fe/cfd2: b0 03        ??MXd??? e .....                 bcs     @resec
+0021d4 fe/cfd4: 28           ??MXd??c e .....                 plp
+0021d5 fe/cfd5: 18           ????d??? e .....                 clc
+0021d6 fe/cfd6: 6b           ????d??c e ...#.                 rtl

+0021d7 fe/cfd7: 28           ????d??C e ....> @resec          plp
+0021d8 fe/cfd8: 38           ????d??? e .....                 sec
+0021d9 fe/cfd9: 6b           ????d??C e ...#.                 rtl

+0021da fe/cfda: 25 b6                   ..... tbl__ST_dispatch .dd2   __ST_0 & $ffff    ;ST 0 - return string "SYSTEM"
+0021dc fe/cfdc: 96 d1                   .....                 .dd2    doSTRTI & $ffff   ;ST 2 - return B0 FF80 table vector after re-indexing
+0021de fe/cfde: bf d1                   .....                 .dd2    doSTWTI & $ffff   ;ST 4 - update B0 FF80 table vector after re-indexing
+0021e0 fe/cfe0: f6 d1                   .....                 .dd2    doSTRSI & $ffff   ;ST 6 - return B0 FE80 table vector after re-indexing
+0021e2 fe/cfe2: 18 d2                   .....                 .dd2    doSTWSI & $ffff   ;ST 8 - update B0 FE80 table vector after re-indexing
+0021e4 fe/cfe4: fc cf                   .....                 .dd2    doSTGIT & $ffff   ;ST A - GSINIT with Carry clear - i.e. Space or CR terminates unquoted
+0021e6 fe/cfe6: ff cf                   .....                 .dd2    doSTGLN & $ffff   ;ST C - GSINIT with Carry set - i.e. only CR terminates unquoted
+0021e8 fe/cfe8: 51 d0                   .....                 .dd2    doSTGRD & $ffff   ;ST E - gsread update flags from H
+0021ea fe/cfea: 37 d1                   .....                 .dd2    syserrUseCoroutines & $ffff ;ST 10 - bad call
+0021ec fe/cfec: 52 d1                   .....                 .dd2    syserrUseCoroutines2 & $ffff ;ST 12 - bad call
+0021ee fe/cfee: 7a d1                   .....                 .dd2    doSTSBK & $ffff   ;ST 14 - look something up in a table pointed to by 00FF0D,0
+0021f0 fe/cff0: 84 d1                   .....                 .dd2    doSTTBK & $ffff   ;ST 16 - look something up in a table pointed to by 00FF0D,Y
+0021f2 fe/cff2: 63 d2                   .....                 .dd2    doSTCSI & $ffff   ;ST 18 - STCSI - create a call back block HND type 4
+0021f4 fe/cff4: 6d d1                   .....                 .dd2    doSTRBRK & $ffff  ;ST 1A - STRBRK - reexecute last brk
+0021f6 fe/cff6: f0 d0                   .....                 .dd2    doSTGAD & $ffff   ;ST 1C - STGAD - add Y to GSREAD pointer
+0021f8 fe/cff8: 19 d1                   .....                 .dd2    doSTBMP & $ffff   ;ST 1E - STBMP - Print Module name of last break address followed by a colon 
+0021fa fe/cffa: 08 d1                   .....                 .dd2    doSTBMB & $ffff   ;ST 1E - STBMP - Print Module name of last break address followed by a colon 

                                               ********************************************************************************
                                               * ST 0A - STGIT - GSINIT CC                                                    *
                                               *                                                                              *
                                               * Initialise a GSREAD string, space or CR will terminate an unquoted string    *
                                               ********************************************************************************
+0021fc fe/cffc: 18           ??MXd??? e @T... doSTGIT         clc
+0021fd fe/cffd: 80 01        ??MXd??c e ...#.                 bra     _ST_AC_int

                                               ********************************************************************************
                                               * ST 0C - STGLN - GSINIT read line                                             *
                                               *                                                                              *
                                               * Initialise a GSREAD string, only CR will terminate an unquoted string        *
                                               ********************************************************************************
+0021ff fe/cfff: 38           ??MXd??? e @T... doSTGLN         sec
+002200 fe/d000: 85 ed        ??MXd??? e ....> _ST_AC_int      sta     <DPSYS_GSREAD_ptr
+002202 fe/d002: eb           ??MXd??? e .....                 xba
+002203 fe/d003: 85 ee        ??MXd??? e .....                 sta     <DPSYS_GSREAD_ptr+1
+002205 fe/d005: a3 03        ??MXd??? e .....                 lda     $03,S
+002207 fe/d007: 85 ef        ??MXd??? e .....                 sta     <DPSYS_GSREAD_ptr+2
+002209 fe/d009: 66 dd        ??MXd??? e .....                 ror     <DPSYS_GSREAD_flags ;DD gets loaded with top bit set if entered via OP C
+00220b fe/d00b: 20 23 d0     ??MXd??? e .....                 jsr     __ST_skipSpaces
+00220e fe/d00e: c8           ??MXd??? e .....                 iny
+00220f fe/d00f: c9 22        ??MXd??? e .....                 cmp     #$22
+002211 fe/d011: f0 02        ??MXd??? e .....                 beq     @notq
+002213 fe/d013: 88           ??MXd?z? e .....                 dey                       ;if first char is not " then back up one
+002214 fe/d014: 18           ??MXd??? e .....                 clc
+002215 fe/d015: 66 dd        ??MXd??? e ....> @notq           ror     <DPSYS_GSREAD_flags
+002217 fe/d017: 48           ??MXd??? e .....                 pha
+002218 fe/d018: a5 dd        ??MXd??? e .....                 lda     <DPSYS_GSREAD_flags
+00221a fe/d01a: eb           ??MXd??? e .....                 xba
+00221b fe/d01b: 68           ??MXd??? e .....                 pla
+00221c fe/d01c: c9 0d        ??MXd??? e .....                 cmp     #$0d
+00221e fe/d01e: f0 01        ??MXd??? e .....                 beq     @ret
+002220 fe/d020: 18           ??MXd?z? e .....                 clc
+002221 fe/d021: 60           ??MXd??? e ...#> @ret            rts

+002222 fe/d022: c8           ??MXd?Z? e ....> @lp             iny
+002223 fe/d023: b7 ed        ??MXd??? e ....> __ST_skipSpaces lda     [<DPSYS_GSREAD_ptr],y
+002225 fe/d025: c9 20        ??MXd??? e .....                 cmp     #$20
+002227 fe/d027: f0 f9        ??MXd??? e .....                 beq     @lp
+002229 fe/d029: c9 0d        ??MXd?z? e .....                 cmp     #$0d
+00222b fe/d02b: 60           ??MXd??? e ...#.                 rts

+00222c fe/d02c: b7 ed        ??MXd??? e ....> gsread_dec_digit lda    [$ed],y
+00222e fe/d02e: c9 3a        ??MXd??? e .....                 cmp     #‘:’
+002230 fe/d030: b0 07        ??MXd??? e .....                 bcs     gsread_clc_ret
+002232 fe/d032: c9 30        ??MXd??c e .....                 cmp     #$30
+002234 fe/d034: 90 03        ??MXd??? e .....                 bcc     gsread_clc_ret
+002236 fe/d036: 29 0f        ??MXd??C e .....                 and     #$0f
+002238 fe/d038: 60           n?MXd??C e ...#.                 rts

+002239 fe/d039: 18           ??MXd??? e ....> gsread_clc_ret  clc
+00223a fe/d03a: 60           ??MXd??c e ...#.                 rts

+00223b fe/d03b: c8           ??MXd?Z? e ....> gsread_iny_hex_digit iny
+00223c fe/d03c: 20 2c d0     ??MXd??? e ....> gsread_hex_digit jsr    gsread_dec_digit
+00223f fe/d03f: b0 0e        ??MXd??? e .....                 bcs     @inyret
+002241 fe/d041: 29 df        ??MXd??c e .....                 and     #$df
+002243 fe/d043: c9 47        ??MXd??c e .....                 cmp     #‘G’
+002245 fe/d045: b0 f2        ??MXd??? e .....                 bcs     gsread_clc_ret
+002247 fe/d047: c9 41        ??MXd??c e .....                 cmp     #‘A’
+002249 fe/d049: 90 ee        ??MXd??? e .....                 bcc     gsread_clc_ret
+00224b fe/d04b: 08           ??MXd??C e .....                 php
+00224c fe/d04c: e9 37        ??MXd??C e .....                 sbc     #$37
+00224e fe/d04e: 28           ??MXd??? e .....                 plp
+00224f fe/d04f: c8           ??MXd??C e ....> @inyret         iny
+002250 fe/d050: 60           ??MXd??C e ...#.                 rts

                                               ********************************************************************************
                                               * ST 0E - STGRD - GSREAD                                                       *
                                               *                                                                              *
                                               * Do GSREAD                                                                    *
                                               *                                                                              *
                                               * QRY - looks to update the flags from passed in H                             *
                                               ********************************************************************************
+002251 fe/d051: eb           ??MXd??? e @T... doSTGRD         xba
+002252 fe/d052: 29 fe        ??MXd??? e .....                 and     #$fe
+002254 fe/d054: 85 dd        ??MXd??? e .....                 sta     <DPSYS_GSREAD_flags
+002256 fe/d056: b7 ed        ??MXd??? e ....> gsread_read     lda     [<DPSYS_GSREAD_ptr],y
+002258 fe/d058: f0 04        ??MXd??? e .....                 beq     LFED05E
+00225a fe/d05a: c9 0d        ??MXd?z? e .....                 cmp     #$0d
+00225c fe/d05c: d0 06        ??MXd??? e .....                 bne     LFED064
+00225e fe/d05e: 24 dd        ??MXd?Z? e ....> LFED05E         bit     <DPSYS_GSREAD_flags
+002260 fe/d060: 30 26        ??MXd??? e .....                 bmi     brkBadString
+002262 fe/d062: 10 1b        n?MXd??? e ...#.                 bpl     LFED07F

+002264 fe/d064: c9 20        ??MXd?z? e ....> LFED064         cmp     #$20
+002266 fe/d066: 90 20        ??MXd??? e .....                 bcc     brkBadString
+002268 fe/d068: d0 06        ??MXd??C e .....                 bne     LFED070
+00226a fe/d06a: 24 dd        ??MXd?ZC e .....                 bit     <DPSYS_GSREAD_flags
+00226c fe/d06c: 30 73        ??MXd??C e .....                 bmi     LFED0E1
+00226e fe/d06e: 50 0f        n?MXd??C e .....                 bvc     LFED07F
+002270 fe/d070: c9 22        ??MXd??C e ....> LFED070         cmp     #$22
+002272 fe/d072: d0 21        ??MXd??? e .....                 bne     LFED095
+002274 fe/d074: 24 dd        ??MXd?Z? e .....                 bit     <DPSYS_GSREAD_flags
+002276 fe/d076: 10 69        ??MXd??? e .....                 bpl     LFED0E1
+002278 fe/d078: c8           N?MXd??? e .....                 iny
+002279 fe/d079: b7 ed        ??MXd??? e .....                 lda     [<DPSYS_GSREAD_ptr],y
+00227b fe/d07b: c9 22        ??MXd??? e .....                 cmp     #$22
+00227d fe/d07d: f0 62        ??MXd??? e .....                 beq     LFED0E1
+00227f fe/d07f: 20 23 d0     ??MXd??? e ....> LFED07F         jsr     __ST_skipSpaces
+002282 fe/d082: 38           ??MXd??? e .....                 sec
+002283 fe/d083: eb           ??MXd??C e .....                 xba
+002284 fe/d084: a5 dd        ??MXd??C e .....                 lda     <DPSYS_GSREAD_ptr-16
+002286 fe/d086: eb           ??MXd??C e .....                 xba
+002287 fe/d087: 60           ??MXd??C e ...#.                 rts

+002288 fe/d088: 00 fd        ??MXd??? e ...#> brkBadString    brk     $fd

+00228a fe/d08a: 42 61 64 20+            .....                 .zstr   “Bad string”

+002295 fe/d095: c9 7c        ??MXd?z? e ....> LFED095         cmp     #‘|’
+002297 fe/d097: d0 48        ??MXd??? e .....                 bne     LFED0E1
+002299 fe/d099: c8           ??MXd?Z? e .....                 iny
+00229a fe/d09a: b7 ed        ??MXd??? e .....                 lda     [<DPSYS_GSREAD_ptr],y
+00229c fe/d09c: c9 7c        ??MXd??? e .....                 cmp     #‘|’
+00229e fe/d09e: f0 41        ??MXd??? e .....                 beq     LFED0E1
+0022a0 fe/d0a0: c9 22        ??MXd?z? e .....                 cmp     #‘"’
+0022a2 fe/d0a2: f0 3d        ??MXd??? e .....                 beq     LFED0E1
+0022a4 fe/d0a4: c9 26        ??MXd?z? e .....                 cmp     #‘&’
+0022a6 fe/d0a6: d0 16        ??MXd??? e .....                 bne     LFED0BE
+0022a8 fe/d0a8: 20 3b d0     ??MXd?Z? e .....                 jsr     gsread_iny_hex_digit
+0022ab fe/d0ab: 90 db        ??MXd??? e .....                 bcc     brkBadString
+0022ad fe/d0ad: 0a           ??MXd??C e .....                 asl     A
+0022ae fe/d0ae: 0a           ??MXd??? e .....                 asl     A
+0022af fe/d0af: 0a           ??MXd??? e .....                 asl     A
+0022b0 fe/d0b0: 0a           ??MXd??? e .....                 asl     A
+0022b1 fe/d0b1: 48           ??MXd??? e .....                 pha
+0022b2 fe/d0b2: 20 3c d0     ??MXd??? e .....                 jsr     gsread_hex_digit
+0022b5 fe/d0b5: 90 d1        ??MXd??? e .....                 bcc     brkBadString
+0022b7 fe/d0b7: 03 01        ??MXd??C e .....                 ora     $01,S
+0022b9 fe/d0b9: 83 01        ??MXd??C e .....                 sta     $01,S
+0022bb fe/d0bb: 68           ??MXd??C e .....                 pla
+0022bc fe/d0bc: 80 2c        ??MXd??C e ...#.                 bra     LFED0EA

+0022be fe/d0be: c9 21        ??MXd?z? e ....> LFED0BE         cmp     #‘!’
+0022c0 fe/d0c0: d0 09        ??MXd??? e .....                 bne     LFED0CB
+0022c2 fe/d0c2: c8           ??MXd?Z? e .....                 iny
+0022c3 fe/d0c3: a5 dd        ??MXd??? e .....                 lda     <DPSYS_GSREAD_flags
+0022c5 fe/d0c5: 09 01        ??MXd??? e .....                 ora     #$01
+0022c7 fe/d0c7: 85 dd        ??MXd?z? e .....                 sta     <DPSYS_GSREAD_flags
+0022c9 fe/d0c9: 80 8b        ??MXd?z? e ...#.                 bra     gsread_read

+0022cb fe/d0cb: c9 20        ??MXd?z? e ....> LFED0CB         cmp     #‘ ’
+0022cd fe/d0cd: 90 b9        ??MXd??? e .....                 bcc     brkBadString
+0022cf fe/d0cf: c9 3f        ??MXd??C e .....                 cmp     #‘?’
+0022d1 fe/d0d1: f0 0c        ??MXd??? e .....                 beq     LFED0DF
+0022d3 fe/d0d3: da           ??MXd?z? e .....                 phx
+0022d4 fe/d0d4: a2 14        ??MXd?z? e .....                 ldx     #$14
+0022d6 fe/d0d6: 22 ac ff 00  n?MXd?z? e .....                 jsl     __KB
+0022da fe/d0da: fa           ??MXd??? e .....                 plx
+0022db fe/d0db: e2 40        ??MXd??? e .....                 sep     #$40
+0022dd fe/d0dd: 80 03        ?VMXd??? e ...#.                 bra     LFED0E2

+0022df fe/d0df: a9 7f        ??MXd?Z? e ....> LFED0DF         lda     #$7f
+0022e1 fe/d0e1: b8           ??MXd??? e ....> LFED0E1         clv
+0022e2 fe/d0e2: c8           ??MXd??? e ....> LFED0E2         iny
+0022e3 fe/d0e3: 2a           ??MXd??? e .....                 rol     A
+0022e4 fe/d0e4: 48           ??MXd??? e .....                 pha
+0022e5 fe/d0e5: a5 dd        ??MXd??? e .....                 lda     $dd
+0022e7 fe/d0e7: 6a           ??MXd??? e .....                 ror     A
+0022e8 fe/d0e8: 68           ??MXd??? e .....                 pla
+0022e9 fe/d0e9: 6a           ??MXd??? e .....                 ror     A
+0022ea fe/d0ea: eb           ??MXd??? e ....> LFED0EA         xba
+0022eb fe/d0eb: a5 dd        ??MXd??? e .....                 lda     $dd
+0022ed fe/d0ed: eb           ??MXd??? e .....                 xba
+0022ee fe/d0ee: 18           ??MXd??? e .....                 clc
+0022ef fe/d0ef: 60           ??MXd??c e ...#.                 rts

                                               ********************************************************************************
                                               * ST 1C - STGAD - add Y to GSREAD pointer                                      *
                                               *                                                                              *
                                               * returns updated pointer in BHA but doesn't update stored pointer             *
                                               ********************************************************************************
+0022f0 fe/d0f0: 18           ??MXd??? e @T... doSTGAD         clc
+0022f1 fe/d0f1: 98           ??MXd??c e .....                 tya
+0022f2 fe/d0f2: 65 ed        ??MXd??c e .....                 adc     <DPSYS_GSREAD_ptr
+0022f4 fe/d0f4: eb           ??MXd??? e .....                 xba
+0022f5 fe/d0f5: a4 ef        ??MXd??? e .....                 ldy     <DPSYS_GSREAD_ptr+2
+0022f7 fe/d0f7: a6 ee        ??MXd??? e .....                 ldx     <DPSYS_GSREAD_ptr+1
+0022f9 fe/d0f9: 90 04        ??MXd??? e .....                 bcc     @skinc
+0022fb fe/d0fb: e8           ??MXd??C e .....                 inx
+0022fc fe/d0fc: d0 01        ??MXd??C e .....                 bne     @skinc
+0022fe fe/d0fe: c8           ??MXd?ZC e .....                 iny
+0022ff fe/d0ff: 98           ??MXd??? e ....> @skinc          tya
+002300 fe/d100: 83 03        ??MXd??? e .....                 sta     $03,S
+002302 fe/d102: 8a           ??MXd??? e .....                 txa
+002303 fe/d103: eb           ??MXd??? e .....                 xba
+002304 fe/d104: 18           ??MXd??? e .....                 clc
+002305 fe/d105: a0 00        ??MXd??c e .....                 ldy     #$00
+002307 fe/d107: 60           n?MXd?Zc e ...#.                 rts

                                               ********************************************************************************
                                               * ST 20 - STBMB - Get last break address to BHA                                *
                                               ********************************************************************************
+002308 fe/d108: af 0f ff 00  ??MXd??? e @T... doSTBMB         ldal    f:EXSYS_0D_BRKADDR_SAVE+2
+00230c fe/d10c: 83 03        ??MXd??? e .....                 sta     $03,S
+00230e fe/d10e: af 0e ff 00  ??MXd??? e .....                 ldal    f:EXSYS_0D_BRKADDR_SAVE+1
+002312 fe/d112: eb           ??MXd??? e .....                 xba
+002313 fe/d113: af 0d ff 00  ??MXd??? e .....                 ldal    f:EXSYS_0D_BRKADDR_SAVE
+002317 fe/d117: 18           ??MXd??? e .....                 clc
+002318 fe/d118: 60           ??MXd??c e ...#.                 rts

                                               ********************************************************************************
                                               * ST 1E - STBMP - Print Module name of last break address followed by a colon  *
                                               * or ?: for not found                                                          *
                                               ********************************************************************************
+002319 fe/d119: a2 20        ??MXd??? e @T... doSTBMP         ldx     #__STBMB
+00231b fe/d11b: 22 88 ff 00  n?MXd?z? e .....                 jsl     __ST              ;get break address to BHA
+00231f fe/d11f: 02 2d        ??MXd??? e .....                 cop     COP_2D_OPWRM      ;print module name of last BRK
+002321 fe/d121: 90 0e        ??MXd??? e .....                 bcc     @retcolon         ;ok
+002323 fe/d123: a0 00        ??MXd??C e .....                 ldy     #$00              ;faile to print
+002325 fe/d125: 02 2e        n?MXd?ZC e .....                 cop     COP_2E_OPFPO      ;find pool owner of BHA
+002327 fe/d127: b0 04        n?MXd?ZC e ...#.                 bcs     @retqrycolon

+002329 fe/d129: 02 2d        ??MXd??? e @T...                 cop     COP_2D_OPWRM      ;try print pool owner module name
+00232b fe/d12b: 90 04        ??MXd??? e .....                 bcc     @retcolon
+00232d fe/d12d: 02 01        ??MXd??C e ....> @retqrycolon    cop     COP_01_OPWRS
+00232f fe/d12f: 3f 00                   .T...                 .zstr   “?”
+002331 fe/d131: 02 01        ??MXd??? e ....> @retcolon       cop     COP_01_OPWRS
+002333 fe/d133: 3a 20 00                .T...                 .zstr   “: ”
+002336 fe/d136: 60           ??MXd??? e ...#.                 rts

+002337 fe/d137: 02 0f        ??MXd??? e @T... syserrUseCoroutines cop COP_0F_OPERR
+002339 fe/d139: 75 73 65 20+            .T...                 .zstr   “use coroutines not STSEN”
+002352 fe/d152: 02 0f        ??MXd??? e ..... syserrUseCoroutines2 cop COP_0F_OPERR
+002354 fe/d154: 75 73 65 20+            .T...                 .zstr   “use coroutines not STREN”
                                               ********************************************************************************
                                               * ST 1A - STRBRK - re-execute last BRK                                         *
                                               ********************************************************************************
+00236d fe/d16d: f4 00 ff     ??MXd??? e ..... doSTRBRK        pea     EXSYS
+002370 fe/d170: 2b           ??MXd??? e .....                 pld
+002371 fe/d171: c2 20        ??MXd??? e .....                 rep     #$20
                                                               .rwid   longm
+002373 fe/d173: c6 0d        ??mXd??? e .....                 dec     <EXSYS_0D_BRKADDR_SAVE
+002375 fe/d175: dc 0d ff     ??mXd??? e ...#.                 jml     [EXSYS_0D_BRKADDR_SAVE]

                                               ; TODO dead code?
                                                               .rwid   shortm
+002378 fe/d178: 38           ??MXd??? e @T...                 sec
+002379 fe/d179: 60           ??MXd??C e ...#.                 rts

                                               ********************************************************************************
                                               * ST 14 - STSBK Read the BRK signature                                         *
                                               *                                                                              *
                                               * Action: This call returns the error number associated with the last BRK      *
                                               * executed.                                                                    *
                                               *                                                                              *
                                               * On Entry:                                                                    *
                                               *    X   STSBK                                                                 *
                                               * Exit:                                                                        *
                                               *    A   Error number of the last error                                        *
                                               *    HY  State to be used in subsequent calls                                  *
                                               *    BD  Preserved                                                             *
                                               *                                                                              *
                                               * Note that HY must be preserved between the STSBK call and subsequent calls   *
                                               * to STTBK                                                                     *
                                               ********************************************************************************
+00237a fe/d17a: e2 10        ??MXd??? e @T... doSTSBK         sep     #$10
+00237c fe/d17c: a0 00        ??MXd??? e .....                 ldy     #$00
+00237e fe/d17e: 20 84 d1     n?MXd?Z? e .....                 jsr     doSTTBK
+002381 fe/d181: a0 01        ??MXd??? e .....                 ldy     #$01
+002383 fe/d183: 60           n?MXd?z? e ...#.                 rts

                                               ********************************************************************************
                                               * ST 16 - STTBK - Read BRK message                                             *
                                               *                                                                              *
                                               * Action: This call reiurns the next character in the error message associated *
                                               * with the last BRK executed.                                                  *
                                               *                                                                              *
                                               * Entry:                                                                       *
                                               *    HY  State returned by lastSTSBK or STTBK                                  *
                                               *    X   STTBK                                                                 *
                                               * Exit:                                                                        *
                                               *    B,D Preserved                                                             *
                                               *    C=0 Then next byte was read                                               *
                                               *    A   Next byte in BRK message text                                         *
                                               *    HY  State for next STTBK                                                  *
                                               * or C=1 Last character has been read                                          *
                                               ********************************************************************************
+002384 fe/d184: e2 10        n?MXd?Z? e .T..> doSTTBK         sep     #$10
+002386 fe/d186: f4 00 ff     n?MXd?Z? e .....                 pea     EXSYS
+002389 fe/d189: 2b           n?MXd?Z? e .....                 pld
+00238a fe/d18a: b7 0d        ??MXd??? e .....                 lda     [<EXSYS_0D_BRKADDR_SAVE],y
+00238c fe/d18c: f0 06        ??MXd??? e .....                 beq     @sec
+00238e fe/d18e: c8           ??MXd?z? e .....                 iny
+00238f fe/d18f: f0 02        ??MXd??? e .....                 beq     @deysec
+002391 fe/d191: 18           ??MXd?z? e .....                 clc
+002392 fe/d192: 60           ??MXd?zc e ...#.                 rts

+002393 fe/d193: 88           ??MXd?Z? e ....> @deysec         dey
+002394 fe/d194: 38           ??MXd??? e ....> @sec            sec
+002395 fe/d195: 60           ??MXd??C e ...#.                 rts

                                               ********************************************************************************
                                               * ST 02 - STRTI - Read table I?????                                            *
                                               *                                                                              *
                                               * Looks up from 00FF80 table a value and returns in BHA (QRY)                  *
                                               ********************************************************************************
+002396 fe/d196: 08           ??MXd??? e @T... doSTRTI         php
+002397 fe/d197: 78           ??MXd??? e .....                 sei
+002398 fe/d198: c0 eb        ??MXdI?? e .....                 cpy     #$eb
+00239a fe/d19a: 90 57        ??MXdI?? e .....                 bcc     __ST_plpretsec    ;if Y < EB then exit fail
+00239c fe/d19c: b9 63 d1     ??MXdI?C e .....                 lda     0+(tbl__ST_2_indices & $ffff)-235,y
+00239f fe/d19f: f0 52        ??MXdI?C e .....                 beq     __ST_plpretsec
+0023a1 fe/d1a1: aa           ??MXdIzC e .....                 tax
+0023a2 fe/d1a2: f4 00 00     ??MXdI?C e .....                 pea     $0000
                                                               .dbank  $00
+0023a5 fe/d1a5: ab           ??MXdI?C e .....                 plb
+0023a6 fe/d1a6: ab           ??MXdI?C e .....                 plb
+0023a7 fe/d1a7: bf 01 ff 00  ??MXdI?C e .....                 ldal    f:tblB0JumpTableFF80_QRY-127,x
+0023ab fe/d1ab: 48           ??MXdI?C e .....                 pha
+0023ac fe/d1ac: bf 02 ff 00  ??MXdI?C e .....                 ldal    f:tblB0JumpTableFF80_QRY-126,x
+0023b0 fe/d1b0: 48           ??MXdI?C e .....                 pha
+0023b1 fe/d1b1: bf 03 ff 00  ??MXdI?C e .....                 ldal    f:tblB0JumpTableFF80_QRY-125,x
+0023b5 fe/d1b5: 48           ??MXdI?C e .....                 pha
                                               ; 
+0023b6 fe/d1b6: 68           ??MXdI?C e ....> __ST_retstackedBHA_clc pla
+0023b7 fe/d1b7: 83 06        ??MXdI?C e .....                 sta     $06,S
                                               ; after this JSR (inside routine) stack is
                                               ; +9 return P (though SEC/CLC will override)
                                               ; +7 return D
                                               ; +6 return B (updated from A above)
                                               ; +4 return address to dispatch routine ($cfce)
                                               ; +3 mode / flags 
                                               ; +2 A to pop here
                                               ; +1 H to pop here
+0023b9 fe/d1b9: 68           ??MXdI?C e .....                 pla
+0023ba fe/d1ba: eb           ??MXdI?C e .....                 xba
+0023bb fe/d1bb: 68           ??MXdI?C e .....                 pla
+0023bc fe/d1bc: 28           ??MXdI?C e .....                 plp
+0023bd fe/d1bd: 18           ??MXd??? e .....                 clc
+0023be fe/d1be: 60           ??MXd??c e ...#.                 rts

                                               ********************************************************************************
                                               * ST 04 - STWTI - Write table I?????                                           *
                                               *                                                                              *
                                               * updates from BHA 00FF80 table value and returns old in BHA (QRY)             *
                                               ********************************************************************************
+0023bf fe/d1bf: 08           ??MXd??? e @T... doSTWTI         php
+0023c0 fe/d1c0: 78           ??MXd??? e .....                 sei
+0023c1 fe/d1c1: c0 eb        ??MXdI?? e .....                 cpy     #$eb
+0023c3 fe/d1c3: 90 2e        ??MXdI?? e .....                 bcc     __ST_plpretsec
+0023c5 fe/d1c5: aa           ??MXdI?C e .....                 tax
+0023c6 fe/d1c6: b9 63 d1     ??MXdI?C e .....                 lda     0+(tbl__ST_2_indices & $ffff)-235,y
+0023c9 fe/d1c9: f0 28        ??MXdI?C e .....                 beq     __ST_plpretsec
+0023cb fe/d1cb: f4 00 00     ??MXdIzC e .....                 pea     $0000             ;TODO pointless bank swap?
+0023ce fe/d1ce: ab           ??MXdIzC e .....                 plb
+0023cf fe/d1cf: ab           ??MXdI?C e .....                 plb
+0023d0 fe/d1d0: 9b           ??MXdI?C e .....                 txy
+0023d1 fe/d1d1: aa           ??MXdI?C e .....                 tax
+0023d2 fe/d1d2: bf 01 ff 00  ??MXdI?C e .....                 ldal    f:tblB0JumpTableFF80_QRY-127,x
+0023d6 fe/d1d6: 48           ??MXdI?C e .....                 pha
+0023d7 fe/d1d7: bf 02 ff 00  ??MXdI?C e .....                 ldal    f:tblB0JumpTableFF80_QRY-126,x
+0023db fe/d1db: 48           ??MXdI?C e .....                 pha
+0023dc fe/d1dc: bf 03 ff 00  ??MXdI?C e .....                 ldal    f:tblB0JumpTableFF80_QRY-125,x
+0023e0 fe/d1e0: 48           ??MXdI?C e .....                 pha
+0023e1 fe/d1e1: 98           ??MXdI?C e .....                 tya
+0023e2 fe/d1e2: 9f 01 ff 00  ??MXdI?C e .....                 stal    f:tblB0JumpTableFF80_QRY-127,x
+0023e6 fe/d1e6: eb           ??MXdI?C e .....                 xba
+0023e7 fe/d1e7: 9f 02 ff 00  ??MXdI?C e .....                 stal    f:tblB0JumpTableFF80_QRY-126,x
+0023eb fe/d1eb: a3 07        ??MXdI?C e .....                 lda     $07,S
+0023ed fe/d1ed: 9f 03 ff 00  ??MXdI?C e .....                 stal    f:tblB0JumpTableFF80_QRY-125,x
+0023f1 fe/d1f1: 80 c3        ??MXdI?C e ...#.                 bra     __ST_retstackedBHA_clc

+0023f3 fe/d1f3: 28           ??MXdI?? e ....> __ST_plpretsec  plp
+0023f4 fe/d1f4: 38           ??MXd??? e .....                 sec
+0023f5 fe/d1f5: 60           ??MXd??C e ...#.                 rts

                                               ********************************************************************************
                                               * ST 06 - STRSI - Read Table ???                                               *
                                               *                                                                              *
                                               * Looks up from 00FE01 table a value and returns in BHA (QRY)                  *
                                               ********************************************************************************
+0023f6 fe/d1f6: 08           ??MXd??? e @T... doSTRSI         php
+0023f7 fe/d1f7: 78           ??MXd??? e .....                 sei
+0023f8 fe/d1f8: c0 eb        ??MXdI?? e .....                 cpy     #$eb
+0023fa fe/d1fa: 90 f7        ??MXdI?? e .....                 bcc     __ST_plpretsec
+0023fc fe/d1fc: b9 63 d1     ??MXdI?C e .....                 lda     0+(tbl__ST_2_indices & $ffff)-235,y
+0023ff fe/d1ff: f0 f2        ??MXdI?C e .....                 beq     __ST_plpretsec
+002401 fe/d201: aa           ??MXdIzC e .....                 tax
+002402 fe/d202: f4 00 00     ??MXdI?C e .....                 pea     $0000             ;TODO: check - think this does nothing
+002405 fe/d205: ab           ??MXdI?C e .....                 plb
+002406 fe/d206: ab           ??MXdI?C e .....                 plb
+002407 fe/d207: bf 01 fe 00  ??MXdI?C e .....                 ldal    f:tblB0JumpTableFE80_QRY-127,x
+00240b fe/d20b: 48           ??MXdI?C e .....                 pha
+00240c fe/d20c: bf 02 fe 00  ??MXdI?C e .....                 ldal    f:tblB0JumpTableFE80_QRY-126,x
+002410 fe/d210: 48           ??MXdI?C e .....                 pha
+002411 fe/d211: bf 03 fe 00  ??MXdI?C e .....                 ldal    f:tblB0JumpTableFE80_QRY-125,x
+002415 fe/d215: 48           ??MXdI?C e .....                 pha
+002416 fe/d216: 80 9e        ??MXdI?C e ...#> bra__ST_retstackedBHA_clc bra __ST_retstackedBHA_clc

                                               ********************************************************************************
                                               * ST 08 - STWSI - Write table I????                                            *
                                               *                                                                              *
                                               * updates from BHA 00FE80 table value and returns old in BHA (QRY)             *
                                               ********************************************************************************
+002418 fe/d218: 08           ??MXd??? e @T... doSTWSI         php
+002419 fe/d219: e2 30        ??MXd??? e .....                 sep     #$30
+00241b fe/d21b: 78           ??MXd??? e .....                 sei
+00241c fe/d21c: c0 eb        ??MXdI?? e .....                 cpy     #$eb
+00241e fe/d21e: 90 d3        ??MXdI?? e .....                 bcc     __ST_plpretsec
+002420 fe/d220: aa           ??MXdI?C e .....                 tax
+002421 fe/d221: b9 63 d1     ??MXdI?C e .....                 lda     0+(tbl__ST_2_indices & $ffff)-235,y
+002424 fe/d224: f0 cd        ??MXdI?C e .....                 beq     __ST_plpretsec
+002426 fe/d226: f4 00 00     ??MXdIzC e .....                 pea     $0000
+002429 fe/d229: ab           ??MXdIzC e .....                 plb
+00242a fe/d22a: ab           ??MXdI?C e .....                 plb
+00242b fe/d22b: 9b           ??MXdI?C e .....                 txy
+00242c fe/d22c: aa           ??MXdI?C e .....                 tax
+00242d fe/d22d: bf 01 fe 00  ??MXdI?C e .....                 ldal    f:tblB0JumpTableFE80_QRY-127,x
+002431 fe/d231: 48           ??MXdI?C e .....                 pha
+002432 fe/d232: bf 02 fe 00  ??MXdI?C e .....                 ldal    f:tblB0JumpTableFE80_QRY-126,x
+002436 fe/d236: 48           ??MXdI?C e .....                 pha
+002437 fe/d237: bf 03 fe 00  ??MXdI?C e .....                 ldal    f:tblB0JumpTableFE80_QRY-125,x
+00243b fe/d23b: 48           ??MXdI?C e .....                 pha
+00243c fe/d23c: 98           ??MXdI?C e .....                 tya
+00243d fe/d23d: 9f 01 fe 00  ??MXdI?C e .....                 stal    f:tblB0JumpTableFE80_QRY-127,x
+002441 fe/d241: eb           ??MXdI?C e .....                 xba
+002442 fe/d242: 9f 02 fe 00  ??MXdI?C e .....                 stal    f:tblB0JumpTableFE80_QRY-126,x
+002446 fe/d246: a3 07        ??MXdI?C e .....                 lda     $07,S
+002448 fe/d248: 9f 03 fe 00  ??MXdI?C e .....                 stal    f:tblB0JumpTableFE80_QRY-125,x
+00244c fe/d24c: 80 c8        ??MXdI?C e ...#.                 bra     bra__ST_retstackedBHA_clc

                                               ; This looks to point at a set of offsets into tables in the system area at
                                               ; 00FE00
+00244e fe/d24e: 00                      .T... tbl__ST_2_indices .dd1  $00
+00244f fe/d24f: b0                      .T...                 .dd1    $b0
+002450 fe/d250: ac                      .T...                 .dd1    $ac
+002451 fe/d251: a8                      .T...                 .dd1    $a8
+002452 fe/d252: a4                      .T...                 .dd1    $a4
+002453 fe/d253: a0                      .T...                 .dd1    $a0
+002454 fe/d254: 9c                      .T...                 .dd1    $9c
+002455 fe/d255: 98                      .T...                 .dd1    $98
+002456 fe/d256: 94                      .T...                 .dd1    $94
+002457 fe/d257: e4                      .T...                 .dd1    $e4
+002458 fe/d258: e8                      .T...                 .dd1    $e8
+002459 fe/d259: ec                      .T...                 .dd1    $ec
+00245a fe/d25a: f0                      .T...                 .dd1    $f0
+00245b fe/d25b: f8                      .T...                 .dd1    $f8
+00245c fe/d25c: f4                      .T...                 .dd1    $f4
+00245d fe/d25d: fc                      .T...                 .dd1    $fc
+00245e fe/d25e: 90                      .T...                 .dd1    $90
+00245f fe/d25f: 8c                      .T...                 .dd1    $8c
+002460 fe/d260: 88                      .T...                 .dd1    $88
+002461 fe/d261: 84                      .T...                 .dd1    $84
+002462 fe/d262: 00                      .T...                 .dd1    $00
                                               ********************************************************************************
                                               * ST 18 - STCSI - Create FE80 table call back                                  *
                                               *                                                                              *
                                               * Appears to make a call back block (handle type 4) but doesn't assign a       *
                                               * handle                                                                       *
                                               ********************************************************************************
+002463 fe/d263: 08           ??MXd??? e @T... doSTCSI         php
+002464 fe/d264: 78           ??MXd??? e .....                 sei
+002465 fe/d265: c2 30        ??MXdI?? e .....                 rep     #$30
                                                               .rwid   longm,longx
+002467 fe/d267: c0 eb 00     ??mxdI?? e .....                 cpy     #$00eb
+00246a fe/d26a: 90 16        ??mxdI?? e .....                 bcc     @retsec
+00246c fe/d26c: aa           ??mxdI?C e .....                 tax
+00246d fe/d26d: b9 63 d1     ??mxdI?C e .....                 lda     0+(tbl__ST_2_indices & $ffff)-235,y
+002470 fe/d270: 29 ff 00     ??mxdI?C e .....                 and     #$00ff
+002473 fe/d273: f0 0d        n?mxdI?C e .....                 beq     @retsec
+002475 fe/d275: 18           n?mxdIzC e .....                 clc
+002476 fe/d276: 69 00 fe     n?mxdIzc e .....                 adc     #$fe00
+002479 fe/d279: aa           ??mxdI?? e .....                 tax
+00247a fe/d27a: a3 05        ??mxdI?? e .....                 lda     $05,S
+00247c fe/d27c: 20 b3 b3     ??mxdI?? e .....                 jsr     makeCallBackBlockHnd4
+00247f fe/d27f: 28           ??mxdI?? e .....                 plp
                                                               .rwid   shortm,shortx
+002480 fe/d280: 18           ??MXd??? e .....                 clc
+002481 fe/d281: 60           ??MXd??c e ...#.                 rts

                                                               .rwid   longm,longx
+002482 fe/d282: 28           ??mxdI?? e ....> @retsec         plp
                                                               .rwid   shortm,shortx
+002483 fe/d283: 38           ??MXd??? e .....                 sec
+002484 fe/d284: 60           ??MXd??C e ...#.                 rts

                                               ********************************************************************************
                                               * MM - Memory management entry point                                           *
                                               ********************************************************************************
+002485 fe/d285: 08           ????d??? e @T... default__MM     php
+002486 fe/d286: c2 30        ????d??? e .....                 rep     #$30
                                                               .rwid   longm,longx
+002488 fe/d288: e0 1c 00     ??mxd??? e .....                 cpx     #$001c
+00248b fe/d28b: b0 0c        ??mxd??? e .....                 bcs     @resetc
+00248d fe/d28d: 0b           ??mxd??c e .....                 phd
+00248e fe/d28e: 8b           ??mxd??c e .....                 phb
+00248f fe/d28f: fc 9c d2     ??mxd??c e .....                 jsr     (tblMMdispatch,x)
+002492 fe/d292: ab           ??mxd??? e .....                 plb
+002493 fe/d293: 2b           ??mxd??? e .....                 pld
+002494 fe/d294: b0 03        ??mxd??? e .....                 bcs     @resetc
+002496 fe/d296: 28           ??mxd??c e .....                 plp
                                                               .rwid   shortm,shortx
+002497 fe/d297: 18           ????d??? e .....                 clc
+002498 fe/d298: 6b           ????d??c e ...#.                 rtl

                                                               .rwid   longm,longx
+002499 fe/d299: 28           ??mxd??C e ....> @resetc         plp
                                                               .rwid   shortm,shortx
+00249a fe/d29a: 38           ????d??? e .....                 sec
+00249b fe/d29b: 6b           ????d??C e ...#.                 rtl

+00249c fe/d29c: 25 b6                   ..... tblMMdispatch   .dd2    __ST_0 & $ffff    ;0 - __MMNXT - return string "SYSTEM"?
+00249e fe/d29e: bc d4                   .....                 .dd2    doMMINIT & $ffff  ;2 - __MMINIT - initialise memory management routines
+0024a0 fe/d2a0: 16 d4                   .....                 .dd2    doMMBP & $ffff    ;4 - __MMBP - ???
+0024a2 fe/d2a2: 48 d4                   .....                 .dd2    doMMASD & $ffff   ;6 - __MMASD - allocate small descending area
+0024a4 fe/d2a4: eb d3                   .....                 .dd2    doMMALD & $ffff   ;8 - __MMALD - allocate large descending
+0024a6 fe/d2a6: 4b d4                   .....                 .dd2    doMMASA & $ffff   ;A - __MMASA - allocate a small ascending
+0024a8 fe/d2a8: ee d3                   .....                 .dd2    doMMALA & $ffff   ;C - __MMALA - allocate large asending
+0024aa fe/d2aa: dc d6                   .....                 .dd2    doMMBAS & $ffff   ;E - __MMBAS - get base of pool
+0024ac fe/d2ac: f3 d6                   .....                 .dd2    doMMLEN & $ffff   ;10 - __MMLEN - return pool length
+0024ae fe/d2ae: 1b d7                   .....                 .dd2    doMMTOP & $ffff   ;12 - __MMTOP - return top of pool
+0024b0 fe/d2b0: 32 d7                   .....                 .dd2    doMMFND & $ffff   ;14 - __MMFND - find a pool by address
+0024b2 fe/d2b2: 7e d7                   .....                 .dd2    doMMCHK & $ffff   ;16 - __MMCHK - check integrity of memory system
+0024b4 fe/d2b4: 12 d9                   .....                 .dd2    doMMAZB & $ffff   ;18 - __MMAZB - Allocate Bank 0
+0024b6 fe/d2b6: 44 d9                   .....                 .dd2    doMMMRG & $ffff   ;1A - __MMMRG - merge two pools

+0024b8 fe/d2b8: 08           ??MXdI?? e ....> LFED2B8         php
+0024b9 fe/d2b9: 0b           ??MXdI?? e .....                 phd
+0024ba fe/d2ba: 8b           ??MXdI?? e .....                 phb
+0024bb fe/d2bb: c2 30        ??MXdI?? e .....                 rep     #$30
                                                               .rwid   longm,longx
+0024bd fe/d2bd: 20 ff d2     ??mxdI?? e .....                 jsr     LFED2FF
+0024c0 fe/d2c0: b0 38        ??mxdI?? e .....                 bcs     LFED2FA
+0024c2 fe/d2c2: 20 24 d3     ??mxdI?c e .....                 jsr     LFED324
+0024c5 fe/d2c5: b0 33        ??mxdI?? e .....                 bcs     LFED2FA
+0024c7 fe/d2c7: 20 36 d3     ??mxdI?c e .....                 jsr     LFED336
+0024ca fe/d2ca: b0 2e        ??mxdI?? e .....                 bcs     LFED2FA
+0024cc fe/d2cc: a9 00 20     ??mxdI?c e .....                 lda     #$2000
+0024cf fe/d2cf: a2 18 00     n?mxdIzc e .....                 ldx     #$0018
+0024d2 fe/d2d2: 22 8c ff 00  n?mxdIzc e .....                 jsl     __MM
+0024d6 fe/d2d6: b0 22        ??mxdI?? e .....                 bcs     LFED2FA
+0024d8 fe/d2d8: a2 0e 00     ??mxdI?c e .....                 ldx     #$000e
+0024db fe/d2db: 22 8c ff 00  n?mxdIzc e .....                 jsl     __MM
+0024df fe/d2df: a9 00 a5     ??mxdI?? e .....                 lda     #$a500
+0024e2 fe/d2e2: f4 00 09     n?mxdIz? e .....                 pea     $0900
+0024e5 fe/d2e5: 2b           n?mxdIz? e .....                 pld
+0024e6 fe/d2e6: a0 01 00     ??mxdI?? e .....                 ldy     #$0001
+0024e9 fe/d2e9: a2 04 00     n?mxdIz? e .....                 ldx     #$0004
+0024ec fe/d2ec: 22 8c ff 00  n?mxdIz? e .....                 jsl     __MM
+0024f0 fe/d2f0: b0 08        ??mxdI?? e .....                 bcs     LFED2FA
+0024f2 fe/d2f2: 20 7f cf     ??mxdI?c e .....                 jsr     LFECF7F
+0024f5 fe/d2f5: ab           ??mxdI?? e .....                 plb
+0024f6 fe/d2f6: 2b           ??mxdI?? e .....                 pld
+0024f7 fe/d2f7: 28           ??mxdI?? e .....                 plp
                                                               .rwid   shortm,shortx
+0024f8 fe/d2f8: 18           ??MXdI?? e .....                 clc
+0024f9 fe/d2f9: 60           ??MXdI?c e ...#.                 rts

                                                               .rwid   longm,longx
+0024fa fe/d2fa: ab           ??mxdI?C e ....> LFED2FA         plb
+0024fb fe/d2fb: 2b           ??mxdI?C e .....                 pld
+0024fc fe/d2fc: 28           ??mxdI?C e .....                 plp
                                                               .rwid   shortm,shortx
+0024fd fe/d2fd: 38           ??MXdI?? e .....                 sec
+0024fe fe/d2fe: 60           ??MXdI?C e ...#.                 rts

                                                               .rwid   longm,longx
+0024ff fe/d2ff: a9 02 00     ??mxdI?? e ....> LFED2FF         lda     #HND_type_2_CBMEM
+002502 fe/d302: 20 01 ce     n?mxdIz? e .....                 jsr     obtainFreeBlock
+002505 fe/d305: b0 1c        ??mxdI?? e .....                 bcs     LFED323
+002507 fe/d307: aa           ??mxdI?c e .....                 tax
+002508 fe/d308: 20 d7 d6     ??mxdI?c e .....                 jsr     LFED6D7
+00250b fe/d30b: 8a           ??mxdI?? e .....                 txa
+00250c fe/d30c: 20 d2 d6     ??mxdI?? e .....                 jsr     LFED6D2
+00250f fe/d30f: a9 00 00     ??mxdI?? e .....                 lda     #$0000
+002512 fe/d312: 9f 04 00 00  n?mxdIZ? e .....                 stal    f:DPCOP_X+1,x
+002516 fe/d316: a9 ff ff     n?mxdIZ? e .....                 lda     #$ffff
+002519 fe/d319: 9f 06 00 00  n?mxdIz? e .....                 stal    f:DPCOP_AH+1,x
+00251d fe/d31d: 8a           n?mxdIz? e .....                 txa
+00251e fe/d31e: 8f 0a fe 00  ??mxdI?? e .....                 stal    f:$00fe0a
+002522 fe/d322: 18           ??mxdI?? e .....                 clc
+002523 fe/d323: 60           ??mxdI?? e ...#> LFED323         rts

+002524 fe/d324: af 0a fe 00  ??mxdI?c e ....> LFED324         ldal    f:$00fe0a
+002528 fe/d328: aa           ??mxdI?c e .....                 tax
+002529 fe/d329: 20 74 d3     ??mxdI?c e .....                 jsr     LFED374
+00252c fe/d32c: 20 de d5     ??mxdI?? e .....                 jsr     LFED5DE
+00252f fe/d32f: 8a           ??mxdI?? e .....                 txa
+002530 fe/d330: 8f 04 fe 00  ??mxdI?? e .....                 stal    f:$00fe04
+002534 fe/d334: 18           ??mxdI?? e .....                 clc
+002535 fe/d335: 60           ??mxdI?c e ...#.                 rts

+002536 fe/d336: f4 00 46     ??mxdI?c e ....> LFED336         pea     $4600
+002539 fe/d339: ab           ??mxdI?c e .....                 plb
+00253a fe/d33a: ab           ??mxdI?c e .....                 plb
+00253b fe/d33b: a9 00 00     ??mxdI?c e .....                 lda     #$0000
+00253e fe/d33e: f4 00 80     n?mxdIZc e .....                 pea     $8000
+002541 fe/d341: 2b           n?mxdIZc e .....                 pld
+002542 fe/d342: a0 07 00     ??mxdI?c e .....                 ldy     #$0007
+002545 fe/d345: a2 04 00     n?mxdIzc e .....                 ldx     #$0004
+002548 fe/d348: 22 8c ff 00  n?mxdIzc e .....                 jsl     __MM
+00254c fe/d34c: 20 c5 ce     ??mxdI?? e .....                 jsr     LFECEC5
+00254f fe/d34f: 8a           ??mxdI?? e .....                 txa
+002550 fe/d350: 8f 08 fe 00  ??mxdI?? e .....                 stal    f:$00fe08
+002554 fe/d354: 60           ??mxdI?? e ...#.                 rts

                                               ********************************************************************************
                                               * TODO: check - the following block looks like it may be dead code?            *
                                               ********************************************************************************
+002555 fe/d355: f4 00 45     ??mxd??? e @T...                 pea     HW_VIDEO_BASE >> 8 ;TODO: shift!
+002558 fe/d358: ab           ??mxd??? e .....                 plb
+002559 fe/d359: ab           ??mxd??? e .....                 plb
+00255a fe/d35a: a9 00 00     ??mxd??? e .....                 lda     #HW_VIDEO_BASE & $ffff
+00255d fe/d35d: f4 00 80     n?mxd?Z? e .....                 pea     HW_EXTIO >> 8
+002560 fe/d360: 2b           n?mxd?Z? e .....                 pld
+002561 fe/d361: a0 07 00     ??mxd??? e .....                 ldy     #HDMMW
+002564 fe/d364: a2 04 00     n?mxd?z? e .....                 ldx     #__MMBP
+002567 fe/d367: 22 8c ff 00  n?mxd?z? e .....                 jsl     __MM
+00256b fe/d36b: 20 c5 ce     ??mxd??? e .....                 jsr     LFECEC5
+00256e fe/d36e: 8a           ??mxd??? e .....                 txa
+00256f fe/d36f: 8f 0c fe 00  ??mxd??? e .....                 stal    f:DP_HANDLE_VIDEO_QRY
+002573 fe/d373: 60           ??mxd??? e ...#.                 rts

+002574 fe/d374: 08           ??mxdI?c e ....> LFED374         php
+002575 fe/d375: 0b           ??mxdI?c e .....                 phd
+002576 fe/d376: 78           ??mxdI?c e .....                 sei
+002577 fe/d377: 0b           ??mxdI?c e .....                 phd
+002578 fe/d378: 0b           ??mxdI?c e .....                 phd
+002579 fe/d379: 0b           ??mxdI?c e .....                 phd
+00257a fe/d37a: 3b           ??mxdI?c e .....                 tsc
+00257b fe/d37b: 5b           ??mxdI?c e .....                 tcd
+00257c fe/d37c: 1a           ??mxdI?c e .....                 inc     A
+00257d fe/d37d: 85 03        ??mxdI?c e .....                 sta     DPCOP_X
+00257f fe/d37f: a9 09 00     ??mxdI?c e .....                 lda     #$0009
+002582 fe/d382: 85 05        n?mxdIzc e .....                 sta     DPCOP_AH
+002584 fe/d384: c6 05        ??mxdI?c e ....> LFED384         dec     DPCOP_AH
+002586 fe/d386: f0 26        ??mxdI?c e .....                 beq     LFED3AE
+002588 fe/d388: 20 b5 d3     ??mxdIzc e .....                 jsr     LFED3B5
+00258b fe/d38b: 90 f7        ??mxdI?? e .....                 bcc     LFED384
+00258d fe/d38d: a5 05        ??mxdI?C e .....                 lda     DPCOP_AH
+00258f fe/d38f: 1a           ??mxdI?C e .....                 inc     A
+002590 fe/d390: 48           ??mxdI?C e .....                 pha
+002591 fe/d391: c6 05        ??mxdI?C e ....> LFED391         dec     DPCOP_AH
+002593 fe/d393: f0 07        ??mxdI?C e .....                 beq     LFED39C
+002595 fe/d395: 20 b5 d3     ??mxdIzC e .....                 jsr     LFED3B5
+002598 fe/d398: b0 f7        ??mxdI?? e .....                 bcs     LFED391
+00259a fe/d39a: c6 05        ??mxdI?c e .....                 dec     DPCOP_AH
+00259c fe/d39c: e6 05        ??mxdI?? e ....> LFED39C         inc     DPCOP_AH
+00259e fe/d39e: a5 05        ??mxdI?? e .....                 lda     DPCOP_AH
+0025a0 fe/d3a0: eb           ??mxdI?? e .....                 xba
+0025a1 fe/d3a1: a8           ??mxdI?? e .....                 tay
+0025a2 fe/d3a2: 68           ??mxdI?? e .....                 pla
+0025a3 fe/d3a3: 38           ??mxdI?? e .....                 sec
+0025a4 fe/d3a4: e5 05        ??mxdI?C e .....                 sbc     DPCOP_AH
+0025a6 fe/d3a6: eb           ??mxdI?? e .....                 xba
+0025a7 fe/d3a7: 2b           ??mxdI?? e .....                 pld
+0025a8 fe/d3a8: 2b           ??mxdI?? e .....                 pld
+0025a9 fe/d3a9: 2b           ??mxdI?? e .....                 pld
+0025aa fe/d3aa: 2b           ??mxdI?? e .....                 pld
+0025ab fe/d3ab: 28           ??mxdI?? e .....                 plp
+0025ac fe/d3ac: 18           ??mxdI?c e .....                 clc
+0025ad fe/d3ad: 60           ??mxdI?c e ...#.                 rts

+0025ae fe/d3ae: 2b           ??mxdIZc e ....> LFED3AE         pld
+0025af fe/d3af: 2b           ??mxdI?c e .....                 pld
+0025b0 fe/d3b0: 2b           ??mxdI?c e .....                 pld
+0025b1 fe/d3b1: 2b           ??mxdI?c e .....                 pld
+0025b2 fe/d3b2: 28           ??mxdI?c e .....                 plp
+0025b3 fe/d3b3: 38           ??mxdI?c e .....                 sec
+0025b4 fe/d3b4: 60           ??mxdI?C e ...#.                 rts

+0025b5 fe/d3b5: a7 03        ??mxdIz? e ....> LFED3B5         lda     [DPCOP_X]
+0025b7 fe/d3b7: 48           ??mxdI?? e .....                 pha
+0025b8 fe/d3b8: 49 ff ff     ??mxdI?? e .....                 eor     #$ffff
+0025bb fe/d3bb: 87 03        ??mxdI?? e .....                 sta     [DPCOP_X]
+0025bd fe/d3bd: 47 03        ??mxdI?? e .....                 eor     [DPCOP_X]
+0025bf fe/d3bf: d0 27        ??mxdI?? e .....                 bne     LFED3E8
+0025c1 fe/d3c1: c6 05        ??mxdIZ? e .....                 dec     DPCOP_AH
+0025c3 fe/d3c3: a7 03        ??mxdI?? e .....                 lda     [DPCOP_X]
+0025c5 fe/d3c5: 48           ??mxdI?? e .....                 pha
+0025c6 fe/d3c6: 49 ff ff     ??mxdI?? e .....                 eor     #$ffff
+0025c9 fe/d3c9: 87 03        ??mxdI?? e .....                 sta     [DPCOP_X]
+0025cb fe/d3cb: 47 03        ??mxdI?? e .....                 eor     [DPCOP_X]
+0025cd fe/d3cd: 08           ??mxdI?? e .....                 php
+0025ce fe/d3ce: e6 05        ??mxdI?? e .....                 inc     DPCOP_AH
+0025d0 fe/d3d0: 28           ??mxdI?? e .....                 plp
+0025d1 fe/d3d1: d0 14        ??mxdI?? e .....                 bne     LFED3E7
+0025d3 fe/d3d3: 68           ??mxdIZ? e .....                 pla
+0025d4 fe/d3d4: 48           ??mxdI?? e .....                 pha
+0025d5 fe/d3d5: 87 03        ??mxdI?? e .....                 sta     [DPCOP_X]
+0025d7 fe/d3d7: c6 05        ??mxdI?? e .....                 dec     DPCOP_AH
+0025d9 fe/d3d9: 47 03        ??mxdI?? e .....                 eor     [DPCOP_X]
+0025db fe/d3db: c9 ff ff     ??mxdI?? e .....                 cmp     #$ffff
+0025de fe/d3de: 68           ??mxdI?? e .....                 pla
+0025df fe/d3df: 87 03        ??mxdI?? e .....                 sta     [DPCOP_X]
+0025e1 fe/d3e1: e6 05        ??mxdI?? e .....                 inc     DPCOP_AH
+0025e3 fe/d3e3: 68           ??mxdI?? e .....                 pla
+0025e4 fe/d3e4: 87 03        ??mxdI?? e .....                 sta     [DPCOP_X]
+0025e6 fe/d3e6: 60           ??mxdI?? e ...#.                 rts

+0025e7 fe/d3e7: 68           ??mxdIz? e ....> LFED3E7         pla
+0025e8 fe/d3e8: 68           ??mxdI?? e ....> LFED3E8         pla
+0025e9 fe/d3e9: 18           ??mxdI?? e .....                 clc
+0025ea fe/d3ea: 60           ??mxdI?c e ...#.                 rts

                                               ********************************************************************************
                                               * __MM 8 - MMALD - allocate large descending                                   *
                                               *                                                                              *
                                               * This call allocates a region of memory from a specified pool. The region is  *
                                               * taken from the upper region of the pool.                                     *
                                               *                                                                              *
                                               * Entry:                                                                       *
                                               *    Y    Handle of memory pool                                                *
                                               *    BHA  Number of bytes to allocate                                          *
                                               *    X    MMALD                                                                *
                                               * Exit:                                                                        *
                                               *    C=0  Pool allocated successfully                                          *
                                               *    Y    Handle of newly allocated pool                                       *
                                               *    BHA  Base address of newly allocated pod                                  *
                                               * or C=1 Failed to allocate new pool                                           *
                                               *    B,D Preserved                                                             *
                                               ********************************************************************************
+0025eb fe/d3eb: b8           ??mxd??? e @T... doMMALD         clv
+0025ec fe/d3ec: 80 02        ?vmxd??? e ...#.                 bra     mmAllocLarge

                                               ********************************************************************************
                                               * __MM A - MMALA - allocate large ascending                                    *
                                               *                                                                              *
                                               * This call allocates a region of memory from a specified pool. The region is  *
                                               * taken from the lower region of the pool.                                     *
                                               *                                                                              *
                                               * Entry:                                                                       *
                                               *    Y    Handle of memory pool                                                *
                                               *    BHA  Number of bytes to allocate                                          *
                                               *    X    MMALA                                                                *
                                               * Exit:                                                                        *
                                               *    C=0  Pool allocated successfully                                          *
                                               *    Y    Handle of newly allocated pool                                       *
                                               *    BHA  Base address of newly allocated pod                                  *
                                               * or C=1 Failed to allocate new pool                                           *
                                               *    B,D Preserved                                                             *
                                               ********************************************************************************
+0025ee fe/d3ee: e2 40        ??mxd??? e @T... doMMALA         sep     #$40
+0025f0 fe/d3f0: 08           ??mxd??? e ....> mmAllocLarge    php
+0025f1 fe/d3f1: 18           ??mxd??? e .....                 clc
+0025f2 fe/d3f2: 69 ff 00     ??mxd??c e .....                 adc     #$00ff
+0025f5 fe/d3f5: 90 0a        ??mxd??? e .....                 bcc     @bankinc
+0025f7 fe/d3f7: 48           ??mxd??C e .....                 pha
+0025f8 fe/d3f8: e2 20        ??mxd??C e .....                 sep     #$20
                                                               .rwid   shortm
+0025fa fe/d3fa: 3b           ??Mxd??C e .....                 tsc
+0025fb fe/d3fb: 5b           ??Mxd??C e .....                 tcd
+0025fc fe/d3fc: e6 06        ??Mxd??C e .....                 inc     DPCOP_AH+1
+0025fe fe/d3fe: c2 20        ??Mxd??C e .....                 rep     #$20
                                                               .rwid   longm
+002600 fe/d400: 68           ??mxd??C e .....                 pla
+002601 fe/d401: 29 00 ff     ??mxd??? e ....> @bankinc        and     #$ff00            ;BHA now contains a size rounded up to pages
+002604 fe/d404: 28           n?mxd??? e .....                 plp
+002605 fe/d405: 48           ?vmxd??? e .....                 pha
+002606 fe/d406: af 04 fe 00  ?vmxd??? e .....                 ldal    f:$00fe04
+00260a fe/d40a: aa           ?vmxd??? e .....                 tax
+00260b fe/d40b: a3 05        ?vmxd??? e .....                 lda     $05,S
+00260d fe/d40d: 29 ff 00     ?vmxd??? e .....                 and     #$00ff
+002610 fe/d410: 03 01        nvmxd??? e .....                 ora     $01,S
+002612 fe/d412: eb           ?vmxd??? e .....                 xba
+002613 fe/d413: 2b           ?vmxd??? e .....                 pld
+002614 fe/d414: 80 49        ?vmxd??? e ...#.                 bra     LFED45F

                                               ********************************************************************************
                                               * __MM 4 - MMBP - ????                                                         *
                                               ********************************************************************************
+002616 fe/d416: 20 c5 ce     ??mxd??? e @T... doMMBP          jsr     LFECEC5
+002619 fe/d419: b0 25        ??mxd??? e .....                 bcs     LFED440
+00261b fe/d41b: 29 00 ff     ??mxd??c e .....                 and     #$ff00
+00261e fe/d41e: 48           n?mxd??c e .....                 pha
+00261f fe/d41f: a3 05        n?mxd??c e .....                 lda     $05,S
+002621 fe/d421: 29 ff 00     ??mxd??c e .....                 and     #$00ff
+002624 fe/d424: d0 0f        n?mxd??c e .....                 bne     LFED435
+002626 fe/d426: da           n?mxd?Zc e .....                 phx
+002627 fe/d427: af 04 fe 00  n?mxd?Zc e .....                 ldal    f:$00fe04
+00262b fe/d42b: aa           ??mxd??c e .....                 tax
+00262c fe/d42c: bf 07 00 00  ??mxd??c e .....                 ldal    f:DPCOP_B,x
+002630 fe/d430: 3a           ??mxd??c e .....                 dec     A
+002631 fe/d431: 29 ff 00     ??mxd??c e .....                 and     #$00ff
+002634 fe/d434: fa           n?mxd??c e .....                 plx
+002635 fe/d435: 03 01        ??mxd??c e ....> LFED435         ora     $01,S
+002637 fe/d437: eb           ??mxd??c e .....                 xba
+002638 fe/d438: 83 01        ??mxd??c e .....                 sta     $01,S
+00263a fe/d43a: 7a           ??mxd??c e .....                 ply
+00263b fe/d43b: 7b           ??mxd??c e .....                 tdc
+00263c fe/d43c: 18           ??mxd??c e .....                 clc
+00263d fe/d43d: 69 ff 00     ??mxd??c e .....                 adc     #$00ff
+002640 fe/d440: b0 23        ??mxd??? e ....> LFED440         bcs     LFED465
+002642 fe/d442: 29 00 ff     ??mxd??c e .....                 and     #$ff00
+002645 fe/d445: eb           n?mxd??c e .....                 xba
+002646 fe/d446: 80 2b        ??mxd??c e ...#.                 bra     LFED473

                                               ********************************************************************************
                                               * __MM 6 - MMASD - Allocate small descending                                   *
                                               *                                                                              *
                                               * This call allocates a region of memory from a specified pool. The region is  *
                                               * taken from the top of the pool, and must be less than 64K bytes long.        *
                                               * Moreover, the routine will only succeed if the pool would not cross a bank   *
                                               * boundary                                                                     *
                                               *                                                                              *
                                               * Entry:                                                                       *
                                               *    Y    Handle of memory pool                                                *
                                               *    HA   Number of bytes to allttcate                                         *
                                               *    X    MMASD                                                                *
                                               * Exit                                                                         *
                                               *    C=0  Pool allocated successfully                                          *
                                               *    Y    Handle of newly allocated pool                                       *
                                               *    BHA  Base address of newly allocated pool                                 *
                                               * or C=1  Failed to allocate new pool                                          *
                                               *    B,D  Preserved                                                            *
                                               ********************************************************************************
+002648 fe/d448: b8           ??mxd??? e @T... doMMASD         clv
+002649 fe/d449: 80 02        ?vmxd??? e ...#.                 bra     mmAllocSmall

                                               ********************************************************************************
                                               * __MM A - MMASA - Allocate small                                              *
                                               *                                                                              *
                                               * This call allocates a region of memory from a specified pool. The region is  *
                                               * taken from the lower area of the pool, and must be less than 64K bytes long. *
                                               * Moreover, the routine will only succeed if the pool would not cross a bank   *
                                               * boundary                                                                     *
                                               *                                                                              *
                                               * Entry:                                                                       *
                                               *    Y    Handle of memory pool                                                *
                                               *    HA   Number of bytes to allttcate                                         *
                                               *    X    MMASA                                                                *
                                               * Exit                                                                         *
                                               *    C=0  Pool allocated successfully                                          *
                                               *    Y    Handle of newly allocated pool                                       *
                                               *    BHA  Base address of newly allocated pool                                 *
                                               * or C=1  Failed to allocate new pool                                          *
                                               *    B,D  Preserved                                                            *
                                               ********************************************************************************
+00264b fe/d44b: e2 40        ??mxd??? e @T... doMMASA         sep     #$40
+00264d fe/d44d: 08           ??mxd??? e ....> mmAllocSmall    php
+00264e fe/d44e: 18           ??mxd??? e .....                 clc
+00264f fe/d44f: 69 ff 00     ??mxd??c e .....                 adc     #$00ff
+002652 fe/d452: 29 00 ff     ??mxd??? e .....                 and     #$ff00
+002655 fe/d455: 28           n?mxd??? e .....                 plp
+002656 fe/d456: 89 ff 00     ?vmxd??? e .....                 bit     #$00ff
+002659 fe/d459: d0 5f        ?vmxd??? e .....                 bne     LFED4BA
+00265b fe/d45b: eb           ?vmxd?Z? e .....                 xba
+00265c fe/d45c: 18           ?vmxd??? e .....                 clc
+00265d fe/d45d: 80 01        ?vmxd??c e ...#.                 bra     LFED460

+00265f fe/d45f: 38           ?vmxd??? e ....> LFED45F         sec
+002660 fe/d460: 08           ?vmxd??? e ....> LFED460         php
+002661 fe/d461: 20 c5 ce     ?vmxd??? e .....                 jsr     LFECEC5
+002664 fe/d464: ab           ??mxd??? e .....                 plb
+002665 fe/d465: b0 53        ??mxd??? e ....> LFED465         bcs     LFED4BA
+002667 fe/d467: 48           ??mxd??c e .....                 pha
+002668 fe/d468: da           ??mxd??c e .....                 phx
+002669 fe/d469: 20 10 d5     ??mxd??c e .....                 jsr     LFED510
+00266c fe/d46c: 50 01        ??mxd??? e .....                 bvc     LFED46F
+00266e fe/d46e: 9b           ?Vmxd??? e .....                 txy
+00266f fe/d46f: fa           ??mxd??? e ....> LFED46F         plx
+002670 fe/d470: 68           ??mxd??? e .....                 pla
+002671 fe/d471: b0 47        ??mxd??? e .....                 bcs     LFED4BA
+002673 fe/d473: 20 de d5     ??mxd??c e ....> LFED473         jsr     LFED5DE
+002676 fe/d476: b0 42        ??mxd??? e .....                 bcs     LFED4BA
+002678 fe/d478: 20 e7 d6     ??mxd??c e .....                 jsr     LFED6E7
+00267b fe/d47b: 20 a1 ce     ??mxd??? e .....                 jsr     allocHandleQRY
+00267e fe/d47e: b0 37        ??mxd??? e .....                 bcs     LFED4B7
+002680 fe/d480: 8b           ??mxd??c e ....> LFED480         phb
+002681 fe/d481: 48           ??mxd??c e .....                 pha
+002682 fe/d482: da           ??mxd??c e .....                 phx
+002683 fe/d483: e2 20        ??mxd??c e .....                 sep     #$20
                                                               .rwid   shortm
+002685 fe/d485: a3 0e        ??Mxd??c e .....                 lda     $0e,S
+002687 fe/d487: 48           ??Mxd??c e .....                 pha
+002688 fe/d488: ab           ??Mxd??c e .....                 plb
+002689 fe/d489: c2 20        ??Mxd??c e .....                 rep     #$20
                                                               .rwid   longm
+00268b fe/d48b: a3 0c        ??mxd??c e .....                 lda     $0c,S
+00268d fe/d48d: 02 2c        ??mxd??c e .....                 cop     COP_2C_OPFMA
+00268f fe/d48f: 90 13        ??mxd??c e ...#.                 bcc     LFED4A4

+002691 fe/d491: 5a           ??mxd??? e @T...                 phy
+002692 fe/d492: a2 14 00     ??mxd??? e .....                 ldx     #__MMFND
+002695 fe/d495: 22 8c ff 00  n?mxd?z? e .....                 jsl     __MM
+002699 fe/d499: 7a           ??mxd??? e .....                 ply
+00269a fe/d49a: a9 00 00     ??mxd??? e .....                 lda     #$0000
+00269d fe/d49d: b0 06        n?mxd?Z? e .....                 bcs     LFED4A5
+00269f fe/d49f: bf 08 00 00  n?mxd?Zc e .....                 ldal    f:$000008,x
+0026a3 fe/d4a3: aa           ??mxd??c e .....                 tax
+0026a4 fe/d4a4: 8a           ??mxd??c e ....> LFED4A4         txa
+0026a5 fe/d4a5: fa           ??mxd??? e ....> LFED4A5         plx
+0026a6 fe/d4a6: 9f 08 00 00  ??mxd??? e .....                 stal    f:$000008,x
+0026aa fe/d4aa: 68           ??mxd??? e .....                 pla
+0026ab fe/d4ab: ab           ??mxd??? e .....                 plb
+0026ac fe/d4ac: 18           ??mxd??? e .....                 clc
+0026ad fe/d4ad: 5b           ??mxd??? e ....> LFED4AD         tcd
+0026ae fe/d4ae: e2 20        ??mxd??? e .....                 sep     #$20
                                                               .rwid   shortm
+0026b0 fe/d4b0: 8b           ??Mxd??? e .....                 phb
+0026b1 fe/d4b1: 68           ??Mxd??? e .....                 pla
+0026b2 fe/d4b2: 83 03        ??Mxd??? e .....                 sta     $03,S
+0026b4 fe/d4b4: 7b           ??Mxd??? e .....                 tdc
+0026b5 fe/d4b5: 18           ??Mxd??? e .....                 clc
+0026b6 fe/d4b6: 60           ??Mxd??c e ...#.                 rts

                                                               .rwid   longm
+0026b7 fe/d4b7: 20 d6 d4     ??mxd??C e ....> LFED4B7         jsr     LFED4D6
+0026ba fe/d4ba: 38           ??mxd??? e ....> LFED4BA         sec
+0026bb fe/d4bb: 60           ??mxd??C e ...#.                 rts

                                               ********************************************************************************
                                               * __MM 2 - MMINIT - initialise MM routines                                     *
                                               ********************************************************************************
+0026bc fe/d4bc: 20 c5 ce     ??mxd??? e @T... doMMINIT        jsr     LFECEC5
+0026bf fe/d4bf: b0 13        ??mxd??? e .....                 bcs     LFED4D4
+0026c1 fe/d4c1: da           ??mxd??c e .....                 phx
+0026c2 fe/d4c2: fa           ??mxd??? e ....> LFED4C2         plx
+0026c3 fe/d4c3: 20 c5 d6     ??mxd??? e .....                 jsr     LFED6C5
+0026c6 fe/d4c6: b0 0e        ??mxd??? e .....                 bcs     LFED4D6
+0026c8 fe/d4c8: da           ??mxd??c e .....                 phx
+0026c9 fe/d4c9: aa           ??mxd??c e ....> LFED4C9         tax
+0026ca fe/d4ca: 20 c5 d6     ??mxd??c e .....                 jsr     LFED6C5
+0026cd fe/d4cd: 90 fa        ??mxd??? e .....                 bcc     LFED4C9
+0026cf fe/d4cf: 20 d6 d4     ??mxd??C e .....                 jsr     LFED4D6
+0026d2 fe/d4d2: 80 ee        ??mxd??? e ...#.                 bra     LFED4C2

+0026d4 fe/d4d4: 38           ??mxd??C e ....> LFED4D4         sec
+0026d5 fe/d4d5: 60           ??mxd??C e ...#.                 rts

+0026d6 fe/d4d6: 20 c5 d6     ??mxd??C e ....> LFED4D6         jsr     LFED6C5
+0026d9 fe/d4d9: 90 30        ??mxd??? e .....                 bcc     LFED50B
+0026db fe/d4db: 20 1e cf     ??mxd??C e .....                 jsr     freeHandlePointerX
+0026de fe/d4de: da           ??mxd??? e .....                 phx
+0026df fe/d4df: 20 b5 d6     ??mxd??? e .....                 jsr     LFED6B5
+0026e2 fe/d4e2: 48           ??mxd??? e .....                 pha
+0026e3 fe/d4e3: 20 b5 d6     ??mxd??? e ....> LFED4E3         jsr     LFED6B5
+0026e6 fe/d4e6: aa           ??mxd??? e .....                 tax
+0026e7 fe/d4e7: 90 fa        ??mxd??? e .....                 bcc     LFED4E3
+0026e9 fe/d4e9: aa           ??mxd??C e .....                 tax
+0026ea fe/d4ea: 20 c5 d6     ??mxd??C e .....                 jsr     LFED6C5
+0026ed fe/d4ed: c3 03        ??mxd??? e .....                 cmp     $03,S
+0026ef fe/d4ef: d0 06        ??mxd??? e .....                 bne     LFED4F7
+0026f1 fe/d4f1: 68           ??mxd?Z? e .....                 pla
+0026f2 fe/d4f2: 20 d7 d6     ??mxd??? e .....                 jsr     LFED6D7
+0026f5 fe/d4f5: 80 0c        ??mxd??? e ...#.                 bra     LFED503

+0026f7 fe/d4f7: aa           ??mxd?z? e ....> LFED4F7         tax
+0026f8 fe/d4f8: 20 b5 d6     ??mxd??? e .....                 jsr     LFED6B5
+0026fb fe/d4fb: c3 03        ??mxd??? e .....                 cmp     $03,S
+0026fd fe/d4fd: d0 f8        ??mxd??? e .....                 bne     LFED4F7
+0026ff fe/d4ff: 68           ??mxd?Z? e .....                 pla
+002700 fe/d500: 20 d2 d6     ??mxd??? e .....                 jsr     LFED6D2
+002703 fe/d503: fa           ??mxd??? e ....> LFED503         plx
+002704 fe/d504: 20 da cd     ??mxd??? e .....                 jsr     returnXToFreeList
+002707 fe/d507: 20 7e d7     ??mxd??? e .....                 jsr     doMMCHK
+00270a fe/d50a: 60           ??mxd??? e ...#.                 rts

+00270b fe/d50b: 38           ??mxd??c e ....> LFED50B         sec
+00270c fe/d50c: 20 7e d7     ??mxd??C e .....                 jsr     doMMCHK
+00270f fe/d50f: 60           ??mxd??? e ...#.                 rts

+002710 fe/d510: 08           ??mxd??c e ....> LFED510         php
+002711 fe/d511: a0 00 00     ??mxd??c e .....                 ldy     #$0000
+002714 fe/d514: 5a           n?mxd?Zc e .....                 phy
+002715 fe/d515: a0 ff ff     n?mxd?Zc e .....                 ldy     #$ffff
+002718 fe/d518: 5a           n?mxd?zc e .....                 phy
+002719 fe/d519: 5a           n?mxd?zc e .....                 phy
+00271a fe/d51a: 48           n?mxd?zc e .....                 pha
+00271b fe/d51b: da           n?mxd?zc e .....                 phx
+00271c fe/d51c: bf 04 00 00  n?mxd?zc e .....                 ldal    f:DPCOP_X+1,x
+002720 fe/d520: a8           ??mxd??c e .....                 tay
+002721 fe/d521: 20 c5 d6     ??mxd??c e .....                 jsr     LFED6C5
+002724 fe/d524: b0 17        ??mxd??? e .....                 bcs     LFED53D
+002726 fe/d526: aa           ??mxd??c e ....> LFED526         tax
+002727 fe/d527: bf 04 00 00  ??mxd??c e .....                 ldal    f:DPCOP_X+1,x
+00272b fe/d52b: 20 93 d5     ??mxd??c e .....                 jsr     LFED593
+00272e fe/d52e: bf 06 00 00  ??mxd??? e .....                 ldal    f:DPCOP_AH+1,x
+002732 fe/d532: a8           ??mxd??? e .....                 tay
+002733 fe/d533: 20 b5 d6     ??mxd??? e .....                 jsr     LFED6B5
+002736 fe/d536: 90 ee        ??mxd??? e .....                 bcc     LFED526
+002738 fe/d538: c3 01        ??mxd??C e .....                 cmp     $01,S
+00273a fe/d53a: d0 1e        ??mxd??? e .....                 bne     syserrNextPoolXPollANotParD
+00273c fe/d53c: aa           ??mxd?Z? e .....                 tax
+00273d fe/d53d: fa           ??mxd??? e ....> LFED53D         plx
+00273e fe/d53e: da           ??mxd??? e .....                 phx
+00273f fe/d53f: bf 06 00 00  ??mxd??? e .....                 ldal    f:DPCOP_AH+1,x
+002743 fe/d543: 20 93 d5     ??mxd??? e .....                 jsr     LFED593
+002746 fe/d546: a3 09        ??mxd??? e .....                 lda     $09,S
+002748 fe/d548: c3 03        ??mxd??? e .....                 cmp     $03,S
+00274a fe/d54a: fa           ??mxd??? e .....                 plx
+00274b fe/d54b: 68           ??mxd??? e .....                 pla
+00274c fe/d54c: d0 01        ??mxd??? e .....                 bne     LFED54F
+00274e fe/d54e: 18           ??mxd?Z? e .....                 clc
+00274f fe/d54f: 7a           ??mxd??? e ....> LFED54F         ply
+002750 fe/d550: fa           ??mxd??? e .....                 plx
+002751 fe/d551: 68           ??mxd??? e .....                 pla
+002752 fe/d552: b0 03        ??mxd??? e .....                 bcs     LFED557
+002754 fe/d554: 28           ??mxd??c e .....                 plp
+002755 fe/d555: 38           ??mxd??c e .....                 sec
+002756 fe/d556: 60           ??mxd??C e ...#.                 rts

+002757 fe/d557: 28           ??mxd??C e ....> LFED557         plp
+002758 fe/d558: 18           ??mxd??c e .....                 clc
+002759 fe/d559: 60           ??mxd??c e ...#.                 rts

+00275a fe/d55a: 2b           ??mxd?z? e ....> syserrNextPoolXPollANotParD pld           ;TODO: pointless ?
+00275b fe/d55b: 02 0f        ??mxd??? e .....                 cop     COP_0F_OPERR
+00275d fe/d55d: 4d 65 6d 6f+            .T...                 .zstr   “Memory SCAN error: NEXT POOL X IS POOL A NOT PARENT D”
+002793 fe/d593: 48           ??mxd??? e ....> LFED593         pha
+002794 fe/d594: 5a           ??mxd??? e .....                 phy
+002795 fe/d595: 8b           ??mxd??? e .....                 phb
+002796 fe/d596: 28           ??mxd??? e .....                 plp
+002797 fe/d597: b0 1b        ??mx???? e .....                 bcs     LFED5B4
+002799 fe/d599: 7a           ??mx???? e ....> LFED599         ply
+00279a fe/d59a: 5a           ??mx???? e .....                 phy
+00279b fe/d59b: a3 01        ??mx???? e .....                 lda     $01,S
+00279d fe/d59d: 43 03        ??mx???? e .....                 eor     $03,S
+00279f fe/d59f: f0 18        ??mx???? e .....                 beq     LFED5B9
+0027a1 fe/d5a1: 29 00 ff     ??mx??z? e .....                 and     #$ff00
+0027a4 fe/d5a4: f0 0e        n?mx???? e .....                 beq     LFED5B4
+0027a6 fe/d5a6: 68           n?mx??z? e .....                 pla
+0027a7 fe/d5a7: 18           ??mx???? e .....                 clc
+0027a8 fe/d5a8: 69 00 01     ??mx???c e .....                 adc     #$0100
+0027ab fe/d5ab: 29 00 ff     ??mx???? e .....                 and     #$ff00
+0027ae fe/d5ae: 48           n?mx???? e .....                 pha
+0027af fe/d5af: 20 bc d5     n?mx???? e .....                 jsr     LFED5BC
+0027b2 fe/d5b2: 80 e5        ??mx???? e ...#.                 bra     LFED599

+0027b4 fe/d5b4: a3 03        ??mx???? e ....> LFED5B4         lda     $03,S
+0027b6 fe/d5b6: 20 bc d5     ??mx???? e .....                 jsr     LFED5BC
+0027b9 fe/d5b9: 68           ??mx???? e ....> LFED5B9         pla
+0027ba fe/d5ba: 68           ??mx???? e .....                 pla
+0027bb fe/d5bb: 60           ??mx???? e ...#.                 rts

+0027bc fe/d5bc: 38           ??mx???? e ....> LFED5BC         sec
+0027bd fe/d5bd: 5a           ??mx???C e .....                 phy
+0027be fe/d5be: e3 01        ??mx???C e .....                 sbc     $01,S
+0027c0 fe/d5c0: 7a           ??mx???? e .....                 ply
+0027c1 fe/d5c1: c3 11        ??mx???? e .....                 cmp     $11,S
+0027c3 fe/d5c3: 90 02        ??mx???? e .....                 bcc     LFED5C7
+0027c5 fe/d5c5: 83 11        ??mx???C e .....                 sta     $11,S
+0027c7 fe/d5c7: c3 0b        ??mx???? e ....> LFED5C7         cmp     $0b,S
+0027c9 fe/d5c9: 90 12        ??mx???? e .....                 bcc     LFED5DD
+0027cb fe/d5cb: 18           ??mx???C e .....                 clc
+0027cc fe/d5cc: 5a           ??mx???c e .....                 phy
+0027cd fe/d5cd: 63 01        ??mx???c e .....                 adc     $01,S
+0027cf fe/d5cf: 7a           ??mx???? e .....                 ply
+0027d0 fe/d5d0: 38           ??mx???? e .....                 sec
+0027d1 fe/d5d1: e3 0b        ??mx???C e .....                 sbc     $0b,S
+0027d3 fe/d5d3: 83 0d        ??mx???? e .....                 sta     $0d,S
+0027d5 fe/d5d5: a3 0f        ??mx???? e .....                 lda     $0f,S
+0027d7 fe/d5d7: 1a           ??mx???? e .....                 inc     A
+0027d8 fe/d5d8: d0 03        ??mx???? e .....                 bne     LFED5DD
+0027da fe/d5da: 98           ??mx??Z? e .....                 tya
+0027db fe/d5db: 83 0f        ??mx???? e .....                 sta     $0f,S
+0027dd fe/d5dd: 60           ??mx???? e ...#> LFED5DD         rts

+0027de fe/d5de: 49 00 00     ??mxd??? e ....> LFED5DE         eor     #$0000
+0027e1 fe/d5e1: d0 03        ??mxd??? e .....                 bne     LFED5E6
+0027e3 fe/d5e3: 82 82 00     ??mxd?Z? e ...#.                 brl     LFED668

+0027e6 fe/d5e6: 48           ??mxd?z? e ....> LFED5E6         pha
+0027e7 fe/d5e7: da           ??mxd?z? e .....                 phx
+0027e8 fe/d5e8: 5a           ??mxd?z? e .....                 phy
+0027e9 fe/d5e9: bf 04 00 00  ??mxd?z? e .....                 ldal    f:DPCOP_X+1,x
+0027ed fe/d5ed: c3 01        ??mxd??? e .....                 cmp     $01,S
+0027ef fe/d5ef: f0 02        ??mxd??? e .....                 beq     LFED5F3
+0027f1 fe/d5f1: b0 72        ??mxd?z? e .....                 bcs     LFED665
+0027f3 fe/d5f3: 68           ??mxd??? e ....> LFED5F3         pla
+0027f4 fe/d5f4: 48           ??mxd??? e .....                 pha
+0027f5 fe/d5f5: 18           ??mxd??? e .....                 clc
+0027f6 fe/d5f6: 63 05        ??mxd??c e .....                 adc     $05,S
+0027f8 fe/d5f8: b0 6b        ??mxd??? e .....                 bcs     LFED665
+0027fa fe/d5fa: df 06 00 00  ??mxd??c e .....                 cmpl    f:DPCOP_AH+1,x
+0027fe fe/d5fe: f0 02        ??mxd??? e .....                 beq     LFED602
+002800 fe/d600: b0 63        ??mxd?z? e .....                 bcs     LFED665
+002802 fe/d602: 9b           ??mxd??? e ....> LFED602         txy
+002803 fe/d603: 20 c5 d6     ??mxd??? e .....                 jsr     LFED6C5
+002806 fe/d606: b0 31        ??mxd??? e .....                 bcs     LFED639
+002808 fe/d608: 80 0d        ??mxd??c e ...#.                 bra     LFED617

+00280a fe/d60a: 9b           ??mxd??c e ....> LFED60A         txy
+00280b fe/d60b: 20 b5 d6     ??mxd??c e .....                 jsr     LFED6B5
+00280e fe/d60e: 90 07        ??mxd??? e .....                 bcc     LFED617
+002810 fe/d610: c3 03        ??mxd??C e .....                 cmp     $03,S
+002812 fe/d612: d0 59        ??mxd??? e .....                 bne     sysErrorNextXisPoolANotParD
+002814 fe/d614: aa           ??mxd?Z? e .....                 tax
+002815 fe/d615: 80 15        ??mxd??? e ...#.                 bra     LFED62C

+002817 fe/d617: aa           ??mxd??c e ....> LFED617         tax
+002818 fe/d618: bf 04 00 00  ??mxd??c e .....                 ldal    f:DPCOP_X+1,x
+00281c fe/d61c: c3 01        ??mxd??c e .....                 cmp     $01,S
+00281e fe/d61e: 90 ea        ??mxd??? e .....                 bcc     LFED60A
+002820 fe/d620: 38           ??mxd??C e .....                 sec
+002821 fe/d621: e3 05        ??mxd??C e .....                 sbc     $05,S
+002823 fe/d623: c3 01        ??mxd??? e .....                 cmp     $01,S
+002825 fe/d625: 90 3e        ??mxd??? e .....                 bcc     LFED665
+002827 fe/d627: 98           ??mxd??C e .....                 tya
+002828 fe/d628: c3 03        ??mxd??C e .....                 cmp     $03,S
+00282a fe/d62a: f0 0d        ??mxd??? e .....                 beq     LFED639
+00282c fe/d62c: da           ??mxd??? e ....> LFED62C         phx
+00282d fe/d62d: bb           ??mxd??? e .....                 tyx
+00282e fe/d62e: bf 06 00 00  ??mxd??? e .....                 ldal    f:DPCOP_AH+1,x
+002832 fe/d632: fa           ??mxd??? e .....                 plx
+002833 fe/d633: c3 01        ??mxd??? e .....                 cmp     $01,S
+002835 fe/d635: f0 02        ??mxd??? e .....                 beq     LFED639
+002837 fe/d637: b0 2c        ??mxd?z? e .....                 bcs     LFED665
+002839 fe/d639: da           ??mxd??? e ....> LFED639         phx
+00283a fe/d63a: 5a           ??mxd??? e .....                 phy
+00283b fe/d63b: a9 02 00     ??mxd??? e .....                 lda     #HND_type_2_CBMEM
+00283e fe/d63e: 20 01 ce     n?mxd?z? e .....                 jsr     obtainFreeBlock
+002841 fe/d641: 7a           ??mxd??? e .....                 ply
+002842 fe/d642: 68           ??mxd??? e .....                 pla
+002843 fe/d643: b0 20        ??mxd??? e .....                 bcs     LFED665
+002845 fe/d645: 20 d2 d6     ??mxd??c e .....                 jsr     LFED6D2
+002848 fe/d648: 68           ??mxd??? e .....                 pla
+002849 fe/d649: 48           ??mxd??? e .....                 pha
+00284a fe/d64a: 9f 04 00 00  ??mxd??? e .....                 stal    f:DPCOP_X+1,x
+00284e fe/d64e: 18           ??mxd??? e .....                 clc
+00284f fe/d64f: 63 05        ??mxd??c e .....                 adc     $05,S
+002851 fe/d651: 9f 06 00 00  ??mxd??? e .....                 stal    f:DPCOP_AH+1,x
+002855 fe/d655: 8a           ??mxd??? e .....                 txa
+002856 fe/d656: 20 d7 d6     ??mxd??? e .....                 jsr     LFED6D7
+002859 fe/d659: 98           ??mxd??? e .....                 tya
+00285a fe/d65a: c3 03        ??mxd??? e .....                 cmp     $03,S
+00285c fe/d65c: f0 49        ??mxd??? e .....                 beq     LFED6A7
+00285e fe/d65e: 8a           ??mxd?z? e .....                 txa
+00285f fe/d65f: bb           ??mxd??? e .....                 tyx
+002860 fe/d660: 20 d2 d6     ??mxd??? e .....                 jsr     LFED6D2
+002863 fe/d663: 80 47        ??mxd??? e ...#.                 bra     LFED6AC

+002865 fe/d665: 7a           ??mxd??? e ....> LFED665         ply
+002866 fe/d666: fa           ??mxd??? e .....                 plx
+002867 fe/d667: 68           ??mxd??? e .....                 pla
+002868 fe/d668: 38           ??mxd??? e ....> LFED668         sec
+002869 fe/d669: 20 7e d7     ??mxd??C e .....                 jsr     doMMCHK
+00286c fe/d66c: 60           ??mxd??? e ...#.                 rts

+00286d fe/d66d: 2b           ??mxd?z? e ....> sysErrorNextXisPoolANotParD pld           ;TODO: pointless before syserr
+00286e fe/d66e: 02 0f        ??mxd??? e .....                 cop     COP_0F_OPERR
+002870 fe/d670: 4d 65 6d 6f+            .T...                 .zstr   “Memory ALLOC error: NEXT POOL X IS POOL A NOT PARENT D”
+0028a7 fe/d6a7: 8a           ??mxd??? e ....> LFED6A7         txa
+0028a8 fe/d6a8: bb           ??mxd??? e .....                 tyx
+0028a9 fe/d6a9: 20 d7 d6     ??mxd??? e .....                 jsr     LFED6D7
+0028ac fe/d6ac: fa           ??mxd??? e ....> LFED6AC         plx
+0028ad fe/d6ad: fa           ??mxd??? e .....                 plx
+0028ae fe/d6ae: fa           ??mxd??? e .....                 plx
+0028af fe/d6af: aa           ??mxd??? e .....                 tax
+0028b0 fe/d6b0: 18           ??mxd??? e .....                 clc
+0028b1 fe/d6b1: 20 7e d7     ??mxd??c e .....                 jsr     doMMCHK
+0028b4 fe/d6b4: 60           ??mxd??? e ...#.                 rts

+0028b5 fe/d6b5: 0b           ??mxd??? e ....> LFED6B5         phd
+0028b6 fe/d6b6: bf 00 00 00  ??mxd??? e .....                 ldal    f:$000000,x
+0028ba fe/d6ba: 48           ??mxd??? e .....                 pha
+0028bb fe/d6bb: 2b           ??mxd??? e .....                 pld
+0028bc fe/d6bc: bf 04 00 00  ??mxd??? e .....                 ldal    f:DPCOP_X+1,x
+0028c0 fe/d6c0: c5 04        ??mxd??? e .....                 cmp     DPCOP_X+1
+0028c2 fe/d6c2: 7b           ??mxd??? e .....                 tdc
+0028c3 fe/d6c3: 2b           ??mxd??? e .....                 pld
+0028c4 fe/d6c4: 60           ??mxd??? e ...#.                 rts

+0028c5 fe/d6c5: 8a           ??mxd??? e ....> LFED6C5         txa
+0028c6 fe/d6c6: df 02 00 00  ??mxd??? e .....                 cmpl    f:DPCOP_Y+1,x
+0028ca fe/d6ca: f0 05        ??mxd??? e .....                 beq     LFED6D1
+0028cc fe/d6cc: bf 02 00 00  ??mxd?z? e .....                 ldal    f:DPCOP_Y+1,x
+0028d0 fe/d6d0: 18           ??mxd??? e .....                 clc
+0028d1 fe/d6d1: 60           ??mxd??? e ...#> LFED6D1         rts

+0028d2 fe/d6d2: 9f 00 00 00  ??mxd??? e ....> LFED6D2         stal    f:$000000,x
+0028d6 fe/d6d6: 60           ??mxd??? e ...#.                 rts

+0028d7 fe/d6d7: 9f 02 00 00  ??mxd??? e ....> LFED6D7         stal    f:DPCOP_Y+1,x
+0028db fe/d6db: 60           ??mxd??? e ...#.                 rts

                                               ********************************************************************************
                                               * __MM E - MMBAS - Return pool base                                            *
                                               * This call returns the base address of a given memory pool.                   *
                                               * Entry: Y Handle of memory pool X MMBAS                                       *
                                               * Exit:                                                                        *
                                               *    D,Y Preserved                                                             *
                                               *    C=0 Success                                                               *
                                               *    BHA Base address of memory pool                                           *
                                               * or C=1 The handle was not a valid one                                        *
                                               ********************************************************************************
+0028dc fe/d6dc: 20 c5 ce     ??mxd??? e @T... doMMBAS         jsr     LFECEC5
+0028df fe/d6df: b0 11        ??mxd??? e .....                 bcs     LFED6F2
+0028e1 fe/d6e1: 20 e7 d6     ??mxd??c e .....                 jsr     LFED6E7
+0028e4 fe/d6e4: 82 c6 fd     ??mxd??? e ...#.                 brl     LFED4AD

+0028e7 fe/d6e7: bf 04 00 00  ??mxd??c e ....> LFED6E7         ldal    f:DPCOP_X+1,x
+0028eb fe/d6eb: 48           ??mxd??c e .....                 pha
+0028ec fe/d6ec: ab           ??mxd??c e .....                 plb
+0028ed fe/d6ed: ab           ??mxd??c e .....                 plb
+0028ee fe/d6ee: eb           ??mxd??c e .....                 xba
+0028ef fe/d6ef: 29 00 ff     ??mxd??c e .....                 and     #$ff00
+0028f2 fe/d6f2: 60           ??mxd??? e ...#> LFED6F2         rts

                                               ********************************************************************************
                                               * __MM 10 - MMLEN - Return pool length                                         *
                                               *                                                                              *
                                               * This call returns the longth in bytes of a given memory pool.                *
                                               *                                                                              *
                                               * Entry:                                                                       *
                                               *    Y    Handle of memory pool                                                *
                                               *    X    MMLEN                                                                *
                                               * Exit:                                                                        *
                                               *    D,Y  Preserved                                                            *
                                               *    C=0  Success                                                              *
                                               *    BHA  Length of memory pool                                                *
                                               * or C=1  The handle was not a valid one                                       *
                                               ********************************************************************************
+0028f3 fe/d6f3: 20 c5 ce     ??mxd??? e @T... doMMLEN         jsr     LFECEC5
+0028f6 fe/d6f6: b0 22        ??mxd??? e .....                 bcs     LFED71A
+0028f8 fe/d6f8: 20 fe d6     ??mxd??c e .....                 jsr     LFED6FE
+0028fb fe/d6fb: 82 af fd     ??mxd??? e ...#.                 brl     LFED4AD

+0028fe fe/d6fe: 20 e7 d6     ??mxd??c e ....> LFED6FE         jsr     LFED6E7
+002901 fe/d701: b0 17        ??mxd??? e .....                 bcs     LFED71A
+002903 fe/d703: 8b           ??mxd??c e .....                 phb
+002904 fe/d704: 48           ??mxd??c e .....                 pha
+002905 fe/d705: 20 26 d7     ??mxd??c e .....                 jsr     LFED726
+002908 fe/d708: 38           ??mxd??? e .....                 sec
+002909 fe/d709: e3 01        ??mxd??C e .....                 sbc     $01,S
+00290b fe/d70b: 83 01        ??mxd??? e .....                 sta     $01,S
+00290d fe/d70d: e2 20        ??mxd??? e .....                 sep     #$20
                                                               .rwid   shortm
+00290f fe/d70f: 8b           ??Mxd??? e .....                 phb
+002910 fe/d710: 68           ??Mxd??? e .....                 pla
+002911 fe/d711: e3 03        ??Mxd??? e .....                 sbc     $03,S
+002913 fe/d713: 83 03        ??Mxd??? e .....                 sta     $03,S
+002915 fe/d715: c2 20        ??Mxd??? e .....                 rep     #$20
                                                               .rwid   longm
+002917 fe/d717: 68           ??mxd??? e .....                 pla
+002918 fe/d718: ab           ??mxd??? e .....                 plb
+002919 fe/d719: 18           ??mxd??? e .....                 clc
+00291a fe/d71a: 60           ??mxd??? e ...#> LFED71A         rts

                                               ********************************************************************************
                                               * __MM 12 - MMTOP - Return pool top                                            *
                                               *                                                                              *
                                               * This routine returns the address of the byte after the last byte of the pool *
                                               * whose handle is given in Y. That is, if the last available byte in a pool is *
                                               * at address &0231FF, the address returned in BHA will be &023200.             *
                                               *                                                                              *
                                               * Entry:                                                                       *
                                               *    Y    Handle of memory pool                                                *
                                               *    X    MMTOP                                                                *
                                               * Exit:                                                                        *
                                               *    D,Y  Preserved                                                            *
                                               *    C=0  Success                                                              *
                                               *    BHA  Top address of pool                                                  *
                                               * or C=1  The handle was not a valid one.                                      *
                                               ********************************************************************************
+00291b fe/d71b: 20 c5 ce     ??mxd??? e @T... doMMTOP         jsr     LFECEC5
+00291e fe/d71e: b0 11        ??mxd??? e .....                 bcs     LFED731
+002920 fe/d720: 20 26 d7     ??mxd??c e .....                 jsr     LFED726
+002923 fe/d723: 82 87 fd     ??mxd??? e ...#.                 brl     LFED4AD

+002926 fe/d726: bf 06 00 00  ??mxd??c e ....> LFED726         ldal    f:DPCOP_AH+1,x
+00292a fe/d72a: 48           ??mxd??c e .....                 pha
+00292b fe/d72b: ab           ??mxd??c e .....                 plb
+00292c fe/d72c: ab           ??mxd??c e .....                 plb
+00292d fe/d72d: eb           ??mxd??c e .....                 xba
+00292e fe/d72e: 29 00 ff     ??mxd??c e .....                 and     #$ff00
+002931 fe/d731: 60           ??mxd??? e ...#> LFED731         rts

                                               ********************************************************************************
                                               * __MM 14 - MMFND - Find a memory pool by address                              *
                                               *                                                                              *
                                               * This routine takes an address and returns the handle of a pool containing    *
                                               * that address if possible. Note that if the address is within a large pool,   *
                                               * the handle will only be returned if that pool contains no sub-pools.         *
                                               *                                                                              *
                                               * Entry:                                                                       *
                                               *    BHA  Memory address within pool                                           *
                                               *    X    MMFND                                                                *
                                               *    Y    HDMMT (2), the task pool handle                                      *
                                               * Exit:                                                                        *
                                               *    D    Preserved                                                            *
                                               *    C=0  A pool containing the address exists                                 *
                                               *    Y    Handle of pool                                                       *
                                               * or C=1  No pool found                                                        *
                                               *                                                                              *
                                               * TODO: does something else in Y search sub-pools?                             *
                                               ********************************************************************************
+002932 fe/d732: 20 7e d7     ??mxd??? e @T... doMMFND         jsr     doMMCHK
+002935 fe/d735: 8b           ??mxd??? e .....                 phb
+002936 fe/d736: 48           ??mxd??? e .....                 pha
+002937 fe/d737: 8b           ??mxd??? e .....                 phb
+002938 fe/d738: ab           ??mxd??? e .....                 plb
+002939 fe/d739: d0 11        ??mxd??? e .....                 bne     LFED74C
+00293b fe/d73b: af 04 fe 00  ??mxd?Z? e .....                 ldal    f:$00fe04
+00293f fe/d73f: aa           ??mxd??? e .....                 tax
+002940 fe/d740: bf 06 00 00  ??mxd??? e .....                 ldal    f:DPCOP_AH+1,x
+002944 fe/d744: 38           ??mxd??? e .....                 sec
+002945 fe/d745: e9 00 01     ??mxd??C e .....                 sbc     #$0100
+002948 fe/d748: 03 02        ??mxd??? e .....                 ora     $02,S
+00294a fe/d74a: 83 02        ??mxd??? e .....                 sta     $02,S
+00294c fe/d74c: ab           ??mxd??? e ....> LFED74C         plb
+00294d fe/d74d: a0 07 00     ??mxd??? e .....                 ldy     #$0007
+002950 fe/d750: 20 c5 ce     n?mxd?z? e .....                 jsr     LFECEC5
+002953 fe/d753: b0 13        ??mxd??? e .....                 bcs     LFED768
+002955 fe/d755: 20 c5 d6     ??mxd??c e .....                 jsr     LFED6C5
+002958 fe/d758: aa           ??mxd??? e ....> LFED758         tax
+002959 fe/d759: bf 06 00 00  ??mxd??? e .....                 ldal    f:DPCOP_AH+1,x
+00295d fe/d75d: c3 01        ??mxd??? e .....                 cmp     $01,S
+00295f fe/d75f: f0 02        ??mxd??? e .....                 beq     LFED763
+002961 fe/d761: b0 08        ??mxd?z? e .....                 bcs     LFED76B
+002963 fe/d763: 20 b5 d6     ??mxd??? e ....> LFED763         jsr     LFED6B5
+002966 fe/d766: 90 f0        ??mxd??? e .....                 bcc     LFED758
+002968 fe/d768: 68           ??mxd??C e ....> LFED768         pla
+002969 fe/d769: 38           ??mxd??C e .....                 sec
+00296a fe/d76a: 60           ??mxd??C e ...#.                 rts

+00296b fe/d76b: bf 04 00 00  ??mxd?zC e ....> LFED76B         ldal    f:DPCOP_X+1,x
+00296f fe/d76f: c3 01        ??mxd??C e .....                 cmp     $01,S
+002971 fe/d771: f0 02        ??mxd??? e .....                 beq     LFED775
+002973 fe/d773: b0 f3        ??mxd?z? e .....                 bcs     LFED768
+002975 fe/d775: 20 c5 d6     ??mxd??? e ....> LFED775         jsr     LFED6C5
+002978 fe/d778: 90 de        ??mxd??? e .....                 bcc     LFED758
+00297a fe/d77a: 68           ??mxd??C e .....                 pla
+00297b fe/d77b: 4c 40 cf     ??mxd??C e ...#.                 jmp     findHandleByAddr

                                               ********************************************************************************
                                               * __MM 16 - MMCHK - Check the integrity of the MM system                       *
                                               *                                                                              *
                                               * This call is a system-level routine to check that the data structures        *
                                               * maintained by the memory managment software is self-consistent. If the       *
                                               * system is OK, the routine returns, otherwise an OPERR is executed.           *
                                               *                                                                              *
                                               * Entry:                                                                       *
                                               *    X     MMCHK                                                               *
                                               * Exit:                                                                        *
                                               *    D,B   Preserved                                                           *
                                               *    A,X,Y Preserved                                                           *
                                               ********************************************************************************
+00297e fe/d77e: 08           ??mxd??? e ....> doMMCHK         php
+00297f fe/d77f: 0b           ??mxd??? e .....                 phd
+002980 fe/d780: 8b           ??mxd??? e .....                 phb
+002981 fe/d781: 48           ??mxd??? e .....                 pha
+002982 fe/d782: da           ??mxd??? e .....                 phx
+002983 fe/d783: 5a           ??mxd??? e .....                 phy
+002984 fe/d784: 20 4e ce     ??mxd??? e .....                 jsr     LFECE4E
+002987 fe/d787: f4 00 00     ??mxd??? e .....                 pea     $0000
+00298a fe/d78a: ab           ??mxd??? e .....                 plb
+00298b fe/d78b: ab           ??mxd??? e .....                 plb
+00298c fe/d78c: af 0a fe 00  ??mxd??? e .....                 ldal    f:$00fe0a
+002990 fe/d790: 5b           ??mxd??? e .....                 tcd
+002991 fe/d791: aa           ??mxd??? e .....                 tax
+002992 fe/d792: 20 c5 d6     ??mxd??? e .....                 jsr     LFED6C5
+002995 fe/d795: b0 0a        ??mxd??? e .....                 bcs     syserrNoSubPools
+002997 fe/d797: 20 d4 d7     ??mxd??c e .....                 jsr     LFED7D4
+00299a fe/d79a: 7a           ??mxd??? e .....                 ply
+00299b fe/d79b: fa           ??mxd??? e .....                 plx
+00299c fe/d79c: 68           ??mxd??? e .....                 pla
+00299d fe/d79d: ab           ??mxd??? e .....                 plb
+00299e fe/d79e: 2b           ??mxd??? e .....                 pld
+00299f fe/d79f: 28           ??mxd??? e .....                 plp
+0029a0 fe/d7a0: 60           ??mxd??? e ...#.                 rts

+0029a1 fe/d7a1: 02 0f        ??mxd??C e ....> syserrNoSubPools cop    COP_0F_OPERR
+0029a3 fe/d7a3: 4d 65 6d 6f+            .T...                 .zstr   “Memory error: WHOLE MACHINE POOL HAS NO SUBPOOLS”
+0029d4 fe/d7d4: 20 72 d8     ??mxd??? e ....> LFED7D4         jsr     LFED872
+0029d7 fe/d7d7: 20 c5 d6     ??mxd??? e .....                 jsr     LFED6C5
+0029da fe/d7da: b0 0a        ??mxd??? e .....                 bcs     LFED7E6
+0029dc fe/d7dc: 0b           ??mxd??c e .....                 phd
+0029dd fe/d7dd: da           ??mxd??c e .....                 phx
+0029de fe/d7de: da           ??mxd??c e .....                 phx
+0029df fe/d7df: 2b           ??mxd??c e .....                 pld
+0029e0 fe/d7e0: aa           ??mxd??c e .....                 tax
+0029e1 fe/d7e1: 20 d4 d7     ??mxd??c e .....                 jsr     LFED7D4
+0029e4 fe/d7e4: fa           ??mxd??? e .....                 plx
+0029e5 fe/d7e5: 2b           ??mxd??? e .....                 pld
+0029e6 fe/d7e6: 9b           ??mxd??? e ....> LFED7E6         txy
+0029e7 fe/d7e7: 20 b5 d6     ??mxd??? e .....                 jsr     LFED6B5
+0029ea fe/d7ea: b0 11        ??mxd??? e .....                 bcs     LFED7FD
+0029ec fe/d7ec: aa           ??mxd??c e .....                 tax
+0029ed fe/d7ed: bf 04 00 00  ??mxd??c e .....                 ldal    f:DPCOP_X+1,x
+0029f1 fe/d7f1: f4 00 00     ??mxd??c e .....                 pea     $0000
+0029f4 fe/d7f4: ab           ??mxd??c e .....                 plb
+0029f5 fe/d7f5: ab           ??mxd??c e .....                 plb
+0029f6 fe/d7f6: d9 06 00     ??mxd??c e .....                 cmp     DPCOP_AH+1,y
+0029f9 fe/d7f9: 90 0e        ??mxd??? e .....                 bcc     syserrBasePoolLtEndPrev
+0029fb fe/d7fb: 80 d7        ??mxd??C e ...#.                 bra     LFED7D4

+0029fd fe/d7fd: 0b           ??mxd??C e ....> LFED7FD         phd
+0029fe fe/d7fe: 43 01        ??mxd??C e .....                 eor     $01,S
+002a00 fe/d800: c9 01 00     ??mxd??C e .....                 cmp     #$0001
+002a03 fe/d803: 43 01        ??mxd??? e .....                 eor     $01,S
+002a05 fe/d805: 2b           ??mxd??? e .....                 pld
+002a06 fe/d806: b0 37        ??mxd??? e .....                 bcs     syserrNextPoolXisANotParD
+002a08 fe/d808: 60           ??mxd??c e ...#.                 rts

+002a09 fe/d809: 02 0f        ??mxd??c e ....> syserrBasePoolLtEndPrev cop COP_0F_OPERR
+002a0b fe/d80b: 4d 65 6d 6f+            .T...                 .zstr   “Memory error: BASE POOL X < END OF PRECEDING POOL Y”
+002a3f fe/d83f: 02 0f        ??mxd??? e ....> syserrNextPoolXisANotParD cop COP_0F_OPERR
+002a41 fe/d841: 4d 65 6d 6f+            .T...                 .zstr   “Memory error: NEXT POOL X IS POOL A NOT PARENT D”
+002a72 fe/d872: bf 04 00 00  ??mxd??? e ....> LFED872         ldal    f:DPCOP_X+1,x
+002a76 fe/d876: df 06 00 00  ??mxd??? e .....                 cmpl    f:DPCOP_AH+1,x
+002a7a fe/d87a: f0 6d        ??mxd??? e .....                 beq     syserrPoolBaseGtEnd
+002a7c fe/d87c: b0 6b        ??mxd?z? e .....                 bcs     syserrPoolBaseGtEnd
+002a7e fe/d87e: a5 04        ??mxd?zc e .....                 lda     DPCOP_X+1
+002a80 fe/d880: df 04 00 00  ??mxd??c e .....                 cmpl    f:DPCOP_X+1,x
+002a84 fe/d884: f0 02        ??mxd??? e .....                 beq     LFED888
+002a86 fe/d886: b0 0b        ??mxd?z? e .....                 bcs     syserrMemBaseLtParent
+002a88 fe/d888: bf 06 00 00  ??mxd??? e ....> LFED888         ldal    f:DPCOP_AH+1,x
+002a8c fe/d88c: c5 06        ??mxd??? e .....                 cmp     DPCOP_AH+1
+002a8e fe/d88e: f0 02        ??mxd??? e .....                 beq     LFED892
+002a90 fe/d890: b0 2d        ??mxd?z? e .....                 bcs     syserrPoolEndgtEndParent
+002a92 fe/d892: 60           ??mxd??? e ...#> LFED892         rts

+002a93 fe/d893: 02 0f        ??mxd?zC e ....> syserrMemBaseLtParent cop COP_0F_OPERR
+002a95 fe/d895: 4d 65 6d 6f+            .T...                 .zstr   “Memory error: BASE POOL X < BASE PARENT D”
+002abf fe/d8bf: 02 0f        ??mxd?zC e .T..> syserrPoolEndgtEndParent cop COP_0F_OPERR
+002ac1 fe/d8c1: 4d 65 6d 6f+            .T...                 .zstr   “Memory error: END POOL X > END PARENT D”
+002ae9 fe/d8e9: 02 0f        ??mxd??? e .T..> syserrPoolBaseGtEnd cop COP_0F_OPERR
+002aeb fe/d8eb: 4d 65 6d 6f+            .T...                 .zstr   “Memory error: BASE POOL X > END POOL X”
                                               ********************************************************************************
                                               * __MM 18 - MMAZB - Allocate a bank zero area                                  *
                                               *                                                                              *
                                               * This call allocates memory from bank zero, in a way similar to MMASD. Note   *
                                               * that this call should be used only when it is essential that the memory      *
                                               * allocated is in bank zero, eg to store an interrupt routine.                 *
                                               *                                                                              *
                                               * Bank zero is a relatively precious resource on the 65816 and should not be   *
                                               * over used if many tasks are to be supported.                                 *
                                               * Entry:                                                                       *
                                               *    HA   Number of bytes to allocate                                          *
                                               *    X    MMAZB                                                                *
                                               * Exit:                                                                        *
                                               *    C=0  Pool allocated successfully                                          *
                                               *    BHA  Base address of newly allocated pool                                 *
                                               *    Y    Handle of new direct page pool                                       *
                                               * or C=1  Failed to allocate new pool                                          *
                                               *    B,D  Preserved                                                            *
                                               *                                                                              *
                                               * QRY HDMMM - is this a special bank 0 pool that we can allocate from?         *
                                               ********************************************************************************
+002b12 fe/d912: a0 01 00     ??mxd??? e ..... doMMAZB         ldy     #HDMMM
+002b15 fe/d915: a2 06 00     n?mxd?z? e .....                 ldx     #__MMASD
+002b18 fe/d918: 22 8c ff 00  n?mxd?z? e .....                 jsl     __MM
+002b1c fe/d91c: b0 24        ??mxd??? e .....                 bcs     @retsec
+002b1e fe/d91e: da           ??mxd??c e .....                 phx
+002b1f fe/d91f: 48           ??mxd??c e .....                 pha
+002b20 fe/d920: 8b           ??mxd??c e .....                 phb
                                               ; stack
                                               ; 
                                               ; +4 X  - not documented whether MMASD corrupts this
                                               ; +2 HA - alloc'd B0 pointer
                                               ; +1 B  - alloc'd bank
+002b21 fe/d921: af 04 fe 00  ??mxd??c e .....                 ldal    f:$00fe04
+002b25 fe/d925: aa           ??mxd??c e .....                 tax
+002b26 fe/d926: e2 20        ??mxd??c e .....                 sep     #$20
                                                               .rwid   shortm
+002b28 fe/d928: bf 07 00 00  ??Mxd??c e .....                 ldal    f:$000007,x
+002b2c fe/d92c: 3a           ??Mxd??c e .....                 dec     A
+002b2d fe/d92d: 43 01        ??Mxd??c e .....                 eor     $01,S
+002b2f fe/d92f: c9 01        ??Mxd??c e .....                 cmp     #$01
+002b31 fe/d931: c2 20        ??Mxd??? e .....                 rep     #$20
                                                               .rwid   longm
+002b33 fe/d933: ab           ??mxd??? e .....                 plb
+002b34 fe/d934: 68           ??mxd??? e .....                 pla
+002b35 fe/d935: fa           ??mxd??? e .....                 plx
+002b36 fe/d936: b0 03        ??mxd??? e .....                 bcs     @fpretsec
+002b38 fe/d938: 82 45 fb     ??mxd??c e ...#.                 brl     LFED480

+002b3b fe/d93b: a2 02 00     ??mxd??C e ....> @fpretsec       ldx     #__MMFP           ;free the handle
+002b3e fe/d93e: 22 8c ff 00  n?mxd?zC e .....                 jsl     __MM
+002b42 fe/d942: 38           ??mxd??? e ....> @retsec         sec
+002b43 fe/d943: 60           ??mxd??C e ...#.                 rts

                                               ********************************************************************************
                                               * __MM 1A - MMMRG - merge two pools                                            *
                                               *                                                                              *
                                               * MMMRG - Merge two memory pools into one                                      *
                                               *                                                                              *
                                               * This call combines two existing contiguous pools of memory into a single,    *
                                               * larger one. The pools must not overlap, ie the call may not be used to merge *
                                               * a pool with one of its sub-pools.                                            *
                                               *                                                                              *
                                               * Entry:                                                                       *
                                               *    Y    Handle of pool 1                                                     *
                                               *    HA   Handle of pool 2                                                     *
                                               *    X    MMMRG                                                                *
                                               * Exit:                                                                        *
                                               *    C=0  The pools were merged successfully                                   *
                                               *    Y    Handle of composite pool                                             *
                                               * or C=1  The pools could not be merged                                        *
                                               *    B,D  Preserved                                                            *
                                               *                                                                              *
                                               * Note that the handle of the composite pool may be different from both of the *
                                               * source handles                                                               *
                                               ********************************************************************************
+002b44 fe/d944: 48           ??mxd??? e @T... doMMMRG         pha
+002b45 fe/d945: 5a           ??mxd??? e .....                 phy
+002b46 fe/d946: 48           ??mxd??? e .....                 pha
+002b47 fe/d947: 20 c5 ce     ??mxd??? e .....                 jsr     LFECEC5
+002b4a fe/d94a: 90 03        ??mxd??? e .....                 bcc     LFED94F
+002b4c fe/d94c: 82 94 00     ??mxd??C e ...#.                 brl     LFED9E3

+002b4f fe/d94f: 7a           ??mxd??c e ....> LFED94F         ply
+002b50 fe/d950: da           ??mxd??c e .....                 phx
+002b51 fe/d951: 20 c5 ce     ??mxd??c e .....                 jsr     LFECEC5
+002b54 fe/d954: 90 03        ??mxd??? e .....                 bcc     LFED959
+002b56 fe/d956: 82 8a 00     ??mxd??C e ...#.                 brl     LFED9E3

+002b59 fe/d959: 2b           ??mxd??c e ....> LFED959         pld
+002b5a fe/d95a: a5 04        ??mxd??c e .....                 lda     DPCOP_X+1
+002b5c fe/d95c: df 04 00 00  ??mxd??c e .....                 cmpl    f:DPCOP_X+1,x
+002b60 fe/d960: b0 04        ??mxd??? e .....                 bcs     LFED966
+002b62 fe/d962: 0b           ??mxd??c e .....                 phd
+002b63 fe/d963: 8a           ??mxd??c e .....                 txa
+002b64 fe/d964: 5b           ??mxd??c e .....                 tcd
+002b65 fe/d965: fa           ??mxd??c e .....                 plx
+002b66 fe/d966: 20 b5 d6     ??mxd??? e ....> LFED966         jsr     LFED6B5
+002b69 fe/d969: b0 79        ??mxd??? e .....                 bcs     LFED9E4
+002b6b fe/d96b: 0b           ??mxd??c e .....                 phd
+002b6c fe/d96c: 43 01        ??mxd??c e .....                 eor     $01,S
+002b6e fe/d96e: c9 01 00     ??mxd??c e .....                 cmp     #$0001
+002b71 fe/d971: 2b           ??mxd??? e .....                 pld
+002b72 fe/d972: b0 70        ??mxd??? e .....                 bcs     LFED9E4
+002b74 fe/d974: bf 06 00 00  ??mxd??c e .....                 ldal    f:DPCOP_AH+1,x
+002b78 fe/d978: c5 04        ??mxd??c e .....                 cmp     DPCOP_X+1
+002b7a fe/d97a: d0 68        ??mxd??? e .....                 bne     LFED9E4
+002b7c fe/d97c: a5 06        ??mxd?Z? e .....                 lda     DPCOP_AH+1
+002b7e fe/d97e: 9f 06 00 00  ??mxd??? e .....                 stal    f:DPCOP_AH+1,x
+002b82 fe/d982: 9b           ??mxd??? e .....                 txy
+002b83 fe/d983: 7b           ??mxd??? e .....                 tdc
+002b84 fe/d984: aa           ??mxd??? e .....                 tax
+002b85 fe/d985: 20 b5 d6     ??mxd??? e .....                 jsr     LFED6B5
+002b88 fe/d988: bb           ??mxd??? e .....                 tyx
+002b89 fe/d989: 20 d2 d6     ??mxd??? e .....                 jsr     LFED6D2
+002b8c fe/d98c: 7b           ??mxd??? e .....                 tdc
+002b8d fe/d98d: aa           ??mxd??? e .....                 tax
+002b8e fe/d98e: 20 c5 d6     ??mxd??? e .....                 jsr     LFED6C5
+002b91 fe/d991: b0 21        ??mxd??? e .....                 bcs     LFED9B4
+002b93 fe/d993: 48           ??mxd??c e .....                 pha
+002b94 fe/d994: aa           ??mxd??c e ....> LFED994         tax
+002b95 fe/d995: 20 b5 d6     ??mxd??c e .....                 jsr     LFED6B5
+002b98 fe/d998: 90 fa        ??mxd??? e .....                 bcc     LFED994
+002b9a fe/d99a: 98           ??mxd??C e .....                 tya
+002b9b fe/d99b: 20 d2 d6     ??mxd??C e .....                 jsr     LFED6D2
+002b9e fe/d99e: bb           ??mxd??? e .....                 tyx
+002b9f fe/d99f: 20 c5 d6     ??mxd??? e .....                 jsr     LFED6C5
+002ba2 fe/d9a2: b0 0c        ??mxd??? e .....                 bcs     LFED9B0
+002ba4 fe/d9a4: aa           ??mxd??c e ....> LFED9A4         tax
+002ba5 fe/d9a5: 20 b5 d6     ??mxd??c e .....                 jsr     LFED6B5
+002ba8 fe/d9a8: 90 fa        ??mxd??? e .....                 bcc     LFED9A4
+002baa fe/d9aa: 68           ??mxd??C e .....                 pla
+002bab fe/d9ab: 20 d2 d6     ??mxd??C e .....                 jsr     LFED6D2
+002bae fe/d9ae: 80 04        ??mxd??? e ...#.                 bra     LFED9B4

+002bb0 fe/d9b0: 68           ??mxd??C e ....> LFED9B0         pla
+002bb1 fe/d9b1: 20 d7 d6     ??mxd??C e .....                 jsr     LFED6D7
+002bb4 fe/d9b4: 7a           ??mxd??? e ....> LFED9B4         ply
+002bb5 fe/d9b5: 20 c5 ce     ??mxd??? e .....                 jsr     LFECEC5
+002bb8 fe/d9b8: b0 3e        ??mxd??? e .....                 bcs     syserrUnexpectedMMRG
+002bba fe/d9ba: 8a           ??mxd??c e .....                 txa
+002bbb fe/d9bb: 0b           ??mxd??c e .....                 phd
+002bbc fe/d9bc: 43 01        ??mxd??c e .....                 eor     $01,S
+002bbe fe/d9be: c9 01 00     ??mxd??c e .....                 cmp     #$0001
+002bc1 fe/d9c1: 2b           ??mxd??? e .....                 pld
+002bc2 fe/d9c2: b0 06        ??mxd??? e .....                 bcs     LFED9CA
+002bc4 fe/d9c4: 20 e8 d9     ??mxd??c e .....                 jsr     LFED9E8
+002bc7 fe/d9c7: 7a           ??mxd??? e .....                 ply
+002bc8 fe/d9c8: 80 07        ??mxd??? e ...#.                 bra     LFED9D1

+002bca fe/d9ca: 98           ??mxd??C e ....> LFED9CA         tya
+002bcb fe/d9cb: 7a           ??mxd??C e .....                 ply
+002bcc fe/d9cc: 48           ??mxd??C e .....                 pha
+002bcd fe/d9cd: 20 e8 d9     ??mxd??C e .....                 jsr     LFED9E8
+002bd0 fe/d9d0: 7a           ??mxd??? e .....                 ply
+002bd1 fe/d9d1: 20 c5 ce     ??mxd??? e ....> LFED9D1         jsr     LFECEC5
+002bd4 fe/d9d4: b0 22        ??mxd??? e .....                 bcs     syserrUnexpectedMMRG
+002bd6 fe/d9d6: 20 1e cf     ??mxd??c e .....                 jsr     freeHandlePointerX
+002bd9 fe/d9d9: b0 1d        ??mxd??? e .....                 bcs     syserrUnexpectedMMRG
+002bdb fe/d9db: 20 a1 ce     ??mxd??c e .....                 jsr     allocHandleQRY
+002bde fe/d9de: b0 18        ??mxd??? e .....                 bcs     syserrUnexpectedMMRG
+002be0 fe/d9e0: 82 9d fa     ??mxd??c e ...#.                 brl     LFED480

+002be3 fe/d9e3: 68           ??mxd??C e ....> LFED9E3         pla
+002be4 fe/d9e4: 7a           ??mxd??? e ....> LFED9E4         ply
+002be5 fe/d9e5: 68           ??mxd??? e .....                 pla
+002be6 fe/d9e6: 38           ??mxd??? e .....                 sec
+002be7 fe/d9e7: 60           ??mxd??C e ...#.                 rts

+002be8 fe/d9e8: 20 c5 ce     ??mxd??? e ....> LFED9E8         jsr     LFECEC5
+002beb fe/d9eb: b0 0b        ??mxd??? e .....                 bcs     syserrUnexpectedMMRG
+002bed fe/d9ed: 20 1e cf     ??mxd??c e .....                 jsr     freeHandlePointerX
+002bf0 fe/d9f0: b0 06        ??mxd??? e .....                 bcs     syserrUnexpectedMMRG
+002bf2 fe/d9f2: 20 da cd     ??mxd??c e .....                 jsr     returnXToFreeList
+002bf5 fe/d9f5: b0 01        ??mxd??? e .....                 bcs     syserrUnexpectedMMRG
+002bf7 fe/d9f7: 60           ??mxd??c e ...#.                 rts

+002bf8 fe/d9f8: 02 0f        ??mxd??C e ....> syserrUnexpectedMMRG cop COP_0F_OPERR
+002bfa fe/d9fa: 55 6e 65 78+            .T...                 .zstr   “Unexpected error: MMMRG”
                                               ********************************************************************************
                                               * CO - CoRoutine entry point                                                   *
                                               ********************************************************************************
                                                               .rwid   shortm,shortx
+002c12 fe/da12: 08           ????d??C e ..... default__CO     php
+002c13 fe/da13: c2 30        ????d??C e .....                 rep     #$30
                                                               .rwid   longm,longx
+002c15 fe/da15: e0 1e 00     ??mxd??C e .....                 cpx     #$001e
+002c18 fe/da18: b0 0c        ??mxd??? e .....                 bcs     LFEDA26
+002c1a fe/da1a: 0b           ??mxd??c e .....                 phd
+002c1b fe/da1b: 8b           ??mxd??c e .....                 phb
+002c1c fe/da1c: fc 29 da     ??mxd??c e .....                 jsr     (tblCoServDispatch,x)
+002c1f fe/da1f: ab           ??mxd??? e .....                 plb
+002c20 fe/da20: 2b           ??mxd??? e .....                 pld
+002c21 fe/da21: b0 03        ??mxd??? e .....                 bcs     LFEDA26
+002c23 fe/da23: 28           ??mxd??c e .....                 plp
                                                               .rwid   shortm,shortx
+002c24 fe/da24: 18           ????d??C e .....                 clc
+002c25 fe/da25: 6b           ????d??c e ...#.                 rtl

                                                               .rwid   longm,longx
+002c26 fe/da26: 28           ??mxd??C e ....> LFEDA26         plp
                                                               .rwid   shortm,shortx
+002c27 fe/da27: 38           ????d??C e .....                 sec
+002c28 fe/da28: 6b           ????d??C e ...#.                 rtl

+002c29 fe/da29: 25 b6                   ..... tblCoServDispatch .dd2  __ST_0 & $ffff
+002c2b fe/da2b: 4f da                   .....                 .dd2    doCOCRE & $ffff   ;COPAR - 2 - initialize QRY
+002c2d fe/da2d: c4 da                   .....                 .dd2    doCOENV & $ffff   ;COENV - 4 - set coroutine environment
+002c2f fe/da2f: 37 db                   .....                 .dd2    doCODEL & $ffff   ;CODEL - 6 - delete coroutine
+002c31 fe/da31: a5 db                   .....                 .dd2    doCODES & $ffff   ;CODES - 8 - destroy coroutine
+002c33 fe/da33: d6 dc                   .....                 .dd2    doCOREN & $ffff   ;COREN - A - restore current coroutine's environment
+002c35 fe/da35: 06 db                   .....                 .dd2    doCOBRK & $ffff   ;COBRK - C  - Set coroutine BRK handler
+002c37 fe/da37: e1 da                   .....                 .dd2    doCOCBH & $ffff   ;COCBH - E - cancel break handler
+002c39 fe/da39: 80 dd                   .....                 .dd2    doCORTB & $ffff   ;CORTB - 10 - ???
+002c3b fe/da3b: 11 dc                   .....                 .dd2    doCOIAM & $ffff   ;COIAM - 12 - Return current handle
+002c3d fe/da3d: ae db                   .....                 .dd2    doCONAME & $ffff  ;CONAME - 14 - ???
+002c3f fe/da3f: b3 db                   .....                 .dd2    doCOINIT & $ffff  ;COINIT - 16 - initialise language
+002c41 fe/da41: b8 db                   .....                 .dd2    doCOKILL & $ffff  ;COKILL - 18 - kill language
+002c43 fe/da43: a9 db                   .....                 .dd2    doCOHELP & $ffff  ;COHELP - 1A - language help
+002c45 fe/da45: 47 da                   .....                 .dd2    doCoMOD & $ffff   ;COMOD - 1C - ???

                                               ********************************************************************************
                                               * __CO 1C - COMOD - ???                                                        *
                                               *                                                                              *
                                               * Given an address in a module make a coroutine from the module's entry point  *
                                               *                                                                              *
                                               * Entry:                                                                       *
                                               *    BHA  contains an address somewhere within a module                        *
                                               *                                                                              *
                                               * QRY Looks to do OPRMI then drops through to COCRE                            *
                                               ********************************************************************************
                                                               .rwid   longm,longx
+002c47 fe/da47: a2 00 00     ??mxd??? e @T... doCoMOD         ldx     #$0000
+002c4a fe/da4a: 9b           n?mxd?Z? e .....                 txy
+002c4b fe/da4b: 02 34        ??mxd??? e .....                 cop     COP_34_OPRMI      ;get entry address
+002c4d fe/da4d: b0 73        ??mxd??? e .....                 bcs     @retsec
                                               ********************************************************************************
                                               * __CO 02 - COCRE - Create a coroutine                                         *
                                               *                                                                              *
                                               * This sets up the initial execution address of a new coroutine and declares   *
                                               * its stack size.                                                              *
                                               * Entry:                                                                       *
                                               *    BHA Entry address of coroutine                                            *
                                               *    D   Desired size of coroutine's stack                                     *
                                               *    X   COCRE                                                                 *
                                               * Exit:                                                                        *
                                               *    C=0 Coroutine created successfully                                        *
                                               *    Y   Handle to be used in subsequent calls                                 *
                                               * or C=1 Coroutine could not be created                                        *
                                               *                                                                              *
                                               * Notes: The stack size must be a non-zero multiple of 256 bytes - &200 is a   *
                                               * good size                                                                    *
                                               ********************************************************************************
+002c4f fe/da4f: 0b           ??mxd??c e .T... doCOCRE         phd
+002c50 fe/da50: 8b           ??mxd??c e .....                 phb
+002c51 fe/da51: 48           ??mxd??c e .....                 pha
+002c52 fe/da52: 7b           ??mxd??c e .....                 tdc
+002c53 fe/da53: a2 18 00     ??mxd??c e .....                 ldx     #__MMAZB          ;allocate the stack
+002c56 fe/da56: 22 8c ff 00  n?mxd?zc e .....                 jsl     __MM
+002c5a fe/da5a: b0 63        ??mxd??? e .....                 bcs     @retsecpop        ;stack alloc failed
+002c5c fe/da5c: a9 06 00     ??mxd??c e .....                 lda     #HND_type_6_CBCO
+002c5f fe/da5f: 20 01 ce     n?mxd?zc e .....                 jsr     obtainFreeBlock   ;alloc a coroutine block??? QRY
+002c62 fe/da62: b0 54        ??mxd??? e .....                 bcs     @freestackretsec
+002c64 fe/da64: da           ??mxd??c e .....                 phx
+002c65 fe/da65: 2b           ??mxd??c e .....                 pld
+002c66 fe/da66: 84 06        ??mxd??c e .....                 sty     CO_off_DP         ;stash handle in DP slot QRY
+002c68 fe/da68: 64 02        ??mxd??c e .....                 stz     CO_off_Parent
+002c6a fe/da6a: 64 04        ??mxd??c e .....                 stz     CO_off_flags
+002c6c fe/da6c: da           ??mxd??c e .....                 phx                       ;stack X - pointer to coroutine block
                                               ; stack contents
                                               ; +6    D on entry (stack size)
                                               ; +3    BHA address of coroutine start
                                               ; +1    B0 pointer to corouting block
+002c6d fe/da6d: a2 12 00     ??mxd??c e .....                 ldx     #__MMTOP          ;get top of stack
+002c70 fe/da70: 22 8c ff 00  n?mxd?zc e .....                 jsl     __MM
+002c74 fe/da74: 38           ??mxd??? e .....                 sec                       ;assume in B0 (alloc'd with MMAZB)
+002c75 fe/da75: e9 04 00     ??mxd??C e .....                 sbc     #$0004            ;subtract 4 to point at 3rd last byte
+002c78 fe/da78: aa           ??mxd??? e .....                 tax                       ;put that in X
+002c79 fe/da79: a3 03        ??mxd??? e .....                 lda     $03,S             ;get BHA on entry
+002c7b fe/da7b: 9f 00 00 00  ??mxd??? e .....                 stal    f:$000000,x
+002c7f fe/da7f: a3 05        ??mxd??? e .....                 lda     $05,S
+002c81 fe/da81: 29 ff 00     ??mxd??? e .....                 and     #$00ff
+002c84 fe/da84: 9f 02 00 00  n?mxd??? e .....                 stal    f:$000002,x       ;store bank - TODO: this looks like it may be a bug - it stores a 0 outside our pool!
+002c88 fe/da88: 8a           n?mxd??? e .....                 txa                       ;put X in A
+002c89 fe/da89: 3a           ??mxd??? e .....                 dec     A                 ;decrement so it's suitable as a stack pointer
+002c8a fe/da8a: fa           ??mxd??? e .....                 plx                       ;X = block addr
+002c8b fe/da8b: 7a           ??mxd??? e .....                 ply                       ;Y = HA on entry
+002c8c fe/da8c: ab           ??mxd??? e .....                 plb                       ;B = B on entry
                                               ; stack is now
                                               ; +1 is D on entry
+002c8d fe/da8d: da           ??mxd??? e .....                 phx                       ;block addr
+002c8e fe/da8e: da           ??mxd??? e .....                 phx                       ;block addr
+002c8f fe/da8f: 2b           ??mxd??? e .....                 pld
+002c90 fe/da90: 0b           ??mxd??? e .....                 phd                       ;into D
                                               ; stack is now
                                               ; +5  D on entry
                                               ; +3  block addr
                                               ; +1  block addr
+002c91 fe/da91: ba           ??mxd??? e .....                 tsx                       ;X=caller's stack
+002c92 fe/da92: 1b           ??mxd??? e .....                 tcs                       ;set S = coroutine stack
                                               ; coroutine stack is now
                                               ; +1      BHA of coroutine start addr
+002c93 fe/da93: 0b           ??mxd??? e .....                 phd
+002c94 fe/da94: 8b           ??mxd??? e .....                 phb
+002c95 fe/da95: 88           ??mxd??? e .....                 dey
+002c96 fe/da96: 5a           ??mxd??? e .....                 phy
+002c97 fe/da97: 08           ??mxd??? e .....                 php
                                               ; coroutine stack is now
                                               ; 
                                               ; +7   BHA on entry
                                               ; +5   D block address
                                               ; +4   B on entry
                                               ; +2   HA-1 on entry
                                               ; +1   current flags
+002c98 fe/da98: 3b           ??mxd??? e .....                 tsc                       ;coroutine stack pointer into A
+002c99 fe/da99: 9a           ??mxd??? e .....                 txs                       ;back to caller's stack
+002c9a fe/da9a: fa           ??mxd??? e .....                 plx                       ;X = block pointer
+002c9b fe/da9b: 9f 00 00 00  ??mxd??? e .....                 stal    f:CO_off_stack,x  ;store coroutine start stack
+002c9f fe/da9f: 20 a1 ce     ??mxd??? e .....                 jsr     allocHandleQRY
+002ca2 fe/daa2: b0 0b        ??mxd??? e .....                 bcs     @nohandles
+002ca4 fe/daa4: a9 00 00     ??mxd??c e .....                 lda     #$0000
+002ca7 fe/daa7: 9f 06 00 00  n?mxd?Zc e .....                 stal    f:CO_off_DP,x     ;zero the DP handle (used to stash stack handle)
+002cab fe/daab: 68           n?mxd?Zc e .....                 pla
+002cac fe/daac: 2b           ??mxd??c e .....                 pld
+002cad fe/daad: 18           ??mxd??c e .....                 clc
+002cae fe/daae: 60           ??mxd??c e ...#.                 rts

+002caf fe/daaf: bf 06 00 00  ??mxd??C e ....> @nohandles      ldal    f:CO_off_DP,x     ;get the handle for the stack we stashed earlier
+002cb3 fe/dab3: 48           ??mxd??C e .....                 pha                       ;push it
+002cb4 fe/dab4: 20 da cd     ??mxd??C e .....                 jsr     returnXToFreeList ;free the block QRY?
+002cb7 fe/dab7: 7a           ??mxd??? e .....                 ply                       ;get back stack handle
+002cb8 fe/dab8: a2 02 00     ??mxd??? e ....> @freestackretsec ldx    #__MMFP
+002cbb fe/dabb: 22 8c ff 00  n?mxd?z? e .....                 jsl     __MM
+002cbf fe/dabf: 68           ??mxd??? e ....> @retsecpop      pla
+002cc0 fe/dac0: ab           ??mxd??? e .....                 plb
+002cc1 fe/dac1: 2b           ??mxd??? e .....                 pld
+002cc2 fe/dac2: 38           ??mxd??? e ....> @retsec         sec
+002cc3 fe/dac3: 60           ??mxd??C e ...#.                 rts

                                               ********************************************************************************
                                               * COENV - Set a coroutine's environment                                        *
                                               * This specifies the direct page to be used whenever a coroutine is entered.   *
                                               * If the coroutine is to use any shared direct page workspace (as distinct     *
                                               * from direct page workspace allocated by itself, this should be called        *
                                               * immediately after a coroutine is created, or at least before it is called    *
                                               * for the first time.                                                          *
                                               *                                                                              *
                                               * Entry:                                                                       *
                                               *    Y    Handle                                                               *
                                               *    D    Direct page to be used by coroutine                                  *
                                               *    X    COENV                                                                *
                                               * Exit:                                                                        *
                                               *    C=0  Environment set correctly                                            *
                                               * or C=1  Environment could not be set                                         *
                                               *                                                                              *
                                               * TODO: Documentation - Y can be 0 in which case this sets for the current     *
                                               * coroutine                                                                    *
                                               ********************************************************************************
+002cc4 fe/dac4: 0b           ??mxd??? e @T... doCOENV         phd
+002cc5 fe/dac5: f4 00 ff     ??mxd??? e .....                 pea     EXSYS
+002cc8 fe/dac8: 2b           ??mxd??? e .....                 pld
+002cc9 fe/dac9: a5 10        ??mxd??? e .....                 lda     <EXSYS_CUR_COROUTINE ;if no handle default to one at offset $10 in table
+002ccb fe/dacb: c0 00 00     ??mxd??? e .....                 cpy     #$0000
+002cce fe/dace: f0 02        ??mxd??? e .....                 beq     @yeq0
+002cd0 fe/dad0: b7 02        ??mxd?z? e .....                 lda     [<EXSYS_HANDLEBLOCK_LONGPTR],y ;coroutine handle's address from the handleblock
+002cd2 fe/dad2: 5b           ??mxd??? e ....> @yeq0           tcd                       ;put it in DP
+002cd3 fe/dad3: a3 01        ??mxd??? e .....                 lda     $01,S             ;get pushed DP parameter
+002cd5 fe/dad5: 85 06        ??mxd??? e .....                 sta     CO_off_DP         ;store in the block DP offset
+002cd7 fe/dad7: a5 04        ??mxd??? e .....                 lda     CO_off_flags
+002cd9 fe/dad9: 09 40 00     ??mxd??? e .....                 ora     #COFLAG_HASDP
+002cdc fe/dadc: 85 04        ??mxd?z? e .....                 sta     CO_off_flags      ;set flag to indicate we want DP setting on subsequent continues
+002cde fe/dade: 2b           ??mxd?z? e .....                 pld
+002cdf fe/dadf: 18           ??mxd??? e .....                 clc
+002ce0 fe/dae0: 60           ??mxd??c e ...#.                 rts

                                               ********************************************************************************
                                               * __CO E - COCBH - Cancel break haniUer Tor Ibis coroutine                     *
                                               *                                                                              *
                                               * This call resets the break handler for the current coroutine to a 'no        *
                                               * handler' state (as when the coroutine is created). If a BRK occurs in a      *
                                               * routine with no BRK handler, the operating system will attempt to use its    *
                                               * parent's handler. This carries on up the hierarchy until a valid BRK handler *
                                               * is found or the top level is reached. In the latter case, an OPERR COP       *
                                               * instruction is executed.                                                     *
                                               *                                                                              *
                                               * Entry:                                                                       *
                                               *    X   COCBH                                                                 *
                                               * Exit:                                                                        *
                                               *    B,D Preserved                                                             *
                                               *    C=0 Break handler was cancelled                                           *
                                               *    BHA Address of old break handler                                          *
                                               * or C=1 There was no break handler to cancel                                  *
                                               ********************************************************************************
+002ce1 fe/dae1: af 10 ff 00  ??mxd??? e @T... doCOCBH         ldal    f:EXSYS_CUR_COROUTINE
+002ce5 fe/dae5: 5b           ??mxd??? e .....                 tcd
+002ce6 fe/dae6: a9 20 00     ??mxd??? e .....                 lda     #COFLAG_hasBRKhandler
+002ce9 fe/dae9: 14 04        n?mxd?z? e .....                 trb     CO_off_flags
+002ceb fe/daeb: f0 17        n?mxd??? e .....                 beq     LFEDB04
+002ced fe/daed: a6 08        n?mxd?z? e .....                 ldx     CO_off_8_BRKBLOCK
+002cef fe/daef: e2 20        ??mxd??? e .....                 sep     #$20
                                                               .rwid   shortm
+002cf1 fe/daf1: bf 02 00 00  ??Mxd??? e .....                 ldal    f:$000002,x
+002cf5 fe/daf5: 83 03        ??Mxd??? e .....                 sta     $03,S             ;get K of old break handler
+002cf7 fe/daf7: c2 20        ??Mxd??? e .....                 rep     #$20
                                                               .rwid   longm
+002cf9 fe/daf9: bf 00 00 00  ??mxd??? e .....                 ldal    f:$000000,x       ;get HA of old break handler
+002cfd fe/dafd: 48           ??mxd??? e .....                 pha
+002cfe fe/dafe: 20 da cd     ??mxd??? e .....                 jsr     returnXToFreeList
+002d01 fe/db01: 68           ??mxd??? e .....                 pla
+002d02 fe/db02: 18           ??mxd??? e .....                 clc
+002d03 fe/db03: 60           ??mxd??c e ...#.                 rts

+002d04 fe/db04: 38           n?mxd?Z? e ....> LFEDB04         sec
+002d05 fe/db05: 60           n?mxd?ZC e ...#.                 rts

                                               ********************************************************************************
                                               * __CO C - COBRK - Set the coroutine break handler address                     *
                                               *                                                                              *
                                               * This routine sets the address of the routine to be called when a BRK is      *
                                               * encountered within the current coroutine.                                    *
                                               *                                                                              *
                                               * Entry:                                                                       *
                                               *    BHA BRK handler address X COBRK                                           *
                                               * Exit:                                                                        *
                                               *    C=0 Address was set OK                                                    *
                                               * or C=1 Address could not be set                                              *
                                               ********************************************************************************
+002d06 fe/db06: 48           ??mxd??? e @T... doCOBRK         pha
+002d07 fe/db07: f4 00 ff     ??mxd??? e .....                 pea     EXSYS
+002d0a fe/db0a: 2b           ??mxd??? e .....                 pld
+002d0b fe/db0b: d4 10        ??mxd??? e .....                 pei     (<EXSYS_CUR_COROUTINE)
+002d0d fe/db0d: 2b           ??mxd??? e .....                 pld
+002d0e fe/db0e: a5 04        ??mxd??? e .....                 lda     CO_off_flags
+002d10 fe/db10: 29 20 00     ??mxd??? e .....                 and     #COFLAG_hasBRKhandler
+002d13 fe/db13: f0 04        n?mxd??? e .....                 beq     LFEDB19
+002d15 fe/db15: a6 08        n?mxd?z? e .....                 ldx     CO_off_8_BRKBLOCK
+002d17 fe/db17: 80 11        ??mxd??? e ...#.                 bra     LFEDB2A

+002d19 fe/db19: a9 08 00     n?mxd?Z? e ....> LFEDB19         lda     #HND_type_8_CBCO2
+002d1c fe/db1c: 20 01 ce     n?mxd?z? e .....                 jsr     obtainFreeBlock
+002d1f fe/db1f: b0 14        ??mxd??? e .....                 bcs     LFEDB35
+002d21 fe/db21: a5 04        ??mxd??c e .....                 lda     CO_off_flags
+002d23 fe/db23: 09 20 00     ??mxd??c e .....                 ora     #COFLAG_hasBRKhandler
+002d26 fe/db26: 85 04        ??mxd?zc e .....                 sta     CO_off_flags
+002d28 fe/db28: 86 08        ??mxd?zc e .....                 stx     CO_off_8_BRKBLOCK
+002d2a fe/db2a: 8a           ??mxd??? e ....> LFEDB2A         txa
+002d2b fe/db2b: 5b           ??mxd??? e .....                 tcd
                                               ; this is the block pointed to by 8 - not sure what goes in it!
+002d2c fe/db2c: a3 04        ??mxd??? e .....                 lda     $04,S
+002d2e fe/db2e: 85 01        ??mxd??? e .....                 sta     $01
+002d30 fe/db30: 68           ??mxd??? e .....                 pla
+002d31 fe/db31: 85 00        ??mxd??? e .....                 sta     $00
+002d33 fe/db33: 18           ??mxd??? e .....                 clc
+002d34 fe/db34: 60           ??mxd??c e ...#.                 rts

+002d35 fe/db35: 68           ??mxd??C e ....> LFEDB35         pla
+002d36 fe/db36: 60           ??mxd??C e ...#.                 rts

                                               ********************************************************************************
                                               * __CO 6 - CODEL- Delete a coroutine                                           *
                                               *                                                                              *
                                               * This deletes an existing coroutine.                                          *
                                               *                                                                              *
                                               * Entry:                                                                       *
                                               *    Y    Handle                                                               *
                                               *    X    CODEL                                                                *
                                               * Exit:                                                                        *
                                               *    B,D  Preserved                                                            *
                                               *    C=0 Coroutine was deleted                                                 *
                                               * or C=l Coroutine was not deleted                                             *
                                               ********************************************************************************
+002d37 fe/db37: c2 70        ??mxd??? e @T... doCODEL         rep     #$70              ; clear V 
+002d39 fe/db39: 8b           ??mxd??? e ....> coDes2          phb
+002d3a fe/db3a: 0b           ??mxd??? e .....                 phd
+002d3b fe/db3b: f4 00 ff     ??mxd??? e .....                 pea     MM_HANDLE_TAB
+002d3e fe/db3e: 2b           ??mxd??? e .....                 pld
+002d3f fe/db3f: b7 02        ??mxd??? e .....                 lda     [$02],y           ;get coroutine block from hanbdle
+002d41 fe/db41: 48           ??mxd??? e .....                 pha
+002d42 fe/db42: 2b           ??mxd??? e .....                 pld                       ;coroutine block into D
+002d43 fe/db43: 70 0f        ??mxd??? e .....                 bvs     LFEDB54           ;if V set skip parent check
+002d45 fe/db45: 38           ?vmxd??? e .....                 sec
+002d46 fe/db46: a5 0b        ?vmxd??C e .....                 lda     $0b
+002d48 fe/db48: 29 ff 00     ?vmxd??C e .....                 and     #$00ff
+002d4b fe/db4b: 49 06 00     nvmxd??C e .....                 eor     #$0006
+002d4e fe/db4e: d0 52        ?vmxd??C e .....                 bne     @ret
+002d50 fe/db50: a5 02        ?vmxd?ZC e .....                 lda     $02
+002d52 fe/db52: d0 4e        ?vmxd??C e .....                 bne     @ret
+002d54 fe/db54: 0b           ??mxd??? e ....> LFEDB54         phd
+002d55 fe/db55: a5 00        ??mxd??? e .....                 lda     $00
+002d57 fe/db57: f4 00 00     ??mxd??? e .....                 pea     $0000
+002d5a fe/db5a: ab           ??mxd??? e .....                 plb
+002d5b fe/db5b: ab           ??mxd??? e .....                 plb
+002d5c fe/db5c: a2 14 00     ??mxd??? e .....                 ldx     #__MMFND
+002d5f fe/db5f: 22 8c ff 00  n?mxd?z? e .....                 jsl     __MM
+002d63 fe/db63: 90 03        ??mxd??? e .....                 bcc     @ok
+002d65 fe/db65: 82 80 01     ??mxd??C e ...#.                 brl     syserrCoRoutineError

+002d68 fe/db68: 5a           ??mxd??c e ....> @ok             phy
+002d69 fe/db69: a2 12 00     ??mxd??c e .....                 ldx     #__MMTOP
+002d6c fe/db6c: 22 8c ff 00  n?mxd?zc e .....                 jsl     __MM
+002d70 fe/db70: 38           ??mxd??? e .....                 sec
+002d71 fe/db71: e9 04 00     ??mxd??C e .....                 sbc     #$0004
+002d74 fe/db74: aa           ??mxd??? e .....                 tax
+002d75 fe/db75: ca           ??mxd??? e .....                 dex
+002d76 fe/db76: ca           ??mxd??? e .....                 dex
+002d77 fe/db77: bf 00 00 00  ??mxd??? e .....                 ldal    f:$000000,x
+002d7b fe/db7b: c3 03        ??mxd??? e .....                 cmp     $03,S
+002d7d fe/db7d: f0 03        ??mxd??? e .....                 beq     LFEDB82
+002d7f fe/db7f: 82 66 01     ??mxd?z? e ...#.                 brl     syserrCoRoutineError

+002d82 fe/db82: 7a           ??mxd?Z? e ....> LFEDB82         ply
+002d83 fe/db83: a2 02 00     ??mxd??? e .....                 ldx     #__MMFP
+002d86 fe/db86: 22 8c ff 00  n?mxd?z? e .....                 jsl     __MM
+002d8a fe/db8a: fa           ??mxd??? e .....                 plx
+002d8b fe/db8b: 20 1e cf     ??mxd??? e .....                 jsr     freeHandlePointerX
+002d8e fe/db8e: 8a           ??mxd??? e .....                 txa
+002d8f fe/db8f: 5b           ??mxd??? e .....                 tcd
+002d90 fe/db90: d4 08        ??mxd??? e .....                 pei     (DPCOP_DP)
+002d92 fe/db92: d4 03        ??mxd??? e .....                 pei     (DPCOP_X)
+002d94 fe/db94: 20 da cd     ??mxd??? e .....                 jsr     returnXToFreeList
+002d97 fe/db97: 68           ??mxd??? e .....                 pla
+002d98 fe/db98: fa           ??mxd??? e .....                 plx
+002d99 fe/db99: 89 00 20     ??mxd??? e .....                 bit     #$2000
+002d9c fe/db9c: f0 03        ??mxd??? e .....                 beq     @clcret
+002d9e fe/db9e: 20 da cd     ??mxd?z? e .....                 jsr     returnXToFreeList
+002da1 fe/dba1: 18           ??mxd??? e ....> @clcret         clc
+002da2 fe/dba2: 2b           ??mxd??? e ....> @ret            pld
+002da3 fe/dba3: ab           ??mxd??? e .....                 plb
+002da4 fe/dba4: 60           ??mxd??? e ...#.                 rts

                                               ********************************************************************************
                                               * __CO 8 - CODES - Destroy coroutine                                           *
                                               *                                                                              *
                                               * This acts as CODEL, but does not check that the routine to be deleted has a  *
                                               * parent. The useof this call is to delete a routine in which a BRK (error     *
                                               * condition) has occurred, and which has no BRK handler of its own.            *
                                               *                                                                              *
                                               * Entry:                                                                       *
                                               *    Y    Handle                                                               *
                                               *    X    CODES                                                                *
                                               * Exit:                                                                        *
                                               *    B,D  Preserved                                                            *
                                               *    C=0  Coroutine was deleted                                                *
                                               * or C=1  Coroutine could not be deleted                                       *
                                               ********************************************************************************
+002da5 fe/dba5: e2 40        ??mxd??? e @T... doCODES         sep     #$40
+002da7 fe/dba7: 80 90        ?Vmxd??? e ...#.                 bra     coDes2

                                               ********************************************************************************
                                               * __CO 1A - COHELP - Language help                                             *
                                               *                                                                              *
                                               * These calls relate to the language entry point reason codes. The CO reason   *
                                               * codes call a given coroutine at its entry point as if it were a language,    *
                                               * with the appropriate reason code in X. The entry is called as a subroutine,  *
                                               * not a coroutine, so is expected to return with an RTL.                       *
                                               *                                                                              *
                                               * COHELP calls the coroutine with X=6                                          *
                                               *                                                                              *
                                               * Entry:                                                                       *
                                               *    Y    Handleof coroutine to be catted                                      *
                                               *    BHA  Arguments                                                            *
                                               * Exit:      B,D Preserved                                                     *
                                               *    BHA,X,Y Results from language entry                                       *
                                               ********************************************************************************
+002da9 fe/dba9: a2 06 00     ??mxd??? e @T... doCOHELP        ldx     #$0006
+002dac fe/dbac: 80 0d        n?mxd?z? e ...#.                 bra     coLangFn

                                               ********************************************************************************
                                               * __CO 14 - CONAME - ???                                                       *
                                               *                                                                              *
                                               * These calls relate to the language entry point reason codes. The CO reason   *
                                               * codes call a given coroutine at its entry point as if it were a language,    *
                                               * with the appropriate reason code in X. The entry is called as a subroutine,  *
                                               * not a coroutine, so is expected to return with an RTL.                       *
                                               *                                                                              *
                                               * COHELP calls the coroutine with X=0                                          *
                                               *                                                                              *
                                               * Entry:                                                                       *
                                               *    Y    Handleof coroutine to be catted                                      *
                                               *    BHA  Arguments                                                            *
                                               * Exit:      B,D Preserved                                                     *
                                               *    BHA,X,Y Results from language entry                                       *
                                               ********************************************************************************
+002dae fe/dbae: a2 00 00     ??mxd??? e @T... doCONAME        ldx     #$0000
+002db1 fe/dbb1: 80 08        n?mxd?Z? e ...#.                 bra     coLangFn

                                               ********************************************************************************
                                               * __CO 16 - COINIT - initialise language                                       *
                                               *                                                                              *
                                               * These calls relate to the language entry point reason codes. The CO reason   *
                                               * codes call a given coroutine at its entry point as if it were a language,    *
                                               * with the appropriate reason code in X. The entry is called as a subroutine,  *
                                               * not a coroutine, so is expected to return with an RTL.                       *
                                               *                                                                              *
                                               * COINIT calls the coroutine with X=2                                          *
                                               *                                                                              *
                                               * Entry:                                                                       *
                                               *    Y    Handleof coroutine to be catted                                      *
                                               *    BHA  Arguments                                                            *
                                               * Exit:      B,D Preserved                                                     *
                                               *    BHA,X,Y Results from language entry                                       *
                                               ********************************************************************************
+002db3 fe/dbb3: a2 02 00     ??mxd??? e @T... doCOINIT        ldx     #$0002
+002db6 fe/dbb6: 80 03        n?mxd?z? e ...#.                 bra     coLangFn

                                               ********************************************************************************
                                               * __CO 18 - COKILL - kill a language                                           *
                                               *                                                                              *
                                               * These calls relate to the language entry point reason codes. The CO reason   *
                                               * codes call a given coroutine at its entry point as if it were a language,    *
                                               * with the appropriate reason code in X. The entry is called as a subroutine,  *
                                               * not a coroutine, so is expected to return with an RTL.                       *
                                               *                                                                              *
                                               * COKILL calls the coroutine with X=4                                          *
                                               *                                                                              *
                                               * Entry:                                                                       *
                                               *    Y    Handleof coroutine to be catted                                      *
                                               *    BHA  Arguments                                                            *
                                               * Exit:      B,D Preserved                                                     *
                                               *    BHA,X,Y Results from language entry                                       *
                                               ********************************************************************************
+002db8 fe/dbb8: a2 04 00     ??mxd??? e @T... doCOKILL        ldx     #$0004
+002dbb fe/dbbb: 4b           n?mxd??? e ....> coLangFn        phk
+002dbc fe/dbbc: 62 50 00     n?mxd??? e .....                 per     LFEDC10-1
+002dbf fe/dbbf: 4b           n?mxd??? e .....                 phk
+002dc0 fe/dbc0: 0b           n?mxd??? e .....                 phd
+002dc1 fe/dbc1: 08           n?mxd??? e .....                 php
+002dc2 fe/dbc2: 8b           n?mxd??? e .....                 phb
+002dc3 fe/dbc3: 48           n?mxd??? e .....                 pha
+002dc4 fe/dbc4: da           n?mxd??? e .....                 phx
+002dc5 fe/dbc5: f4 00 ff     n?mxd??? e .....                 pea     $ff00
+002dc8 fe/dbc8: 2b           n?mxd??? e .....                 pld
+002dc9 fe/dbc9: b7 02        ??mxd??? e .....                 lda     [DPCOP_Y+1],y
+002dcb fe/dbcb: 48           ??mxd??? e .....                 pha
+002dcc fe/dbcc: 2b           ??mxd??? e .....                 pld
+002dcd fe/dbcd: d4 06        ??mxd??? e .....                 pei     (DPCOP_AH+1)
+002dcf fe/dbcf: a5 00        ??mxd??? e .....                 lda     $00
+002dd1 fe/dbd1: 0b           ??mxd??? e .....                 phd
+002dd2 fe/dbd2: f4 00 00     ??mxd??? e .....                 pea     $0000
+002dd5 fe/dbd5: ab           ??mxd??? e .....                 plb
+002dd6 fe/dbd6: ab           ??mxd??? e .....                 plb
+002dd7 fe/dbd7: a2 14 00     ??mxd??? e .....                 ldx     #$0014
+002dda fe/dbda: 22 8c ff 00  n?mxd?z? e .....                 jsl     __MM
+002dde fe/dbde: 90 03        ??mxd??? e .....                 bcc     LFEDBE3
+002de0 fe/dbe0: 82 05 01     ??mxd??C e ...#.                 brl     syserrCoRoutineError

+002de3 fe/dbe3: a2 12 00     ??mxd??c e ....> LFEDBE3         ldx     #$0012
+002de6 fe/dbe6: 22 8c ff 00  n?mxd?zc e .....                 jsl     __MM
+002dea fe/dbea: 38           ??mxd??? e .....                 sec
+002deb fe/dbeb: e9 04 00     ??mxd??C e .....                 sbc     #$0004
+002dee fe/dbee: aa           ??mxd??? e .....                 tax
+002def fe/dbef: ca           ??mxd??? e .....                 dex
+002df0 fe/dbf0: ca           ??mxd??? e .....                 dex
+002df1 fe/dbf1: 68           ??mxd??? e .....                 pla
+002df2 fe/dbf2: df 00 00 00  ??mxd??? e .....                 cmpl    f:$000000,x
+002df6 fe/dbf6: f0 03        ??mxd??? e .....                 beq     LFEDBFB
+002df8 fe/dbf8: 82 ed 00     ??mxd?z? e ...#.                 brl     syserrCoRoutineError

+002dfb fe/dbfb: e2 20        ??mxd?Z? e ....> LFEDBFB         sep     #$20
                                                               .rwid   shortm
+002dfd fe/dbfd: bf 04 00 00  ??Mxd?Z? e .....                 ldal    f:DPCOP_X+1,x
+002e01 fe/dc01: 83 0b        ??Mxd??? e .....                 sta     $0b,S
+002e03 fe/dc03: c2 20        ??Mxd??? e .....                 rep     #$20
                                                               .rwid   longm
+002e05 fe/dc05: bf 02 00 00  ??mxd??? e .....                 ldal    f:DPCOP_Y+1,x
+002e09 fe/dc09: 83 09        ??mxd??? e .....                 sta     $09,S
+002e0b fe/dc0b: 2b           ??mxd??? e .....                 pld
+002e0c fe/dc0c: fa           ??mxd??? e .....                 plx
+002e0d fe/dc0d: 68           ??mxd??? e .....                 pla
+002e0e fe/dc0e: ab           ??mxd??? e .....                 plb
+002e0f fe/dc0f: 40           ??mxd??? e ...#.                 rti

+002e10 fe/dc10: 60                      ..... LFEDC10         .dd1    $60

                                               ********************************************************************************
                                               * 12 - COIAM - Return handle                                                   *
                                               *                                                                              *
                                               * This call returns the handle of the current coroutine, ie the coroutine from *
                                               * which the call to COIAM is made.                                             *
                                               *                                                                              *
                                               * Entry:                                                                       *
                                               *    X    COIAM                                                                *
                                               * Exit:                                                                        *
                                               *    B,D  Preserved                                                            *
                                               *    C=0  The handle was found                                                 *
                                               *    Y    The current coroutine's handle                                       *
                                               *    C=l  No handle could be found for the caller                              *
                                               ********************************************************************************
+002e11 fe/dc11: f4 00 ff     ??mxd??? e @T... doCOIAM         pea     EXSYS
+002e14 fe/dc14: 2b           ??mxd??? e .....                 pld
+002e15 fe/dc15: d4 10        ??mxd??? e .....                 pei     (<EXSYS_CUR_COROUTINE)
+002e17 fe/dc17: fa           ??mxd??? e .....                 plx
+002e18 fe/dc18: 4c 40 cf     ??mxd??? e ...#.                 jmp     findHandleByAddr

                                               ********************************************************************************
                                               * CRS - co-routine call sibling QRY                                            *
                                               ********************************************************************************
                                                               .rwid   shortm,shortx
+002e1b fe/dc1b: 08           ???????? e @T... default__CRS    php
+002e1c fe/dc1c: c2 30        ???????? e .....                 rep     #$30
                                                               .rwid   longm,longx
+002e1e fe/dc1e: 8f 05 ff 00  ??mx???? e .....                 stal    f:EXSYS_CO_A_SAVE
+002e22 fe/dc22: 3b           ??mx???? e .....                 tsc
+002e23 fe/dc23: 0b           ??mx???? e .....                 phd
+002e24 fe/dc24: f4 00 ff     ??mx???? e .....                 pea     $ff00
+002e27 fe/dc27: 2b           ??mx???? e .....                 pld
+002e28 fe/dc28: 87 10        ??mx???? e .....                 sta     [$10]
+002e2a fe/dc2a: b7 02        ??mx???? e .....                 lda     [DPCOP_Y+1],y
+002e2c fe/dc2c: d4 10        ??mx???? e .....                 pei     ($10)
+002e2e fe/dc2e: 2b           ??mx???? e .....                 pld
+002e2f fe/dc2f: a4 02        ??mx???? e .....                 ldy     DPCOP_Y+1
+002e31 fe/dc31: 64 02        ??mx???? e .....                 stz     DPCOP_Y+1
+002e33 fe/dc33: 80 26        ??mx???? e ...#.                 bra     LFEDC5B

                                                               .rwid   shortm,shortx
+002e35 fe/dc35: c2 30        n?MXdIzc e ....> LFEDC35         rep     #$30
                                                               .rwid   longm,longx
+002e37 fe/dc37: 8f 05 ff 00  n?mxdIzc e .....                 stal    f:EXSYS_CO_A_SAVE
+002e3b fe/dc3b: 3b           n?mxdIzc e .....                 tsc
+002e3c fe/dc3c: 48           ??mxdI?c e .....                 pha
+002e3d fe/dc3d: f4 00 ff     ??mxdI?c e .....                 pea     $ff00
+002e40 fe/dc40: 2b           ??mxdI?c e .....                 pld
+002e41 fe/dc41: b7 02        ??mxdI?c e .....                 lda     [DPCOP_Y+1],y
+002e43 fe/dc43: a0 00 00     ??mxdI?c e .....                 ldy     #$0000
+002e46 fe/dc46: 80 13        n?mxdIZc e ...#.                 bra     LFEDC5B

                                               ********************************************************************************
                                               * CCO - Call a Co-routine                                                      *
                                               *                                                                              *
                                               * This is used to call a coroutine from its creator (parent). On the first     *
                                               * call the entry address given in the COCRE call is used. Subsequently, the    *
                                               * address after the last CWT executed by the routine is used                   *
                                               *                                                                              *
                                               * Entry:                                                                       *
                                               *    Y       Handle of child                                                   *
                                               *    BHA,X,C Arguments to child coroutine                                      *
                                               * Exit:                                                                        *
                                               *    BHA,X,C Results from child coroutine                                      *
                                               *    B,D     Preserved                                                         *
                                               *                                                                              *
                                               * Note: C is the C flag.                                                       *
                                               ********************************************************************************
                                                               .rwid   shortm,shortx
+002e48 fe/dc48: 08           ????d??? e @T... default__CCO    php
+002e49 fe/dc49: 0b           ????d??? e .....                 phd
+002e4a fe/dc4a: c2 30        ????d??? e .....                 rep     #$30
                                                               .rwid   longm,longx
+002e4c fe/dc4c: 8f 05 ff 00  ??mxd??? e .....                 stal    f:EXSYS_CO_A_SAVE ;we need to preserve A not on the stack as the stack will get switched
+002e50 fe/dc50: f4 00 ff     ??mxd??? e .....                 pea     EXSYS
+002e53 fe/dc53: 2b           ??mxd??? e .....                 pld
+002e54 fe/dc54: 3b           ??mxd??? e .....                 tsc
+002e55 fe/dc55: 87 10        ??mxd??? e .....                 sta     [<EXSYS_CUR_COROUTINE] ;store current stack at offset 0 in our block
+002e57 fe/dc57: b7 02        ??mxd??? e .....                 lda     [<EXSYS_HANDLEBLOCK_LONGPTR],y
+002e59 fe/dc59: a4 10        ??mxd??? e .....                 ldy     <EXSYS_CUR_COROUTINE
+002e5b fe/dc5b: 5b           ??mx???? e ....> LFEDC5B         tcd
+002e5c fe/dc5c: 8f 10 ff 00  ??mx???? e .....                 stal    f:EXSYS_CUR_COROUTINE
+002e60 fe/dc60: a5 0b        ??mx???? e .....                 lda     $0b
+002e62 fe/dc62: 29 ff 00     ??mx???? e .....                 and     #$00ff
+002e65 fe/dc65: 49 06 00     n?mx???? e .....                 eor     #$0006
+002e68 fe/dc68: f0 1b        ??mx???? e .....                 beq     LFEDC85
+002e6a fe/dc6a: 00 00        ??mx??z? e ...#.                 brk     $00

+002e6c fe/dc6c: 49 6e 76 61+            .....                 .zstr   “Invalid coroutine handle”

+002e85 fe/dc85: a5 02        ??mx??Z? e ....> LFEDC85         lda     CO_off_Parent
+002e87 fe/dc87: f0 03        ??mx???? e .....                 beq     LFEDC8C
+002e89 fe/dc89: 82 5c 00     ??mx??z? e ...#.                 brl     syserrCoRoutineError

+002e8c fe/dc8c: 84 02        ??mx??Z? e ....> LFEDC8C         sty     CO_off_Parent     ;set ourselves as the parent
+002e8e fe/dc8e: a3 01        ??mx??Z? e .....                 lda     $01,S             ;get parent DP
+002e90 fe/dc90: 24 03        ??mx???? e .....                 bit     CO_off_flags-1    ;check for $40 in low byte of flags (has DP)
+002e92 fe/dc92: 50 02        ??mx???? e .....                 bvc     @nodp
+002e94 fe/dc94: a5 06        ?Vmx???? e .....                 lda     CO_off_DP         ;get stored DP for child
+002e96 fe/dc96: 85 06        ??mx???? e ....> @nodp           sta     CO_off_DP         ;store in child DP
+002e98 fe/dc98: 48           ??mx???? e .....                 pha                       ;save DP - again - TODO: there looks to be a lot of unnecessary stuff here
+002e99 fe/dc99: f4 00 ff     ??mx???? e .....                 pea     EXSYS
+002e9c fe/dc9c: 2b           ??mx???? e .....                 pld
+002e9d fe/dc9d: a7 10        ??mx???? e .....                 lda     [<EXSYS_CUR_COROUTINE] ;get stack from offset 0 in block
+002e9f fe/dc9f: 2b           ??mx???? e .....                 pld                       ;set up call DP
+002ea0 fe/dca0: 1b           ??mx???? e .....                 tcs                       ;the rtl below will now return to the address that was last stacked by the child coroutine
+002ea1 fe/dca1: af 05 ff 00  ??mx???? e .....                 ldal    f:EXSYS_CO_A_SAVE ;get back A as passed in 
+002ea5 fe/dca5: b0 03        ??mx???? e ....> plpRetCy        bcs     @plpRetSec
+002ea7 fe/dca7: 28           ??mx???c e .....                 plp
+002ea8 fe/dca8: 18           ??mx???? e .....                 clc
+002ea9 fe/dca9: 6b           ??mx???c e ...#.                 rtl

+002eaa fe/dcaa: 28           ??mx???C e ....> @plpRetSec      plp
+002eab fe/dcab: 38           ??mx???? e .....                 sec
+002eac fe/dcac: 6b           ??mx???C e ...#.                 rtl

                                               ********************************************************************************
                                               * CWT - coroutine wait / suspend                                               *
                                               *                                                                              *
                                               * Suspends current co-routine and return to parent                             *
                                               ********************************************************************************
                                                               .rwid   shortm,shortx
+002ead fe/dcad: 08           ???????? e @T... default__CWT    php
+002eae fe/dcae: c2 30        ???????? e .....                 rep     #$30
                                                               .rwid   longm,longx
+002eb0 fe/dcb0: 8f 05 ff 00  ??mx???? e .....                 stal    f:EXSYS_CO_A_SAVE ;save AH - we're about to swap out stack so we can't stack it
+002eb4 fe/dcb4: af 10 ff 00  ??mx???? e .....                 ldal    f:EXSYS_CUR_COROUTINE ;get pointer to this coroutine's block
+002eb8 fe/dcb8: 5b           ??mx???? e .....                 tcd                       ;in DP
+002eb9 fe/dcb9: 3b           ??mx???? e .....                 tsc
+002eba fe/dcba: 85 00        ??mx???? e .....                 sta     CO_off_stack      ;store stack at offset 0
+002ebc fe/dcbc: a5 02        ??mx???? e .....                 lda     CO_off_Parent
+002ebe fe/dcbe: d0 03        ??mx???? e .....                 bne     LFEDCC3
+002ec0 fe/dcc0: 82 25 00     ??mx??Z? e ...#.                 brl     syserrCoRoutineError ;flag error - cannot call CWT when no parent?!?

+002ec3 fe/dcc3: 8f 10 ff 00  ??mx??z? e ....> LFEDCC3         stal    f:EXSYS_CUR_COROUTINE ;make parent the current coroutine
+002ec7 fe/dcc7: d4 02        ??mx??z? e .....                 pei     (DPCOP_Y+1)       ;push the address of the parent block on the stack
+002ec9 fe/dcc9: 64 02        ??mx??z? e .....                 stz     DPCOP_Y+1         ;clear current co routine's parent
+002ecb fe/dccb: 2b           ??mx??z? e .....                 pld                       ;DP to point at parent block
+002ecc fe/dccc: a5 00        ??mx???? e .....                 lda     $00               ;load the parent's stack pointer
+002ece fe/dcce: 1b           ??mx???? e .....                 tcs                       ;and switch to that stack
+002ecf fe/dccf: af 05 ff 00  ??mx???? e .....                 ldal    f:EXSYS_CO_A_SAVE ;return AH from coroutine
+002ed3 fe/dcd3: 2b           ??mx???? e .....                 pld                       ;pull D - the DP of the parent coroutine
+002ed4 fe/dcd4: 80 cf        ??mx???? e ...#.                 bra     plpRetCy          ;continue coroutine

                                               ********************************************************************************
                                               * COREN - Restore current coroutine's environment                              *
                                               *                                                                              *
                                               * This call may be used to restore D to the value set by a previous call to    *
                                               * COENV. It is useful as many of the OS calls corrupt D.                       *
                                               *                                                                              *
                                               * Entry:                                                                       *
                                               *    X    COREN                                                                *
                                               * Exit:                                                                        *
                                               *    D    Value set in previous call to COENV                                  *
                                               *                                                                              *
                                               * TODO: Documentation also seems to restore B which is _NOT_ set up by COENV!  *
                                               ********************************************************************************
+002ed6 fe/dcd6: af 10 ff 00  ??mxd??? e @T... doCOREN         ldal    f:EXSYS_CUR_COROUTINE
+002eda fe/dcda: 5b           ??mxd??? e .....                 tcd
+002edb fe/dcdb: e2 20        ??mxd??? e .....                 sep     #$20
                                                               .rwid   shortm
+002edd fe/dcdd: a5 05        ??Mxd??? e .....                 lda     CO_off_B
+002edf fe/dcdf: 83 03        ??Mxd??? e .....                 sta     $03,S
+002ee1 fe/dce1: c2 20        ??Mxd??? e .....                 rep     #$20
                                                               .rwid   longm
+002ee3 fe/dce3: a5 06        ??mxd??? e .....                 lda     CO_off_DP
+002ee5 fe/dce5: 83 04        ??mxd??? e .....                 sta     $04,S
+002ee7 fe/dce7: 60           ??mxd??? e ...#.                 rts

+002ee8 fe/dce8: 02 0f        ??mx???? e ....> syserrCoRoutineError cop COP_0F_OPERR
+002eea fe/dcea: 43 6f 72 6f+            .T...                 .zstr   “Coroutine error”
+002efa fe/dcfa: 7b           ??mx???? e ....> coHandleBRK     tdc
+002efb fe/dcfb: a8           ??mx???? e .....                 tay
+002efc fe/dcfc: af 10 ff 00  ??mx???? e .....                 ldal    f:EXSYS_CUR_COROUTINE
+002f00 fe/dd00: aa           ??mx???? e .....                 tax
+002f01 fe/dd01: 5b           ??mx???? e ....> @lp_par         tcd
+002f02 fe/dd02: a9 20 00     ??mx???? e .....                 lda     #COFLAG_hasBRKhandler
+002f05 fe/dd05: 24 04        n?mx??z? e .....                 bit     CO_off_flags
+002f07 fe/dd07: d0 53        ??mx???? e .....                 bne     coCallBrkHandler  ;there's a break handler set - call it
+002f09 fe/dd09: a5 02        ??mx??Z? e .....                 lda     CO_off_Parent
+002f0b fe/dd0b: d0 f4        ??mx???? e .....                 bne     @lp_par           ;check parent's for break handler
                                               ; If we get this no ancestor has a break handler set so call the system one and
                                               ; hang up the machine
+002f0d fe/dd0d: 02 2d        ??mx??Z? e .....                 cop     COP_2D_OPWRM      ;write module name to VDU
+002f0f fe/dd0f: 90 04        ??mx??Z? e .....                 bcc     LFEDD15
+002f11 fe/dd11: 02 01        ??mx??ZC e .....                 cop     COP_01_OPWRS      ;write "?"
+002f13 fe/dd13: 3f 00                   .T...                 .zstr   “?”
+002f15 fe/dd15: 02 01        ??mx??Z? e ....> LFEDD15         cop     COP_01_OPWRS
+002f17 fe/dd17: 3a 20 00                .T...                 .zstr   “: ”
+002f1a fe/dd1a: a2 14 00     ??mx??Z? e .....                 ldx     #__STSBK
+002f1d fe/dd1d: 22 88 ff 00  n?mx??z? e .....                 jsl     __ST
+002f21 fe/dd21: a2 16 00     ??mx???? e ....> LFEDD21         ldx     #__STTBK
+002f24 fe/dd24: 22 88 ff 00  n?mx??z? e .....                 jsl     __ST
+002f28 fe/dd28: b0 04        ??mx???? e .....                 bcs     sysErrBRKbutNoHandler
+002f2a fe/dd2a: 02 00        ??mx???c e .....                 cop     COP_00_OPWRC
+002f2c fe/dd2c: 80 f3        ??mx???c e ...#.                 bra     LFEDD21

+002f2e fe/dd2e: 02 01        ??mx???C e ....> sysErrBRKbutNoHandler cop COP_01_OPWRS
+002f30 fe/dd30: 2a 2a 2a 20+            .T...                 .zstr   “*** BRK but no handler:”
+002f48 fe/dd48: 98           ??mx???C e .....                 tya
+002f49 fe/dd49: 5b           ??mx???C e .....                 tcd
+002f4a fe/dd4a: a2 0d 00     ??mx???C e .....                 ldx     #$000d
+002f4d fe/dd4d: 20 98 bd     n?mx??zC e .....                 jsr     @dumpregs
+002f50 fe/dd50: 02 01        ??mx???? e .....                 cop     COP_01_OPWRS
+002f52 fe/dd52: 20 2a 2a 2a+            .T...                 .zstr   “ ***”,$0d,$0a
+002f59 fe/dd59: 02 0f        ??mx???? e .....                 cop     COP_0F_OPERR
+002f5b fe/dd5b: 00                      .T...                 .zstr   “”
+002f5c fe/dd5c: 7b           ??mx???? e ....> coCallBrkHandler tdc
+002f5d fe/dd5d: cf 10 ff 00  ??mx???? e .....                 cmpl    f:EXSYS_CUR_COROUTINE
+002f61 fe/dd61: f0 03        ??mx???? e .....                 beq     LFEDD66
+002f63 fe/dd63: a5 00        ??mx??z? e .....                 lda     CO_off_stack      ;switch current level's stack in
+002f65 fe/dd65: 1b           ??mx???? e .....                 tcs
+002f66 fe/dd66: 7b           ??mx???? e ....> LFEDD66         tdc
+002f67 fe/dd67: 8f 10 ff 00  ??mx???? e .....                 stal    f:EXSYS_CUR_COROUTINE ;set this coroutine as current
+002f6b fe/dd6b: 8b           ??mx???? e .....                 phb
+002f6c fe/dd6c: 0b           ??mx???? e .....                 phd
+002f6d fe/dd6d: 58           ??mx???? e .....                 cli
+002f6e fe/dd6e: 08           ??mx?i?? e .....                 php                       ;push flags for RTI with interrupts (re)enabled
+002f6f fe/dd6f: 0b           ??mx?i?? e .....                 phd
+002f70 fe/dd70: d4 08        ??mx?i?? e .....                 pei     (CO_off_8_BRKBLOCK) ;QRY - dunno what's at offset 8 here
+002f72 fe/dd72: 2b           ??mx?i?? e .....                 pld
+002f73 fe/dd73: a5 01        ??mx?i?? e .....                 lda     $01
+002f75 fe/dd75: 83 05        ??mx?i?? e .....                 sta     $05,S
+002f77 fe/dd77: a5 00        ??mx?i?? e .....                 lda     $00
+002f79 fe/dd79: 83 04        ??mx?i?? e .....                 sta     $04,S
+002f7b fe/dd7b: 2b           ??mx?i?? e .....                 pld
+002f7c fe/dd7c: d4 06        ??mx?i?? e .....                 pei     ($06)
+002f7e fe/dd7e: 2b           ??mx?i?? e .....                 pld
+002f7f fe/dd7f: 40           ??mx?i?? e ...#.                 rti

                                               ********************************************************************************
                                               * __CO 10 - CORTB - ???                                                        *
                                               *                                                                              *
                                               * Does nothing                                                                 *
                                               ********************************************************************************
+002f80 fe/dd80: c2 30        ??mxd??? e @T... doCORTB         rep     #$30
+002f82 fe/dd82: 60           ??mxd??? e ...#.                 rts

                                                               .rwid   shortm,shortx
+002f83 fe/dd83: 08           ??MXd??C e ....> getCurCorParent php
+002f84 fe/dd84: 0b           ??MXd??C e .....                 phd
+002f85 fe/dd85: c2 30        ??MXd??C e .....                 rep     #$30
                                                               .rwid   longm,longx
+002f87 fe/dd87: f4 00 ff     ??mxd??C e .....                 pea     EXSYS
+002f8a fe/dd8a: 2b           ??mxd??C e .....                 pld
+002f8b fe/dd8b: d4 10        ??mxd??C e .....                 pei     (<EXSYS_CUR_COROUTINE)
+002f8d fe/dd8d: 2b           ??mxd??C e .....                 pld
+002f8e fe/dd8e: a6 02        ??mxd??C e .....                 ldx     CO_off_Parent
+002f90 fe/dd90: f0 04        ??mxd??C e .....                 beq     @retsec
+002f92 fe/dd92: 2b           ??mxd?zC e .....                 pld
+002f93 fe/dd93: 28           ??mxd??C e .....                 plp
                                                               .rwid   shortm,shortx
+002f94 fe/dd94: 18           ??MXd??C e .....                 clc
+002f95 fe/dd95: 60           ??MXd??c e ...#.                 rts

                                                               .rwid   longm,longx
+002f96 fe/dd96: 2b           ??mxd?ZC e ....> @retsec         pld
+002f97 fe/dd97: 28           ??mxd??C e .....                 plp
                                                               .rwid   shortm,shortx
+002f98 fe/dd98: 38           ??MXd??C e .....                 sec
+002f99 fe/dd99: 60           ??MXd??C e ...#.                 rts

+002f9a fe/dd9a: 6b           ??MXd??? e @T.#.                 rtl

+002f9b fe/dd9b: 29                      .....                 .dd1    $29
+002f9c fe/dd9c: 43                      .....                 .dd1    $43
+002f9d fe/dd9d: 28                      .....                 .dd1    $28
+002f9e fe/dd9e: 00                      .....                 .dd1    $00

                                               ********************************************************************************
                                               * LN 02 - LNCLI - call the CLI vector                                          *
                                               *                                                                              *
                                               * OSCLI - TODO: check, remove old API?                                         *
                                               ********************************************************************************
                                                               .rwid   longm,longx
+002f9f fe/dd9f: 08           ??mxd??? e ....> doLNCLI         php
+002fa0 fe/dda0: e2 20        ??mxd??? e .....                 sep     #$20
                                                               .rwid   shortm
+002fa2 fe/dda2: c2 10        ??Mxd??? e .....                 rep     #$10
+002fa4 fe/dda4: 85 ed        ??Mxd??? e .....                 sta     <DPSYS_GSREAD_ptr
+002fa6 fe/dda6: eb           ??Mxd??? e .....                 xba
+002fa7 fe/dda7: 85 ee        ??Mxd??? e .....                 sta     <DPSYS_GSREAD_ptr+1
+002fa9 fe/dda9: a0 00 00     ??Mxd??? e .....                 ldy     #$0000
+002fac fe/ddac: b1 ed        ??Mxd??? e ....> LFEDDAC         lda     (<DPSYS_GSREAD_ptr),y
+002fae fe/ddae: c9 0d        ??Mxd??? e .....                 cmp     #$0d
+002fb0 fe/ddb0: f0 19        ??Mxd??? e .....                 beq     LFEDDCB
+002fb2 fe/ddb2: c8           ??Mxd?z? e .....                 iny
+002fb3 fe/ddb3: d0 f7        ??Mxd??? e .....                 bne     LFEDDAC
+002fb5 fe/ddb5: 02 26        ??Mxd?Z? e .....                 cop     COP_26_OPBHA
+002fb7 fe/ddb7: 4c 69 6e 65+            .T...                 .zstr   “Line too long”
+002fc5 fe/ddc5: a2 01 00     ??Mxd?Z? e .....                 ldx     #$0001
+002fc8 fe/ddc8: 28           n?Mxd?z? e .....                 plp
                                                               .rwid   longm
+002fc9 fe/ddc9: 38           ??mxd??? e .....                 sec
+002fca fe/ddca: 60           ??mxd??C e ...#.                 rts

                                                               .rwid   shortm
+002fcb fe/ddcb: a0 ff ff     ??Mxd?Z? e ....> LFEDDCB         ldy     #$ffff
+002fce fe/ddce: c8           ??Mxd??? e ....> LFEDDCE         iny
+002fcf fe/ddcf: b1 ed        ??Mxd??? e .....                 lda     (<DPSYS_GSREAD_ptr),y
+002fd1 fe/ddd1: c9 20        ??Mxd??? e .....                 cmp     #‘ ’
+002fd3 fe/ddd3: f0 f9        ??Mxd??? e .....                 beq     LFEDDCE
+002fd5 fe/ddd5: c9 2a        ??Mxd?z? e .....                 cmp     #‘*’
+002fd7 fe/ddd7: f0 f5        ??Mxd??? e .....                 beq     LFEDDCE
+002fd9 fe/ddd9: c9 0d        ??Mxd?z? e .....                 cmp     #$0d
+002fdb fe/dddb: f0 1a        ??Mxd??? e .....                 beq     LFEDDF7
+002fdd fe/dddd: c9 7c        ??Mxd?z? e .....                 cmp     #‘|’
+002fdf fe/dddf: f0 16        ??Mxd??? e .....                 beq     LFEDDF7
+002fe1 fe/dde1: c9 2f        ??Mxd?z? e .....                 cmp     #‘/’
+002fe3 fe/dde3: f0 1a        ??Mxd??? e .....                 beq     LFEDDFF
+002fe5 fe/dde5: c9 2e        ??Mxd?z? e .....                 cmp     #‘.’
+002fe7 fe/dde7: f0 15        ??Mxd??? e .....                 beq     LFEDDFE
+002fe9 fe/dde9: 20 0b de     ??Mxd?z? e .....                 jsr     LFEDE0B
+002fec fe/ddec: 4b           ??Mxd??? e .....                 phk
+002fed fe/dded: 20 72 f3     ??Mxd??? e .....                 jsr     LFEF372
+002ff0 fe/ddf0: 90 05        ??Mxd??? e .....                 bcc     LFEDDF7
+002ff2 fe/ddf2: 70 06        ??Mxd??C e .....                 bvs     LFEDDFA
+002ff4 fe/ddf4: 28           ?vMxd??C e .....                 plp
                                                               .rwid   longm
+002ff5 fe/ddf5: 38           ??mxd??? e .....                 sec
+002ff6 fe/ddf6: 60           ??mxd??C e ...#.                 rts

                                                               .rwid   shortm
+002ff7 fe/ddf7: 28           ??Mxd??? e ....> LFEDDF7         plp
                                                               .rwid   longm
+002ff8 fe/ddf8: 18           ??mxd??? e .....                 clc
+002ff9 fe/ddf9: 60           ??mxd??c e ...#.                 rts

                                                               .rwid   shortm
+002ffa fe/ddfa: 28           ??Mxd??C e ....> LFEDDFA         plp
                                                               .rwid   longm
+002ffb fe/ddfb: 82 66 e9     ??mxd??? e ...#.                 brl     LFEC764

                                                               .rwid   shortm
+002ffe fe/ddfe: 18           ??Mxd?Z? e ....> LFEDDFE         clc
+002fff fe/ddff: 08           ??Mxd?Z? e ....> LFEDDFF         php
+003000 fe/de00: c8           ??Mxd?Z? e .....                 iny
+003001 fe/de01: 20 0b de     ??Mxd??? e .....                 jsr     LFEDE0B
+003004 fe/de04: 28           ??Mxd??? e .....                 plp
+003005 fe/de05: b0 f3        ??Mxd?Z? e .....                 bcs     LFEDDFA
+003007 fe/de07: 28           ??Mxd?Zc e .....                 plp
+003008 fe/de08: 82 7d 1b     ??Mxd?Z? e ...#.                 brl     starCAT

+00300b fe/de0b: 18           ??Mxd??? e ....> LFEDE0B         clc
+00300c fe/de0c: 98           ??Mxd??c e .....                 tya
+00300d fe/de0d: 65 ed        ??Mxd??c e .....                 adc     $ed
+00300f fe/de0f: eb           ??Mxd??? e .....                 xba
+003010 fe/de10: a5 ee        ??Mxd??? e .....                 lda     $ee
+003012 fe/de12: 69 00        ??Mxd??? e .....                 adc     #$00
+003014 fe/de14: eb           ??Mxd??? e .....                 xba
+003015 fe/de15: 60           ??Mxd??? e ...#.                 rts

                                               ********************************************************************************
                                               * OSBYTE 7F - Check for EOF                                                    *
                                               ********************************************************************************
                                                               .rwid   shortx
+003016 fe/de16: 9b           ??MXd??? e @T... OSBYTE_7F       txy
+003017 fe/de17: 4b           ??MXd??? e .....                 phk
+003018 fe/de18: 20 d4 f5     ??MXd??? e .....                 jsr     CheckEOF
+00301b fe/de1b: a2 00        ??MXd??? e .....                 ldx     #$00
+00301d fe/de1d: 90 01        n?MXd?Z? e .....                 bcc     @ret
+00301f fe/de1f: ca           n?MXd?ZC e .....                 dex
+003020 fe/de20: 60           ??MXd??? e ...#> @ret            rts

+003021 fe/de21: a4 d9        ??MXd?Z? e ....> LFEDE21         ldy     $d9
+003023 fe/de23: 20 67 de     ??MXd??? e ....> LFEDE23         jsr     LFEDE67
+003026 fe/de26: c9 20        ??MXd??? e .....                 cmp     #$20
+003028 fe/de28: f0 f7        ??MXd??? e .....                 beq     LFEDE21
+00302a fe/de2a: c9 0d        ??MXd?z? e ....> LFEDE2A         cmp     #$0d
+00302c fe/de2c: 60           ??MXd??? e ...#.                 rts

+00302d fe/de2d: 90 f4        N?MXd?z? e ....> LFEDE2D         bcc     LFEDE23
+00302f fe/de2f: 20 23 de     ??MXd??? e ....> LFEDE2F         jsr     LFEDE23
+003032 fe/de32: c9 2c        ??MXd??? e .....                 cmp     #$2c
+003034 fe/de34: d0 f4        ??MXd??? e .....                 bne     LFEDE2A
+003036 fe/de36: a4 d9        ??MXd?Z? e .....                 ldy     $d9
+003038 fe/de38: 60           ??MXd??? e ...#.                 rts

+003039 fe/de39: 20 23 de     ??MXd??? e ....> LFEDE39         jsr     LFEDE23
+00303c fe/de3c: 20 76 de     ??MXd??? e .....                 jsr     LFEDE76
+00303f fe/de3f: 90 46        ??MXd??? e .....                 bcc     LFEDE87
+003041 fe/de41: 85 e1        ??MXd??? e ....> LFEDE41         sta     $e1
+003043 fe/de43: 20 74 de     ??MXd??? e .....                 jsr     LFEDE74
+003046 fe/de46: 90 19        ??MXd??? e .....                 bcc     LFEDE61
+003048 fe/de48: aa           ??MXd??C e .....                 tax
+003049 fe/de49: a5 e1        ??MXd??C e .....                 lda     $e1
+00304b fe/de4b: 0a           ??MXd??C e .....                 asl     A
+00304c fe/de4c: b0 39        ??MXd??? e .....                 bcs     LFEDE87
+00304e fe/de4e: 0a           ??MXd??c e .....                 asl     A
+00304f fe/de4f: b0 36        ??MXd??? e .....                 bcs     LFEDE87
+003051 fe/de51: 65 e1        ??MXd??c e .....                 adc     $e1
+003053 fe/de53: b0 32        ??MXd??? e .....                 bcs     LFEDE87
+003055 fe/de55: 0a           ??MXd??c e .....                 asl     A
+003056 fe/de56: b0 2f        ??MXd??? e .....                 bcs     LFEDE87
+003058 fe/de58: 85 e1        ??MXd??c e .....                 sta     $e1
+00305a fe/de5a: 8a           ??MXd??c e .....                 txa
+00305b fe/de5b: 65 e1        ??MXd??c e .....                 adc     $e1
+00305d fe/de5d: b0 28        ??MXd??? e .....                 bcs     LFEDE87
+00305f fe/de5f: 90 e0        ??MXd??c e ...#.                 bcc     LFEDE41

+003061 fe/de61: a6 e1        ??MXd??c e ....> LFEDE61         ldx     $e1
+003063 fe/de63: c9 0d        ??MXd??c e .....                 cmp     #$0d
+003065 fe/de65: 38           ??MXd??? e .....                 sec
+003066 fe/de66: 60           ??MXd??C e ...#.                 rts

+003067 fe/de67: da           ??MXd??? e ....> LFEDE67         phx
+003068 fe/de68: 5a           ??MXd??? e .....                 phy
+003069 fe/de69: a2 0e        ??MXd??? e .....                 ldx     #__STGRD
+00306b fe/de6b: 22 88 ff 00  n?MXd?z? e .....                 jsl     __ST
+00306f fe/de6f: 84 d9        ??MXd??? e .....                 sty     $d9
+003071 fe/de71: 7a           ??MXd??? e .....                 ply
+003072 fe/de72: fa           ??MXd??? e .....                 plx
+003073 fe/de73: 60           ??MXd??? e ...#.                 rts

+003074 fe/de74: a4 d9        ??MXd??? e ....> LFEDE74         ldy     $d9
+003076 fe/de76: 20 67 de     ??MXd??? e ....> LFEDE76         jsr     LFEDE67
+003079 fe/de79: c9 3a        ??MXd??? e .....                 cmp     #$3a
+00307b fe/de7b: b0 0a        ??MXd??? e .....                 bcs     LFEDE87
+00307d fe/de7d: c9 30        ??MXd??c e .....                 cmp     #$30
+00307f fe/de7f: 90 06        ??MXd??? e .....                 bcc     LFEDE87
+003081 fe/de81: 29 0f        ??MXd??C e .....                 and     #$0f
+003083 fe/de83: 60           n?MXd??C e ...#.                 rts

+003084 fe/de84: 20 2f de     ??MXd??? e ....> LFEDE84         jsr     LFEDE2F
+003087 fe/de87: 18           ??MXd??? e ....> LFEDE87         clc
+003088 fe/de88: 60           ??MXd??c e ...#.                 rts

+003089 fe/de89: a4                      .....                 .dd1    $a4
+00308a fe/de8a: d9                      .....                 .dd1    $d9

+00308b fe/de8b: 20 76 de     ??MXd??? e ....> LFEDE8B         jsr     LFEDE76
+00308e fe/de8e: b0 0e        ??MXd??? e .....                 bcs     LFEDE9E
+003090 fe/de90: 29 df        ??MXd??c e .....                 and     #$df
+003092 fe/de92: c9 47        ??MXd??c e .....                 cmp     #$47
+003094 fe/de94: b0 ee        ??MXd??? e .....                 bcs     LFEDE84
+003096 fe/de96: c9 41        ??MXd??c e .....                 cmp     #$41
+003098 fe/de98: 90 ea        ??MXd??? e .....                 bcc     LFEDE84
+00309a fe/de9a: 08           ??MXd??C e .....                 php
+00309b fe/de9b: e9 37        ??MXd??C e .....                 sbc     #$37
+00309d fe/de9d: 28           ??MXd??? e .....                 plp
+00309e fe/de9e: a4 d9        ??MXd??C e ....> LFEDE9E         ldy     $d9
+0030a0 fe/dea0: 60           ??MXd??C e ...#.                 rts

+0030a1 fe/dea1: a4                      .....                 .dd1    $a4
+0030a2 fe/dea2: d9                      .....                 .dd1    $d9
+0030a3 fe/dea3: 20                      .....                 .dd1    $20
+0030a4 fe/dea4: 67                      .....                 .dd1    $67
+0030a5 fe/dea5: de                      .....                 .dd1    $de
+0030a6 fe/dea6: c9                      .....                 .dd1    $c9
+0030a7 fe/dea7: 20                      .....                 .dd1    $20
+0030a8 fe/dea8: f0                      .....                 .dd1    $f0
+0030a9 fe/dea9: f7                      .....                 .dd1    $f7
+0030aa fe/deaa: c9                      .....                 .dd1    $c9
+0030ab fe/deab: 0d                      .....                 .dd1    $0d
+0030ac fe/deac: 60                      .....                 .dd1    $60
+0030ad fe/dead: 90                      .....                 .dd1    $90
+0030ae fe/deae: f4                      .....                 .dd1    $f4
+0030af fe/deaf: 20                      .....                 .dd1    $20
+0030b0 fe/deb0: a3                      .....                 .dd1    $a3
+0030b1 fe/deb1: de                      .....                 .dd1    $de
+0030b2 fe/deb2: c9                      .....                 .dd1    $c9
+0030b3 fe/deb3: 2c                      .....                 .dd1    $2c
+0030b4 fe/deb4: d0                      .....                 .dd1    $d0
+0030b5 fe/deb5: f4                      .....                 .dd1    $f4
+0030b6 fe/deb6: a4                      .....                 .dd1    $a4
+0030b7 fe/deb7: d9                      .....                 .dd1    $d9
+0030b8 fe/deb8: 60                      .....                 .dd1    $60

+0030b9 fe/deb9: e2 20        ??MXd??? e @T... starRESET       sep     #$20
+0030bb fe/debb: a9 08        ??MXd??? e .....                 lda     #$08
+0030bd fe/debd: 8f 02 00 42  n?MXd?z? e .....                 stal    VIA_DDRB
+0030c1 fe/dec1: a9 00        n?MXd?z? e .....                 lda     #$00
+0030c3 fe/dec3: 8f 00 00 42  n?MXd?Z? e .....                 stal    VIA_ORB
+0030c7 fe/dec7: 80 fe        n?MXd?Z? e ...#> @here           bra     @here

                                               ********************************************************************************
                                               * OSBYTE 9D - Fast BPUT                                                        *
                                               *                                                                              *
                                               * QRY - QRY - QRY this doesn't look right                                      *
                                               ********************************************************************************
+0030c9 fe/dec9: 0b           ??MXd??? e @T... OSBYTE_9D       phd
+0030ca fe/deca: 08           ??MXd??? e .....                 php
+0030cb fe/decb: c2 30        ??MXd??? e .....                 rep     #$30
                                                               .rwid   longm,longx
+0030cd fe/decd: e0 10 00     ??mxd??? e .....                 cpx     #$0010
+0030d0 fe/ded0: b0 2a        ??mxd??? e .....                 bcs     LFEDEFC
+0030d2 fe/ded2: a0 00 00     ??mxd??c e .....                 ldy     #$0000
+0030d5 fe/ded5: da           n?mxd?Zc e .....                 phx
+0030d6 fe/ded6: 2b           n?mxd?Zc e .....                 pld
+0030d7 fe/ded7: f0 11        ??mxd??c e .....                 beq     LFEDEEA
+0030d9 fe/ded9: a9 0a 00     ??mxd??c e ....> LFEDED9         lda     #HND_type_A_CBLCB
+0030dc fe/dedc: 20 01 ce     n?mxd?zc e .....                 jsr     obtainFreeBlock
+0030df fe/dedf: b0 09        ??mxd??? e .....                 bcs     LFEDEEA
+0030e1 fe/dee1: da           ??mxd??c e .....                 phx
+0030e2 fe/dee2: c8           ??mxd??c e .....                 iny
+0030e3 fe/dee3: 98           ??mxd??c e .....                 tya
+0030e4 fe/dee4: 0b           ??mxd??c e .....                 phd
+0030e5 fe/dee5: c3 01        ??mxd??c e .....                 cmp     $01,S
+0030e7 fe/dee7: 2b           ??mxd??? e .....                 pld
+0030e8 fe/dee8: 90 ef        ??mxd??? e .....                 bcc     LFEDED9
+0030ea fe/deea: a9 0a 00     ??mxd??? e ....> LFEDEEA         lda     #$000a
+0030ed fe/deed: 20 01 ce     n?mxd?z? e .....                 jsr     obtainFreeBlock
+0030f0 fe/def0: 90 f8        ??mxd??? e .....                 bcc     LFEDEEA
+0030f2 fe/def2: 98           ??mxd??C e .....                 tya
+0030f3 fe/def3: f0 07        ??mxd??C e .....                 beq     LFEDEFC
+0030f5 fe/def5: fa           ??mxd?z? e ....> LFEDEF5         plx
+0030f6 fe/def6: 20 da cd     ??mxd??? e .....                 jsr     returnXToFreeList
+0030f9 fe/def9: 88           ??mxd??? e .....                 dey
+0030fa fe/defa: d0 f9        ??mxd??? e .....                 bne     LFEDEF5
+0030fc fe/defc: 28           ??mxd??? e ....> LFEDEFC         plp
                                                               .rwid   shortm,shortx
+0030fd fe/defd: 2b           ??MXd??? e .....                 pld
+0030fe fe/defe: 60           ??MXd??? e ...#.                 rts

+0030ff fe/deff: 60           ??MXd??? e @T.#. TFEDEFF         rts

+003100 fe/df00: 60           ??MXd??? e @T.#. OSBYTE_7B_null  rts

+003101 fe/df01: d0 28        ??MXd??? e @T... OSBYTE_F        bne     OSB_FlushInputBuffer
+003103 fe/df03: a2 08        ??MXd?Z? e ..... FlushAllBuffers ldx     #$08
+003105 fe/df05: 58           n?MXd??? e ....> @lp             cli
+003106 fe/df06: 78           n?MXdi?? e .....                 sei
+003107 fe/df07: 20 0d df     n?MXdI?? e .....                 jsr     OSBYTE_15
+00310a fe/df0a: ca           ??MXdI?? e .....                 dex
+00310b fe/df0b: 10 f8        ??MXdI?? e .....                 bpl     @lp
+00310d fe/df0d: e0 09        ??MXdI?? e .T..> OSBYTE_15       cpx     #$09
+00310f fe/df0f: 90 22        ??MXdI?? e .....                 bcc     OSB_FlushBufferX
+003111 fe/df11: 60           ??MXdI?C e ...#.                 rts

+003112 fe/df12: a9 00        n?MXd??? e ....> LFEDF12         lda     #$00
+003114 fe/df14: a2 03        n?MXd?Z? e .....                 ldx     #$03
+003116 fe/df16: ac 85 a5     ??MXd??? e ....> LFEDF16         ldy     SYSVARS+133
+003119 fe/df19: 18           ??MXd??? e .....                 clc
+00311a fe/df1a: 6b           ??MXd??c e ...#.                 rtl

+00311b fe/df1b: 20                      .....                 .dd1    $20
+00311c fe/df1c: 66                      .....                 .dd1    $66
+00311d fe/df1d: e3                      .....                 .dd1    $e3
+00311e fe/df1e: eb                      .....                 .dd1    $eb
+00311f fe/df1f: 4b                      .....                 .dd1    $4b
+003120 fe/df20: ad                      .....                 .dd1    $ad
+003121 fe/df21: 23                      .....                 .dd1    $23
+003122 fe/df22: a5                      .....                 .dd1    $a5
+003123 fe/df23: 48                      .....                 .dd1    $48
+003124 fe/df24: ad                      .....                 .dd1    $ad
+003125 fe/df25: 22                      .....                 .dd1    $22
+003126 fe/df26: a5                      .....                 .dd1    $a5
+003127 fe/df27: 48                      .....                 .dd1    $48
+003128 fe/df28: eb                      .....                 .dd1    $eb
+003129 fe/df29: 08                      .....                 .dd1    $08
+00312a fe/df2a: 40                      .....                 .dd1    $40

+00312b fe/df2b: f4 00 00     ??MXd?z? e ....> OSB_FlushInputBuffer pea $0000
+00312e fe/df2e: ab           ??MXd?z? e .....                 plb
                                                               .dbank  $00
+00312f fe/df2f: ab           ??MXd??? e .....                 plb
+003130 fe/df30: ae 41 a5     ??MXd??? e .....                 ldx     SYSVAR_41_input_stream ;Get current input stream
+003133 fe/df33: 18           ??MXd??? e ....> OSB_FlushBufferX clc
+003134 fe/df34: 8b           ??MXd??? e ....> LFEDF34         phb
+003135 fe/df35: f4 00 00     ??MXd??? e .....                 pea     $0000
+003138 fe/df38: ab           ??MXd??? e .....                 plb
                                                               .dbank  $00
+003139 fe/df39: ab           ??MXd??? e .....                 plb
+00313a fe/df3a: 48           ??MXd??? e .....                 pha
+00313b fe/df3b: 08           ??MXd??? e .....                 php
+00313c fe/df3c: 78           ??MXd??? e .....                 sei
+00313d fe/df3d: b0 19        ??MXdI?? e .....                 bcs     @skipsound
+00313f fe/df3f: 8a           ??MXdI?c e .....                 txa
+003140 fe/df40: 29 04        ??MXdI?c e .....                 and     #$04
+003142 fe/df42: f0 14        n?MXdI?c e .....                 beq     @skipsound
+003144 fe/df44: ad 6b a5     n?MXdIzc e .....                 lda     SYSVAR_SOUND_EXT_FLAG ;sound flag??
+003147 fe/df47: f0 0c        ??MXdI?c e .....                 beq     @ext_sound_qry
+003149 fe/df49: 8a           ??MXdIzc e .....                 txa
+00314a fe/df4a: 48           ??MXdI?c e .....                 pha
+00314b fe/df4b: a8           ??MXdI?c e .....                 tay
+00314c fe/df4c: a2 17        ??MXdI?c e .....                 ldx     #$17
+00314e fe/df4e: 20 47 ee     n?MXdIzc e .....                 jsr     donothingRTS
+003151 fe/df51: 68           ??MXdI?? e .....                 pla
+003152 fe/df52: aa           ??MXdI?? e .....                 tax
+003153 fe/df53: d0 03        ??MXdI?? e .....                 bne     @skipsound
+003155 fe/df55: 20 44 ec     ??MXdIZ? e ....> @ext_sound_qry  jsr     SOUND_RESET_CHAN_X_QRY
+003158 fe/df58: 38           ??MXdI?? e ....> @skipsound      sec
+003159 fe/df59: bf c3 a5 00  ??MXdI?C e .....                 ldal    f:SYSVARS_ELK_BUFFER_BUSY,x
+00315d fe/df5d: 6a           ??MXdI?C e .....                 ror     A
+00315e fe/df5e: 9f c3 a5 00  N?MXdIz? e .....                 stal    f:SYSVARS_ELK_BUFFER_BUSY,x
+003162 fe/df62: e0 02        N?MXdIz? e .....                 cpx     #$02
+003164 fe/df64: b0 0b        ??MXdI?? e .....                 bcs     @notinput
+003166 fe/df66: a9 00        ??MXdI?c e .....                 lda     #$00
+003168 fe/df68: 8d 68 a5     n?MXdIZc e .....                 sta     SYSVAR_SOFTKEY_STRLEN
+00316b fe/df6b: 8d 5d a5     n?MXdIZc e .....                 sta     SYSVAR_ELK_SOFTKEY_STRLEN
+00316e fe/df6e: 8d 6a a5     n?MXdIZc e .....                 sta     SYSVAR_VDU_QLEN
+003171 fe/df71: 20 80 e7     ??MXdI?? e ....> @notinput       jsr     callCNPV
+003174 fe/df74: 28           ??MXdI?? e .....                 plp
+003175 fe/df75: 68           ??MXdI?c e .....                 pla
+003176 fe/df76: ab           ??MXdI?c e .....                 plb
+003177 fe/df77: 60           ??MXdI?c e ...#.                 rts

+003178 fe/df78: 50 09        ??MXd??? e @T... defaultCNPV     bvc     LFEDF83
+00317a fe/df7a: bf cc a5 00  ?VMXd??? e .....                 ldal    f:SYSVARS+204,x
+00317e fe/df7e: 9f d5 a5 00  ?VMXd??? e .....                 stal    f:$00a5d5,x
+003182 fe/df82: 60           ?VMXd??? e ...#.                 rts

+003183 fe/df83: 08           ?vMXd??? e ....> LFEDF83         php
+003184 fe/df84: 78           ?vMXd??? e .....                 sei
+003185 fe/df85: 08           ?vMXdI?? e .....                 php
+003186 fe/df86: 38           ?vMXdI?? e .....                 sec
+003187 fe/df87: bf d5 a5 00  ?vMXdI?C e .....                 ldal    f:$00a5d5,x
+00318b fe/df8b: ff cc a5 00  ?vMXdI?C e .....                 sbcl    f:SYSVARS+204,x
+00318f fe/df8f: b0 08        ??MXdI?? e .....                 bcs     LFEDF99
+003191 fe/df91: 38           ??MXdI?c e .....                 sec
+003192 fe/df92: 8b           ??MXdI?C e .....                 phb
+003193 fe/df93: 4b           ??MXdI?C e .....                 phk
                                                               .dbank  K (auto)
+003194 fe/df94: ab           ??MXdI?C e .....                 plb
+003195 fe/df95: fd 78 e1     ??MXdI?C e .....                 sbc     LFEE178 & $ffff,x
+003198 fe/df98: ab           ??MXdI?? e .....                 plb
+003199 fe/df99: 28           ??MXdI?? e ....> LFEDF99         plp
+00319a fe/df9a: 90 0a        ?vMXdI?? e .....                 bcc     LFEDFA6
+00319c fe/df9c: 18           ?vMXdI?C e .....                 clc
+00319d fe/df9d: 8b           ?vMXdI?c e .....                 phb
+00319e fe/df9e: 4b           ?vMXdI?c e .....                 phk
                                                               .dbank  K (auto)
+00319f fe/df9f: ab           ?vMXdI?c e .....                 plb
+0031a0 fe/dfa0: 7d 78 e1     ?vMXdI?c e .....                 adc     LFEE178 & $ffff,x
+0031a3 fe/dfa3: ab           ??MXdI?? e .....                 plb
+0031a4 fe/dfa4: 49 ff        ??MXdI?? e .....                 eor     #$ff
+0031a6 fe/dfa6: a0 00        ??MXdI?? e ....> LFEDFA6         ldy     #$00
+0031a8 fe/dfa8: aa           n?MXdIZ? e .....                 tax
+0031a9 fe/dfa9: 28           ??MXdI?? e .....                 plp
+0031aa fe/dfaa: 60           ?vMXdI?? e ...#.                 rts

+0031ab fe/dfab: 78           ??MXd??? e ....> LFEDFAB         sei
+0031ac fe/dfac: 20 e2 e1     ??MXdI?? e .....                 jsr     callINSV
+0031af fe/dfaf: 90 0d        ??MXdI?? e .....                 bcc     LFEDFBE
+0031b1 fe/dfb1: 20 b6 ea     ??MXdI?C e .....                 jsr     LFEEAB6
+0031b4 fe/dfb4: b0 08        ??MXdI?? e .....                 bcs     LFEDFBE
+0031b6 fe/dfb6: 48           ??MXdI?c e .....                 pha
+0031b7 fe/dfb7: 20 18 ec     ??MXdI?c e .....                 jsr     LFEEC18
+0031ba fe/dfba: 68           ??MXdI?? e .....                 pla
+0031bb fe/dfbb: 58           ??MXdI?? e .....                 cli
+0031bc fe/dfbc: 80 ed        ??MXdi?? e ...#.                 bra     LFEDFAB

+0031be fe/dfbe: 60           ??MXdI?? e ...#> LFEDFBE         rts

+0031bf fe/dfbf: 48           ??MXd??? e ....> LFEDFBF         pha
+0031c0 fe/dfc0: 9e e2 a5     ??MXd??? e .....                 stz     $a5e2,x
+0031c3 fe/dfc3: 9e e3 a5     ??MXd??? e .....                 stz     $a5e3,x
+0031c6 fe/dfc6: 9e e4 a5     ??MXd??? e .....                 stz     $a5e4,x
+0031c9 fe/dfc9: 9e e5 a5     ??MXd??? e .....                 stz     $a5e5,x
+0031cc fe/dfcc: 68           ??MXd??? e .....                 pla
+0031cd fe/dfcd: 60           ??MXd??? e ...#.                 rts

+0031ce fe/dfce: 5a           ??MXd??? e ....> LFEDFCE         phy
+0031cf fe/dfcf: 2a           ??MXd??? e .....                 rol     A
+0031d0 fe/dfd0: 2a           ??MXd??? e .....                 rol     A
+0031d1 fe/dfd1: 2a           ??MXd??? e .....                 rol     A
+0031d2 fe/dfd2: 2a           ??MXd??? e .....                 rol     A
+0031d3 fe/dfd3: a0 04        ??MXd??? e .....                 ldy     #$04
+0031d5 fe/dfd5: 2a           ??MXd?z? e ....> LFEDFD5         rol     A
+0031d6 fe/dfd6: 3e e2 a5     ??MXd??? e .....                 rol     $a5e2,x
+0031d9 fe/dfd9: 3e e3 a5     ??MXd??? e .....                 rol     $a5e3,x
+0031dc fe/dfdc: 3e e4 a5     ??MXd??? e .....                 rol     $a5e4,x
+0031df fe/dfdf: 3e e5 a5     ??MXd??? e .....                 rol     $a5e5,x
+0031e2 fe/dfe2: b0 03        ??MXd??? e .....                 bcs     LFEDFE7
+0031e4 fe/dfe4: 88           ??MXd??c e .....                 dey
+0031e5 fe/dfe5: d0 ee        ??MXd??c e .....                 bne     LFEDFD5
+0031e7 fe/dfe7: 7a           ??MXd??? e ....> LFEDFE7         ply
+0031e8 fe/dfe8: 60           ??MXd??? e ...#.                 rts

+0031e9 fe/dfe9: a2 1c        ??MXd??? e ....> gsreadNext      ldx     #__STGAD          ;add Y to GSREAD pointer
+0031eb fe/dfeb: 22 88 ff 00  n?MXd?z? e .....                 jsl     __ST
+0031ef fe/dfef: a2 0c        ??MXd??? e .....                 ldx     #__STGLN          ;start line terminated GSREAD
+0031f1 fe/dff1: 22 88 ff 00  n?MXd?z? e .....                 jsl     __ST
+0031f5 fe/dff5: f4 00 00     ??MXd??? e .....                 pea     $0000
+0031f8 fe/dff8: ab           ??MXd??? e .....                 plb
+0031f9 fe/dff9: ab           ??MXd??? e .....                 plb
+0031fa fe/dffa: 60           ??MXd??? e ...#.                 rts

+0031fb fe/dffb: a0 ff        ??MXd??? e @T... starLOAD        ldy     #$ff
+0031fd fe/dffd: 80 02        N?MXd?z? e ...#.                 bra     intstarLOADSAVE

+0031ff fe/dfff: a0 00        ??MXd??? e @T... starSAVE        ldy     #$00
+003201 fe/e001: 5a           ??MXd??? e ....> intstarLOADSAVE phy
+003202 fe/e002: 4b           ??MXd??? e .....                 phk
+003203 fe/e003: 20 d8 f7     ??MXd??? e .....                 jsr     skipSpacesBHA
+003206 fe/e006: 48           ??MXd??? e .....                 pha
+003207 fe/e007: 8f e2 a5 00  ??MXd??? e .....                 stal    f:DPSYS_OSWORD0_BUFPTR-1
+00320b fe/e00b: eb           ??MXd??? e .....                 xba
+00320c fe/e00c: 8f e3 a5 00  ??MXd??? e .....                 stal    f:DPSYS_OSWORD0_BUFPTR
+003210 fe/e010: eb           ??MXd??? e .....                 xba
+003211 fe/e011: 8b           ??MXd??? e .....                 phb
+003212 fe/e012: 68           ??MXd??? e .....                 pla
+003213 fe/e013: 8f e4 a5 00  ??MXd??? e .....                 stal    f:DPSYS_OSWORD0_BUFPTR+1
+003217 fe/e017: 68           ??MXd??? e .....                 pla
+003218 fe/e018: a0 00        ??MXd??? e .....                 ldy     #$00
+00321a fe/e01a: 5a           n?MXd?Z? e .....                 phy
+00321b fe/e01b: a2 0a        n?MXd?Z? e .....                 ldx     #__STGIT
+00321d fe/e01d: 22 88 ff 00  n?MXd?z? e .....                 jsl     __ST
+003221 fe/e021: ab           ??MXd??? e .....                 plb
+003222 fe/e022: a2 04        ??MXd??? e .....                 ldx     #$04
+003224 fe/e024: 20 bf df     n?MXd?z? e .....                 jsr     LFEDFBF
+003227 fe/e027: a2 08        ??MXd??? e .....                 ldx     #$08
+003229 fe/e029: 20 bf df     n?MXd?z? e .....                 jsr     LFEDFBF
+00322c fe/e02c: a9 ff        ??MXd??? e .....                 lda     #$ff
+00322e fe/e02e: 8d f2 a5     N?MXd?z? e .....                 sta     $a5f2
+003231 fe/e031: 8d f3 a5     N?MXd?z? e .....                 sta     $a5f3
+003234 fe/e034: 8d f4 a5     N?MXd?z? e .....                 sta     $a5f4
+003237 fe/e037: 9c f5 a5     N?MXd?z? e .....                 stz     $a5f5
+00323a fe/e03a: a2 0e        ??MXd??? e ....> LFEE03A         ldx     #__STGRD
+00323c fe/e03c: 22 88 ff 00  n?MXd?z? e .....                 jsl     __ST
+003240 fe/e040: 90 f8        ??MXd??? e .....                 bcc     LFEE03A
+003242 fe/e042: 20 e9 df     ??MXd??C e .....                 jsr     gsreadNext
+003245 fe/e045: 84 d9        ??MXd??? e .....                 sty     $d9
+003247 fe/e047: a2 0c        ??MXd??? e .....                 ldx     #$0c
+003249 fe/e049: 68           n?MXd?z? e .....                 pla
+00324a fe/e04a: f0 3a        ??MXd??? e .....                 beq     LFEE086
+00324c fe/e04c: 20 f7 e0     ??MXd?z? e .....                 jsr     LFEE0F7
+00324f fe/e04f: 90 24        ??MXd??? e .....                 bcc     LFEE075
+003251 fe/e051: 02 26        ??MXd??C e .....                 cop     COP_26_OPBHA
+003253 fe/e053: 42 61 64 20+            .T...                 .zstr   “Bad address”
+00325f fe/e05f: a2 01        ??MXd??C e .....                 ldx     #$01
+003261 fe/e061: 38           n?MXd?zC e .....                 sec
+003262 fe/e062: 60           n?MXd?zC e ...#.                 rts

+003263 fe/e063: 02 26        ??MXd??? e ....> @reterrBadCommand cop   COP_26_OPBHA
+003265 fe/e065: 42 61 64 20+            .T...                 .zstr   “Bad command”
+003271 fe/e071: a2 01        ??MXd??? e .....                 ldx     #$01
+003273 fe/e073: 38           n?MXd?z? e .....                 sec
+003274 fe/e074: 60           n?MXd?zC e ...#.                 rts

+003275 fe/e075: f0 03        ??MXd??c e ....> LFEE075         beq     LFEE07A
+003277 fe/e077: 82 e9 ff     ??MXd?zc e ...#.                 brl     @reterrBadCommand

+00327a fe/e07a: c2 30        ??MXd?Zc e ....> LFEE07A         rep     #$30
                                                               .rwid   longm,longx
+00327c fe/e07c: a9 e2 a5     ??mxd?Zc e .....                 lda     #$a5e2
+00327f fe/e07f: 02 24        n?mxd?zc e .....                 cop     COP_24_OPCVD
+003281 fe/e081: 02 4e        n?mxd?zc e .....                 cop     COP_4E_OPLOD
+003283 fe/e083: e2 30        n?mxd?zc e .....                 sep     #$30
                                                               .rwid   shortm,shortx
+003285 fe/e085: 60           n?MXd?zc e ...#.                 rts

+003286 fe/e086: 20 e9 df     ??MXd?Z? e ....> LFEE086         jsr     gsreadNext
+003289 fe/e089: a2 0c        ??MXd??? e .....                 ldx     #$0c
+00328b fe/e08b: 20 f7 e0     n?MXd?z? e .....                 jsr     LFEE0F7
+00328e fe/e08e: b0 d3        ??MXd??? e .....                 bcs     @reterrBadCommand
+003290 fe/e090: 20 67 de     ??MXd??c e .....                 jsr     LFEDE67
+003293 fe/e093: b8           ??MXd??? e .....                 clv
+003294 fe/e094: c9 2b        ?vMXd??? e .....                 cmp     #$2b
+003296 fe/e096: d0 04        ?vMXd??? e .....                 bne     LFEE09C
+003298 fe/e098: e2 40        ?vMXd?Z? e .....                 sep     #$40
+00329a fe/e09a: a4 d9        ?VMXd?Z? e .....                 ldy     $d9
+00329c fe/e09c: a2 10        ??MXd??? e ....> LFEE09C         ldx     #$10
+00329e fe/e09e: 20 f7 e0     n?MXd?z? e .....                 jsr     LFEE0F7
+0032a1 fe/e0a1: b0 c0        ??MXd??? e .....                 bcs     @reterrBadCommand
+0032a3 fe/e0a3: 08           ??MXd??c e .....                 php
+0032a4 fe/e0a4: 70 0f        ??MXd??c e .....                 bvs     LFEE0B5
+0032a6 fe/e0a6: a2 fc        ?vMXd??c e .....                 ldx     #$fc
+0032a8 fe/e0a8: 38           NvMXd?zc e .....                 sec
+0032a9 fe/e0a9: bd f6 a4     ??MXd?z? e ....> LFEE0A9         lda     $a4f6,x
+0032ac fe/e0ac: fd f2 a4     ??MXd??? e .....                 sbc     $a4f2,x
+0032af fe/e0af: 9d f6 a4     ??MXd??? e .....                 sta     $a4f6,x
+0032b2 fe/e0b2: e8           ??MXd??? e .....                 inx
+0032b3 fe/e0b3: d0 f4        ??MXd??? e .....                 bne     LFEE0A9
+0032b5 fe/e0b5: a2 03        ??MXd??? e ....> LFEE0B5         ldx     #$03
+0032b7 fe/e0b7: bd ee a5     n?MXd??? e ....> LFEE0B7         lda     $a5ee,x
+0032ba fe/e0ba: 9d ea a5     ??MXd??? e .....                 sta     $a5ea,x
+0032bd fe/e0bd: 9d e6 a5     ??MXd??? e .....                 sta     $a5e6,x
+0032c0 fe/e0c0: ca           ??MXd??? e .....                 dex
+0032c1 fe/e0c1: 10 f4        ??MXd??? e .....                 bpl     LFEE0B7
+0032c3 fe/e0c3: 28           N?MXd??? e .....                 plp
+0032c4 fe/e0c4: f0 14        ??MXd??c e .....                 beq     LFEE0DA
+0032c6 fe/e0c6: a2 08        ??MXd?zc e .....                 ldx     #$08
+0032c8 fe/e0c8: 20 f7 e0     n?MXd?zc e .....                 jsr     LFEE0F7
+0032cb fe/e0cb: b0 96        ??MXd??? e .....                 bcs     @reterrBadCommand
+0032cd fe/e0cd: f0 0b        ??MXd??c e .....                 beq     LFEE0DA
+0032cf fe/e0cf: a2 04        ??MXd?zc e .....                 ldx     #$04
+0032d1 fe/e0d1: 20 f7 e0     n?MXd?zc e .....                 jsr     LFEE0F7
+0032d4 fe/e0d4: b0 8d        ??MXd??? e .....                 bcs     @reterrBadCommand
+0032d6 fe/e0d6: f0 02        ??MXd??c e .....                 beq     LFEE0DA
+0032d8 fe/e0d8: d0 89        ??MXd?zc e ...#.                 bne     @reterrBadCommand

+0032da fe/e0da: c2 30        ??MXd?Zc e ....> LFEE0DA         rep     #$30
                                                               .rwid   longm,longx
+0032dc fe/e0dc: a9 e2 a5     ??mxd?Zc e .....                 lda     #$a5e2
+0032df fe/e0df: 02 24        n?mxd?zc e .....                 cop     COP_24_OPCVD
+0032e1 fe/e0e1: 02 4f        n?mxd?zc e .....                 cop     COP_4F_OPSAV
+0032e3 fe/e0e3: e2 30        n?mxd?zc e .....                 sep     #$30
                                                               .rwid   shortm,shortx
+0032e5 fe/e0e5: 60           n?MXd?zc e ...#.                 rts

+0032e6 fe/e0e6: 82 2b 0d     ??MXd??? e @T.#. OSBYTE77a       brl     OSBYTE_77

+0032e9 fe/e0e9: 00 fe        ??MXd??? e ...#> defaultUSERV    brk     $fe

+0032eb fe/e0eb: 42 61 64 20+            .....                 .zstr   “Bad command”

+0032f7 fe/e0f7: 08           ??MXd?z? e ....> LFEE0F7         php
+0032f8 fe/e0f8: 20 23 de     ??MXd?z? e .....                 jsr     LFEDE23
+0032fb fe/e0fb: 20 8b de     ??MXd??? e .....                 jsr     LFEDE8B
+0032fe fe/e0fe: 90 12        ??MXd??? e .....                 bcc     LFEE112
+003300 fe/e100: 20 bf df     ??MXd??C e .....                 jsr     LFEDFBF
+003303 fe/e103: 20 ce df     ??MXd??? e ....> LFEE103         jsr     LFEDFCE
+003306 fe/e106: b0 0e        ??MXd??? e .....                 bcs     LFEE116
+003308 fe/e108: 20 8b de     ??MXd??c e .....                 jsr     LFEDE8B
+00330b fe/e10b: b0 f6        ??MXd??? e .....                 bcs     LFEE103
+00330d fe/e10d: 28           ??MXd??c e .....                 plp
+00330e fe/e10e: c9 0d        ??MXd?z? e .....                 cmp     #$0d
+003310 fe/e110: 18           ??MXd??? e .....                 clc
+003311 fe/e111: 60           ??MXd??c e ...#.                 rts

+003312 fe/e112: 28           ??MXd??c e ....> LFEE112         plp
+003313 fe/e113: c9 0d        ??MXd?z? e .....                 cmp     #$0d
+003315 fe/e115: 08           ??MXd??? e .....                 php
+003316 fe/e116: 28           ??MXd??? e ....> LFEE116         plp
+003317 fe/e117: 38           ??MXd??? e .....                 sec
+003318 fe/e118: 60           ??MXd??C e ...#.                 rts

+003319 fe/e119: 82 89 02     ??MXd??? e @T.#. starKEY         brl     starKEY2

+00331c fe/e11c: a2 9d        ??MXd??? e @T... starLCB         ldx     #$9d              ;Does OSBYTE &9D
+00331e fe/e11e: 80 0f        N?MXd?z? e ...#.                 bra     LFEE12F

+003320 fe/e120: a2 0c        ??MXd??? e @T... starFX          ldx     #__STGLN
+003322 fe/e122: 22 88 ff 00  n?MXd?z? e .....                 jsl     __ST
+003326 fe/e126: 20 39 de     ??MXd??? e .....                 jsr     LFEDE39
+003329 fe/e129: 90 be        ??MXd??? e .....                 bcc     defaultUSERV
+00332b fe/e12b: da           ??MXd??C e .....                 phx
+00332c fe/e12c: 08           ??MXd??C e .....                 php
+00332d fe/e12d: 80 08        ??MXd??C e ...#.                 bra     LFEE137

+00332f fe/e12f: da           N?MXd?z? e ....> LFEE12F         phx
+003330 fe/e130: 08           N?MXd?z? e .....                 php
+003331 fe/e131: a2 0c        N?MXd?z? e .....                 ldx     #__STGLN
+003333 fe/e133: 22 88 ff 00  n?MXd?z? e .....                 jsl     __ST
+003337 fe/e137: a9 00        ??MXd??? e ....> LFEE137         lda     #$00
+003339 fe/e139: 48           n?MXd?Z? e .....                 pha
                                                               .dbank  $00 (auto)
+00333a fe/e13a: ab           n?MXd?Z? e .....                 plb
+00333b fe/e13b: 85 e0        ??MXd??? e .....                 sta     $e0
+00333d fe/e13d: 85 df        ??MXd??? e .....                 sta     $df
+00333f fe/e13f: 28           ??MXd??? e .....                 plp
+003340 fe/e140: 20 2d de     N?MXd?z? e .....                 jsr     LFEDE2D
+003343 fe/e143: f0 18        ??MXd??? e .....                 beq     LFEE15D
+003345 fe/e145: 20 39 de     ??MXd?z? e .....                 jsr     LFEDE39
+003348 fe/e148: 90 9f        ??MXd??? e .....                 bcc     defaultUSERV
+00334a fe/e14a: 86 e0        ??MXd??C e .....                 stx     $e0
+00334c fe/e14c: 20 2f de     ??MXd??C e .....                 jsr     LFEDE2F
+00334f fe/e14f: f0 0c        ??MXd??? e .....                 beq     LFEE15D
+003351 fe/e151: 20 39 de     ??MXd?z? e .....                 jsr     LFEDE39
+003354 fe/e154: 90 93        ??MXd??? e .....                 bcc     defaultUSERV
+003356 fe/e156: 86 df        ??MXd??C e .....                 stx     $df
+003358 fe/e158: 20 23 de     ??MXd??C e .....                 jsr     LFEDE23
+00335b fe/e15b: d0 8c        ??MXd??? e .....                 bne     defaultUSERV
+00335d fe/e15d: a4 df        ??MXd?Z? e ....> LFEE15D         ldy     $df
+00335f fe/e15f: a6 e0        ??MXd??? e .....                 ldx     $e0
+003361 fe/e161: 68           ??MXd??? e .....                 pla
+003362 fe/e162: 02 06        ??MXd??? e .....                 cop     COP_06_OPOSB
+003364 fe/e164: 18           ??MXd??? e .....                 clc
+003365 fe/e165: 60           ??MXd??c e ...#.                 rts

+003366 fe/e166: a7                      .....                 .dd1    $a7
+003367 fe/e167: aa                      .....                 .dd1    $aa
+003368 fe/e168: a8                      .....                 .dd1    $a8
+003369 fe/e169: a7                      .....                 .dd1    $a7
+00336a fe/e16a: a7                      .....                 .dd1    $a7
+00336b fe/e16b: a7                      .....                 .dd1    $a7
+00336c fe/e16c: a7                      .....                 .dd1    $a7
+00336d fe/e16d: a7                      .....                 .dd1    $a7
+00336e fe/e16e: a9                      .....                 .dd1    $a9
+00336f fe/e16f: 00                      .....                 .dd1    $00
+003370 fe/e170: 00                      .....                 .dd1    $00
+003371 fe/e171: c0                      .....                 .dd1    $c0
+003372 fe/e172: c0                      .....                 .dd1    $c0
+003373 fe/e173: 50                      .....                 .dd1    $50
+003374 fe/e174: 60                      .....                 .dd1    $60
+003375 fe/e175: 70                      .....                 .dd1    $70
+003376 fe/e176: 80                      .....                 .dd1    $80
+003377 fe/e177: 00                      .....                 .dd1    $00
+003378 fe/e178: e0                      ..... LFEE178         .dd1    $e0
+003379 fe/e179: 00                      .....                 .dd1    $00
+00337a fe/e17a: 40                      .....                 .dd1    $40
+00337b fe/e17b: c0                      .....                 .dd1    $c0
+00337c fe/e17c: f0                      .....                 .dd1    $f0
+00337d fe/e17d: f0                      .....                 .dd1    $f0
+00337e fe/e17e: f0                      .....                 .dd1    $f0
+00337f fe/e17f: f0                      .....                 .dd1    $f0
+003380 fe/e180: c0                      .....                 .dd1    $c0

+003381 fe/e181: bd 6f e1     ??MXdI?? e ....> LFEE181         lda     $e16f,x
+003384 fe/e184: 85 f6        ??MXdI?? e .....                 sta     $f6
+003386 fe/e186: bd 66 e1     ??MXdI?? e .....                 lda     $e166,x
+003389 fe/e189: 85 f7        ??MXdI?? e .....                 sta     $f7
+00338b fe/e18b: 64 f8        ??MXdI?? e .....                 stz     $f8
+00338d fe/e18d: 60           ??MXdI?? e ...#.                 rts

                                               ********************************************************************************
                                               * OSBYTE 98 - examing buffer status                                            *
                                               ********************************************************************************
+00338e fe/e18e: e2 40        ??MXd??? e ....> OSBYTE_98       sep     #$40
+003390 fe/e190: 70 01        ?VMXd??? e ...#.                 bvs     callREMV

                                               ********************************************************************************
                                               * OSBYTE 91 - read character from buffer                                       *
                                               ********************************************************************************
+003392 fe/e192: b8           ??MXdI?? e ....> OSBYTE_91       clv
+003393 fe/e193: eb           ??MXd??? e ....> callREMV        xba
+003394 fe/e194: 4b           ??MXd??? e .....                 phk
+003395 fe/e195: af 2d a5 00  ??MXd??? e .....                 ldal    f:SYSVARS_REMV+1
+003399 fe/e199: 48           ??MXd??? e .....                 pha
+00339a fe/e19a: af 2c a5 00  ??MXd??? e .....                 ldal    f:SYSVARS_REMV
+00339e fe/e19e: 48           ??MXd??? e .....                 pha
+00339f fe/e19f: eb           ??MXd??? e .....                 xba
+0033a0 fe/e1a0: 08           ??MXd??? e .....                 php
+0033a1 fe/e1a1: 40           ??MXd??? e ...#.                 rti

+0033a2 fe/e1a2: 8b           ??MXd??? e @T... defaultREMV     phb
+0033a3 fe/e1a3: 08           ??MXd??? e .....                 php
+0033a4 fe/e1a4: 78           ??MXd??? e .....                 sei
+0033a5 fe/e1a5: 4b           ??MXdI?? e .....                 phk
                                                               .dbank  K (auto)
+0033a6 fe/e1a6: ab           ??MXdI?? e .....                 plb
+0033a7 fe/e1a7: bf cc a5 00  ??MXdI?? e .....                 ldal    f:SYSVARS+204,x
+0033ab fe/e1ab: df d5 a5 00  ??MXdI?? e .....                 cmpl    f:$00a5d5,x
+0033af fe/e1af: f0 79        ??MXdI?? e .....                 beq     LFEE22A
+0033b1 fe/e1b1: a8           ??MXdIz? e .....                 tay
+0033b2 fe/e1b2: 20 81 e1     ??MXdI?? e .....                 jsr     LFEE181
+0033b5 fe/e1b5: b7 f6        ??MXdI?? e .....                 lda     [$f6],y
+0033b7 fe/e1b7: 70 1c        ??MXdI?? e .....                 bvs     LFEE1D5
+0033b9 fe/e1b9: 48           ?vMXdI?? e .....                 pha
+0033ba fe/e1ba: c8           ?vMXdI?? e .....                 iny
+0033bb fe/e1bb: 98           ?vMXdI?? e .....                 tya
+0033bc fe/e1bc: d0 03        ?vMXdI?? e .....                 bne     LFEE1C1
+0033be fe/e1be: bd 78 e1     ?vMXdIZ? e .....                 lda     LFEE178 & $ffff,x
+0033c1 fe/e1c1: 9f cc a5 00  ?vMXdI?? e ....> LFEE1C1         stal    f:SYSVARS+204,x
+0033c5 fe/e1c5: e0 02        ?vMXdI?? e .....                 cpx     #$02
+0033c7 fe/e1c7: 90 0b        ?vMXdI?? e .....                 bcc     LFEE1D4
+0033c9 fe/e1c9: df d5 a5 00  ?vMXdI?C e .....                 cmpl    f:$00a5d5,x
+0033cd fe/e1cd: d0 05        ?vMXdI?? e .....                 bne     LFEE1D4
+0033cf fe/e1cf: a0 00        ?vMXdIZ? e .....                 ldy     #$00
+0033d1 fe/e1d1: 20 73 e5     nvMXdIZ? e .....                 jsr     LFEE573
+0033d4 fe/e1d4: 68           ??MXdI?? e ....> LFEE1D4         pla
+0033d5 fe/e1d5: a8           ??MXdI?? e ....> LFEE1D5         tay
+0033d6 fe/e1d6: 28           ??MXdI?? e .....                 plp
+0033d7 fe/e1d7: 18           ??MXd??? e .....                 clc
+0033d8 fe/e1d8: ab           ??MXd??c e .....                 plb
+0033d9 fe/e1d9: 60           ??MXd??c e ...#.                 rts

+0033da fe/e1da: 98           ??MXd?z? e ....> LFEE1DA         tya
+0033db fe/e1db: a0 02        ??MXd??? e .....                 ldy     #$02
+0033dd fe/e1dd: 20 73 e5     n?MXd?z? e .....                 jsr     LFEE573
+0033e0 fe/e1e0: a8           ??MXd??? e .....                 tay
                                               ********************************************************************************
                                               * OSBYTE 8A - place char in buffer                                             *
                                               *                                                                              *
                                               *    X=buffer number                                                           *
                                               *    Y=character to place                                                      *
                                               ********************************************************************************
+0033e1 fe/e1e1: 98           ??MXd??? e ....> OSBYTE_8A       tya
+0033e2 fe/e1e2: eb           ??MXd??? e ....> callINSV        xba
+0033e3 fe/e1e3: 4b           ??MXd??? e .....                 phk
+0033e4 fe/e1e4: af 2b a5 00  ??MXd??? e .....                 ldal    f:SYSVARS_INSV+1
+0033e8 fe/e1e8: 48           ??MXd??? e .....                 pha
+0033e9 fe/e1e9: af 2a a5 00  ??MXd??? e .....                 ldal    f:SYSVARS_INSV
+0033ed fe/e1ed: 48           ??MXd??? e .....                 pha
+0033ee fe/e1ee: eb           ??MXd??? e .....                 xba
+0033ef fe/e1ef: 08           ??MXd??? e .....                 php
+0033f0 fe/e1f0: 40           ??MXd??? e ...#.                 rti

+0033f1 fe/e1f1: 8b           ??MXd??? e @T... defaultINSV     phb
+0033f2 fe/e1f2: 08           ??MXd??? e .....                 php
+0033f3 fe/e1f3: 78           ??MXd??? e .....                 sei
+0033f4 fe/e1f4: 4b           ??MXdI?? e .....                 phk
                                                               .dbank  K (auto)
+0033f5 fe/e1f5: ab           ??MXdI?? e .....                 plb
+0033f6 fe/e1f6: 48           ??MXdI?? e .....                 pha
+0033f7 fe/e1f7: bf d5 a5 00  ??MXdI?? e .....                 ldal    f:$00a5d5,x
+0033fb fe/e1fb: a8           ??MXdI?? e .....                 tay
+0033fc fe/e1fc: c8           ??MXdI?? e .....                 iny
+0033fd fe/e1fd: d0 03        ??MXdI?? e .....                 bne     LFEE202
+0033ff fe/e1ff: bc 78 e1     ??MXdIZ? e .....                 ldy     LFEE178 & $ffff,x
+003402 fe/e202: 98           ??MXdI?? e ....> LFEE202         tya
+003403 fe/e203: df cc a5 00  ??MXdI?? e .....                 cmpl    f:SYSVARS+204,x
+003407 fe/e207: f0 15        ??MXdI?? e .....                 beq     LFEE21E
+003409 fe/e209: 48           ??MXdIz? e .....                 pha
+00340a fe/e20a: bf d5 a5 00  ??MXdIz? e .....                 ldal    f:$00a5d5,x
+00340e fe/e20e: a8           ??MXdI?? e .....                 tay
+00340f fe/e20f: 68           ??MXdI?? e .....                 pla
+003410 fe/e210: 9f d5 a5 00  ??MXdI?? e .....                 stal    f:$00a5d5,x
+003414 fe/e214: 20 81 e1     ??MXdI?? e .....                 jsr     LFEE181
+003417 fe/e217: 68           ??MXdI?? e .....                 pla
+003418 fe/e218: 97 f6        ??MXdI?? e .....                 sta     [$f6],y
+00341a fe/e21a: 28           ??MXdI?? e .....                 plp
+00341b fe/e21b: 18           ??MXd??? e .....                 clc
+00341c fe/e21c: ab           ??MXd??c e .....                 plb
+00341d fe/e21d: 60           ??MXd??c e ...#.                 rts

+00341e fe/e21e: 68           ??MXdIZ? e ....> LFEE21E         pla
+00341f fe/e21f: e0 02        ??MXdI?? e .....                 cpx     #$02
+003421 fe/e221: b0 07        ??MXdI?? e .....                 bcs     LFEE22A
+003423 fe/e223: a0 01        ??MXdI?c e .....                 ldy     #$01
+003425 fe/e225: 20 73 e5     n?MXdIzc e .....                 jsr     LFEE573
+003428 fe/e228: 48           ??MXdI?? e .....                 pha
+003429 fe/e229: 68           ??MXdI?? e .....                 pla
+00342a fe/e22a: 28           ??MXdI?? e ....> LFEE22A         plp
+00342b fe/e22b: 38           ??MXd??? e .....                 sec
+00342c fe/e22c: ab           ??MXd??C e .....                 plb
+00342d fe/e22d: 60           ??MXd??C e ...#.                 rts

+00342e fe/e22e: 8b           ??MXd??? e ....> writeToInputBuffer0 phb
+00342f fe/e22f: f4 00 00     ??MXd??? e .....                 pea     $0000
+003432 fe/e232: ab           ??MXd??? e .....                 plb
+003433 fe/e233: ab           ??MXd??? e .....                 plb
+003434 fe/e234: a2 00        ??MXd??? e .....                 ldx     #$00
                                               ********************************************************************************
                                               * OSBYTE 99 - write character to buffer                                        *
                                               ********************************************************************************
+003436 fe/e236: 8a           n?MXd?Z? e ..... OSBYTE_99       txa
+003437 fe/e237: 2d 45 a5     ??MXd??? e .....                 and     SYSVAR_RS232_MODE
+00343a fe/e23a: d0 a5        ??MXd??? e .....                 bne     OSBYTE_8A
+00343c fe/e23c: 98           ??MXd?Z? e .....                 tya
+00343d fe/e23d: 4f 6c a5 00  ??MXd??? e .....                 eorl    f:SYSVARS_6C_ESCCHAR
+003441 fe/e241: 0f 75 a5 00  ??MXd??? e .....                 oral    f:SYSVARS_75_ESCACTION
+003445 fe/e245: f0 05        ??MXd??? e .....                 beq     @doESCape
+003447 fe/e247: 20 da e1     ??MXd?z? e .....                 jsr     LFEE1DA
+00344a fe/e24a: ab           ??MXd??? e .....                 plb
+00344b fe/e24b: 60           ??MXd??? e ...#.                 rts

+00344c fe/e24c: ad 58 a5     ??MXd?Z? e ....> @doESCape       lda     SYSVAR_58_ESCBRK_EFFECT
+00344f fe/e24f: 6a           ??MXd??? e .....                 ror     A
+003450 fe/e250: 98           ??MXd??? e .....                 tya
+003451 fe/e251: b0 0a        ??MXd??? e .....                 bcs     @noESC            ;Ignore ESCape
+003453 fe/e253: a0 06        ??MXd??c e .....                 ldy     #$06
+003455 fe/e255: 20 73 e5     n?MXd?zc e .....                 jsr     LFEE573
+003458 fe/e258: 90 03        ??MXd??? e .....                 bcc     @noESC
+00345a fe/e25a: 20 a1 e6     ??MXd??C e .....                 jsr     OSBYTE_7D         ;Set ESCape condition
+00345d fe/e25d: 18           ??MXd??? e ....> @noESC          clc
+00345e fe/e25e: ab           ??MXd??c e .....                 plb
+00345f fe/e25f: 60           ??MXd??c e ...#.                 rts

+003460 fe/e260: f4 00 00     n?MXdi?? e ....> INKEY_ctdn      pea     $0000
+003463 fe/e263: ab           n?MXdi?? e .....                 plb
                                                               .dbank  $00
+003464 fe/e264: ab           ??MXdi?? e .....                 plb
+003465 fe/e265: 08           ??MXdi?? e .....                 php
+003466 fe/e266: 78           ??MXdi?? e .....                 sei
+003467 fe/e267: 8e b0 a5     ??MXdI?? e .....                 stx     SYSVARS_B0_INKEYCTDN
+00346a fe/e26a: 8c b1 a5     ??MXdI?? e .....                 sty     SYSVARS_B0_INKEYCTDN+1
+00346d fe/e26d: 28           ??MXdI?? e .....                 plp
+00346e fe/e26e: a9 ff        ??MXdi?? e .....                 lda     #$ff
+003470 fe/e270: 80 02        N?MXdiz? e ...#.                 bra     LFEE274

+003472 fe/e272: a9 00        ??MXd??? e ....> int_OPRDC       lda     #$00
+003474 fe/e274: f4 00 00     ??MXd??? e ....> LFEE274         pea     $0000
+003477 fe/e277: ab           ??MXd??? e .....                 plb
+003478 fe/e278: ab           ??MXd??? e .....                 plb
+003479 fe/e279: 48           ??MXd??? e .....                 pha
+00347a fe/e27a: da           ??MXd??? e .....                 phx
+00347b fe/e27b: 5a           ??MXd??? e .....                 phy
+00347c fe/e27c: 4b           ??MXd??? e .....                 phk
+00347d fe/e27d: 20 9b bf     ??MXd??? e .....                 jsr     LFEBF9B
+003480 fe/e280: c2 10        ??MXd??? e ....> LFEE280         rep     #$10
                                                               .rwid   longx
+003482 fe/e282: a4 d1        ??Mxd??? e .....                 ldy     $d1
+003484 fe/e284: f0 17        ??Mxd??? e .....                 beq     LFEE29D
+003486 fe/e286: 38           ??Mxd?z? e .....                 sec
+003487 fe/e287: 66 e6        ??Mxd?zC e .....                 ror     $e6
+003489 fe/e289: 8b           N?Mxd?z? e .....                 phb
+00348a fe/e28a: 20 9d ed     N?Mxd?z? e .....                 jsr     default__BGET
+00348d fe/e28d: ab           ??Mxd??? e .....                 plb
+00348e fe/e28e: 08           ??Mxd??? e .....                 php
+00348f fe/e28f: 46 e6        ??Mxd??? e .....                 lsr     $e6
+003491 fe/e291: 28           n?Mxd??? e .....                 plp
+003492 fe/e292: e2 10        ??Mxd??? e .....                 sep     #$10
                                                               .rwid   shortx
+003494 fe/e294: 90 52        ??MXd??? e .....                 bcc     LFEE2E8
+003496 fe/e296: 8b           ??MXd??C e .....                 phb
+003497 fe/e297: 20 14 ee     ??MXd??C e .....                 jsr     OSBYTE_77
+00349a fe/e29a: ab           ??MXd??? e .....                 plb
+00349b fe/e29b: 80 e3        ??MXd??? e ...#.                 bra     LFEE280

+00349d fe/e29d: e2 10        ??M?d??? e ....> LFEE29D         sep     #$10
+00349f fe/e29f: da           ??MXd??? e .....                 phx
+0034a0 fe/e2a0: a9 00        ??MXd??? e .....                 lda     #$00
+0034a2 fe/e2a2: eb           n?MXd?Z? e .....                 xba
+0034a3 fe/e2a3: a9 03        ??MXd??? e .....                 lda     #$03
+0034a5 fe/e2a5: a2 02        n?MXd?z? e .....                 ldx     #$02
+0034a7 fe/e2a7: 22 b0 ff 00  n?MXd?z? e .....                 jsl     __EV
+0034ab fe/e2ab: fa           ??MXd??? e .....                 plx
+0034ac fe/e2ac: b0 37        ??MXd??? e .....                 bcs     LFEE2E5
+0034ae fe/e2ae: ad 68 a5     ??MXd??c e .....                 lda     SYSVAR_SOFTKEY_STRLEN
+0034b1 fe/e2b1: f0 06        ??MXd??c e .....                 beq     LFEE2B9
+0034b3 fe/e2b3: 20 2c e4     ??MXd?zc e .....                 jsr     LFEE42C
+0034b6 fe/e2b6: 18           ??MXd??? e .....                 clc
+0034b7 fe/e2b7: 80 2f        ??MXd??c e ...#.                 bra     LFEE2E8

+0034b9 fe/e2b9: 08           ??MXd?Zc e ....> LFEE2B9         php
+0034ba fe/e2ba: 78           ??MXd?Zc e .....                 sei
+0034bb fe/e2bb: 02 21        ??MXdIZc e .....                 cop     COP_21_OPPRE
+0034bd fe/e2bd: b0 21        ??MXdIZc e ..!..                 bcs     LFEE2E0
+0034bf fe/e2bf: ae 41 a5     ??MXdIZc e .....                 ldx     SYSVAR_41_input_stream
+0034c2 fe/e2c2: 20 55 e3     ??MXdI?c e .....                 jsr     LFEE355
+0034c5 fe/e2c5: b0 04        ??MXdI?? e .....                 bcs     LFEE2CB
+0034c7 fe/e2c7: 28           ??MXdI?c e .....                 plp
+0034c8 fe/e2c8: 18           ??MXd?Zc e .....                 clc
+0034c9 fe/e2c9: 80 1d        ??MXd?Zc e ...#.                 bra     LFEE2E8

+0034cb fe/e2cb: 28           ??MXdI?C e ....> LFEE2CB         plp
+0034cc fe/e2cc: 38           ??MXd?Zc e .....                 sec
+0034cd fe/e2cd: a3 03        ??MXd?ZC e .....                 lda     $03,S
+0034cf fe/e2cf: 10 cc        ??MXd??C e .....                 bpl     LFEE29D
+0034d1 fe/e2d1: 08           N?MXd??C e .....                 php
+0034d2 fe/e2d2: 78           N?MXd??C e .....                 sei
+0034d3 fe/e2d3: ad b0 a5     N?MXdI?C e .....                 lda     SYSVARS_B0_INKEYCTDN
+0034d6 fe/e2d6: 0d b1 a5     ??MXdI?C e .....                 ora     SYSVARS_B0_INKEYCTDN+1
+0034d9 fe/e2d9: 28           ??MXdI?C e .....                 plp
+0034da fe/e2da: 49 00        N?MXd??C e .....                 eor     #$00
+0034dc fe/e2dc: d0 bf        ??MXd??C e .....                 bne     LFEE29D
+0034de fe/e2de: 80 0a        ??MXd?ZC e ...#.                 bra     LFEE2EA

+0034e0 fe/e2e0: 28           ??MXd??? e @T... LFEE2E0         plp
+0034e1 fe/e2e1: a9 00        N?MXd??C e .....                 lda     #$00
+0034e3 fe/e2e3: 80 02        n?MXd?ZC e ...#.                 bra     LFEE2E7

+0034e5 fe/e2e5: a9 1b        ??MXd??C e ....> LFEE2E5         lda     #$1b
+0034e7 fe/e2e7: 38           n?MXd??C e ....> LFEE2E7         sec
+0034e8 fe/e2e8: 83 03        ??MXd??? e ....> LFEE2E8         sta     $03,S
+0034ea fe/e2ea: 7a           ??MXd??? e ....> LFEE2EA         ply
+0034eb fe/e2eb: fa           ??MXd??? e .....                 plx
+0034ec fe/e2ec: 68           ??MXd??? e .....                 pla
+0034ed fe/e2ed: 60           ??MXd??? e ...#.                 rts

+0034ee fe/e2ee: 6a           ??MXdIz? e ....> LFEE2EE         ror     A
+0034ef fe/e2ef: 68           ??MXdI?? e .....                 pla
+0034f0 fe/e2f0: b0 12        ??MXdI?? e .....                 bcs     LFEE304
+0034f2 fe/e2f2: 98           ??MXdI?c e ....> LFEE2F2         tya
+0034f3 fe/e2f3: 48           ??MXdI?c e .....                 pha
+0034f4 fe/e2f4: 20 4e e4     ??MXdI?c e .....                 jsr     LFEE44E
+0034f7 fe/e2f7: c9 01        ??MXdI?? e .....                 cmp     #$01
+0034f9 fe/e2f9: d0 03        ??MXdI?? e .....                 bne     LFEE2FE
+0034fb fe/e2fb: 82 5d 00     ??MXdIZ? e ...#.                 brl     LFEE35B

+0034fe fe/e2fe: 68           ??MXdIz? e ....> LFEE2FE         pla
+0034ff fe/e2ff: 90 0a        ??MXdI?? e .....                 bcc     LFEE30B
+003501 fe/e301: 20 59 e4     ??MXdI?C e .....                 jsr     LFEE459
+003504 fe/e304: 18           ??MXdI?? e ....> LFEE304         clc
+003505 fe/e305: 60           ??MXdI?c e ...#.                 rts

+003506 fe/e306: 20 e0 e8     ??MXdIZ? e ....> LFEE306         jsr     Serv8_QRY
+003509 fe/e309: 68           ??MXdI?? e .....                 pla
+00350a fe/e30a: aa           ??MXdI?? e .....                 tax
+00350b fe/e30b: 20 92 e1     ??MXdI?? e ....> LFEE30B         jsr     OSBYTE_91
+00350e fe/e30e: b0 48        ??MXdI?? e .....                 bcs     LFEE358
+003510 fe/e310: e0 01        ??MXdI?c e .....                 cpx     #$01
+003512 fe/e312: d0 05        ??MXdI?? e .....                 bne     LFEE319
+003514 fe/e314: ac 45 a5     ??MXdIZ? e .....                 ldy     SYSVAR_RS232_MODE
+003517 fe/e317: d0 3e        ??MXdI?? e .....                 bne     LFEE357
+003519 fe/e319: a8           ??MXdI?? e ....> LFEE319         tay
+00351a fe/e31a: c9 80        ??MXdI?? e .....                 cmp     #$80
+00351c fe/e31c: 90 39        ??MXdI?? e .....                 bcc     LFEE357
+00351e fe/e31e: 29 0f        ??MXdI?C e .....                 and     #$0f
+003520 fe/e320: c9 0b        n?MXdI?C e .....                 cmp     #$0b
+003522 fe/e322: 90 ce        ??MXdI?? e .....                 bcc     LFEE2F2
+003524 fe/e324: 20 48 e4     ??MXdI?C e .....                 jsr     LFEE448
+003527 fe/e327: 48           ??MXdI?? e .....                 pha
+003528 fe/e328: ad 7d a5     ??MXdI?? e .....                 lda     SYSVARS+125
+00352b fe/e32b: d0 c1        ??MXdI?? e .....                 bne     LFEE2EE
+00352d fe/e32d: ad 7c a5     ??MXdIZ? e .....                 lda     SYSVARS_7C_OUTDEST
+003530 fe/e330: 6a           ??MXdI?? e .....                 ror     A
+003531 fe/e331: 6a           ??MXdI?? e .....                 ror     A
+003532 fe/e332: 68           ??MXdI?? e .....                 pla
+003533 fe/e333: b0 d6        ??MXdI?? e .....                 bcs     LFEE30B
+003535 fe/e335: c9 87        ??MXdI?c e .....                 cmp     #$87
+003537 fe/e337: d0 10        ??MXdI?? e .....                 bne     LFEE349
+003539 fe/e339: 8a           ??MXdIZ? e .....                 txa
+00353a fe/e33a: 48           ??MXdI?? e .....                 pha
+00353b fe/e33b: a2 26        ??MXdI?? e .....                 ldx     #$26
+00353d fe/e33d: 4b           n?MXdIz? e .....                 phk
+00353e fe/e33e: 20 38 fe     n?MXdIz? e .....                 jsr     callModVDU
+003541 fe/e341: a8           ??MXdI?? e .....                 tay
+003542 fe/e342: f0 c2        ??MXdI?? e .....                 beq     LFEE306
+003544 fe/e344: 68           ??MXdIz? e .....                 pla
+003545 fe/e345: aa           ??MXdI?? e .....                 tax
+003546 fe/e346: 98           ??MXdI?? e .....                 tya
+003547 fe/e347: 18           ??MXdI?? e .....                 clc
+003548 fe/e348: 60           ??MXdI?c e ...#.                 rts

+003549 fe/e349: a8           ??MXdIz? e ....> LFEE349         tay
+00354a fe/e34a: 8a           ??MXdI?? e .....                 txa
+00354b fe/e34b: 48           ??MXdI?? e .....                 pha
+00354c fe/e34c: 98           ??MXdI?? e .....                 tya
+00354d fe/e34d: a2 28        ??MXdI?? e .....                 ldx     #$28
+00354f fe/e34f: 4b           n?MXdIz? e .....                 phk
+003550 fe/e350: 20 38 fe     n?MXdIz? e .....                 jsr     callModVDU
+003553 fe/e353: 68           ??MXdI?? e .....                 pla
+003554 fe/e354: aa           ??MXdI?? e .....                 tax
+003555 fe/e355: 80 b4        ??MXdI?? e ...#> LFEE355         bra     LFEE30B

+003557 fe/e357: 18           ??MXdI?? e ....> LFEE357         clc
+003558 fe/e358: b0 19        ??MXdI?? e ....> LFEE358         bcs     LFEE373
+00355a fe/e35a: 60           ??MXdI?c e ...#.                 rts

+00355b fe/e35b: 68           ??MXdIZ? e ....> LFEE35B         pla
+00355c fe/e35c: 20 18 e4     ??MXdI?? e .....                 jsr     LFEE418
+00355f fe/e35f: 20 1b e4     ??MXdI?? e .....                 jsr     LFEE41B
+003562 fe/e362: 80 f1        ??MXdI?? e ...#.                 bra     LFEE355

+003564 fe/e364: a9 06        ??MXd??? e @T...                 lda     #$06
+003566 fe/e366: eb           ??MXd??? e ....> QOSBY_VECTORthruA524 xba
+003567 fe/e367: 4b           ??MXd??? e .....                 phk
+003568 fe/e368: ad 25 a5     ??MXd??? e .....                 lda     QOSBY_VECTOR+1
+00356b fe/e36b: 48           ??MXd??? e .....                 pha
+00356c fe/e36c: ad 24 a5     ??MXd??? e .....                 lda     QOSBY_VECTOR
+00356f fe/e36f: 48           ??MXd??? e .....                 pha
+003570 fe/e370: eb           ??MXd??? e .....                 xba
+003571 fe/e371: 08           ??MXd??? e .....                 php                       ;jump to address - why not just jmp (X) as bank is 0?
+003572 fe/e372: 40           ??MXd??? e ...#.                 rti

+003573 fe/e373: 48           ??MXdI?C e ....> LFEE373         pha
+003574 fe/e374: 20 18 ec     ??MXdI?C e .....                 jsr     LFEEC18
+003577 fe/e377: 68           ??MXdI?? e .....                 pla
+003578 fe/e378: 38           ??MXdI?? e .....                 sec
+003579 fe/e379: 60           ??MXdI?C e ...#.                 rts

                                               ; QRY suspect next two are dead code for rom select or something?
+00357a fe/e37a: 8a           ??MXd??? e @T...                 txa
+00357b fe/e37b: a9 08        ??MXd??? e .....                 lda     #$08
+00357d fe/e37d: 85 f0        n?MXd?z? e .....                 sta     $f0
+00357f fe/e37f: 8f 05 fe 45  n?MXd?z? e .....                 stal    sheila_ULA_PAG_IRQCLR
+003583 fe/e383: 60           n?MXd?z? e ...#.                 rts

+003584 fe/e384: 48           ??MXd??? e @T...                 pha
+003585 fe/e385: a9 0c        ??MXd??? e .....                 lda     #$0c
+003587 fe/e387: 8f 05 fe 45  n?MXd?z? e .....                 stal    sheila_ULA_PAG_IRQCLR
+00358b fe/e38b: 68           n?MXd?z? e .....                 pla
+00358c fe/e38c: 60           ??MXd??? e ...#.                 rts

+00358d fe/e38d: 60                      .....                 .dd1    $60

+00358e fe/e38e: 7a           ??MXd??C e ....> LFEE38E         ply
+00358f fe/e38f: 90 03        ??MXd??C e ..!.> LFEE38F         bcc     LFEE394
+003591 fe/e391: 28           ??MXd??C e .....                 plp
+003592 fe/e392: 38           ?vMXdI?? e .....                 sec
+003593 fe/e393: 60           ?vMXdI?C e ...#.                 rts

+003594 fe/e394: 28           ??MXd??? e @T... LFEE394         plp
+003595 fe/e395: 18           ??MXd??? e .....                 clc
+003596 fe/e396: 60           ??MXd??c e ...#.                 rts

+003597 fe/e397: 02 26        ??MXd??? e ....> @reterrBadKey   cop     COP_26_OPBHA
+003599 fe/e399: 42 61 64 20+            .T...                 .zstr   “Bad key”
+0035a1 fe/e3a1: a2 01        ??MXd??? e .....                 ldx     #$01
+0035a3 fe/e3a3: 38           n?MXd?z? e .....                 sec
+0035a4 fe/e3a4: 60           n?MXd?zC e ...#.                 rts

+0035a5 fe/e3a5: a2 0c        ??MXd??? e ....> starKEY2        ldx     #__STGLN
+0035a7 fe/e3a7: 22 88 ff 00  n?MXd?z? e .....                 jsl     __ST
+0035ab fe/e3ab: f4 00 00     ??MXd??? e .....                 pea     $0000
+0035ae fe/e3ae: ab           ??MXd??? e .....                 plb
+0035af fe/e3af: ab           ??MXd??? e .....                 plb
+0035b0 fe/e3b0: 20 39 de     ??MXd??? e .....                 jsr     LFEDE39
+0035b3 fe/e3b3: 90 e2        ??MXd??? e .....                 bcc     @reterrBadKey
+0035b5 fe/e3b5: e0 10        ??MXd??C e .....                 cpx     #$10
+0035b7 fe/e3b7: b0 de        ??MXd??? e .....                 bcs     @reterrBadKey
+0035b9 fe/e3b9: 20 2f de     ??MXd??c e .....                 jsr     LFEDE2F
+0035bc fe/e3bc: 08           ??MXd??? e .....                 php
+0035bd fe/e3bd: ae 10 ab     ??MXd??? e .....                 ldx     SYSFNK+16
+0035c0 fe/e3c0: 98           ??MXd??? e .....                 tya
+0035c1 fe/e3c1: 48           ??MXd??? e .....                 pha
+0035c2 fe/e3c2: 20 bd e4     ??MXd??? e .....                 jsr     LFEE4BD
+0035c5 fe/e3c5: b0 c7        ??MXd??? e .....                 bcs     LFEE38E
+0035c7 fe/e3c7: 68           ??MXd??c e .....                 pla
+0035c8 fe/e3c8: a8           ??MXd??c e .....                 tay
+0035c9 fe/e3c9: 28           ??MXd??c e .....                 plp
+0035ca fe/e3ca: d0 02        ??MXd??? e .....                 bne     LFEE3CE
+0035cc fe/e3cc: 18           ??MXd?Z? e .....                 clc
+0035cd fe/e3cd: 60           ??MXd?Zc e ...#.                 rts

+0035ce fe/e3ce: da           ??MXd??? e ....> LFEE3CE         phx
+0035cf fe/e3cf: a2 0e        ??MXd??? e .....                 ldx     #__STGRD          ;GSREAD
+0035d1 fe/e3d1: 22 88 ff 00  n?MXd?z? e .....                 jsl     __ST
+0035d5 fe/e3d5: fa           ??MXd??? e .....                 plx
+0035d6 fe/e3d6: b0 0a        ??MXd??? e .....                 bcs     LFEE3E2
+0035d8 fe/e3d8: e8           ??MXd??c e .....                 inx
+0035d9 fe/e3d9: f0 bc        ??MXd??c e .....                 beq     @reterrBadKey
+0035db fe/e3db: ca           ??MXd?zc e .....                 dex
+0035dc fe/e3dc: 20 67 e5     ??MXd??c e .....                 jsr     Fnkey_StoreXpl1
+0035df fe/e3df: e8           ??MXd??? e .....                 inx
+0035e0 fe/e3e0: 80 ec        ??MXd??? e ...#.                 bra     LFEE3CE

+0035e2 fe/e3e2: c9 0d        ??MXd??C e ....> LFEE3E2         cmp     #$0d
+0035e4 fe/e3e4: d0 b1        ??MXd??? e .....                 bne     @reterrBadKey
+0035e6 fe/e3e6: 08           ??MXd?Z? e .....                 php
+0035e7 fe/e3e7: 78           ??MXd?Z? e .....                 sei
+0035e8 fe/e3e8: 20 bd e4     ??MXdIZ? e .....                 jsr     LFEE4BD
+0035eb fe/e3eb: b0 a2        ??MXdI?? e .....                 bcs     LFEE38F
+0035ed fe/e3ed: a2 10        ??MXdI?c e .....                 ldx     #$10
+0035ef fe/e3ef: e4 e1        n?MXdI?? e ....> LFEE3EF         cpx     $e1
+0035f1 fe/e3f1: f0 1f        ??MXdI?? e .....                 beq     LFEE412
+0035f3 fe/e3f3: 08           ??MXdIz? e .....                 php
+0035f4 fe/e3f4: da           ??MXdIz? e .....                 phx
+0035f5 fe/e3f5: da           ??MXdIz? e .....                 phx
+0035f6 fe/e3f6: bb           ??MXdIz? e .....                 tyx
+0035f7 fe/e3f7: 20 6b e5     ??MXdI?? e .....                 jsr     FnKey_LoadX
+0035fa fe/e3fa: fa           ??MXdI?? e .....                 plx
+0035fb fe/e3fb: 48           ??MXdI?? e .....                 pha
+0035fc fe/e3fc: 20 6b e5     ??MXdI?? e .....                 jsr     FnKey_LoadX
+0035ff fe/e3ff: 48           ??MXdI?? e .....                 pha
+003600 fe/e400: c3 02        ??MXdI?? e .....                 cmp     $02,S
+003602 fe/e402: 08           ??MXdI?? e .....                 php
+003603 fe/e403: 68           ??MXdI?? e .....                 pla
+003604 fe/e404: 83 04        ??MXdI?? e .....                 sta     $04,S
+003606 fe/e406: 68           ??MXdI?? e .....                 pla
+003607 fe/e407: fa           ??MXdI?? e .....                 plx
+003608 fe/e408: fa           ??MXdI?? e .....                 plx
+003609 fe/e409: 28           ??MXdI?? e .....                 plp
+00360a fe/e40a: d0 06        ??MXdI?? e .....                 bne     LFEE412
+00360c fe/e40c: ad 10 ab     ??MXdIZ? e .....                 lda     SYSFNK+16
+00360f fe/e40f: 20 6f e5     ??MXdI?? e .....                 jsr     FnKey_StoreX
+003612 fe/e412: ca           ??MXdI?? e ....> LFEE412         dex
+003613 fe/e413: 10 da        ??MXdI?? e .....                 bpl     LFEE3EF
+003615 fe/e415: 28           N?MXdI?? e .....                 plp
+003616 fe/e416: 18           ??MXdI?? e .....                 clc
+003617 fe/e417: 60           ??MXdI?c e ...#.                 rts

+003618 fe/e418: 29 0f        ??MXdI?? e ....> LFEE418         and     #$0f
+00361a fe/e41a: 60           n?MXdI?? e ...#.                 rts

+00361b fe/e41b: a8           ??MXdI?? e ....> LFEE41B         tay
+00361c fe/e41c: 20 79 e4     ??MXdI?? e .....                 jsr     LFEE479
+00361f fe/e41f: 8d 68 a5     ??MXdI?? e .....                 sta     SYSVAR_SOFTKEY_STRLEN
+003622 fe/e422: da           ??MXdI?? e .....                 phx
+003623 fe/e423: bb           ??MXdI?? e .....                 tyx
+003624 fe/e424: 20 6b e5     ??MXdI?? e .....                 jsr     FnKey_LoadX
+003627 fe/e427: fa           ??MXdI?? e .....                 plx
+003628 fe/e428: 8d 79 a5     ??MXdI?? e .....                 sta     SYSVARS+121
+00362b fe/e42b: 60           ??MXdI?? e ...#.                 rts

+00362c fe/e42c: da           ??MXd?zc e ....> LFEE42C         phx
+00362d fe/e42d: ae 79 a5     ??MXd?zc e .....                 ldx     SYSVARS+121
+003630 fe/e430: 20 63 e5     ??MXd??c e .....                 jsr     FnKey_LoadXpl1
+003633 fe/e433: ee 79 a5     ??MXd??? e .....                 inc     SYSVARS+121
+003636 fe/e436: ce 68 a5     ??MXd??? e .....                 dec     SYSVAR_SOFTKEY_STRLEN
+003639 fe/e439: eb           ??MXd??? e .....                 xba
+00363a fe/e43a: ad 68 a5     ??MXd??? e .....                 lda     SYSVAR_SOFTKEY_STRLEN
+00363d fe/e43d: eb           ??MXd??? e .....                 xba
+00363e fe/e43e: fa           ??MXd??? e .....                 plx
+00363f fe/e43f: 60           ??MXd??? e ...#.                 rts

+003640 fe/e440: 48                      .....                 .dd1    $48
+003641 fe/e441: a9                      .....                 .dd1    $a9
+003642 fe/e442: 01                      .....                 .dd1    $01
+003643 fe/e443: 8d                      .....                 .dd1    $8d
+003644 fe/e444: 68                      .....                 .dd1    $68
+003645 fe/e445: a5                      .....                 .dd1    $a5
+003646 fe/e446: 68                      .....                 .dd1    $68
+003647 fe/e447: 60                      .....                 .dd1    $60

+003648 fe/e448: 38           ??MXdI?C e ....> LFEE448         sec
+003649 fe/e449: 29 0f        ??MXdI?C e .....                 and     #$0f
+00364b fe/e44b: 69 7b        n?MXdI?C e .....                 adc     #$7b
+00364d fe/e44d: 60           ??MXdI?? e ...#.                 rts

+00364e fe/e44e: 4a           ??MXdI?? e ....> LFEE44E         lsr     A
+00364f fe/e44f: 4a           n?MXdI?? e .....                 lsr     A
+003650 fe/e450: 4a           n?MXdI?? e .....                 lsr     A
+003651 fe/e451: 4a           n?MXdI?? e .....                 lsr     A
+003652 fe/e452: 49 04        n?MXdI?? e .....                 eor     #$04
+003654 fe/e454: a8           ??MXdI?? e .....                 tay
+003655 fe/e455: b9 65 a5     ??MXdI?? e .....                 lda     SYSVARS+101,y
+003658 fe/e458: 60           ??MXdI?? e ...#.                 rts

+003659 fe/e459: 48           ??MXdI?C e ....> LFEE459         pha
+00365a fe/e45a: 20 4e e4     ??MXdI?C e .....                 jsr     LFEE44E
+00365d fe/e45d: 68           ??MXdI?? e .....                 pla
+00365e fe/e45e: 29 0f        ??MXdI?? e .....                 and     #$0f
+003660 fe/e460: 18           n?MXdI?? e .....                 clc
+003661 fe/e461: 79 65 a5     n?MXdI?c e .....                 adc     SYSVARS+101,y
+003664 fe/e464: 60           ??MXdI?? e ...#.                 rts

                                               ; Character buffer interpretation settings
+003665 fe/e465: da           ??MXd??c e ....> OSBYTE_DDtoE4   phx
+003666 fe/e466: 5a           ??MXd??c e .....                 phy
+003667 fe/e467: 38           ??MXd??c e .....                 sec
+003668 fe/e468: e9 dd        ??MXd??C e .....                 sbc     #$dd
+00366a fe/e46a: a8           ??MXd??? e .....                 tay
+00366b fe/e46b: b9 6d a5     ??MXd??? e .....                 lda     SYSVARS+109,y
+00366e fe/e46e: aa           ??MXd??? e .....                 tax
+00366f fe/e46f: 23 01        ??MXd??? e .....                 and     $01,S
+003671 fe/e471: 43 02        ??MXd??? e .....                 eor     $02,S
+003673 fe/e473: 99 6d a5     ??MXd??? e .....                 sta     SYSVARS+109,y
+003676 fe/e476: 68           ??MXd??? e .....                 pla
+003677 fe/e477: 68           ??MXd??? e .....                 pla
+003678 fe/e478: 60           ??MXd??? e ...#.                 rts

+003679 fe/e479: 08           ??MXdI?? e ....> LFEE479         php
+00367a fe/e47a: 78           ??MXdI?? e .....                 sei
+00367b fe/e47b: ad 10 ab     ??MXdI?? e .....                 lda     SYSFNK+16
+00367e fe/e47e: 38           ??MXdI?? e .....                 sec
+00367f fe/e47f: da           ??MXdI?C e .....                 phx
+003680 fe/e480: 48           ??MXdI?C e .....                 pha
+003681 fe/e481: bb           ??MXdI?C e .....                 tyx
+003682 fe/e482: 20 6b e5     ??MXdI?C e .....                 jsr     FnKey_LoadX
+003685 fe/e485: fa           ??MXdI?? e .....                 plx
+003686 fe/e486: 48           ??MXdI?? e .....                 pha
+003687 fe/e487: 8a           ??MXdI?? e .....                 txa
+003688 fe/e488: e3 01        ??MXdI?? e .....                 sbc     $01,S
+00368a fe/e48a: fa           ??MXdI?? e .....                 plx
+00368b fe/e48b: fa           ??MXdI?? e .....                 plx
+00368c fe/e48c: 85 f5        ??MXdI?? e .....                 sta     $f5
+00368e fe/e48e: 8a           ??MXdI?? e .....                 txa
+00368f fe/e48f: 48           ??MXdI?? e .....                 pha
+003690 fe/e490: a2 10        ??MXdI?? e .....                 ldx     #$10
+003692 fe/e492: 08           n?MXdI?? e ....> LFEE492         php
+003693 fe/e493: da           n?MXdI?? e .....                 phx
+003694 fe/e494: da           n?MXdI?? e .....                 phx
+003695 fe/e495: bb           n?MXdI?? e .....                 tyx
+003696 fe/e496: 20 6b e5     ??MXdI?? e .....                 jsr     FnKey_LoadX
+003699 fe/e499: fa           ??MXdI?? e .....                 plx
+00369a fe/e49a: 48           ??MXdI?? e .....                 pha
+00369b fe/e49b: 20 6b e5     ??MXdI?? e .....                 jsr     FnKey_LoadX
+00369e fe/e49e: 38           ??MXdI?? e .....                 sec
+00369f fe/e49f: e3 01        ??MXdI?C e .....                 sbc     $01,S
+0036a1 fe/e4a1: 48           ??MXdI?? e .....                 pha
+0036a2 fe/e4a2: 08           ??MXdI?? e .....                 php
+0036a3 fe/e4a3: 68           ??MXdI?? e .....                 pla
+0036a4 fe/e4a4: 83 04        ??MXdI?? e .....                 sta     $04,S
+0036a6 fe/e4a6: 68           ??MXdI?? e .....                 pla
+0036a7 fe/e4a7: fa           ??MXdI?? e .....                 plx
+0036a8 fe/e4a8: fa           ??MXdI?? e .....                 plx
+0036a9 fe/e4a9: 28           ??MXdI?? e .....                 plp
+0036aa fe/e4aa: 90 08        ??MXdI?? e .....                 bcc     LFEE4B4
+0036ac fe/e4ac: f0 06        ??MXdI?C e .....                 beq     LFEE4B4
+0036ae fe/e4ae: c5 f5        ??MXdIzC e .....                 cmp     $f5
+0036b0 fe/e4b0: b0 02        ??MXdI?? e .....                 bcs     LFEE4B4
+0036b2 fe/e4b2: 85 f5        ??MXdI?c e .....                 sta     $f5
+0036b4 fe/e4b4: ca           ??MXdI?? e ....> LFEE4B4         dex
+0036b5 fe/e4b5: 10 db        ??MXdI?? e .....                 bpl     LFEE492
+0036b7 fe/e4b7: 68           N?MXdI?? e .....                 pla
+0036b8 fe/e4b8: aa           ??MXdI?? e .....                 tax
+0036b9 fe/e4b9: a5 f5        ??MXdI?? e .....                 lda     $f5
+0036bb fe/e4bb: 28           ??MXdI?? e .....                 plp
+0036bc fe/e4bc: 60           ??MXdI?? e ...#.                 rts

+0036bd fe/e4bd: 08           ??MXd??? e ....> LFEE4BD         php
+0036be fe/e4be: 78           ??MXd??? e .....                 sei
+0036bf fe/e4bf: 8a           ??MXdI?? e .....                 txa
+0036c0 fe/e4c0: 48           ??MXdI?? e .....                 pha
+0036c1 fe/e4c1: a4 e1        ??MXdI?? e .....                 ldy     $e1
+0036c3 fe/e4c3: 20 79 e4     ??MXdI?? e .....                 jsr     LFEE479
+0036c6 fe/e4c6: 85 f5        ??MXdI?? e .....                 sta     $f5
+0036c8 fe/e4c8: da           ??MXdI?? e .....                 phx
+0036c9 fe/e4c9: bb           ??MXdI?? e .....                 tyx
+0036ca fe/e4ca: 20 6b e5     ??MXdI?? e .....                 jsr     FnKey_LoadX
+0036cd fe/e4cd: fa           ??MXdI?? e .....                 plx
+0036ce fe/e4ce: a8           ??MXdI?? e .....                 tay
+0036cf fe/e4cf: 18           ??MXdI?? e .....                 clc
+0036d0 fe/e4d0: 65 f5        ??MXdI?c e .....                 adc     $f5
+0036d2 fe/e4d2: aa           ??MXdI?? e .....                 tax
+0036d3 fe/e4d3: 85 f4        ??MXdI?? e .....                 sta     $f4
+0036d5 fe/e4d5: ad 68 a5     ??MXdI?? e .....                 lda     SYSVAR_SOFTKEY_STRLEN
+0036d8 fe/e4d8: f0 13        ??MXdI?? e .....                 beq     LFEE4ED
+0036da fe/e4da: 68           ??MXdIz? e .....                 pla
+0036db fe/e4db: 28           ??MXdI?? e .....                 plp
+0036dc fe/e4dc: 02 26        ??MXd??? e .....                 cop     COP_26_OPBHA
+0036de fe/e4de: 4b 65 79 20+            .T...                 .zstr   “Key in use”
+0036e9 fe/e4e9: a2 01        ??MXd??? e .....                 ldx     #$01
+0036eb fe/e4eb: 38           n?MXd?z? e .....                 sec
+0036ec fe/e4ec: 60           n?MXd?zC e ...#.                 rts

+0036ed fe/e4ed: ce 84 a5     ??MXdIZ? e ....> LFEE4ED         dec     SYSVAR_SOFTKEY_CONS
+0036f0 fe/e4f0: 68           ??MXdI?? e .....                 pla
+0036f1 fe/e4f1: 38           ??MXdI?? e .....                 sec
+0036f2 fe/e4f2: e5 f4        ??MXdI?C e .....                 sbc     $f4
+0036f4 fe/e4f4: 85 f4        ??MXdI?? e .....                 sta     $f4
+0036f6 fe/e4f6: f0 0f        ??MXdI?? e .....                 beq     LFEE507
+0036f8 fe/e4f8: 20 63 e5     ??MXdIz? e ....> LFEE4F8         jsr     FnKey_LoadXpl1
+0036fb fe/e4fb: da           ??MXdI?? e .....                 phx
+0036fc fe/e4fc: bb           ??MXdI?? e .....                 tyx
+0036fd fe/e4fd: 20 67 e5     ??MXdI?? e .....                 jsr     Fnkey_StoreXpl1
+003700 fe/e500: fa           ??MXdI?? e .....                 plx
+003701 fe/e501: c8           ??MXdI?? e .....                 iny
+003702 fe/e502: e8           ??MXdI?? e .....                 inx
+003703 fe/e503: c6 f4        ??MXdI?? e .....                 dec     $f4
+003705 fe/e505: d0 f1        ??MXdI?? e .....                 bne     LFEE4F8
+003707 fe/e507: 98           ??MXdIZ? e ....> LFEE507         tya
+003708 fe/e508: 48           ??MXdI?? e .....                 pha
+003709 fe/e509: a4 e1        ??MXdI?? e .....                 ldy     $e1
+00370b fe/e50b: a2 10        ??MXdI?? e .....                 ldx     #$10
+00370d fe/e50d: 08           n?MXdI?? e ....> LFEE50D         php
+00370e fe/e50e: da           n?MXdI?? e .....                 phx
+00370f fe/e50f: da           n?MXdI?? e .....                 phx
+003710 fe/e510: bb           n?MXdI?? e .....                 tyx
+003711 fe/e511: 20 6b e5     ??MXdI?? e .....                 jsr     FnKey_LoadX
+003714 fe/e514: fa           ??MXdI?? e .....                 plx
+003715 fe/e515: 48           ??MXdI?? e .....                 pha
+003716 fe/e516: 20 6b e5     ??MXdI?? e .....                 jsr     FnKey_LoadX
+003719 fe/e519: 48           ??MXdI?? e .....                 pha
+00371a fe/e51a: c3 02        ??MXdI?? e .....                 cmp     $02,S
+00371c fe/e51c: 08           ??MXdI?? e .....                 php
+00371d fe/e51d: 68           ??MXdI?? e .....                 pla
+00371e fe/e51e: 83 04        ??MXdI?? e .....                 sta     $04,S
+003720 fe/e520: 68           ??MXdI?? e .....                 pla
+003721 fe/e521: fa           ??MXdI?? e .....                 plx
+003722 fe/e522: fa           ??MXdI?? e .....                 plx
+003723 fe/e523: 28           ??MXdI?? e .....                 plp
+003724 fe/e524: 90 07        ??MXdI?? e .....                 bcc     LFEE52D
+003726 fe/e526: f0 05        ??MXdI?C e .....                 beq     LFEE52D
+003728 fe/e528: e5 f5        ??MXdIzC e .....                 sbc     $f5
+00372a fe/e52a: 20 6f e5     ??MXdI?? e .....                 jsr     FnKey_StoreX
+00372d fe/e52d: ca           ??MXdI?? e ....> LFEE52D         dex
+00372e fe/e52e: 10 dd        ??MXdI?? e .....                 bpl     LFEE50D
+003730 fe/e530: ad 10 ab     N?MXdI?? e .....                 lda     SYSFNK+16
+003733 fe/e533: da           ??MXdI?? e .....                 phx
+003734 fe/e534: bb           ??MXdI?? e .....                 tyx
+003735 fe/e535: 20 6f e5     ??MXdI?? e .....                 jsr     FnKey_StoreX
+003738 fe/e538: fa           ??MXdI?? e .....                 plx
+003739 fe/e539: 68           ??MXdI?? e .....                 pla
+00373a fe/e53a: 8d 10 ab     ??MXdI?? e .....                 sta     SYSFNK+16
+00373d fe/e53d: aa           ??MXdI?? e .....                 tax
+00373e fe/e53e: ee 84 a5     ??MXdI?? e .....                 inc     SYSVAR_SOFTKEY_CONS
+003741 fe/e541: 28           ??MXdI?? e .....                 plp
+003742 fe/e542: 18           ??MXdI?? e .....                 clc
+003743 fe/e543: 60           ??MXdI?c e ...#.                 rts

+003744 fe/e544: a9 11        ??MXdI?? e ....> OSB_ResetFnKeys lda     #$11
+003746 fe/e546: 8d 84 a5     n?MXdIz? e .....                 sta     SYSVAR_SOFTKEY_CONS
+003749 fe/e549: a2 10        n?MXdIz? e .....                 ldx     #$10
+00374b fe/e54b: 20 6f e5     n?MXdI?? e ....> @lp             jsr     FnKey_StoreX
+00374e fe/e54e: ca           ??MXdI?? e .....                 dex
+00374f fe/e54f: 10 fa        ??MXdI?? e .....                 bpl     @lp
+003751 fe/e551: a9 10        N?MXdI?? e .....                 lda     #$10
+003753 fe/e553: a2 00        n?MXdIz? e .....                 ldx     #$00
+003755 fe/e555: 20 6f e5     n?MXdIZ? e .....                 jsr     FnKey_StoreX
+003758 fe/e558: a9 1e        ??MXdI?? e .....                 lda     #$1e
+00375a fe/e55a: a2 10        n?MXdIz? e .....                 ldx     #$10
+00375c fe/e55c: 20 67 e5     n?MXdIz? e .....                 jsr     Fnkey_StoreXpl1
+00375f fe/e55f: 9c 84 a5     ??MXdI?? e .....                 stz     SYSVAR_SOFTKEY_CONS
+003762 fe/e562: 60           ??MXdI?? e ...#.                 rts

+003763 fe/e563: bd 01 ab     ??MXd??? e ....> FnKey_LoadXpl1  lda     SYSFNK+1,x
+003766 fe/e566: 60           ??MXd??? e ...#.                 rts

+003767 fe/e567: 9d 01 ab     ??MXd??? e ....> Fnkey_StoreXpl1 sta     SYSFNK+1,x
+00376a fe/e56a: 60           ??MXd??? e ...#.                 rts

+00376b fe/e56b: bd 00 ab     ??MXdI?? e ....> FnKey_LoadX     lda     SYSFNK,x
+00376e fe/e56e: 60           ??MXdI?? e ...#.                 rts

+00376f fe/e56f: 9d 00 ab     ??MXdI?? e ....> FnKey_StoreX    sta     SYSFNK,x
+003772 fe/e572: 60           ??MXdI?? e ...#.                 rts

+003773 fe/e573: 08           n?MXd??? e ....> LFEE573         php
+003774 fe/e574: 8b           n?MXd??? e .....                 phb
+003775 fe/e575: f4 00 00     n?MXd??? e .....                 pea     $0000
+003778 fe/e578: ab           n?MXd??? e .....                 plb
                                                               .dbank  $00
+003779 fe/e579: ab           ??MXd??? e .....                 plb
+00377a fe/e57a: 78           ??MXd??? e .....                 sei
+00377b fe/e57b: 48           ??MXdI?? e .....                 pha
+00377c fe/e57c: 85 f6        ??MXdI?? e .....                 sta     $f6
+00377e fe/e57e: b9 b5 a5     ??MXdI?? e .....                 lda     SYSVARS+181,y
+003781 fe/e581: f0 0b        ??MXdI?? e .....                 beq     LFEE58E
+003783 fe/e583: 98           ??MXdIz? e .....                 tya
+003784 fe/e584: a4 f6        ??MXdI?? e .....                 ldy     $f6
+003786 fe/e586: 20 a9 ea     ??MXdI?? e .....                 jsr     LFEEAA9
+003789 fe/e589: 68           ??MXdI?? e .....                 pla
+00378a fe/e58a: ab           ??MXdI?? e .....                 plb
+00378b fe/e58b: 28           ??MXdI?? e .....                 plp
+00378c fe/e58c: 18           n?MXd?z? e .....                 clc
+00378d fe/e58d: 60           n?MXd?zc e ...#.                 rts

+00378e fe/e58e: 68           ??MXdIZ? e ....> LFEE58E         pla
+00378f fe/e58f: ab           ??MXdI?? e .....                 plb
+003790 fe/e590: 28           ??MXdI?? e .....                 plp
+003791 fe/e591: 38           n?MXd?z? e .....                 sec
+003792 fe/e592: 60           n?MXd?zC e ...#.                 rts

                                               ****************************************************************
                                               * Converts the char in A into an upper case module name char.  *
                                               *                                                              *
                                               * On Entry: A contains a character                             *
                                               *                                                              *
                                               * On Exit:  If C = 0 A contains the original character, B      *
                                               * contains the character                                       *
                                               *           converted to uppercase                             *
                                               *           If C = 1 A contains the original character, B      *
                                               * contains the original                                        *
                                               *           character which was not in the range A..Z or a..z  *
                                               ****************************************************************
                                                               .rwid   longm,longx
+003793 fe/e593: 08           ??mxd?z? e ....> modNameToUpper  php
+003794 fe/e594: e2 20        ??mxd?z? e .....                 sep     #$20
                                                               .rwid   shortm
+003796 fe/e596: 48           ??Mxd?z? e .....                 pha
+003797 fe/e597: 29 df        ??Mxd?z? e .....                 and     #$df              ;convert to upper case
+003799 fe/e599: c9 41        ??Mxd??? e .....                 cmp     #‘A’
+00379b fe/e59b: 90 04        ??Mxd??? e .....                 bcc     @notname
+00379d fe/e59d: c9 5b        ??Mxd??C e .....                 cmp     #‘[’
+00379f fe/e59f: 90 03        ??Mxd??? e .....                 bcc     @ok
+0037a1 fe/e5a1: 38           ??Mxd??? e ....> @notname        sec                       ;set carry and return un modified A
+0037a2 fe/e5a2: a3 01        ??Mxd??C e .....                 lda     $01,S
+0037a4 fe/e5a4: eb           ??Mxd??? e ....> @ok             xba
+0037a5 fe/e5a5: 68           ??Mxd??? e .....                 pla
+0037a6 fe/e5a6: b0 03        ??Mxd??? e .....                 bcs     @retsec
+0037a8 fe/e5a8: 28           ??Mxd??c e .....                 plp
                                                               .rwid   longm
+0037a9 fe/e5a9: 18           ??mxd?z? e .....                 clc
+0037aa fe/e5aa: 60           ??mxd?zc e ...#.                 rts

                                                               .rwid   shortm
+0037ab fe/e5ab: 28           ??Mxd??C e ....> @retsec         plp
                                                               .rwid   longm
+0037ac fe/e5ac: 38           ??mxd?z? e .....                 sec
+0037ad fe/e5ad: 60           ??mxd?zC e ...#.                 rts

+0037ae fe/e5ae: 6d e8                   ..... tblOSBYTDispatch .dd2   OSBYTE_0 & $ffff  ;OSBYTE 0 - Get Host OS
+0037b0 fe/e5b0: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff ;OSBYTE 1 - R/W user flag
+0037b2 fe/e5b2: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff ;OSBYTE 2 - select input stream - manual lies, this does nothing
+0037b4 fe/e5b4: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff ;OSBYTE 3 - select output stream - manual lies this does nothing
+0037b6 fe/e5b6: 43 ea                   .T...                 .dd2    OSBYTE_4 & $ffff  ;OSBYTE 4 - cursor keys action
+0037b8 fe/e5b8: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
+0037ba fe/e5ba: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
+0037bc fe/e5bc: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
+0037be fe/e5be: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
+0037c0 fe/e5c0: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
+0037c2 fe/e5c2: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
+0037c4 fe/e5c4: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
+0037c6 fe/e5c6: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
+0037c8 fe/e5c8: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
+0037ca fe/e5ca: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
+0037cc fe/e5cc: 01 df                   .T...                 .dd2    OSBYTE_F & $ffff  ;OSBYTE 0F - Flush buffers
+0037ce fe/e5ce: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
+0037d0 fe/e5d0: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
+0037d2 fe/e5d2: 77 ea                   .T...                 .dd2    OSBYTE_12 & $ffff ;OSBYTE 12 - reset function keys
+0037d4 fe/e5d4: 6c ea                   .T...                 .dd2    OSBYTE_13 & $ffff ;OSBYTE 13 - Wait vsync
+0037d6 fe/e5d6: a9 e6                   .T...                 .dd2    OSBYTE_14 & $ffff ;OSBYTE 14 - Explode and reset font
+0037d8 fe/e5d8: 0d df                   .T...                 .dd2    OSBYTE_15 & $ffff
+0037da fe/e5da: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
+0037dc fe/e5dc: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
+0037de fe/e5de: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
+0037e0 fe/e5e0: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
+0037e2 fe/e5e2: 04 e7                   .T...                 .dd2    OSBYTE_1A & $ffff ;OSBYTE 1A - Handset detection
+0037e4 fe/e5e4: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
                                               ; --- break in numbers here restart at 73 ---
+0037e6 fe/e5e6: ae e6                   .T...                 .dd2    OSBYTE_73 & $ffff ;OSBYTE 73 - blank / restore palette
+0037e8 fe/e5e8: 30 ec                   .T...                 .dd2    OSBYTE_74 & $ffff ;OSBYTE 74 - reset sound system
+0037ea fe/e5ea: b3 e6                   .T...                 .dd2    OSBYTE_75 & $ffff ;OSBYTE 75 - read VDU status byte
+0037ec fe/e5ec: 8b ea                   .T...                 .dd2    OSBYTE_76 & $ffff ;OSBYTE 76 - reflect keyboard in LEDS
+0037ee fe/e5ee: e6 e0                   .T...                 .dd2    OSBYTE77a & $ffff ;OSBYTE 77 - Close all SPOOL / EXEC files
+0037f0 fe/e5f0: a1 ea                   .T...                 .dd2    OSBYTE_78 & $ffff ;OSBYTE 78 - Write key pressed data
+0037f2 fe/e5f2: c4 e7                   .T...                 .dd2    OSBYTE_79 & $ffff ;OSBYTE 79 - Keyboard scan
+0037f4 fe/e5f4: c2 e7                   .T...                 .dd2    OSBYTE_7A & $ffff ;OSBYTE_7A - keyboard scan from &10
+0037f6 fe/e5f6: 00 df                   .T...                 .dd2    OSBYTE_7B_null & $ffff ;OSBYTE 7B - printer dormancy warning
+0037f8 fe/e5f8: 91 e6                   .T...                 .dd2    OSBYTE_7C & $ffff ;OSBYTE 7C - Clear ESCape, inform tube
+0037fa fe/e5fa: a1 e6                   .T...                 .dd2    OSBYTE_7D & $ffff ;OSBYTE 7D - Set ESCape
+0037fc fe/e5fc: 75 e6                   .T...                 .dd2    OSBYTE_7E & $ffff ;OSBYTE 7E - Acknowledge ESCape condition
+0037fe fe/e5fe: 16 de                   .T...                 .dd2    OSBYTE_7F & $ffff ;OSBYTE 7F - Check for EOF
+003800 fe/e600: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
+003802 fe/e602: 41 e7                   .T...                 .dd2    OSBYTE_81 & $ffff ;OSBYTE 81 - INKEY
+003804 fe/e604: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
+003806 fe/e606: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
+003808 fe/e608: b8 e6                   .T...                 .dd2    OSBYTE_84 & $ffff ;OSBYTE 84 - read top of memory HIMEM
+00380a fe/e60a: bd e6                   .T...                 .dd2    OSBYTE_85 & $ffff ;OSBYTE 85 - get HIMEM for MODE in X
+00380c fe/e60c: c2 e6                   .T...                 .dd2    OSBYTE_86 & $ffff ;OSBYTE 86 - Get text cursor
+00380e fe/e60e: c7 e6                   .T...                 .dd2    OSBYTE_87 & $ffff ;OSBYTE 87 - get char at XY and MODE
+003810 fe/e610: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
+003812 fe/e612: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
+003814 fe/e614: e1 e1                   .T...                 .dd2    OSBYTE_8A & $ffff ;OSBYTE 8A - place char in buffer
+003816 fe/e616: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
+003818 fe/e618: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
+00381a fe/e61a: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
+00381c fe/e61c: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
+00381e fe/e61e: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
+003820 fe/e620: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
+003822 fe/e622: 92 e1                   .T...                 .dd2    OSBYTE_91 & $ffff ;OSBYTE 91 - read character from buffer
+003824 fe/e624: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
+003826 fe/e626: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
+003828 fe/e628: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
+00382a fe/e62a: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
+00382c fe/e62c: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
+00382e fe/e62e: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
+003830 fe/e630: 8e e1                   .T...                 .dd2    OSBYTE_98 & $ffff ;OSBYTE 98 - examine buffer status
+003832 fe/e632: 36 e2                   .T...                 .dd2    OSBYTE_99 & $ffff ;OSBYTE 99 - write character to buffer
+003834 fe/e634: ee e6                   .T...                 .dd2    OSBYTE_9A & $ffff ;OSBYTE 9A - write vdu ULA
+003836 fe/e636: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
+003838 fe/e638: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
+00383a fe/e63a: c9 de                   .T...                 .dd2    OSBYTE_9D & $ffff ;OSBYTE 9D - QRY
+00383c fe/e63c: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
+00383e fe/e63e: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
+003840 fe/e640: cc e6                   .T...                 .dd2    OSBYTE_A0 & $ffff ;OSBYTE A0 - read VDU variable
+003842 fe/e642: 48 ea                   .T...                 .dd2    OSBYTE_A6_FF & $ffff ;OSBYTE A6-FF - read variable
+003844 fe/e644: 64 e6                   .T...                 .dd2    QRY_Call_UKOSWORD & $ffff ;OSWORD > E0 QRY
+003846 fe/e646: 90 e9                   .T...                 .dd2    OSWORD_0 & $ffff  ;OSWORD 0 - read line
+003848 fe/e648: 63 e9                   .T...                 .dd2    TFEE963 & $ffff
+00384a fe/e64a: 76 e9                   .T...                 .dd2    TFEE976 & $ffff
+00384c fe/e64c: 5f e9                   .T...                 .dd2    TFEE95F & $ffff
+00384e fe/e64e: 72 e9                   .T...                 .dd2    TFEE972 & $ffff
+003850 fe/e650: 6a e8                   .T...                 .dd2    OSBYTE_0_X & $ffff
+003852 fe/e652: 6a e8                   .T...                 .dd2    OSBYTE_0_X & $ffff
+003854 fe/e654: 90 e8                   .T...                 .dd2    TFEE890 & $ffff
+003856 fe/e656: 19 e9                   .T...                 .dd2    TFEE919 & $ffff
+003858 fe/e658: d1 e6                   .T...                 .dd2    TFEE6D1 & $ffff
+00385a fe/e65a: d5 e6                   .T...                 .dd2    TFEE6D5 & $ffff
+00385c fe/e65c: d9 e6                   .T...                 .dd2    TFEE6D9 & $ffff
+00385e fe/e65e: dd e6                   .T...                 .dd2    TFEE6DD & $ffff
+003860 fe/e660: e1 e6                   .T...                 .dd2    TFEE6E1 & $ffff
                                                               .rwid   shortm,shortx
+003862 fe/e662: a9 00        ??MXd??? e @T...                 lda     #$00
+003864 fe/e664: eb           n?MXd?Z? e ..... QRY_Call_UKOSWORD xba
+003865 fe/e665: 4b           ??MXd??? e .....                 phk
+003866 fe/e666: ad 01 a5     ??MXd??? e .....                 lda     SYSVARS+1
+003869 fe/e669: 48           ??MXd??? e .....                 pha
+00386a fe/e66a: ad 00 a5     ??MXd??? e .....                 lda     SYSVARS
+00386d fe/e66d: 48           ??MXd??? e .....                 pha
+00386e fe/e66e: eb           ??MXd??? e .....                 xba
+00386f fe/e66f: 08           ??MXd??? e .....                 php
+003870 fe/e670: 40           ??MXd??? e ...#.                 rti

+003871 fe/e671: ee                      .....                 .dd1    $ee
+003872 fe/e672: 49                      .....                 .dd1    $49
+003873 fe/e673: a5                      .....                 .dd1    $a5
+003874 fe/e674: 60                      .....                 .dd1    $60

                                               ********************************************************************************
                                               * OSBYTE 7E - Acknowledge ESCape condition                                     *
                                               ********************************************************************************
+003875 fe/e675: a2 00        ??MXd??? e @T... OSBYTE_7E       ldx     #$00
+003877 fe/e677: af                      .T...                 .dd1    $af
+003878 fe/e678: 13                      .T...                 .dd1    $13
+003879 fe/e679: ff                      .T...                 .dd1    $ff
+00387a fe/e67a: 00                      .T...                 .dd1    $00
+00387b fe/e67b: 29                      .T...                 .dd1    $29
+00387c fe/e67c: 03                      .T...                 .dd1    $03
+00387d fe/e67d: f0                      .T...                 .dd1    $f0
+00387e fe/e67e: 12                      .T...                 .dd1    $12
+00387f fe/e67f: ad                      .T...                 .dd1    $ad
+003880 fe/e680: 76                      .T...                 .dd1    $76
+003881 fe/e681: a5                      .T...                 .dd1    $a5
+003882 fe/e682: d0                      .T...                 .dd1    $d0
+003883 fe/e683: 0b                      .T...                 .dd1    $0b
+003884 fe/e684: 58                      .T...                 .dd1    $58
+003885 fe/e685: a9                      .T...                 .dd1    $a9
+003886 fe/e686: 00                      .T...                 .dd1    $00
+003887 fe/e687: 8b                      .T...                 .dd1    $8b
+003888 fe/e688: 20                      .T...                 .dd1    $20
+003889 fe/e689: 14                      .T...                 .dd1    $14
+00388a fe/e68a: ee                      .T...                 .dd1    $ee
+00388b fe/e68b: ab                      .T...                 .dd1    $ab
+00388c fe/e68c: 20                      .T...                 .dd1    $20
+00388d fe/e68d: 03                      .T...                 .dd1    $03
+00388e fe/e68e: df                      .T...                 .dd1    $df
+00388f fe/e68f: a2                      .T...                 .dd1    $a2
+003890 fe/e690: ff                      .T...                 .dd1    $ff
                                               ********************************************************************************
                                               * OSBYTE 7C - Clear ESCape, inform tube                                        *
                                               ********************************************************************************
+003891 fe/e691: c2 30        n?MXd?Z? e .T... OSBYTE_7C       rep     #$30
+003893 fe/e693: af 13 ff 00             .T...                 .dd4    SYS_ESCAPE_FLAG_QRY+$fe149c
+003897 fe/e697: 29                      .T...                 .dd1    $29
+003898 fe/e698: fc                      .T...                 .dd1    $fc
+003899 fe/e699: ff                      .T...                 .dd1    $ff
+00389a fe/e69a: 8f                      .T...                 .dd1    $8f
+00389b fe/e69b: 13                      .T...                 .dd1    $13
+00389c fe/e69c: ff                      .T...                 .dd1    $ff
+00389d fe/e69d: 00                      .T...                 .dd1    $00
+00389e fe/e69e: e2                      .T...                 .dd1    $e2
+00389f fe/e69f: 30                      .T...                 .dd1    $30
+0038a0 fe/e6a0: 60                      .T...                 .dd1    $60
                                               ********************************************************************************
                                               * OSBYTE 7D - Set ESCape                                                       *
                                               ********************************************************************************
+0038a1 fe/e6a1: a9 00        ????d??? e ....> OSBYTE_7D       lda     #$00
+0038a3 fe/e6a3: eb           n???d?Z? e .....                 xba
+0038a4 fe/e6a4: a9 03        ????d??? e .....                 lda     #$03
+0038a6 fe/e6a6: 02 20        n???d?z? e .....                 cop     COP_20_OPSEV
+0038a8 fe/e6a8: 60           n???d?z? e ...#.                 rts

                                               ********************************************************************************
                                               * OSBYTE 14 - Explode                                                          *
                                               ********************************************************************************
+0038a9 fe/e6a9: 8a           ??MXd??? e @T... OSBYTE_14       txa
+0038aa fe/e6aa: a2 08        ??MXd??? e .....                 ldx     #VDUMOD_OPX_8_EXPLODE
+0038ac fe/e6ac: 80 3b        n?MXd?z? e ...#.                 bra     phkCallModVDU

                                               ********************************************************************************
                                               * OSBYTE 73 - unknown VDU operation                                            *
                                               *                                                                              *
                                               * Blank restore palette                                                        *
                                               *                                                                              *
                                               * calls VDU module with A=X, X=#&A                                             *
                                               ********************************************************************************
+0038ae fe/e6ae: 8a           ??MXd??? e @T... OSBYTE_73       txa
+0038af fe/e6af: a2 0a        ??MXd??? e .....                 ldx     #VDUMOD_OPX_A
+0038b1 fe/e6b1: 80 36        n?MXd?z? e ...#.                 bra     phkCallModVDU

                                               ********************************************************************************
                                               * OSBYTE 75 - read VDU status byte                                             *
                                               ********************************************************************************
+0038b3 fe/e6b3: 8a           ??MXd??? e @T... OSBYTE_75       txa
+0038b4 fe/e6b4: a2 22        ??MXd??? e .....                 ldx     #VDUMOD_OPX_22_READSTATUS
+0038b6 fe/e6b6: 80 31        n?MXd?z? e ...#.                 bra     phkCallModVDU

                                               ********************************************************************************
                                               * OSBYTE 84 - read top of memory HIMEM                                         *
                                               *                                                                              *
                                               * QRY what does this actually return                                           *
                                               ********************************************************************************
+0038b8 fe/e6b8: 8a           ??MXd??? e @T... OSBYTE_84       txa
+0038b9 fe/e6b9: a2 0c        ??MXd??? e .....                 ldx     #VDUMOD_OPX_C_HIMEM
+0038bb fe/e6bb: 80 2c        n?MXd?z? e ...#.                 bra     phkCallModVDU

                                               ********************************************************************************
                                               * OSBYTE 85 - get HIMEM for MODE in X                                          *
                                               ********************************************************************************
+0038bd fe/e6bd: 8a           ??MXd??? e @T... OSBYTE_85       txa
+0038be fe/e6be: a2 0e        ??MXd??? e .....                 ldx     #VDUMOD_OPX_E_HIMEMBYX
+0038c0 fe/e6c0: 80 27        n?MXd?z? e ...#.                 bra     phkCallModVDU

                                               ********************************************************************************
                                               * OSBYTE 86 - Get text cursor                                                  *
                                               ********************************************************************************
+0038c2 fe/e6c2: 8a           ??MXd??? e @T... OSBYTE_86       txa
+0038c3 fe/e6c3: a2 10        ??MXd??? e .....                 ldx     #VDUMOD_OPX_10_GETCURSOR
+0038c5 fe/e6c5: 80 22        n?MXd?z? e ...#.                 bra     phkCallModVDU

                                               ********************************************************************************
                                               * OSBYTE 87 - get char at XY and MODE                                          *
                                               ********************************************************************************
+0038c7 fe/e6c7: 8a           ??MXd??? e @T... OSBYTE_87       txa
+0038c8 fe/e6c8: a2 16        ??MXd??? e .....                 ldx     #VDUMOD_OPX_16_GETCHARXY
+0038ca fe/e6ca: 80 1d        n?MXd?z? e ...#.                 bra     phkCallModVDU

                                               ********************************************************************************
                                               * OSBYTE A0 - read VDU variable                                                *
                                               ********************************************************************************
+0038cc fe/e6cc: 8a           ??MXd??? e @T... OSBYTE_A0       txa
+0038cd fe/e6cd: a2 24        ??MXd??? e .....                 ldx     #VDUMOD_OPX_24_READVDUVAR+12
+0038cf fe/e6cf: 80 18        n?MXd?z? e ...#.                 bra     phkCallModVDU

+0038d1 fe/e6d1: a2 18        ??MXd??? e @T... TFEE6D1         ldx     #$18
+0038d3 fe/e6d3: 80 0e        n?MXd?z? e ...#.                 bra     LFEE6E3

+0038d5 fe/e6d5: a2 1a        ??MXd??? e @T... TFEE6D5         ldx     #$1a
+0038d7 fe/e6d7: 80 0a        n?MXd?z? e ...#.                 bra     LFEE6E3

+0038d9 fe/e6d9: a2 1c        ??MXd??? e @T... TFEE6D9         ldx     #$1c
+0038db fe/e6db: 80 06        n?MXd?z? e ...#.                 bra     LFEE6E3

+0038dd fe/e6dd: a2 1e        ??MXd??? e @T... TFEE6DD         ldx     #$1e
+0038df fe/e6df: 80 02        n?MXd?z? e ...#.                 bra     LFEE6E3

+0038e1 fe/e6e1: a2 20        ??MXd??? e @T... TFEE6E1         ldx     #$20
+0038e3 fe/e6e3: 48           n?MXd?z? e ....> LFEE6E3         pha
+0038e4 fe/e6e4: a5 ec        n?MXd?z? e .....                 lda     $ec
+0038e6 fe/e6e6: 48           ??MXd??? e .....                 pha
+0038e7 fe/e6e7: ab           ??MXd??? e .....                 plb
+0038e8 fe/e6e8: 68           ??MXd??? e .....                 pla
+0038e9 fe/e6e9: 4b           ??MXd??? e ....> phkCallModVDU   phk
+0038ea fe/e6ea: 20 38 fe     ??MXd??? e .....                 jsr     callModVDU
+0038ed fe/e6ed: 60           ??MXd??? e ...#.                 rts

                                               ********************************************************************************
                                               * OSBYTE 9A - write vdu ULA                                                    *
                                               *                                                                              *
                                               * This doesn't seem to work as documented on MDFS.net for the Electron instead *
                                               * it:                                                                          *
                                               *                                                                              *
                                               * ULA/COPY = (OLD AND Y) EOR X                                                 *
                                               *                                                                              *
                                               * returns OLD in X                                                             *
                                               ********************************************************************************
+0038ee fe/e6ee: da           ??MXd??? e @T... OSBYTE_9A       phx
+0038ef fe/e6ef: 5a           ??MXd??? e .....                 phy
+0038f0 fe/e6f0: ae 82 a5     ??MXd??? e .....                 ldx     SYSVARS_ULA_MISC_COPY
+0038f3 fe/e6f3: 8a           ??MXd??? e .....                 txa
+0038f4 fe/e6f4: 23 01        ??MXd??? e .....                 and     $01,S
+0038f6 fe/e6f6: 43 02        ??MXd??? e .....                 eor     $02,S
+0038f8 fe/e6f8: 8d 82 a5     ??MXd??? e .....                 sta     SYSVARS_ULA_MISC_COPY
+0038fb fe/e6fb: 8f 07 fe 45  ??MXd??? e .....                 stal    shiela_ULA_MISC
+0038ff fe/e6ff: 68           ??MXd??? e .....                 pla
+003900 fe/e700: 68           ??MXd??? e .....                 pla
+003901 fe/e701: 4c 34 eb     ??MXd??? e ...#.                 jmp     resetFlashCounters

                                               ********************************************************************************
                                               * OSBYTE 1A - handset detection                                                *
                                               ********************************************************************************
+003904 fe/e704: a6 d4        ??MXd??? e @T... OSBYTE_1A       ldx     <DPVAR_ACD4_HANDSET_STATUS_QRY
+003906 fe/e706: 60           ??MXd??? e ...#.                 rts

+003907 fe/e707: c8                      .....                 .dd1    $c8
+003908 fe/e708: 18                      .....                 .dd1    $18
+003909 fe/e709: b9                      .....                 .dd1    $b9
+00390a fe/e70a: 52                      .....                 .dd1    $52
+00390b fe/e70b: a5                      .....                 .dd1    $a5
+00390c fe/e70c: 48                      .....                 .dd1    $48
+00390d fe/e70d: 8a                      .....                 .dd1    $8a
+00390e fe/e70e: 99                      .....                 .dd1    $99
+00390f fe/e70f: 52                      .....                 .dd1    $52
+003910 fe/e710: a5                      .....                 .dd1    $a5
+003911 fe/e711: 68                      .....                 .dd1    $68
+003912 fe/e712: a8                      .....                 .dd1    $a8
+003913 fe/e713: ad                      .....                 .dd1    $ad
+003914 fe/e714: 51                      .....                 .dd1    $51
+003915 fe/e715: a5                      .....                 .dd1    $a5
+003916 fe/e716: d0                      .....                 .dd1    $d0
+003917 fe/e717: 19                      .....                 .dd1    $19
+003918 fe/e718: 8e                      .....                 .dd1    $8e
+003919 fe/e719: 51                      .....                 .dd1    $51
+00391a fe/e71a: a5                      .....                 .dd1    $a5
+00391b fe/e71b: a9                      .....                 .dd1    $a9
+00391c fe/e71c: 00                      .....                 .dd1    $00
+00391d fe/e71d: 90                      .....                 .dd1    $90
+00391e fe/e71e: 02                      .....                 .dd1    $02
+00391f fe/e71f: a9                      .....                 .dd1    $a9
+003920 fe/e720: 07                      .....                 .dd1    $07
+003921 fe/e721: 8d                      .....                 .dd1    $8d
+003922 fe/e722: 48                      .....                 .dd1    $48
+003923 fe/e723: a5                      .....                 .dd1    $a5
+003924 fe/e724: 98                      .....                 .dd1    $98
+003925 fe/e725: 48                      .....                 .dd1    $48
+003926 fe/e726: ac                      .....                 .dd1    $ac
+003927 fe/e727: 48                      .....                 .dd1    $48
+003928 fe/e728: a5                      .....                 .dd1    $a5
+003929 fe/e729: a2                      .....                 .dd1    $a2
+00392a fe/e72a: 14                      .....                 .dd1    $14
+00392b fe/e72b: 4b                      .....                 .dd1    $4b
+00392c fe/e72c: 20                      .....                 .dd1    $20
+00392d fe/e72d: 38                      .....                 .dd1    $38
+00392e fe/e72e: fe                      .....                 .dd1    $fe
+00392f fe/e72f: 68                      .....                 .dd1    $68
+003930 fe/e730: a8                      .....                 .dd1    $a8
+003931 fe/e731: 50                      .....                 .dd1    $50
+003932 fe/e732: 0b                      .....                 .dd1    $0b
+003933 fe/e733: 98                      .....                 .dd1    $98
+003934 fe/e734: e0                      .....                 .dd1    $e0
+003935 fe/e735: 0a                      .....                 .dd1    $0a
+003936 fe/e736: b0                      .....                 .dd1    $b0
+003937 fe/e737: 07                      .....                 .dd1    $07
+003938 fe/e738: bc                      .....                 .dd1    $bc
+003939 fe/e739: b5                      .....                 .dd1    $b5
+00393a fe/e73a: a5                      .....                 .dd1    $a5
+00393b fe/e73b: 9d                      .....                 .dd1    $9d
+00393c fe/e73c: b5                      .....                 .dd1    $b5
+00393d fe/e73d: a5                      .....                 .dd1    $a5
+00393e fe/e73e: 98                      .....                 .dd1    $98
+00393f fe/e73f: aa                      .....                 .dd1    $aa
+003940 fe/e740: 60                      .....                 .dd1    $60

                                               ********************************************************************************
                                               * OSBYTE 81 - INKEY                                                            *
                                               *                                                                              *
                                               *  On entry: XY=16-bit argument                                                *
                                               *  On exit:  XY=returned character or state                                    *
                                               *            Cy=when waiting for a character, no character returned            *
                                               ********************************************************************************
+003941 fe/e741: 98           ??MXd??? e @T... OSBYTE_81       tya
+003942 fe/e742: 30 0b        ??MXd??? e .....                 bmi     LFEE74F
+003944 fe/e744: 58           n?MXd??? e .....                 cli
+003945 fe/e745: 20 60 e2     n?MXdi?? e .....                 jsr     INKEY_ctdn
+003948 fe/e748: b0 03        ??MXdi?? e .....                 bcs     LFEE74D
+00394a fe/e74a: aa           ??MXdi?c e .....                 tax
+00394b fe/e74b: a9 00        ??MXd??? e ....> LFEE74B         lda     #$00
+00394d fe/e74d: a8           ??MXd??? e ....> LFEE74D         tay
+00394e fe/e74e: 60           ??MXd??? e ...#.                 rts

+00394f fe/e74f: 8a           N?MXd??? e ....> LFEE74F         txa
+003950 fe/e750: 29 0f        ??MXd??? e .....                 and     #$0f
+003952 fe/e752: f0 15        n?MXd??? e .....                 beq     LFEE769
+003954 fe/e754: 8a           n?MXd?z? e .....                 txa
+003955 fe/e755: 49 7f        ??MXd??? e .....                 eor     #$7f
+003957 fe/e757: aa           ??MXd??? e .....                 tax
+003958 fe/e758: 9b           ??MXd??? e .....                 txy
+003959 fe/e759: a2 04        ??MXd??? e .....                 ldx     #$04
+00395b fe/e75b: 22 ac ff 00  n?MXd?z? e .....                 jsl     __KB
+00395f fe/e75f: 2a           ??MXd??? e .....                 rol     A
+003960 fe/e760: a2 ff        ??MXd??? e ....> LFEE760         ldx     #$ff
+003962 fe/e762: a0 ff        N?MXd?z? e .....                 ldy     #$ff
+003964 fe/e764: b0 02        N?MXd?z? e .....                 bcs     LFEE768
+003966 fe/e766: e8           N?MXd?zc e .....                 inx
+003967 fe/e767: c8           ??MXd??c e .....                 iny
+003968 fe/e768: 60           ??MXd??? e ...#> LFEE768         rts

+003969 fe/e769: 8a           n?MXd?Z? e ....> LFEE769         txa
+00396a fe/e76a: f0 07        ??MXd??? e .....                 beq     LFEE773
+00396c fe/e76c: 20 b6 e7     ??MXd?z? e .....                 jsr     OSBYTE_DOESNOTHINGBADLY
+00396f fe/e76f: 18           ??MXd??? e .....                 clc
+003970 fe/e770: d0 ee        ??MXd??c e .....                 bne     LFEE760
+003972 fe/e772: 60           ??MXd?Zc e ...#.                 rts

+003973 fe/e773: a2 f9        ??MXd?Z? e ....> LFEE773         ldx     #$f9
+003975 fe/e775: 80 d4        N?MXd?z? e ...#.                 bra     LFEE74B

+003977 fe/e777: 8a           N?MXd??? e ....> LFEE777         txa
+003978 fe/e778: 49 ff        ??MXd??? e .....                 eor     #$ff
+00397a fe/e77a: aa           ??MXd??? e .....                 tax
+00397b fe/e77b: e0 02        ??MXd??? e .....                 cpx     #$02
+00397d fe/e77d: b8           ??MXd??? e .....                 clv
+00397e fe/e77e: 50 02        ?vMXd??? e ...#.                 bvc     LFEE782

                                               ; calls the CNPV vector
                                               ; 
                                               ; TODO: check with MAME - must CNPV be called from this ROM -
                                               ; bank not passed?
                                               ; 
                                               ; TODO: replace with
                                               ;   PER +
                                               ;   JMP (CNPV)
                                               ; +
+003980 fe/e780: e2 40        ??MXdI?? e ....> callCNPV        sep     #$40
+003982 fe/e782: eb           ??MXd??? e ....> LFEE782         xba
+003983 fe/e783: 4b           ??MXd??? e .....                 phk
+003984 fe/e784: ad 2f a5     ??MXd??? e .....                 lda     SYSVARS_CNPV+1
+003987 fe/e787: 48           ??MXd??? e .....                 pha
+003988 fe/e788: ad 2e a5     ??MXd??? e .....                 lda     SYSVARS_CNPV
+00398b fe/e78b: 48           ??MXd??? e .....                 pha
+00398c fe/e78c: eb           ??MXd??? e .....                 xba
+00398d fe/e78d: 08           ??MXd??? e .....                 php
+00398e fe/e78e: 40           ??MXd??? e ...#.                 rti

                                               ; TODO dead code ?
+00398f fe/e78f: 30 e6        ??MXd??? e @T...                 bmi     LFEE777
+003991 fe/e791: f0 0d        n?MXd??? e .....                 beq     LFEE7A0
+003993 fe/e793: 20 b6 e7     n?MXd?z? e .....                 jsr     OSBYTE_DOESNOTHINGBADLY
+003996 fe/e796: f0 07        ??MXd??? e .....                 beq     LFEE79F
+003998 fe/e798: bc fb a5     ??MXd?z? e .....                 ldy     $a5fb,x
+00399b fe/e79b: bd f7 a5     ??MXd??? e .....                 lda     $a5f7,x
+00399e fe/e79e: aa           ??MXd??? e .....                 tax
+00399f fe/e79f: 60           ??MXd??? e ...#> LFEE79F         rts

+0039a0 fe/e7a0: 20 b6 e7     n?MXd?Z? e ....> LFEE7A0         jsr     OSBYTE_DOESNOTHINGBADLY
+0039a3 fe/e7a3: f0 02        ??MXd??? e .....                 beq     LFEE7A7
+0039a5 fe/e7a5: a2 00        ??MXd?z? e .....                 ldx     #$00
+0039a7 fe/e7a7: ac f7 a5     ??MXd?Z? e ....> LFEE7A7         ldy     $a5f7
+0039aa fe/e7aa: a9 00        ??MXd??? e .....                 lda     #$00
+0039ac fe/e7ac: 8d f7 a5     n?MXd?Z? e .....                 sta     $a5f7
+0039af fe/e7af: 60           n?MXd?Z? e ...#.                 rts

+0039b0 fe/e7b0: 8a           ??MXd??? e @T...                 txa
+0039b1 fe/e7b1: 0d 41 a5     ??MXd??? e .....                 ora     SYSVAR_41_input_stream
+0039b4 fe/e7b4: f0 b2        ??MXd??? e .....                 beq     LFEE768
                                               ; This looks to be some sort of vestigial attempt at implementing r/w variables
                                               ; in OSBYTE but just does an RTS
+0039b6 fe/e7b6: a2 07        ????d??? e .T..> OSBYTE_DOESNOTHINGBADLY ldx #$07
+0039b8 fe/e7b8: 20 47 ee     n???d?z? e .....                 jsr     donothingRTS
+0039bb fe/e7bb: a6 ea        ????d??? e .....                 ldx     <DPSYS_OSB_X
+0039bd fe/e7bd: a4 eb        ????d??? e .....                 ldy     <DPSYS_OSB_Y
+0039bf fe/e7bf: 49 00        ????d??? e .....                 eor     #$00
+0039c1 fe/e7c1: 60           ????d??? e ...#.                 rts

+0039c2 fe/e7c2: a2 01        ??MXd??? e @T... OSBYTE_7A       ldx     #$01
+0039c4 fe/e7c4: 9b           n?MXd?z? e .T... OSBYTE_79       txy
+0039c5 fe/e7c5: a2 04        ??MXd??? e .....                 ldx     #$04
+0039c7 fe/e7c7: 22 ac ff 00  n?MXd?z? e .....                 jsl     __KB
+0039cb fe/e7cb: 60           ??MXd??? e ...#.                 rts

+0039cc fe/e7cc: f4 00 ac     ??MXd??? e ....> doDispatchOSBYTE pea    DPLOC_SYS
+0039cf fe/e7cf: 2b           ??MXd??? e .....                 pld
+0039d0 fe/e7d0: f4 00 00     ??MXd??? e .....                 pea     $0000
+0039d3 fe/e7d3: ab           ??MXd??? e .....                 plb
                                                               .dbank  $00
+0039d4 fe/e7d4: ab           ??MXd??? e .....                 plb
+0039d5 fe/e7d5: 48           ??MXd??? e .....                 pha
+0039d6 fe/e7d6: 08           ??MXd??? e .....                 php
+0039d7 fe/e7d7: 78           ??MXd??? e .....                 sei
+0039d8 fe/e7d8: 85 ec        ??MXdI?? e .....                 sta     <DPSYS_OSB_A
+0039da fe/e7da: 86 ea        ??MXdI?? e .....                 stx     <DPSYS_OSB_X
+0039dc fe/e7dc: 84 eb        ??MXdI?? e .....                 sty     <DPSYS_OSB_Y
+0039de fe/e7de: a2 07        ??MXdI?? e .....                 ldx     #$07
+0039e0 fe/e7e0: c9 73        n?MXdIz? e .....                 cmp     #$73
+0039e2 fe/e7e2: 90 42        ??MXdI?? e .....                 bcc     @osb_0to72
+0039e4 fe/e7e4: c9 a1        ??MXdI?C e .....                 cmp     #$a1
+0039e6 fe/e7e6: 90 09        ??MXdI?? e .....                 bcc     @osb_73toA0
+0039e8 fe/e7e8: c9 a6        ??MXdI?C e .....                 cmp     #$a6
+0039ea fe/e7ea: 90 40        ??MXdI?? e .....                 bcc     @exitNotImpl
+0039ec fe/e7ec: 18           ??MXdI?C e .....                 clc
+0039ed fe/e7ed: a9 a1        ??MXdI?? e ....> LFEE7ED         lda     #$a1              ;numbers A1..A6 get turned to A1; A2 if SEC entered below at e85b
+0039ef fe/e7ef: 69 00        N?MXdIz? e .....                 adc     #$00
+0039f1 fe/e7f1: e9 56        ??MXdI?? e ....> @osb_73toA0     sbc     #$56              ;73..A2 get turned into 1C..4B
+0039f3 fe/e7f3: 0a           ??MXdI?? e ....> LFEE7F3         asl     A                 ;; multiply by 2
+0039f4 fe/e7f4: 38           ??MXdI?? e .....                 sec
+0039f5 fe/e7f5: 84 eb        ??MXdI?C e .....                 sty     <DPSYS_OSB_Y
+0039f7 fe/e7f7: a8           ??MXdI?? e ....> dispatchOSWORDinA tay                     ;When OSWORD enters here A=98..B4
+0039f8 fe/e7f8: 2c 5e a5     ??MXdI?? e .....                 bit     SYSVAR_FLAGS_SOMETHINGOSBYTEY
+0039fb fe/e7fb: 10 07        ??MXdI?? e .....                 bpl     LFEE804
+0039fd fe/e7fd: 8a           N?MXdI?? e .....                 txa
+0039fe fe/e7fe: b8           ??MXdI?? e .....                 clv
+0039ff fe/e7ff: 20 66 e3     ?vMXdI?? e .....                 jsr     QOSBY_VECTORthruA524
+003a02 fe/e802: 70 1c        ??MXdI?? e .....                 bvs     @restoreflags_returnCy
+003a04 fe/e804: 8b           ??MXdI?? e ....> LFEE804         phb
+003a05 fe/e805: 4b           ??MXdI?? e .....                 phk
                                                               .dbank  K (auto)
+003a06 fe/e806: ab           ??MXdI?? e .....                 plb
+003a07 fe/e807: b9 af e5     ??MXdI?? e .....                 lda     0+(tblOSBYTDispatch & $ffff)+1,y
+003a0a fe/e80a: 85 f7        ??MXdI?? e .....                 sta     <DPSYS_OSB_IND+1
+003a0c fe/e80c: b9 ae e5     ??MXdI?? e .....                 lda     tblOSBYTDispatch & $ffff,y
+003a0f fe/e80f: 85 f6        ??MXdI?? e .....                 sta     <DPSYS_OSB_IND
+003a11 fe/e811: ab           ??MXdI?? e .....                 plb
+003a12 fe/e812: a5 ec        ??MXdI?? e .....                 lda     <DPSYS_OSB_A
+003a14 fe/e814: a4 eb        ??MXdI?? e .....                 ldy     <DPSYS_OSB_Y
+003a16 fe/e816: b0 02        ??MXdI?? e .....                 bcs     @notosw
+003a18 fe/e818: a7 ea        ??MXdI?c e .....                 lda     [<DPSYS_OSB_X]    ;if carry clear (OSWORD) A = first byte from long ptr
+003a1a fe/e81a: 38           ??MXdI?? e ....> @notosw         sec
+003a1b fe/e81b: a6 ea        ??MXdI?C e .....                 ldx     <DPSYS_OSB_X
+003a1d fe/e81d: 20 ec ea     ??MXdI?C e .....                 jsr     callDP_F6_SEC_ZeqX
+003a20 fe/e820: 6a           ??MXdI?? e ....> @restoreflags_returnCy ror A
+003a21 fe/e821: 28           ??MXdI?? e .....                 plp
+003a22 fe/e822: 2a           ??MXd??? e .....                 rol     A
+003a23 fe/e823: 68           ??MXd??? e .....                 pla
+003a24 fe/e824: b8           ??MXd??? e .....                 clv
+003a25 fe/e825: 60           ?vMXd??? e ...#.                 rts

+003a26 fe/e826: a0 00        ??MXdI?c e ....> @osb_0to72      ldy     #$00
+003a28 fe/e828: c9 1c        n?MXdIZc e .....                 cmp     #$1c
+003a2a fe/e82a: 90 c7        ??MXdI?? e .....                 bcc     LFEE7F3
+003a2c fe/e82c: 08           ??MXdI?? e ....> @exitNotImpl    php
+003a2d fe/e82d: 08           ??MXdI?? e .....                 php
+003a2e fe/e82e: 68           ??MXd??? e ....> OSB_plaplaplpplaSECSEV pla
+003a2f fe/e82f: 68           ??MXd??? e .....                 pla
+003a30 fe/e830: 80 05        ??MXd??? e ...#.                 bra     OSB_plpplaSECSEV

+003a32 fe/e832: a6                      .....                 .dd1    $a6
+003a33 fe/e833: ea                      .....                 .dd1    $ea
+003a34 fe/e834: 4c                      .....                 .dd1    $4c
+003a35 fe/e835: 20                      .....                 .dd1    $20
+003a36 fe/e836: e8                      .....                 .dd1    $e8

+003a37 fe/e837: 28           ??MXd??? e ....> OSB_plpplaSECSEV plp
+003a38 fe/e838: 68           ??MXdI?? e .....                 pla
+003a39 fe/e839: e2 41        ??MXdI?? e .....                 sep     #$41
+003a3b fe/e83b: 60           ?VMXdI?C e ...#.                 rts

+003a3c fe/e83c: 60                      .....                 .dd1    $60

+003a3d fe/e83d: e2 30        ??MXd??? e ....> enterOSWORD_BHA sep     #$30
+003a3f fe/e83f: da           ??MXd??? e .....                 phx                       ;caller's A - TODO: pointless push here? Check if to align with OSBYTE entry?
+003a40 fe/e840: 08           ??MXd??? e .....                 php
+003a41 fe/e841: 78           ??MXd??? e .....                 sei
+003a42 fe/e842: 85 ea        ??MXdI?? e .....                 sta     <DPSYS_OSB_X
+003a44 fe/e844: eb           ??MXdI?? e .....                 xba
+003a45 fe/e845: 85 eb        ??MXdI?? e .....                 sta     <DPSYS_OSB_Y
+003a47 fe/e847: 8b           ??MXdI?? e .....                 phb
+003a48 fe/e848: 68           ??MXdI?? e .....                 pla
+003a49 fe/e849: 85 ec        ??MXdI?? e .....                 sta     <DPSYS_OSB_A
+003a4b fe/e84b: 8a           ??MXdI?? e .....                 txa
+003a4c fe/e84c: f4 00 ac     ??MXdI?? e .....                 pea     DPSYS
+003a4f fe/e84f: 2b           ??MXdI?? e .....                 pld
                                                               .dbank  $00
+003a50 fe/e850: f4 00 00     ??MXdI?? e .....                 pea     $0000
+003a53 fe/e853: ab           ??MXdI?? e .....                 plb
+003a54 fe/e854: ab           ??MXdI?? e .....                 plb
+003a55 fe/e855: a2 08        ??MXdI?? e .....                 ldx     #$08
+003a57 fe/e857: c9 e0        n?MXdIz? e .....                 cmp     #$e0
+003a59 fe/e859: 90 03        ??MXdI?? e .....                 bcc     LFEE85E
+003a5b fe/e85b: 82 8f ff     ??MXdI?C e ...#.                 brl     LFEE7ED           ;enter OSBYTE dispatcher with carry set to index into rest of table

+003a5e fe/e85e: c9 0e        ??MXdI?c e ....> LFEE85E         cmp     #$0e
+003a60 fe/e860: b0 ca        ??MXdI?? e .....                 bcs     @exitNotImpl
+003a62 fe/e862: 69 4c        ??MXdI?c e .....                 adc     #$4c
+003a64 fe/e864: 0a           ??MXdI?? e .....                 asl     A
+003a65 fe/e865: b0 03        ??MXdI?? e .....                 bcs     OSBYTE_0_X
+003a67 fe/e867: 82 8d ff     ??MXdI?c e ...#.                 brl     dispatchOSWORDinA

+003a6a fe/e86a: a2 00        ??MXd??? e ....> OSBYTE_0_X      ldx     #$00
+003a6c fe/e86c: 60           n?MXd?Z? e ...#.                 rts

                                               ********************************************************************************
                                               * OSBYTE 0 - print OS version or return in X                                   *
                                               ********************************************************************************
+003a6d fe/e86d: d0 fb        ??MXd??? e @T... OSBYTE_0        bne     OSBYTE_0_X
+003a6f fe/e86f: 00 f7        ??MXd?Z? e ...#.                 brk     $f7

+003a71 fe/e871: 56 65 72 73+            .....                 .zstr   “Version 1.00 13/Nov/86 (C)1986”

+003a90 fe/e890: a0 00        ??MXd??? e @T... TFEE890         ldy     #$00
+003a92 fe/e892: ad 62 a5     n?MXd?Z? e .....                 lda     SYSVARS+98
+003a95 fe/e895: d0 48        ??MXd??? e .....                 bne     LFEE8DF
+003a97 fe/e897: ad 6b a5     ??MXd?Z? e .....                 lda     SYSVAR_SOUND_EXT_FLAG
+003a9a fe/e89a: d0 05        ??MXd??? e .....                 bne     LFEE8A1
+003a9c fe/e89c: c8           ??MXd?Z? e .....                 iny
+003a9d fe/e89d: b7 ea        ??MXd??? e .....                 lda     [$ea],y
+003a9f fe/e89f: c9 20        ??MXd??? e .....                 cmp     #$20
+003aa1 fe/e8a1: a2 08        ??MXd??? e ....> LFEE8A1         ldx     #$08
+003aa3 fe/e8a3: 90 03        n?MXd?z? e .....                 bcc     LFEE8A8
+003aa5 fe/e8a5: 82 86 ff     n?MXd?zC e ...#.                 brl     OSB_plaplaplpplaSECSEV

+003aa8 fe/e8a8: 88           n?MXd?zc e ....> LFEE8A8         dey
+003aa9 fe/e8a9: b7 ea        ??MXd??c e .....                 lda     [$ea],y
+003aab fe/e8ab: 20 41 e9     ??MXd??c e .....                 jsr     LFEE941
+003aae fe/e8ae: 20 57 e9     ??MXd??? e .....                 jsr     LFEE957
+003ab1 fe/e8b1: 09 04        ??MXd??? e .....                 ora     #$04
+003ab3 fe/e8b3: aa           ??MXd?z? e .....                 tax
+003ab4 fe/e8b4: 90 05        ??MXd??? e .....                 bcc     LFEE8BB
+003ab6 fe/e8b6: 20 34 df     ??MXd??C e .....                 jsr     LFEDF34
+003ab9 fe/e8b9: a0 01        ??MXd??? e .....                 ldy     #$01
+003abb fe/e8bb: 20 57 e9     ??MXd??? e ....> LFEE8BB         jsr     LFEE957
+003abe fe/e8be: 85 f6        ??MXd??? e .....                 sta     $f6
+003ac0 fe/e8c0: 08           ??MXd??? e .....                 php
+003ac1 fe/e8c1: a0 06        ??MXd??? e .....                 ldy     #$06
+003ac3 fe/e8c3: b7 ea        n?MXd?z? e .....                 lda     [$ea],y
+003ac5 fe/e8c5: 48           ??MXd??? e .....                 pha
+003ac6 fe/e8c6: a0 04        ??MXd??? e .....                 ldy     #$04
+003ac8 fe/e8c8: b7 ea        n?MXd?z? e .....                 lda     [$ea],y
+003aca fe/e8ca: 48           ??MXd??? e .....                 pha
+003acb fe/e8cb: a0 02        ??MXd??? e .....                 ldy     #$02
+003acd fe/e8cd: b7 ea        n?MXd?z? e .....                 lda     [$ea],y
+003acf fe/e8cf: 2a           ??MXd??? e .....                 rol     A
+003ad0 fe/e8d0: 38           ??MXd??? e .....                 sec
+003ad1 fe/e8d1: e9 02        ??MXd??C e .....                 sbc     #$02
+003ad3 fe/e8d3: 0a           ??MXd??? e .....                 asl     A
+003ad4 fe/e8d4: 0a           ??MXd??? e .....                 asl     A
+003ad5 fe/e8d5: 05 f6        ??MXd??? e .....                 ora     $f6
+003ad7 fe/e8d7: 20 ab df     ??MXd??? e .....                 jsr     LFEDFAB
+003ada fe/e8da: 90 2f        ??MXd??? e .....                 bcc     LFEE90B
+003adc fe/e8dc: 68           ??MXd??C e .....                 pla
+003add fe/e8dd: 68           ??MXd??C e .....                 pla
+003ade fe/e8de: 28           ??MXd??C e .....                 plp
+003adf fe/e8df: 60           ??MXd??? e ...#> LFEE8DF         rts

+003ae0 fe/e8e0: f4 00 00     ??MXdIZ? e .T..> Serv8_QRY       pea     $0000
+003ae3 fe/e8e3: ab           ??MXdIZ? e .....                 plb
+003ae4 fe/e8e4: ab           ??MXdI?? e .....                 plb
+003ae5 fe/e8e5: ad 62 a5     ??MXdI?? e .....                 lda     SYSVARS+98
+003ae8 fe/e8e8: d0 f5        ??MXdI?? e .....                 bne     LFEE8DF
+003aea fe/e8ea: ad 6b a5     ??MXdIZ? e .....                 lda     SYSVAR_SOUND_EXT_FLAG
+003aed fe/e8ed: f0 05        ??MXdI?? e .....                 beq     LFEE8F4
+003aef fe/e8ef: a2 16        ??MXdIz? e .....                 ldx     #$16
+003af1 fe/e8f1: 4c 47 ee     n?MXdIz? e ...#.                 jmp     donothingRTS

+003af4 fe/e8f4: 08           ??MXdIZ? e ....> LFEE8F4         php
+003af5 fe/e8f5: 78           ??MXdIZ? e .....                 sei
+003af6 fe/e8f6: ad 63 a5     ??MXdIZ? e .....                 lda     SYSVARS+99
+003af9 fe/e8f9: 20 41 e9     ??MXdI?? e .....                 jsr     LFEE941
+003afc fe/e8fc: aa           ??MXdI?? e .....                 tax
+003afd fe/e8fd: ad 64 a5     ??MXdI?? e .....                 lda     SYSVARS+100
+003b00 fe/e900: 20 e2 e1     ??MXdI?? e .....                 jsr     callINSV
+003b03 fe/e903: ad 66 a5     ??MXdI?? e .....                 lda     SYSVARS+102
+003b06 fe/e906: 48           ??MXdI?? e .....                 pha
+003b07 fe/e907: ad 65 a5     ??MXdI?? e .....                 lda     SYSVARS+101
+003b0a fe/e90a: 48           ??MXdI?? e .....                 pha
+003b0b fe/e90b: 38           ??MXd??? e ....> LFEE90B         sec
+003b0c fe/e90c: 6e 14 a8     ??MXd??C e .....                 ror     SOUND_QRY_T
+003b0f fe/e90f: 68           N?MXd?z? e .....                 pla
+003b10 fe/e910: 20 e2 e1     ??MXd??? e .....                 jsr     callINSV
+003b13 fe/e913: 68           ??MXd??? e .....                 pla
+003b14 fe/e914: 20 e2 e1     ??MXd??? e .....                 jsr     callINSV
+003b17 fe/e917: 28           ??MXd??? e .....                 plp
+003b18 fe/e918: 60           ??MXdIZ? e ...#.                 rts

+003b19 fe/e919: ae 62 a5     ??MXd??? e @T... TFEE919         ldx     SYSVARS+98
+003b1c fe/e91c: d0 c1        ??MXd??? e .....                 bne     LFEE8DF
+003b1e fe/e91e: ae 6b a5     ??MXd?Z? e .....                 ldx     SYSVAR_SOUND_EXT_FLAG
+003b21 fe/e921: f0 03        ??MXd??? e .....                 beq     LFEE926
+003b23 fe/e923: 82 7b ff     ??MXd?z? e ...#.                 brl     LFEE8A1

+003b26 fe/e926: e9 01        ??MXd?Z? e ....> LFEE926         sbc     #$01
+003b28 fe/e928: 0a           ??MXd??? e .....                 asl     A
+003b29 fe/e929: 0a           ??MXd??? e .....                 asl     A
+003b2a fe/e92a: 0a           ??MXd??? e .....                 asl     A
+003b2b fe/e92b: 0a           ??MXd??? e .....                 asl     A
+003b2c fe/e92c: 09 0f        ??MXd??? e .....                 ora     #$0f
+003b2e fe/e92e: aa           ??MXd?z? e .....                 tax
+003b2f fe/e92f: a9 00        ??MXd??? e .....                 lda     #$00
+003b31 fe/e931: a0 10        n?MXd?Z? e .....                 ldy     #$10
+003b33 fe/e933: c0 0e        ??MXd?z? e ....> LFEE933         cpy     #$0e
+003b35 fe/e935: b0 02        ??MXd??? e .....                 bcs     LFEE939
+003b37 fe/e937: b7 ea        ??MXd??c e .....                 lda     [$ea],y
+003b39 fe/e939: 9d c0 a8     ??MXd??? e ....> LFEE939         sta     $a8c0,x
+003b3c fe/e93c: ca           ??MXd??? e .....                 dex
+003b3d fe/e93d: 88           ??MXd??? e .....                 dey
+003b3e fe/e93e: d0 f3        ??MXd??? e .....                 bne     LFEE933
+003b40 fe/e940: 60           ??MXd?Z? e ...#.                 rts

+003b41 fe/e941: 29 03        ??MXd??? e ....> LFEE941         and     #$03
+003b43 fe/e943: 09 04        n?MXd??? e .....                 ora     #$04
+003b45 fe/e945: cd 25 a8     ??MXd?z? e .....                 cmp     SOUND_CUR_CHAN_QRY
+003b48 fe/e948: f0 0c        ??MXd??? e .....                 beq     LFEE956
+003b4a fe/e94a: 48           ??MXd?z? e .....                 pha
+003b4b fe/e94b: 18           ??MXd?z? e .....                 clc
+003b4c fe/e94c: ae 25 a8     ??MXd?zc e .....                 ldx     SOUND_CUR_CHAN_QRY
+003b4f fe/e94f: 8d 25 a8     ??MXd??c e .....                 sta     SOUND_CUR_CHAN_QRY
+003b52 fe/e952: 20 34 df     ??MXd??c e .....                 jsr     LFEDF34
+003b55 fe/e955: 68           ??MXd??? e .....                 pla
+003b56 fe/e956: 60           ??MXd??? e ...#> LFEE956         rts

+003b57 fe/e957: b7 ea        ??MXd??? e ....> LFEE957         lda     [$ea],y
+003b59 fe/e959: c9 10        ??MXd??? e .....                 cmp     #$10
+003b5b fe/e95b: 29 03        ??MXd??? e .....                 and     #$03
+003b5d fe/e95d: c8           n?MXd??? e .....                 iny
+003b5e fe/e95e: 60           ??MXd??? e ...#.                 rts

+003b5f fe/e95f: a2 0f        ??MXd??? e @T... TFEE95F         ldx     #$0f
+003b61 fe/e961: d0 03        n?MXd?z? e ...#.                 bne     LFEE966

+003b63 fe/e963: ae 83 a5     ??MXd??? e @T... TFEE963         ldx     SYSVARS+131
+003b66 fe/e966: a0 04        ??MXd??? e ....> LFEE966         ldy     #$04
+003b68 fe/e968: bd 8c a5     n?MXd??? e ....> LFEE968         lda     SYSVARS+140,x
+003b6b fe/e96b: 97 ea        ??MXd??? e .....                 sta     [$ea],y
+003b6d fe/e96d: e8           ??MXd??? e .....                 inx
+003b6e fe/e96e: 88           ??MXd??? e .....                 dey
+003b6f fe/e96f: 10 f7        ??MXd??? e .....                 bpl     LFEE968
+003b71 fe/e971: 60           ??MXd??? e ...#> LFEE971         rts

+003b72 fe/e972: a9 0f        ??MXd??? e @T... TFEE972         lda     #$0f
+003b74 fe/e974: d0 06        n?MXd?z? e ...#.                 bne     LFEE97C

+003b76 fe/e976: ad 83 a5     ??MXd??? e @T... TFEE976         lda     SYSVARS+131
+003b79 fe/e979: 49 0f        ??MXd??? e .....                 eor     #$0f
+003b7b fe/e97b: 18           ??MXd??? e .....                 clc
+003b7c fe/e97c: 48           ??MXd??? e ....> LFEE97C         pha
+003b7d fe/e97d: aa           ??MXd??? e .....                 tax
+003b7e fe/e97e: a0 04        ??MXd??? e .....                 ldy     #$04
+003b80 fe/e980: b7 ea        n?MXd??? e ....> LFEE980         lda     [$ea],y
+003b82 fe/e982: 9d 8c a5     ??MXd??? e .....                 sta     SYSVARS+140,x
+003b85 fe/e985: e8           ??MXd??? e .....                 inx
+003b86 fe/e986: 88           ??MXd??? e .....                 dey
+003b87 fe/e987: 10 f7        ??MXd??? e .....                 bpl     LFEE980
+003b89 fe/e989: 68           N?MXd??? e .....                 pla
+003b8a fe/e98a: b0 e5        ??MXd??? e .....                 bcs     LFEE971
+003b8c fe/e98c: 8d 83 a5     ??MXd??c e .....                 sta     SYSVARS+131
+003b8f fe/e98f: 60           ??MXd??c e ...#.                 rts

                                               ********************************************************************************
                                               * OSWORD 0 - readline                                                          *
                                               * As per BBC - not sure what the implied bank for the pointer in the block is  *
                                               ********************************************************************************
                                                               .dbank  $00
+003b90 fe/e990: a0 04        ??MXd??? e @T... OSWORD_0        ldy     #$04
                                               ; Copy bytes 2,3,4 to SYSVARS+B0 (different to BBC)
+003b92 fe/e992: b7 ea        ??MXd??? e ....> @lp             lda     [<DPSYS_OSB_X],y
+003b94 fe/e994: bb           ??MXd??? e .....                 tyx                       ;TODO - remove
+003b95 fe/e995: 9d b0 a5     ??MXd??? e .....                 sta     SYSVARS_OSWORD_0_PARMS-2,x ;TODO - use Y here
+003b98 fe/e998: 88           ??MXd??? e .....                 dey
+003b99 fe/e999: c0 02        ??MXd??? e .....                 cpy     #$02
+003b9b fe/e99b: b0 f5        ??MXd??? e .....                 bcs     @lp
                                               ; store the address pointer in DP
+003b9d fe/e99d: b7 ea        ??MXd??c e .....                 lda     [<DPSYS_OSB_X],y
+003b9f fe/e99f: 85 e4        ??MXd??c e .....                 sta     <DPSYS_OSWORD0_BUFPTR+1
+003ba1 fe/e9a1: 88           ??MXd??c e .....                 dey
+003ba2 fe/e9a2: 8c 69 a5     ??MXd??c e .....                 sty     DPSYS_PAGEMODE_CTR-$700 ;Y is zero here; TODO: use STZ
+003ba5 fe/e9a5: b7 ea        ??MXd??c e .....                 lda     [<DPSYS_OSB_X],y
+003ba7 fe/e9a7: 85 e3        ??MXd??c e .....                 sta     <DPSYS_OSWORD0_BUFPTR
+003ba9 fe/e9a9: 58           ??MXd??c e .....                 cli
+003baa fe/e9aa: 80 0c        ??MXdi?c e ...#.                 bra     @loop

+003bac fe/e9ac: a9 07        ??MXdi?C e ....> @OSW0_BELL      lda     #VDU_07_BELL      ;beep and go round the loop without incrementing Y
+003bae fe/e9ae: 88           n?MXdizC e .....                 dey
+003baf fe/e9af: c8           ??MXdi?? e ....> @OSW0_inyecho   iny
+003bb0 fe/e9b0: a6 d8        ??MXdi?? e ....> @badcharNoInc   ldx     DPSYS_D8_B_SAV
+003bb2 fe/e9b2: da           ??MXdi?? e .....                 phx                       ;TODO: pointless push - OPWRC preserves all regs
+003bb3 fe/e9b3: 02 00        ??MXdi?? e .....                 cop     COP_00_OPWRC
+003bb5 fe/e9b5: fa           ??MXdi?? e .....                 plx
+003bb6 fe/e9b6: 86 d8        ??MXdi?? e .....                 stx     DPSYS_D8_B_SAV
+003bb8 fe/e9b8: a6 d8        ??MXdi?? e ....> @loop           ldx     DPSYS_D8_B_SAV
+003bba fe/e9ba: da           ??MXdi?? e .....                 phx
+003bbb fe/e9bb: 02 04        ??MXdi?? e .....                 cop     COP_04_OPRDC      ;read char from input stream
+003bbd fe/e9bd: fa           ??MXdi?? e .....                 plx
+003bbe fe/e9be: 86 d8        ??MXdi?? e .....                 stx     DPSYS_D8_B_SAV
+003bc0 fe/e9c0: b0 4d        ??MXdi?? e .....                 bcs     @ESC_ret          ;ESCape
+003bc2 fe/e9c2: aa           ??MXdi?c e .....                 tax
+003bc3 fe/e9c3: ad 7c a5     ??MXdi?c e .....                 lda     SYSVARS_7C_OUTDEST
+003bc6 fe/e9c6: 6a           ??MXdi?c e .....                 ror     A
+003bc7 fe/e9c7: 6a           n?MXdi?? e .....                 ror     A                 ;rotate twice to see if output disabled
+003bc8 fe/e9c8: 8a           ??MXdi?? e .....                 txa                       ;restore A
+003bc9 fe/e9c9: b0 05        ??MXdi?? e .....                 bcs     @novdu            ;if VDU disabled skip forward
+003bcb fe/e9cb: ae 6a a5     ??MXdi?c e .....                 ldx     SYSVAR_VDU_QLEN
+003bce fe/e9ce: d0 e0        ??MXdi?c e .....                 bne     @badcharNoInc     ;if there's stuff in the VDU Q just output the char and continue
+003bd0 fe/e9d0: c9 7f        ??MXdi?? e ....> @novdu          cmp     #VDU_7F_BKSP
+003bd2 fe/e9d2: d0 07        ??MXdi?? e .....                 bne     @notbksp
+003bd4 fe/e9d4: c0 00        ??MXdiZ? e .....                 cpy     #$00
+003bd6 fe/e9d6: f0 e0        ??MXdi?? e .....                 beq     @loop             ;if zero just loop around
+003bd8 fe/e9d8: 88           ??MXdiz? e .....                 dey                       ;decrement pointer
+003bd9 fe/e9d9: b0 d5        ??MXdi?? e .....                 bcs     @badcharNoInc     ;always branch round - TODO: change to more meaningful BRA
+003bdb fe/e9db: c9 15        ??MXdi?? e ....> @notbksp        cmp     #VDU_15_DELLN
+003bdd fe/e9dd: d0 0c        ??MXdi?? e .....                 bne     @storeInBuf
+003bdf fe/e9df: 98           ??MXdiZ? e .....                 tya                       ;check pointer for 0
+003be0 fe/e9e0: f0 d6        ??MXdi?? e .....                 beq     @loop             ;nothing in current line got back to reading
+003be2 fe/e9e2: a9 7f        ??MXdiz? e .....                 lda     #VDU_7F_BKSP
+003be4 fe/e9e4: 02 00        ??MXdiz? e ....> @dellnlp        cop     COP_00_OPWRC
+003be6 fe/e9e6: 88           ??MXdiz? e .....                 dey
+003be7 fe/e9e7: d0 fb        ??MXdi?? e .....                 bne     @dellnlp
+003be9 fe/e9e9: f0 cd        ??MXdiZ? e ...#.                 beq     @loop

+003beb fe/e9eb: 8b           ??MXdiz? e ....> @storeInBuf     phb                       ;preserve our Bank
+003bec fe/e9ec: eb           ??MXdiz? e .....                 xba                       ;preserve A (char to store)
+003bed fe/e9ed: a5 d8        ??MXdi?? e .....                 lda     DPSYS_D8_B_SAV    ;get dest bank
+003bef fe/e9ef: 48           ??MXdi?? e .....                 pha
+003bf0 fe/e9f0: ab           ??MXdi?? e .....                 plb
+003bf1 fe/e9f1: eb           ??MXdi?? e .....                 xba                       ;get back A
+003bf2 fe/e9f2: 91 e3        ??MXdi?? e .....                 sta     (<DPSYS_OSWORD0_BUFPTR),y
+003bf4 fe/e9f4: ab           ??MXdi?? e .....                 plb                       ;back to our bank
+003bf5 fe/e9f5: c9 0d        ??MXdi?? e .....                 cmp     #VDU_0D_CR        ;check for EOL
+003bf7 fe/e9f7: f0 13        ??MXdi?? e .....                 beq     @newlClcRet
+003bf9 fe/e9f9: cc b2 a5     ??MXdiz? e .....                 cpy     SYSVARS_OSWORD_0_PARMS
+003bfc fe/e9fc: b0 ae        ??MXdi?? e .....                 bcs     @OSW0_BELL        ;too long - beep
+003bfe fe/e9fe: cd b3 a5     ??MXdi?c e .....                 cmp     SYSVARS_OSWORD_0_PARMS+1
+003c01 fe/ea01: 90 ad        ??MXdi?? e .....                 bcc     @badcharNoInc     ;bad char silently store in buffer no increment
+003c03 fe/ea03: cd b4 a5     ??MXdi?C e .....                 cmp     SYSVARS_OSWORD_0_PARMS+2
+003c06 fe/ea06: f0 a7        ??MXdi?? e .....                 beq     @OSW0_inyecho
+003c08 fe/ea08: 90 a5        ??MXdiz? e .....                 bcc     @OSW0_inyecho
+003c0a fe/ea0a: b0 a4        ??MXdizC e ...#.                 bcs     @badcharNoInc

+003c0c fe/ea0c: 02 03        ??MXdiZ? e ....> @newlClcRet     cop     COP_03_OPNLI
+003c0e fe/ea0e: 18           ??MXdiZ? e .....                 clc
+003c0f fe/ea0f: aa           ??MXdi?? e ....> @ESC_ret        tax
+003c10 fe/ea10: 60           ??MXdi?? e ...#.                 rts

                                               ; TODO dead code?
+003c11 fe/ea11: 58           ??MXd??? e @T..> LFEEA11         cli
+003c12 fe/ea12: 78           ??MXdi?? e .....                 sei
+003c13 fe/ea13: da           ??MXdI?? e .....                 phx
+003c14 fe/ea14: a9 00        ??MXdI?? e .....                 lda     #$00
+003c16 fe/ea16: eb           n?MXdIZ? e .....                 xba
+003c17 fe/ea17: a9 03        ??MXdI?? e .....                 lda     #$03
+003c19 fe/ea19: a2 02        n?MXdIz? e .....                 ldx     #$02
+003c1b fe/ea1b: 22 b0 ff 00  n?MXdIz? e .....                 jsl     __EV
+003c1f fe/ea1f: fa           ??MXdI?? e .....                 plx
+003c20 fe/ea20: 90 3e        ??MXdI?? e .....                 bcc     LFEEA60
+003c22 fe/ea22: 2c c6 a5     ??MXdI?C e .....                 bit     SYSVARS_ELK_BUFFER_BUSY+3
+003c25 fe/ea25: 10 ea        ??MXdI?C e .....                 bpl     LFEEA11
+003c27 fe/ea27: 20 16 df     N?MXdI?C e .....                 jsr     LFEDF16
+003c2a fe/ea2a: a0 00        ??MXdI?? e .....                 ldy     #$00
+003c2c fe/ea2c: 84 eb        n?MXdIZ? e .....                 sty     $eb
+003c2e fe/ea2e: 86 ea        n?MXdIZ? e .....                 stx     $ea
+003c30 fe/ea30: 20 b6 e7     n?MXdIZ? e .....                 jsr     OSBYTE_DOESNOTHINGBADLY
+003c33 fe/ea33: a9 05        ??MXdI?? e .....                 lda     #$05
+003c35 fe/ea35: 09 f0        n?MXdIz? e .....                 ora     #$f0
+003c37 fe/ea37: 80 0d        N?MXdIz? e ...#.                 bra     LFEEA46

                                               ; TODO dead code?
+003c39 fe/ea39: d0 07        ??MXd??? e @T...                 bne     LFEEA42
+003c3b fe/ea3b: a2 32        ??MXd?Z? e .....                 ldx     #$32
+003c3d fe/ea3d: 48           n?MXd?z? e .....                 pha
+003c3e fe/ea3e: a9 03        n?MXd?z? e .....                 lda     #$03
+003c40 fe/ea40: aa           n?MXd?z? e .....                 tax
+003c41 fe/ea41: 68           ??MXd??? e .....                 pla
+003c42 fe/ea42: 60           ??MXd??? e ...#> LFEEA42         rts

+003c43 fe/ea43: 18           ??MXd??? e @T... OSBYTE_4        clc
+003c44 fe/ea44: 69 e9        ??MXd??c e .....                 adc     #$e9              ;TODO: make this relative to SYSVARS/VDUVARS
+003c46 fe/ea46: 86 ea        ??MXd??? e ....> LFEEA46         stx     <DPSYS_OSB_X      ;TODO: suspect this is superfluous?
+003c48 fe/ea48: c9 dd        ??MXd??? e .T... OSBYTE_A6_FF    cmp     #$dd
+003c4a fe/ea4a: 90 04        ??MXd??? e .....                 bcc     @sk1
+003c4c fe/ea4c: c9 e5        ??MXd??C e .....                 cmp     #$e5
+003c4e fe/ea4e: 90 11        ??MXd??? e .....                 bcc     @skDDtoE4
+003c50 fe/ea50: a8           ??MXd??? e ....> @sk1            tay
+003c51 fe/ea51: b9 90 a4     ??MXd??? e .....                 lda     SYSVARS-112,y
+003c54 fe/ea54: aa           ??MXd??? e .....                 tax
+003c55 fe/ea55: 25 eb        ??MXd??? e .....                 and     <DPSYS_OSB_Y
+003c57 fe/ea57: 45 ea        ??MXd??? e .....                 eor     <DPSYS_OSB_X
+003c59 fe/ea59: 99 90 a4     ??MXd??? e .....                 sta     SYSVARS-112,y
+003c5c fe/ea5c: b9 91 a4     ??MXd??? e .....                 lda     SYSVARS-111,y
+003c5f fe/ea5f: a8           ??MXd??? e .....                 tay
+003c60 fe/ea60: 60           ??MXd??? e ...#> LFEEA60         rts

+003c61 fe/ea61: 20 65 e4     ??MXd??c e ....> @skDDtoE4       jsr     OSBYTE_DDtoE4     ;;TODO: replace with jump
+003c64 fe/ea64: 60           ??MXd??? e ...#.                 rts

                                               ; TODO dead?
+003c65 fe/ea65: 49 8c        ??MXd??? e @T...                 eor     #$8c
+003c67 fe/ea67: 0a           ??MXd??? e .....                 asl     A
+003c68 fe/ea68: 8d 47 a5     ??MXd??? e .....                 sta     SYSVARS+71
+003c6b fe/ea6b: 60           ??MXd??? e ...#.                 rts

                                               ********************************************************************************
                                               * OSBYTE 13 (19) - Wait for Vsync                                              *
                                               ********************************************************************************
                                                               .dbank  $00
+003c6c fe/ea6c: ad 40 a5     ??MXd??? e @T... OSBYTE_13       lda     SYSVAR_CFS_TIMEOUT
+003c6f fe/ea6f: 58           ??MXd??? e ....> @lp             cli
+003c70 fe/ea70: 78           ??MXdi?? e .....                 sei
+003c71 fe/ea71: cd 40 a5     ??MXdI?? e .....                 cmp     SYSVAR_CFS_TIMEOUT
+003c74 fe/ea74: f0 f9        ??MXdI?? e .....                 beq     @lp
+003c76 fe/ea76: 60           ??MXdIz? e ...#.                 rts

                                               ********************************************************************************
                                               * OSBYTE 12 - Reset Soft Key Definitions                                       *
                                               ********************************************************************************
+003c77 fe/ea77: 20 44 e5     ??MXdI?? e ....> OSBYTE_12       jsr     OSB_ResetFnKeys
+003c7a fe/ea7a: 60           ??MXdI?? e ...#.                 rts

                                                               .rwid   longm,longx
+003c7b fe/ea7b: 08           ??mxd??? e ....> LFEEA7B         php
+003c7c fe/ea7c: c2 30        ??mxd??? e .....                 rep     #$30
+003c7e fe/ea7e: a9 00 00     ??mxd??? e .....                 lda     #$0000
+003c81 fe/ea81: a8           n?mxd?Z? e .....                 tay
+003c82 fe/ea82: a2 3a 00     ??mxd??? e .....                 ldx     #$003a
+003c85 fe/ea85: 4b           n?mxd?z? e .....                 phk
+003c86 fe/ea86: 20 38 fe     n?mxd?z? e .....                 jsr     callModVDU
+003c89 fe/ea89: 28           ??mxd??? e .....                 plp
+003c8a fe/ea8a: 60           ??mxd??? e ...#.                 rts

                                               ********************************************************************************
                                               * OSBYTE 76 - reflect keyboard in LEDS                                         *
                                               ********************************************************************************
                                                               .rwid   shortm,shortx
+003c8b fe/ea8b: 08           ??MXd??? e @T... OSBYTE_76       php
+003c8c fe/ea8c: 78           ??MXd??? e .....                 sei
+003c8d fe/ea8d: a9 40        ??MXdI?? e .....                 lda     #$40
+003c8f fe/ea8f: 20 b6 ea     n?MXdIz? e .....                 jsr     LFEEAB6
+003c92 fe/ea92: b0 0a        ??MXdI?? e .....                 bcs     LFEEA9E
+003c94 fe/ea94: 18           ??MXdI?c e .....                 clc
+003c95 fe/ea95: b8           ??MXdI?c e .....                 clv
+003c96 fe/ea96: da           ?vMXdI?c e .....                 phx
+003c97 fe/ea97: a2 1c        ?vMXdI?c e .....                 ldx     #$1c
+003c99 fe/ea99: 22 ac ff 00  nvMXdIzc e .....                 jsl     __KB
+003c9d fe/ea9d: fa           ??MXdI?? e .....                 plx
+003c9e fe/ea9e: 28           ??MXdI?? e ....> LFEEA9E         plp
+003c9f fe/ea9f: 2a           ??MXd??? e .....                 rol     A
+003ca0 fe/eaa0: 60           ??MXd??? e ...#.                 rts

                                               ********************************************************************************
                                               * OSBYTE 78 - write key pressed data                                           *
                                               ********************************************************************************
+003ca1 fe/eaa1: 9b           ??MXd??? e @T... OSBYTE_78       txy
+003ca2 fe/eaa2: a2 18        ??MXd??? e .....                 ldx     #$18
+003ca4 fe/eaa4: 22 ac ff 00  n?MXd?z? e .....                 jsl     __KB
+003ca8 fe/eaa8: 60           ??MXd??? e ...#.                 rts

+003ca9 fe/eaa9: eb           ??MXdI?? e ....> LFEEAA9         xba
+003caa fe/eaaa: 4b           ??MXdI?? e .....                 phk
+003cab fe/eaab: ad 21 a5     ??MXdI?? e .....                 lda     SYSVARS+33
+003cae fe/eaae: 48           ??MXdI?? e .....                 pha
+003caf fe/eaaf: ad 20 a5     ??MXdI?? e .....                 lda     SYSVARS+32
+003cb2 fe/eab2: 48           ??MXdI?? e .....                 pha
+003cb3 fe/eab3: eb           ??MXdI?? e .....                 xba
+003cb4 fe/eab4: 08           ??MXdI?? e .....                 php
+003cb5 fe/eab5: 40           ??MXdI?? e ...#.                 rti

+003cb6 fe/eab6: 90 11        ??MXdI?? e ....> LFEEAB6         bcc     @skCC
+003cb8 fe/eab8: 48           ??MXdI?C e .....                 pha
+003cb9 fe/eab9: ad 82 a5     ??MXdI?C e .....                 lda     SYSVARS_ULA_MISC_COPY
+003cbc fe/eabc: 49 c0        ??MXdI?C e .....                 eor     #$c0
+003cbe fe/eabe: 8f 07 fe 45  ??MXdI?C e .....                 stal    shiela_ULA_MISC
+003cc2 fe/eac2: 49 c0        ??MXdI?C e .....                 eor     #$c0
+003cc4 fe/eac4: 8f 07 fe 45  ??MXdI?C e .....                 stal    shiela_ULA_MISC
+003cc8 fe/eac8: 68           ??MXdI?C e .....                 pla
+003cc9 fe/eac9: 48           ??MXdI?? e ....> @skCC           pha
+003cca fe/eaca: da           ??MXdI?? e .....                 phx
+003ccb fe/eacb: a9 00        ??MXdI?? e .....                 lda     #$00
+003ccd fe/eacd: eb           n?MXdIZ? e .....                 xba
+003cce fe/eace: a9 03        ??MXdI?? e .....                 lda     #$03
+003cd0 fe/ead0: a2 02        n?MXdIz? e .....                 ldx     #$02
+003cd2 fe/ead2: 22 b0 ff 00  n?MXdIz? e .....                 jsl     __EV
+003cd6 fe/ead6: fa           ??MXdI?? e .....                 plx
+003cd7 fe/ead7: 68           ??MXdI?? e .....                 pla
+003cd8 fe/ead8: 60           ??MXdI?? e ...#.                 rts

                                               ; TODO dead?
+003cd9 fe/ead9: ad 87 a5     ??MXd??? e @T...                 lda     SYSVARS+135
+003cdc fe/eadc: 49 4c        ??MXd??? e .....                 eor     #$4c
+003cde fe/eade: d0 04        ??MXd??? e .....                 bne     LFEEAE4
+003ce0 fe/eae0: 5c 87 a5 00  ??MXd?Z? e ...#.                 jml     SYSVARS+135

+003ce4 fe/eae4: 60           ??MXd?z? e ...#> LFEEAE4         rts

+003ce5 fe/eae5: 60           ??MXd??? e @T.#.                 rts

                                               ; TODO: dead?
+003ce6 fe/eae6: 2f 21 42 4f+            .....                 .str    “/!BO.”
+003ceb fe/eaeb: 0d                      .....                 .dd1    $0d

                                               ; QRY this appears to do a jump indirect to (f6) in DP setting flags Z if X==0
                                               ; and Cy=1
                                               ; 
                                               ; As this is called once in OSBYTE dispatch where DP is known why not just
                                               ; 
                                               ; CPX#0
                                               ; SEC
                                               ; JMP(ACF6)
+003cec fe/eaec: 4b           ??MXdI?C e ....> callDP_F6_SEC_ZeqX phk
+003ced fe/eaed: 0b           ??MXdI?C e .....                 phd
+003cee fe/eaee: 48           ??MXdI?C e .....                 pha
+003cef fe/eaef: eb           ??MXdI?C e .....                 xba
+003cf0 fe/eaf0: 48           ??MXdI?C e .....                 pha
                                               ; +7  RETH
                                               ; +6  RETL
                                               ; +5  K
                                               ; +3  D
                                               ; +2  A
                                               ; +1  B
+003cf1 fe/eaf1: a5 f7        ??MXdI?C e .....                 lda     <DPSYS_OSB_IND+1
+003cf3 fe/eaf3: 83 04        ??MXdI?C e .....                 sta     $04,S
+003cf5 fe/eaf5: a5 f6        ??MXdI?C e .....                 lda     <DPSYS_OSB_IND
+003cf7 fe/eaf7: 83 03        ??MXdI?C e .....                 sta     $03,S
                                               ; +7  RETH
                                               ; +6  RETL
                                               ; +5  K
                                               ; +3  F6,F7
                                               ; +2  A
                                               ; +1  B
+003cf9 fe/eaf9: 68           ??MXdI?C e .....                 pla
+003cfa fe/eafa: eb           ??MXdI?C e .....                 xba
+003cfb fe/eafb: 68           ??MXdI?C e .....                 pla
                                               ; +5  RETH
                                               ; +4  RETL
                                               ; +3  K
                                               ; +1  F6,F7
+003cfc fe/eafc: e0 00        ??MXdI?C e .....                 cpx     #$00
+003cfe fe/eafe: 38           ??MXdI?? e .....                 sec
+003cff fe/eaff: 08           ??MXdI?C e .....                 php
                                               ; +6  RETH
                                               ; +5  RETL
                                               ; +4  K
                                               ; +2  F6,F7
                                               ; +1  FLAGS with Cy=1, Z if X==0
+003d00 fe/eb00: 40           ??MXdI?C e ...#.                 rti

                                               ; TODO - this looks dead as it will trip over the string
+003d01 fe/eb01: a2 09        ??MXd??? e @T...                 ldx     #$09
+003d03 fe/eb03: 20 47 ee     n?MXd?z? e .....                 jsr     donothingRTS
+003d06 fe/eb06: 20 0b ee     ??MXd??? e .....                 jsr     LFEEE0B_rts
+003d09 fe/eb09: 0d 56 65 72+            .T...                 .zstr   $0d,“Version 1.00 13/Nov/86 (C)1986”
+003d29 fe/eb29: 60           ??MXd??? e ...#.                 rts

+003d2a fe/eb2a: ce 49 a5     ??MXd??? e @T...                 dec     SYSVARS+73
+003d2d fe/eb2d: 60           ??MXd??? e ...#.                 rts

+003d2e fe/eb2e: ac 44 a5     ??MXd??? e @T...                 ldy     SYSVARS+68
+003d31 fe/eb31: a2 00        ??MXd??? e .....                 ldx     #$00
+003d33 fe/eb33: 60           n?MXd?Z? e ...#.                 rts

+003d34 fe/eb34: 08           ??MXd??? e ....> resetFlashCounters php
+003d35 fe/eb35: 78           ??MXd??? e .....                 sei
+003d36 fe/eb36: a2 00        ??MXdI?? e .....                 ldx     #$00
+003d38 fe/eb38: 8e 48 a5     n?MXdIZ? e .....                 stx     SYSVAR_48_UNKNOWN_ULA
+003d3b fe/eb3b: ad 53 a5     n?MXdIZ? e .....                 lda     SYSVAR_FLASH_MARK
+003d3e fe/eb3e: 8d 51 a5     ??MXdI?? e .....                 sta     SYSVAR_51_FLASHCTDN
+003d41 fe/eb41: a2 14        ??MXdI?? e .....                 ldx     #VDUMOD_OPX_14_FLASH_QRY
+003d43 fe/eb43: 4b           n?MXdIz? e .....                 phk
+003d44 fe/eb44: 20 38 fe     n?MXdIz? e .....                 jsr     callModVDU
+003d47 fe/eb47: 28           ??MXdI?? e .....                 plp
+003d48 fe/eb48: 60           ??MXd??? e ...#.                 rts

+003d49 fe/eb49: 8b           ??MXdi?? e .T..> LFEEB49         phb
+003d4a fe/eb4a: f4 00 00     ??MXdi?? e .....                 pea     $0000
                                                               .dbank  $00
+003d4d fe/eb4d: ab           ??MXdi?? e .....                 plb
+003d4e fe/eb4e: ab           ??MXdi?? e .....                 plb
+003d4f fe/eb4f: ad 6b a5     ??MXdi?? e .....                 lda     SYSVAR_SOUND_EXT_FLAG
+003d52 fe/eb52: d0 08        ??MXdi?? e .....                 bne     LFEEB5C
+003d54 fe/eb54: ad 14 a8     ??MXdiZ? e .....                 lda     SOUND_QRY_T
+003d57 fe/eb57: f0 03        ??MXdi?? e .....                 beq     LFEEB5C
+003d59 fe/eb59: 20 5e eb     ??MXdiz? e .....                 jsr     LFEEB5E
+003d5c fe/eb5c: ab           ??MXdi?? e ....> LFEEB5C         plb
+003d5d fe/eb5d: 60           ??MXdi?? e ...#.                 rts

+003d5e fe/eb5e: ae 25 a8     ??MXdiz? e ....> LFEEB5E         ldx     SOUND_CUR_CHAN_QRY
+003d61 fe/eb61: bd c3 a5     ??MXdi?? e .....                 lda     SYSVARS_ELK_BUFFER_BUSY,x
+003d64 fe/eb64: 30 05        ??MXdi?? e .....                 bmi     LFEEB6B
+003d66 fe/eb66: ad 1b a8     n?MXdi?? e .....                 lda     SOUND_QRY_S
+003d69 fe/eb69: d0 03        ??MXdi?? e .....                 bne     LFEEB6E
+003d6b fe/eb6b: 20 5d ec     ??MXdi?? e ....> LFEEB6B         jsr     LFEEC5D
+003d6e fe/eb6e: ad 1b a8     ??MXdi?? e ....> LFEEB6E         lda     SOUND_QRY_S
+003d71 fe/eb71: f0 11        ??MXdi?? e .....                 beq     LFEEB84
+003d73 fe/eb73: c9 ff        ??MXdiz? e .....                 cmp     #$ff
+003d75 fe/eb75: f0 10        ??MXdi?? e .....                 beq     LFEEB87
+003d77 fe/eb77: ce 1c a8     ??MXdiz? e .....                 dec     $a81c
+003d7a fe/eb7a: d0 0b        ??MXdi?? e .....                 bne     LFEEB87
+003d7c fe/eb7c: 20 da ec     ??MXdiZ? e .....                 jsr     LFEECDA
+003d7f fe/eb7f: ce 1b a8     ??MXdi?? e .....                 dec     SOUND_QRY_S
+003d82 fe/eb82: d0 03        ??MXdi?? e .....                 bne     LFEEB87
+003d84 fe/eb84: 20 5d ec     ??MXdiZ? e ....> LFEEB84         jsr     LFEEC5D
+003d87 fe/eb87: ac 1d a8     ??MXdi?? e ....> LFEEB87         ldy     $a81d
+003d8a fe/eb8a: c0 ff        ??MXdi?? e .....                 cpy     #$ff
+003d8c fe/eb8c: d0 03        ??MXdi?? e .....                 bne     LFEEB91
+003d8e fe/eb8e: 82 62 00     ??MXdiZ? e ...#.                 brl     sound_QRY1

+003d91 fe/eb91: ad 1e a8     ??MXdiz? e ....> LFEEB91         lda     $a81e
+003d94 fe/eb94: f0 08        ??MXdi?? e .....                 beq     LFEEB9E
+003d96 fe/eb96: ce 1e a8     ??MXdiz? e .....                 dec     $a81e
+003d99 fe/eb99: f0 03        ??MXdi?? e .....                 beq     LFEEB9E
+003d9b fe/eb9b: 82 55 00     ??MXdiz? e ...#.                 brl     sound_QRY1

+003d9e fe/eb9e: ad 19 a8     ??MXdiZ? e ....> LFEEB9E         lda     $a819
+003da1 fe/eba1: c9 03        ??MXdi?? e .....                 cmp     #$03
+003da3 fe/eba3: f0 4e        ??MXdi?? e .....                 beq     sound_QRY1
+003da5 fe/eba5: b9 c0 a8     ??MXdiz? e .....                 lda     $a8c0,y
+003da8 fe/eba8: 29 7f        ??MXdi?? e .....                 and     #$7f
+003daa fe/ebaa: 8d 1e a8     n?MXdi?? e .....                 sta     $a81e
+003dad fe/ebad: ad 1a a8     n?MXdi?? e .....                 lda     SOUND_QRY_S-1
+003db0 fe/ebb0: d0 2a        ??MXdi?? e .....                 bne     LFEEBDC
+003db2 fe/ebb2: ee 19 a8     ??MXdiZ? e .....                 inc     $a819
+003db5 fe/ebb5: ad 19 a8     ??MXdi?? e .....                 lda     $a819
+003db8 fe/ebb8: c9 03        ??MXdi?? e .....                 cmp     #$03
+003dba fe/ebba: d0 10        ??MXdi?? e .....                 bne     LFEEBCC
+003dbc fe/ebbc: ac 1d a8     ??MXdiZ? e .....                 ldy     $a81d
+003dbf fe/ebbf: b9 c0 a8     ??MXdi?? e .....                 lda     $a8c0,y
+003dc2 fe/ebc2: 30 2f        ??MXdi?? e .....                 bmi     sound_QRY1
+003dc4 fe/ebc4: a9 00        n?MXdi?? e .....                 lda     #$00
+003dc6 fe/ebc6: 8d 19 a8     n?MXdiZ? e .....                 sta     $a819
+003dc9 fe/ebc9: 20 eb ec     n?MXdiZ? e .....                 jsr     LFEECEB
+003dcc fe/ebcc: ad 19 a8     ??MXdi?? e ....> LFEEBCC         lda     $a819
+003dcf fe/ebcf: 18           ??MXdi?? e .....                 clc
+003dd0 fe/ebd0: 6d 1d a8     ??MXdi?c e .....                 adc     $a81d
+003dd3 fe/ebd3: a8           ??MXdi?? e .....                 tay
+003dd4 fe/ebd4: b9 c4 a8     ??MXdi?? e .....                 lda     $a8c4,y
+003dd7 fe/ebd7: 8d 1a a8     ??MXdi?? e .....                 sta     SOUND_QRY_S-1
+003dda fe/ebda: f0 17        ??MXdi?? e .....                 beq     sound_QRY1
+003ddc fe/ebdc: ce 1a a8     ??MXdiz? e ....> LFEEBDC         dec     SOUND_QRY_S-1
+003ddf fe/ebdf: ad 1d a8     ??MXdi?? e .....                 lda     $a81d
+003de2 fe/ebe2: 18           ??MXdi?? e .....                 clc
+003de3 fe/ebe3: 6d 19 a8     ??MXdi?c e .....                 adc     $a819
+003de6 fe/ebe6: a8           ??MXdi?? e .....                 tay
+003de7 fe/ebe7: b9 c1 a8     ??MXdi?? e .....                 lda     $a8c1,y
+003dea fe/ebea: f0 07        ??MXdi?? e .....                 beq     sound_QRY1
+003dec fe/ebec: 18           ??MXdiz? e .....                 clc
+003ded fe/ebed: 6d 1f a8     ??MXdizc e .....                 adc     SOUND_STATUS_QRY-1
+003df0 fe/ebf0: 20 eb ec     ??MXdi?? e .....                 jsr     LFEECEB
                                                               .dbank  $00
+003df3 fe/ebf3: a5 e5        ??MXd??? e ....> sound_QRY1      lda     $e5               ;QRY E5?
+003df5 fe/ebf5: 0d 62 a5     ??MXd??? e .....                 ora     SYSVARS+98        ;or with sound suppression status
+003df8 fe/ebf8: d0 35        ??MXd??? e .....                 bne     @ret              ;if ne then exit
+003dfa fe/ebfa: 08           ??MXd?Z? e .....                 php
+003dfb fe/ebfb: 78           ??MXd?Z? e .....                 sei
+003dfc fe/ebfc: ad 82 a5     ??MXdIZ? e .....                 lda     SYSVARS_ULA_MISC_COPY
+003dff fe/ebff: 29 f9        ??MXdI?? e .....                 and     #$f9
+003e01 fe/ec01: 0d 20 a8     ??MXdI?? e .....                 ora     SOUND_STATUS_QRY
+003e04 fe/ec04: cd 82 a5     ??MXdI?? e .....                 cmp     SYSVARS_ULA_MISC_COPY
+003e07 fe/ec07: f0 07        ??MXdI?? e .....                 beq     LFEEC10
+003e09 fe/ec09: 8d 82 a5     ??MXdIz? e .....                 sta     SYSVARS_ULA_MISC_COPY
+003e0c fe/ec0c: 8f 07 fe 45  ??MXdIz? e .....                 stal    shiela_ULA_MISC
+003e10 fe/ec10: 28           ??MXdI?? e ....> LFEEC10         plp
+003e11 fe/ec11: ad 21 a8     ??MXdIZ? e .....                 lda     SOUND_TONE_QRY
+003e14 fe/ec14: 8f 06 fe 45  ??MXdI?? e .....                 stal    sheila_UKA_TONE
+003e18 fe/ec18: ad 22 a8     ??MXdI?? e ....> LFEEC18         lda     SOUND_QRY_X
+003e1b fe/ec1b: f0 12        ??MXdI?? e .....                 beq     @ret
+003e1d fe/ec1d: a5 e5        ??MXdIz? e .....                 lda     $e5
+003e1f fe/ec1f: d0 0e        ??MXdI?? e .....                 bne     @ret
+003e21 fe/ec21: 8a           ??MXdIZ? e .....                 txa
+003e22 fe/ec22: 48           ??MXdI?? e .....                 pha
+003e23 fe/ec23: ee 24 a8     ??MXdI?? e .....                 inc     SOUND_CUR_CHAN_QRY-1
+003e26 fe/ec26: ae 24 a8     ??MXdI?? e .....                 ldx     SOUND_CUR_CHAN_QRY-1
+003e29 fe/ec29: 8f 06 fe 45  ??MXdI?? e .....                 stal    sheila_UKA_TONE
+003e2d fe/ec2d: 68           ??MXdI?? e .....                 pla
+003e2e fe/ec2e: aa           ??MXdI?? e .....                 tax
+003e2f fe/ec2f: 60           ??MXd??? e ...#> @ret            rts

                                               ********************************************************************************
                                               * OSBYTE 74                                                                    *
                                               *                                                                              *
                                               * Reset the sound system - Electron                                            *
                                               ********************************************************************************
+003e30 fe/ec30: 8b           N?MXdIz? e ....> OSBYTE_74       phb
+003e31 fe/ec31: f4 00 00     N?MXdIz? e .....                 pea     $0000
+003e34 fe/ec34: ab           N?MXdIz? e .....                 plb
                                                               .dbank  $00
+003e35 fe/ec35: ab           ??MXdI?? e .....                 plb
+003e36 fe/ec36: a2 04        ??MXdI?? e .....                 ldx     #$04
+003e38 fe/ec38: 8e 25 a8     n?MXdIz? e .....                 stx     SOUND_CUR_CHAN_QRY
+003e3b fe/ec3b: 20 44 ec     ??MXdIz? e ....> @lp             jsr     SOUND_RESET_CHAN_X_QRY
+003e3e fe/ec3e: e8           ??MXdI?? e .....                 inx
+003e3f fe/ec3f: e0 07        ??MXdI?? e .....                 cpx     #$07
+003e41 fe/ec41: d0 f8        ??MXdI?? e .....                 bne     @lp
+003e43 fe/ec43: ab           ??MXdIZ? e .....                 plb
+003e44 fe/ec44: 8b           ??MXdI?? e ....> SOUND_RESET_CHAN_X_QRY phb
+003e45 fe/ec45: f4 00 00     ??MXdI?? e .....                 pea     $0000
+003e48 fe/ec48: ab           ??MXdI?? e .....                 plb
                                                               .dbank  $00
+003e49 fe/ec49: ab           ??MXdI?? e .....                 plb
+003e4a fe/ec4a: a9 00        ??MXdI?? e .....                 lda     #$00
+003e4c fe/ec4c: 8d 1b a8     n?MXdIZ? e .....                 sta     SOUND_QRY_S
+003e4f fe/ec4f: 9d c3 a5     n?MXdIZ? e .....                 sta     SYSVARS_ELK_BUFFER_BUSY,x
+003e52 fe/ec52: 8d 14 a8     n?MXdIZ? e .....                 sta     SOUND_QRY_T
+003e55 fe/ec55: 20 e0 ec     n?MXdIZ? e .....                 jsr     SOUND_CLR_QRY
+003e58 fe/ec58: 20 f3 eb     ??MXdI?? e .....                 jsr     sound_QRY1
+003e5b fe/ec5b: ab           ??MXdI?? e .....                 plb
+003e5c fe/ec5c: 60           ??MXdI?? e ...#.                 rts

+003e5d fe/ec5d: ae 25 a8     ??MXdi?? e .T..> LFEEC5D         ldx     SOUND_CUR_CHAN_QRY
+003e60 fe/ec60: 20 e0 ec     ??MXdi?? e .....                 jsr     SOUND_CLR_QRY
+003e63 fe/ec63: bd c3 a5     ??MXdi?? e .....                 lda     SYSVARS_ELK_BUFFER_BUSY,x
+003e66 fe/ec66: f0 08        ??MXdi?? e .....                 beq     LFEEC70
+003e68 fe/ec68: a9 00        ??MXdiz? e .....                 lda     #$00
+003e6a fe/ec6a: 9d c3 a5     n?MXdiZ? e .....                 sta     SYSVARS_ELK_BUFFER_BUSY,x
+003e6d fe/ec6d: 8d 1b a8     n?MXdiZ? e .....                 sta     SOUND_QRY_S
+003e70 fe/ec70: 20 8e e1     ??MXdiZ? e ....> LFEEC70         jsr     OSBYTE_98
+003e73 fe/ec73: 90 0f        ??MXdi?? e .....                 bcc     LFEEC84
+003e75 fe/ec75: 08           ??MXdi?C e .....                 php
+003e76 fe/ec76: 78           ??MXdi?C e .....                 sei
+003e77 fe/ec77: 20 8e e1     ??MXdI?C e .....                 jsr     OSBYTE_98
+003e7a fe/ec7a: 90 05        ??MXdI?? e .....                 bcc     LFEEC81
+003e7c fe/ec7c: a9 00        ??MXdI?C e .....                 lda     #$00
+003e7e fe/ec7e: 8d 14 a8     n?MXdIZC e .....                 sta     SOUND_QRY_T
+003e81 fe/ec81: 28           ??MXdI?? e ....> LFEEC81         plp
+003e82 fe/ec82: 80 5c        ??MXdi?C e ...#.                 bra     SOUND_CLR_QRY

+003e84 fe/ec84: 08           ??MXdi?c e ....> LFEEC84         php
+003e85 fe/ec85: 78           ??MXdi?c e .....                 sei
+003e86 fe/ec86: 20 92 e1     ??MXdI?c e .....                 jsr     OSBYTE_91
+003e89 fe/ec89: 48           ??MXdI?? e .....                 pha
+003e8a fe/ec8a: 29 04        ??MXdI?? e .....                 and     #$04
+003e8c fe/ec8c: f0 0e        n?MXdI?? e .....                 beq     LFEEC9C
+003e8e fe/ec8e: 68           n?MXdIz? e .....                 pla
+003e8f fe/ec8f: 20 e0 ec     ??MXdI?? e .....                 jsr     SOUND_CLR_QRY
+003e92 fe/ec92: 20 92 e1     ??MXdI?? e .....                 jsr     OSBYTE_91
+003e95 fe/ec95: 20 92 e1     ??MXdI?? e .....                 jsr     OSBYTE_91
+003e98 fe/ec98: 28           ??MXdI?? e .....                 plp
+003e99 fe/ec99: 4c d7 ec     ??MXdi?c e ...#.                 jmp     LFEECD7

+003e9c fe/ec9c: a9 02        n?MXdIZ? e ....> LFEEC9C         lda     #$02
+003e9e fe/ec9e: 8d 20 a8     n?MXdIz? e .....                 sta     SOUND_STATUS_QRY
+003ea1 fe/eca1: 68           n?MXdIz? e .....                 pla
+003ea2 fe/eca2: 29 f8        ??MXdI?? e .....                 and     #$f8
+003ea4 fe/eca4: 0a           ??MXdI?? e .....                 asl     A
+003ea5 fe/eca5: 90 0b        ??MXdI?? e .....                 bcc     LFEECB2
+003ea7 fe/eca7: c9 f0        ??MXdI?C e .....                 cmp     #$f0
+003ea9 fe/eca9: d0 05        ??MXdI?? e .....                 bne     LFEECB0
+003eab fe/ecab: a9 00        ??MXdIZ? e .....                 lda     #$00
+003ead fe/ecad: 8d 20 a8     n?MXdIZ? e .....                 sta     SOUND_STATUS_QRY
+003eb0 fe/ecb0: a9 ff        ??MXdI?? e ....> LFEECB0         lda     #$ff
                                                               .dbank  $00
+003eb2 fe/ecb2: 8d 1d a8     ??MXdI?? e ....> LFEECB2         sta     $a81d
+003eb5 fe/ecb5: a0 01        ??MXdI?? e .....                 ldy     #$01
+003eb7 fe/ecb7: 8c 1e a8     n?MXdIz? e .....                 sty     $a81e
+003eba fe/ecba: 88           n?MXdIz? e .....                 dey
+003ebb fe/ecbb: 8c 1a a8     ??MXdI?? e .....                 sty     SOUND_QRY_S-1
+003ebe fe/ecbe: 8c 1f a8     ??MXdI?? e .....                 sty     SOUND_STATUS_QRY-1
+003ec1 fe/ecc1: 88           ??MXdI?? e .....                 dey
+003ec2 fe/ecc2: 8c 19 a8     ??MXdI?? e .....                 sty     $a819
+003ec5 fe/ecc5: 20 92 e1     ??MXdI?? e .....                 jsr     OSBYTE_91
+003ec8 fe/ecc8: 8d 18 a8     ??MXdI?? e .....                 sta     $a818
+003ecb fe/eccb: 20 92 e1     ??MXdI?? e .....                 jsr     OSBYTE_91
+003ece fe/ecce: 28           ??MXdI?? e .....                 plp
+003ecf fe/eccf: 48           ??MXdi?c e .....                 pha
+003ed0 fe/ecd0: ad 18 a8     ??MXdi?c e .....                 lda     $a818
+003ed3 fe/ecd3: 20 f2 ec     ??MXdi?c e .....                 jsr     LFEECF2
+003ed6 fe/ecd6: 68           ??MXdi?? e .....                 pla
+003ed7 fe/ecd7: 8d 1b a8     ??MXdi?? e ....> LFEECD7         sta     SOUND_QRY_S
+003eda fe/ecda: a9 05        ??MXdi?? e ....> LFEECDA         lda     #$05
+003edc fe/ecdc: 8d 1c a8     n?MXdiz? e .....                 sta     $a81c
+003edf fe/ecdf: 60           n?MXdiz? e ...#.                 rts

+003ee0 fe/ece0: a9 00        ??MXd??? e ....> SOUND_CLR_QRY   lda     #$00
+003ee2 fe/ece2: 8d 20 a8     n?MXd?Z? e .....                 sta     SOUND_STATUS_QRY
+003ee5 fe/ece5: a9 00        ??MXd??? e ....> LFEECE5         lda     #$00
+003ee7 fe/ece7: 8d 22 a8     ??MXd??? e ....> LFEECE7         sta     SOUND_QRY_X
+003eea fe/ecea: 60           ??MXd??? e ...#.                 rts

+003eeb fe/eceb: 8d 1f a8     ??MXdi?? e .T..> LFEECEB         sta     SOUND_STATUS_QRY-1
+003eee fe/ecee: 18           ??MXdi?? e .....                 clc
+003eef fe/ecef: 6d 18 a8     ??MXdi?c e .....                 adc     $a818
+003ef2 fe/ecf2: 48           ??MXdi?? e ....> LFEECF2         pha
+003ef3 fe/ecf3: 29 03        ??MXdi?? e .....                 and     #$03
+003ef5 fe/ecf5: aa           n?MXdi?? e .....                 tax
+003ef6 fe/ecf6: ad 25 a8     ??MXdi?? e .....                 lda     SOUND_CUR_CHAN_QRY
+003ef9 fe/ecf9: c9 04        ??MXdi?? e .....                 cmp     #$04
+003efb fe/ecfb: d0 21        ??MXdi?? e .....                 bne     LFEED1E
+003efd fe/ecfd: 68           ??MXdiZ? e .....                 pla
+003efe fe/ecfe: 29 04        ??MXdi?? e .....                 and     #$04
+003f00 fe/ed00: f0 10        n?MXdi?? e .....                 beq     LFEED12
+003f02 fe/ed02: 8b           n?MXdiz? e .....                 phb
+003f03 fe/ed03: 4b           n?MXdiz? e .....                 phk
                                                               .dbank  K (auto)
+003f04 fe/ed04: ab           n?MXdiz? e .....                 plb
+003f05 fe/ed05: bd 63 ed     ??MXdi?? e .....                 lda     LFEED63 & $ffff,x
+003f08 fe/ed08: 8f 23 a8 00  ??MXdi?? e .....                 stal    f:$00a823
+003f0c fe/ed0c: bd 6b ed     ??MXdi?? e .....                 lda     LFEED6B & $ffff,x
+003f0f fe/ed0f: ab           ??MXdi?? e .....                 plb
+003f10 fe/ed10: 80 d5        ??MXdi?? e ...#.                 bra     LFEECE7

+003f12 fe/ed12: 8b           n?MXdiZ? e ....> LFEED12         phb
+003f13 fe/ed13: 4b           n?MXdiZ? e .....                 phk
                                                               .dbank  K (auto)
+003f14 fe/ed14: ab           n?MXdiZ? e .....                 plb
+003f15 fe/ed15: bd 67 ed     ??MXdi?? e .....                 lda     LFEED67 & $ffff,x
+003f18 fe/ed18: ab           ??MXdi?? e .....                 plb
+003f19 fe/ed19: 8d 21 a8     ??MXdi?? e .....                 sta     $a821
+003f1c fe/ed1c: 80 c7        ??MXdi?? e ...#.                 bra     LFEECE5

+003f1e fe/ed1e: e8           ??MXdiz? e ....> LFEED1E         inx
+003f1f fe/ed1f: a9 00        ??MXdi?? e .....                 lda     #$00
+003f21 fe/ed21: 8d 21 a8     n?MXdiZ? e .....                 sta     $a821
+003f24 fe/ed24: 68           n?MXdiZ? e .....                 pla
+003f25 fe/ed25: 4a           ??MXdi?? e .....                 lsr     A
+003f26 fe/ed26: 4a           n?MXdi?? e .....                 lsr     A
+003f27 fe/ed27: c9 0c        ??MXdi?? e ....> LFEED27         cmp     #$0c
+003f29 fe/ed29: 90 07        ??MXdi?? e .....                 bcc     LFEED32
+003f2b fe/ed2b: ee 21 a8     ??MXdi?C e .....                 inc     $a821
+003f2e fe/ed2e: e9 0c        ??MXdi?C e .....                 sbc     #$0c
+003f30 fe/ed30: d0 f5        ??MXdi?? e .....                 bne     LFEED27
+003f32 fe/ed32: a8           ??MXdi?? e ....> LFEED32         tay
+003f33 fe/ed33: ad 21 a8     ??MXdi?? e .....                 lda     $a821
+003f36 fe/ed36: 48           ??MXdi?? e .....                 pha
+003f37 fe/ed37: 8b           ??MXdi?? e .....                 phb
+003f38 fe/ed38: 4b           ??MXdi?? e .....                 phk
                                                               .dbank  K (auto)
+003f39 fe/ed39: ab           ??MXdi?? e .....                 plb
+003f3a fe/ed3a: b9 57 ed     ??MXdi?? e .....                 lda     0+(LFEED59 & $ffff)-2,y
                                                               .dbank  $00
+003f3d fe/ed3d: ab           ??MXdi?? e .....                 plb
+003f3e fe/ed3e: c0 07        ??MXdi?? e ....> LFEED3E         cpy     #$07
+003f40 fe/ed40: e9 02        ??MXdi?? e .....                 sbc     #$02
+003f42 fe/ed42: ca           ??MXdi?? e .....                 dex
+003f43 fe/ed43: d0 f9        ??MXdi?? e .....                 bne     LFEED3E
+003f45 fe/ed45: 8d 21 a8     ??MXdiZ? e .....                 sta     SOUND_TONE_QRY
+003f48 fe/ed48: 68           ??MXdiZ? e .....                 pla
+003f49 fe/ed49: a8           ??MXdi?? e .....                 tay
+003f4a fe/ed4a: f0 06        ??MXdi?? e .....                 beq     LFEED52
+003f4c fe/ed4c: 4e 21 a8     ??MXdiz? e ....> LFEED4C         lsr     SOUND_TONE_QRY
+003f4f fe/ed4f: 88           n?MXdi?? e .....                 dey
+003f50 fe/ed50: d0 fa        ??MXdi?? e .....                 bne     LFEED4C
+003f52 fe/ed52: ce 21 a8     ??MXdiZ? e ....> LFEED52         dec     SOUND_TONE_QRY
+003f55 fe/ed55: d0 8e        ??MXdi?? e .....                 bne     LFEECE5
+003f57 fe/ed57: 00 f0        ??MXdiZ? e ...#.                 brk     $f0

+003f59 fe/ed59: e3                      ..... LFEED59         .dd1    $e3
+003f5a fe/ed5a: d6                      .....                 .dd1    $d6
+003f5b fe/ed5b: cb                      .....                 .dd1    $cb
+003f5c fe/ed5c: bf                      .....                 .dd1    $bf
+003f5d fe/ed5d: b5                      .....                 .dd1    $b5
+003f5e fe/ed5e: aa                      .....                 .dd1    $aa
+003f5f fe/ed5f: a0                      .....                 .dd1    $a0
+003f60 fe/ed60: 97                      .....                 .dd1    $97
+003f61 fe/ed61: 8f                      .....                 .dd1    $8f
+003f62 fe/ed62: 87                      .....                 .dd1    $87
+003f63 fe/ed63: 40                      ..... LFEED63         .dd1    $40
+003f64 fe/ed64: 80                      .....                 .dd1    $80
+003f65 fe/ed65: c0                      .....                 .dd1    $c0
+003f66 fe/ed66: 80                      .....                 .dd1    $80
+003f67 fe/ed67: 3b                      ..... LFEED67         .dd1    $3b
+003f68 fe/ed68: 76                      .....                 .dd1    $76
+003f69 fe/ed69: f0                      .....                 .dd1    $f0
+003f6a fe/ed6a: 76                      .....                 .dd1    $76
+003f6b fe/ed6b: 7f                      ..... LFEED6B         .dd1    $7f
+003f6c fe/ed6c: ff                      .....                 .dd1    $ff
+003f6d fe/ed6d: ff                      .....                 .dd1    $ff
+003f6e fe/ed6e: ff                      .....                 .dd1    $ff
+003f6f fe/ed6f: 60                      .....                 .dd1    $60
+003f70 fe/ed70: 02                      .....                 .dd1    $02
+003f71 fe/ed71: 0f                      .....                 .dd1    $0f
+003f72 fe/ed72: 75                      .....                 .dd1    $75
+003f73 fe/ed73: 73                      .....                 .dd1    $73
+003f74 fe/ed74: 65                      .....                 .dd1    $65
+003f75 fe/ed75: 20                      .....                 .dd1    $20
+003f76 fe/ed76: 43                      .....                 .dd1    $43
+003f77 fe/ed77: 4f                      .....                 .dd1    $4f
+003f78 fe/ed78: 50                      .....                 .dd1    $50
+003f79 fe/ed79: 20                      .....                 .dd1    $20
+003f7a fe/ed7a: 6e                      .....                 .dd1    $6e
+003f7b fe/ed7b: 6f                      .....                 .dd1    $6f
+003f7c fe/ed7c: 74                      .....                 .dd1    $74
+003f7d fe/ed7d: 20                      .....                 .dd1    $20
+003f7e fe/ed7e: 63                      .....                 .dd1    $63
+003f7f fe/ed7f: 61                      .....                 .dd1    $61
+003f80 fe/ed80: 6c                      .....                 .dd1    $6c
+003f81 fe/ed81: 6c                      .....                 .dd1    $6c
+003f82 fe/ed82: 20                      .....                 .dd1    $20
+003f83 fe/ed83: 74                      .....                 .dd1    $74
+003f84 fe/ed84: 6f                      .....                 .dd1    $6f
+003f85 fe/ed85: 20                      .....                 .dd1    $20
+003f86 fe/ed86: 61                      .....                 .dd1    $61
+003f87 fe/ed87: 62                      .....                 .dd1    $62
+003f88 fe/ed88: 73                      .....                 .dd1    $73
+003f89 fe/ed89: 6f                      .....                 .dd1    $6f
+003f8a fe/ed8a: 6c                      .....                 .dd1    $6c
+003f8b fe/ed8b: 75                      .....                 .dd1    $75
+003f8c fe/ed8c: 74                      .....                 .dd1    $74
+003f8d fe/ed8d: 65                      .....                 .dd1    $65
+003f8e fe/ed8e: 20                      .....                 .dd1    $20
+003f8f fe/ed8f: 61                      .....                 .dd1    $61
+003f90 fe/ed90: 64                      .....                 .dd1    $64
+003f91 fe/ed91: 64                      .....                 .dd1    $64
+003f92 fe/ed92: 72                      .....                 .dd1    $72
+003f93 fe/ed93: 65                      .....                 .dd1    $65
+003f94 fe/ed94: 73                      .....                 .dd1    $73
+003f95 fe/ed95: 73                      .....                 .dd1    $73
+003f96 fe/ed96: 00                      .....                 .dd1    $00

+003f97 fe/ed97: 02 06        ???????? e @T... default__OSB    cop     COP_06_OPOSB
+003f99 fe/ed99: 6b           ???????? e ...#.                 rtl

+003f9a fe/ed9a: 02 07        ???????? e @T... default__OSW    cop     COP_07_OPOSW
+003f9c fe/ed9c: 6b           ???????? e ...#.                 rtl

                                                               .rwid   longx
+003f9d fe/ed9d: 02 0a        N?Mxd?z? e ....> default__BGET   cop     COP_0A_OPBGT
+003f9f fe/ed9f: 60           N?Mxd?z? e ...#.                 rts

                                                               .rwid   shortx
+003fa0 fe/eda0: 02 0b        ??MXd??? e @T... default__BPUT   cop     COP_0B_OPBPUT
+003fa2 fe/eda2: 60           ??MXd??? e ...#.                 rts

+003fa3 fe/eda3: 02 0f        ??MXd??? e @T... syserrorTestEsc cop     COP_0F_OPERR
+003fa5 fe/eda5: 75 73 65 20+            .T...                 .zstr   “use TESTESC in $.I.SYSTEM not XXOSESC”
                                               ********************************************************************************
                                               * FFB0 - EV - ????                                                             *
                                               *                                                                              *
                                               * Well known entry point not documented in Systems Documentation               *
                                               *                                                                              *
                                               * Given an even mask in A test escape/preempt status                           *
                                               ********************************************************************************
+003fcb fe/edcb: 08           ???????? e .T... default__EV     php
+003fcc fe/edcc: c2 20        ???????? e .....                 rep     #$20
                                                               .rwid   longm
+003fce fe/edce: 48           ??m????? e .....                 pha
+003fcf fe/edcf: 29 fc 00     ??m????? e .....                 and     #$00fc
+003fd2 fe/edd2: f0 24        n?m????? e .....                 beq     @ok
+003fd4 fe/edd4: 02 0f        n?m???z? e .....                 cop     COP_0F_OPERR
+003fd6 fe/edd6: 69 6e 76 61+            .T...                 .zstr   “invalid A contents in call to `EV”
+003ff8 fe/edf8: 68           n?m????? e ....> @ok             pla
+003ff9 fe/edf9: 2f 13 ff 00  ??m????? e .....                 andl    f:SYS_ESCAPE_FLAG_QRY
+003ffd fe/edfd: c9 01 00     ??m????? e .....                 cmp     #__EVESC
+004000 fe/ee00: 90 04        ??m????? e .....                 bcc     @retCCPL
+004002 fe/ee02: 28           ??m????C e .....                 plp
                                                               .rwid   shortm
+004003 fe/ee03: e2 81        ???????? e .....                 sep     #$81
+004005 fe/ee05: 6b           N??????C e ...#.                 rtl

                                                               .rwid   longm
+004006 fe/ee06: 28           ??m????c e ....> @retCCPL        plp
                                                               .rwid   shortm
+004007 fe/ee07: 18           ???????? e .....                 clc
+004008 fe/ee08: c2 81        ???????c e .....                 rep     #$81
+00400a fe/ee0a: 6b           n??????c e ...#.                 rtl

                                               ; TODO: dead code?
+00400b fe/ee0b: 60           ??MXd??? e .T.#> LFEEE0B_rts     rts

+00400c fe/ee0c: a2 0c        ??MXd??? e @T... starEXEC        ldx     #__STGLN          ;GSINIT
+00400e fe/ee0e: 22 88 ff 00  n?MXd?z? e .....                 jsl     __ST
+004012 fe/ee12: 80 01        ??MXd??? e ...#.                 bra     closeEXEC2

                                               ********************************************************************************
                                               * OSBYTE 77 - close all EXEC / SPOOL files                                     *
                                               ********************************************************************************
+004014 fe/ee14: 38           ??MXd??? e .T..> OSBYTE_77       sec
+004015 fe/ee15: 08           ??MXd??? e ....> closeEXEC2      php
+004016 fe/ee16: c2 10        ??MXd??? e .....                 rep     #$10
                                                               .rwid   longx
+004018 fe/ee18: e2 20        ??Mxd??? e .....                 sep     #$20
+00401a fe/ee1a: 08           ??Mxd??? e .....                 php
+00401b fe/ee1b: 5a           ??Mxd??? e .....                 phy
+00401c fe/ee1c: a2 00 00     ??Mxd??? e .....                 ldx     #$0000
+00401f fe/ee1f: a4 d1        n?Mxd?Z? e .....                 ldy     <DPSYS_D1_EXEC_handle
+004021 fe/ee21: 86 d1        ??Mxd??? e .....                 stx     <DPSYS_D1_EXEC_handle
+004023 fe/ee23: f0 02        ??Mxd??? e .....                 beq     LFEEE27
+004025 fe/ee25: 02 45        ??Mxd?z? e .....                 cop     COP_45_OPCLS
+004027 fe/ee27: 7a           ??Mxd??? e ....> LFEEE27         ply
+004028 fe/ee28: 28           ??Mxd??? e .....                 plp
+004029 fe/ee29: b0 13        ??Mxd??? e .....                 bcs     LFEEE3E
+00402b fe/ee2b: a2 1c 00     ??Mxd??c e .....                 ldx     #__STGAD          ;add Y to GSREAD address
+00402e fe/ee2e: 22 88 ff 00  n?Mxd?zc e .....                 jsl     __ST              ;Get BHA pointer to first character of filename
+004032 fe/ee32: a0 40 00     ??Mxd??? e .....                 ldy     #$0040
+004035 fe/ee35: 02 44        n?Mxd?z? e .....                 cop     COP_44_OPOPN
+004037 fe/ee37: 90 03        n?Mxd?z? e .....                 bcc     LFEEE3C
+004039 fe/ee39: a0 00 00     n?Mxd?zC e .....                 ldy     #$0000
+00403c fe/ee3c: 84 d1        n?Mxd??? e ....> LFEEE3C         sty     <DPSYS_D1_EXEC_handle
+00403e fe/ee3e: 90 03        ??Mxd??? e ....> LFEEE3E         bcc     LFEEE43
+004040 fe/ee40: 28           ??Mxd??C e .....                 plp
+004041 fe/ee41: 38           ??Mxd??C e .....                 sec
+004042 fe/ee42: 60           ??Mxd??C e ...#.                 rts

+004043 fe/ee43: 28           ??Mxd??c e ....> LFEEE43         plp
+004044 fe/ee44: 18           ??Mxd??? e .....                 clc
+004045 fe/ee45: 60           ??Mxd??c e ...#.                 rts

                                                               .rwid   shortx
+004046 fe/ee46: 60           ??MXdI?? e ...#> LFEEE46         rts

+004047 fe/ee47: 60           n???d?z? e ...#> donothingRTS    rts

+004048 fe/ee48: 82 09 00     ??MXdI?? e ...#> LFEEE48         brl     LFEEE54           ;todo: remove?

                                                               .rwid   longm,longx
+00404b fe/ee4b: 82 e2 02     n?mxd?Z? e ...#> brlFindModule   brl     findModule        ;todo: remove?

+00404e fe/ee4e: 82 a1 02     ??mxd??? e .T.#> brlGetModCallRef brl    getModCallRef     ;todo: remove?

+004051 fe/ee51: 82 89 03     ??mxd??c e ...#> LFEEE51         brl     getOrCreateModCallBlock ;todo: remove?

                                                               .rwid   shortm,shortx
+004054 fe/ee54: 08           ??MXdI?? e ....> LFEEE54         php
+004055 fe/ee55: 0b           ??MXdI?? e .....                 phd
+004056 fe/ee56: 8b           ??MXdI?? e .....                 phb
+004057 fe/ee57: c2 30        ??MXdI?? e .....                 rep     #$30
                                                               .rwid   longm,longx
+004059 fe/ee59: f4 00 00     ??mxdI?? e .....                 pea     $0000
+00405c fe/ee5c: 4b           ??mxdI?? e .....                 phk
+00405d fe/ee5d: 4b           ??mxdI?? e .....                 phk
+00405e fe/ee5e: f4 00 ae     ??mxdI?? e .....                 pea     MOSSTART & $ffff
+004061 fe/ee61: 62 80 02     ??mxdI?? e .....                 per     tblLFEF0E1+3
+004064 fe/ee64: 3b           ??mxdI?? e .....                 tsc
+004065 fe/ee65: 5b           ??mxdI?? e .....                 tcd
+004066 fe/ee66: fa           ??mxdI?? e .....                 plx
+004067 fe/ee67: da           ??mxdI?? e .....                 phx
+004068 fe/ee68: 4b           ??mxdI?? e .....                 phk
                                                               .dbank  K (auto)
+004069 fe/ee69: ab           ??mxdI?? e .....                 plb
+00406a fe/ee6a: 10 03        ??mxdI?? e .....                 bpl     LFEEE6F
+00406c fe/ee6c: a2 ea f0     N?mxdI?? e .....                 ldx     #(tblLFEF0E1 & $ffff)+9
+00406f fe/ee6f: 20 9d ef     n?mxdI?? e ....> LFEEE6F         jsr     LFEEF9D
+004072 fe/ee72: af 0e fe 00  ??mxdI?? e .....                 ldal    f:B0LST_MODULES_QRY
+004076 fe/ee76: aa           ??mxdI?? e .....                 tax
+004077 fe/ee77: bf 07 00 00  ??mxdI?? e .....                 ldal    f:DPCOP_B,x
+00407b fe/ee7b: f0 0c        ??mxdI?? e .....                 beq     LFEEE89
+00407d fe/ee7d: a8           ??mxdIz? e .....                 tay
+00407e fe/ee7e: 20 da ce     ??mxdI?? e .....                 jsr     getHandleYinDP
+004081 fe/ee81: af 0e fe 00  ??mxdI?? e .....                 ldal    f:B0LST_MODULES_QRY
+004085 fe/ee85: 9f 08 00 00  ??mxdI?? e .....                 stal    f:DPCOP_DP,x
+004089 fe/ee89: a9 00 00     ??mxdI?? e ....> LFEEE89         lda     #$0000
+00408c fe/ee8c: 85 03        n?mxdIZ? e .....                 sta     DPCOP_X
+00408e fe/ee8e: 85 05        n?mxdIZ? e .....                 sta     DPCOP_AH
+004090 fe/ee90: fa           n?mxdIZ? e .....                 plx
+004091 fe/ee91: da           ??mxdI?? e .....                 phx
+004092 fe/ee92: bd 04 00     ??mxdI?? e .....                 lda     a:$0004,x
+004095 fe/ee95: 85 07        ??mxdI?? e .....                 sta     DPCOP_B
+004097 fe/ee97: bd 02 00     ??mxdI?? e .....                 lda     a:$0002,x
+00409a fe/ee9a: 85 04        ??mxdI?? e .....                 sta     DPCOP_X+1
+00409c fe/ee9c: c9 00 01     ??mxdI?? e .....                 cmp     #$0100
+00409f fe/ee9f: b0 1d        ??mxdI?? e .....                 bcs     LFEEEBE
+0040a1 fe/eea1: 8b           ??mxdI?c e .....                 phb
+0040a2 fe/eea2: a8           ??mxdI?c e .....                 tay
+0040a3 fe/eea3: a2 0e 00     ??mxdI?c e .....                 ldx     #__MMBAS
+0040a6 fe/eea6: 22 8c ff 00  n?mxdIzc e .....                 jsl     __MM
+0040aa fe/eeaa: 8b           ??mxdI?? e .....                 phb
+0040ab fe/eeab: 48           ??mxdI?? e .....                 pha
+0040ac fe/eeac: ab           ??mxdI?? e .....                 plb
+0040ad fe/eead: 68           ??mxdI?? e .....                 pla
+0040ae fe/eeae: 85 04        ??mxdI?? e .....                 sta     DPCOP_X+1
+0040b0 fe/eeb0: a2 12 00     ??mxdI?? e .....                 ldx     #__MMTOP
+0040b3 fe/eeb3: 22 8c ff 00  n?mxdIz? e .....                 jsl     __MM
+0040b7 fe/eeb7: 8b           ??mxdI?? e .....                 phb
+0040b8 fe/eeb8: 48           ??mxdI?? e .....                 pha
+0040b9 fe/eeb9: ab           ??mxdI?? e .....                 plb
+0040ba fe/eeba: 68           ??mxdI?? e .....                 pla
+0040bb fe/eebb: 85 07        ??mxdI?? e .....                 sta     DPCOP_B
+0040bd fe/eebd: ab           ??mxdI?? e .....                 plb
+0040be fe/eebe: 20 2d ef     ??mxdI?? e ....> LFEEEBE         jsr     LFEEF2D
+0040c1 fe/eec1: b0 30        ??mxdI?? e .....                 bcs     LFEEEF3
+0040c3 fe/eec3: fa           ??mxdI?c e .....                 plx
+0040c4 fe/eec4: da           ??mxdI?c e .....                 phx
+0040c5 fe/eec5: 20 9d ef     ??mxdI?c e .....                 jsr     LFEEF9D
+0040c8 fe/eec8: 8b           ??mxdI?? e .....                 phb
+0040c9 fe/eec9: 02 26        ??mxdI?? e .....                 cop     COP_26_OPBHA
+0040cb fe/eecb: 4d 4f 53 00             .T...                 .zstr   “MOS”
+0040cf fe/eecf: a2 00 00     ??mxdI?? e .....                 ldx     #$0000
+0040d2 fe/eed2: 9b           n?mxdIZ? e .....                 txy
+0040d3 fe/eed3: 02 34        ??mxdI?? e .....                 cop     COP_34_OPRMI
+0040d5 fe/eed5: b0 14        ??mxdI?? e .....                 bcs     LFEEEEB
+0040d7 fe/eed7: 8b           ??mxdI?c e .....                 phb
+0040d8 fe/eed8: 8b           ??mxdI?c e .....                 phb
+0040d9 fe/eed9: 48           ??mxdI?c e .....                 pha
+0040da fe/eeda: 62 23 bf     ??mxdI?c e .....                 per     MOSSTART
+0040dd fe/eedd: 68           ??mxdI?c e .....                 pla
+0040de fe/eede: c3 01        ??mxdI?c e .....                 cmp     $01,S
+0040e0 fe/eee0: d0 0c        ??mxdI?? e .....                 bne     LFEEEEE
+0040e2 fe/eee2: 4b           ??mxdIZ? e .....                 phk
+0040e3 fe/eee3: 4b           ??mxdIZ? e .....                 phk
+0040e4 fe/eee4: 68           ??mxdIZ? e .....                 pla
+0040e5 fe/eee5: c3 03        ??mxdI?? e .....                 cmp     $03,S
+0040e7 fe/eee7: d0 05        ??mxdI?? e .....                 bne     LFEEEEE
+0040e9 fe/eee9: 68           ??mxdIZ? e .....                 pla
+0040ea fe/eeea: 68           ??mxdI?? e .....                 pla
+0040eb fe/eeeb: ab           ??mxdI?? e ....> LFEEEEB         plb
+0040ec fe/eeec: 80 d0        ??mxdI?? e ...#.                 bra     LFEEEBE

+0040ee fe/eeee: a2 02 00     ??mxdIz? e ....> LFEEEEE         ldx     #$0002
+0040f1 fe/eef1: 08           n?mxdIz? e .....                 php
+0040f2 fe/eef2: 40           n?mxdIz? e ...#.                 rti

+0040f3 fe/eef3: fa           ??mxdI?C e ....> LFEEEF3         plx
+0040f4 fe/eef4: da           ??mxdI?C e .....                 phx
+0040f5 fe/eef5: bd 00 00     ??mxdI?C e .....                 lda     a:$0000,x
+0040f8 fe/eef8: 3a           ??mxdI?C e .....                 dec     A
+0040f9 fe/eef9: 49 ff ff     ??mxdI?C e .....                 eor     #$ffff
+0040fc fe/eefc: 25 03        ??mxdI?C e .....                 and     DPCOP_X
+0040fe fe/eefe: 18           ??mxdI?C e .....                 clc
+0040ff fe/eeff: 7d 00 00     ??mxdI?c e .....                 adc     a:$0000,x
+004102 fe/ef02: 85 03        ??mxdI?? e .....                 sta     DPCOP_X
+004104 fe/ef04: a5 05        ??mxdI?? e .....                 lda     DPCOP_AH
+004106 fe/ef06: 69 00 00     ??mxdI?? e .....                 adc     #$0000
+004109 fe/ef09: 85 05        ??mxdI?? e .....                 sta     DPCOP_AH
+00410b fe/ef0b: 89 00 ff     ??mxdI?? e .....                 bit     #$ff00
+00410e fe/ef0e: d0 06        ??mxdI?? e .....                 bne     LFEEF16
+004110 fe/ef10: a5 04        ??mxdIZ? e .....                 lda     DPCOP_X+1
+004112 fe/ef12: c5 07        ??mxdI?? e .....                 cmp     DPCOP_B
+004114 fe/ef14: 90 a8        ??mxdI?? e .....                 bcc     LFEEEBE
+004116 fe/ef16: 68           ??mxdI?? e ....> LFEEF16         pla
+004117 fe/ef17: 18           ??mxdI?? e .....                 clc
+004118 fe/ef18: 69 06 00     ??mxdI?c e .....                 adc     #$0006
+00411b fe/ef1b: 48           ??mxdI?? e .....                 pha
+00411c fe/ef1c: aa           ??mxdI?? e .....                 tax
+00411d fe/ef1d: bd 00 00     ??mxdI?? e .....                 lda     a:$0000,x
+004120 fe/ef20: f0 03        ??mxdI?? e .....                 beq     LFEEF25
+004122 fe/ef22: 82 64 ff     ??mxdIz? e ...#.                 brl     LFEEE89

+004125 fe/ef25: 2b           ??mxdIZ? e ....> LFEEF25         pld
+004126 fe/ef26: 2b           ??mxdI?? e .....                 pld
+004127 fe/ef27: 2b           ??mxdI?? e .....                 pld
+004128 fe/ef28: 2b           ??mxdI?? e .....                 pld
+004129 fe/ef29: ab           ??mxdI?? e .....                 plb
+00412a fe/ef2a: 2b           ??mxdI?? e .....                 pld
+00412b fe/ef2b: 28           ??mxdI?? e .....                 plp
+00412c fe/ef2c: 6b           n?mxdIz? e ...#.                 rtl

+00412d fe/ef2d: a0 00 00     ??mxd??? e ....> LFEEF2D         ldy     #$0000
+004130 fe/ef30: b7 03        n?mxd?Z? e .....                 lda     [DPCOP_X],y
+004132 fe/ef32: 29 ff 00     ??mxd??? e .....                 and     #$00ff
+004135 fe/ef35: cd e1 f0     n?mxd??? e .....                 cmp     tblLFEF0E1 & $ffff
+004138 fe/ef38: f0 03        ??mxd??? e .....                 beq     LFEEF3D
+00413a fe/ef3a: 82 5e 00     ??mxd?z? e ...#.                 brl     LFEEF9B

+00413d fe/ef3d: a0 05 00     ??mxd?Z? e ....> LFEEF3D         ldy     #$0005
+004140 fe/ef40: b7 03        n?mxd?z? e .....                 lda     [DPCOP_X],y
+004142 fe/ef42: 29 ff 00     ??mxd??? e .....                 and     #$00ff
+004145 fe/ef45: d0 54        n?mxd??? e .....                 bne     LFEEF9B
+004147 fe/ef47: a0 03 00     n?mxd?Z? e .....                 ldy     #$0003
+00414a fe/ef4a: b7 03        n?mxd?z? e .....                 lda     [DPCOP_X],y
+00414c fe/ef4c: 38           ??mxd??? e .....                 sec
+00414d fe/ef4d: e9 03 00     ??mxd??C e .....                 sbc     #$0003
+004150 fe/ef50: 90 49        ??mxd??? e .....                 bcc     LFEEF9B
+004152 fe/ef52: a0 01 00     ??mxd??C e .....                 ldy     #$0001
+004155 fe/ef55: d7 03        n?mxd?zC e .....                 cmp     [DPCOP_X],y
+004157 fe/ef57: 90 42        ??mxd??? e .....                 bcc     LFEEF9B
+004159 fe/ef59: a0 0e 00     ??mxd??C e .....                 ldy     #$000e
+00415c fe/ef5c: b7 03        n?mxd?zC e .....                 lda     [DPCOP_X],y
+00415e fe/ef5e: 20 f7 f4     ??mxd??C e .....                 jsr     checkValidModnameChar
+004161 fe/ef61: b0 38        ??mxd??? e .....                 bcs     LFEEF9B
+004163 fe/ef63: b7 03        ??mxd??c e ....> LFEEF63         lda     [DPCOP_X],y
+004165 fe/ef65: 29 ff 00     ??mxd??c e .....                 and     #$00ff
+004168 fe/ef68: f0 0a        n?mxd??c e .....                 beq     LFEEF74
+00416a fe/ef6a: 20 bf f0     n?mxd?zc e .....                 jsr     LFEF0BF
+00416d fe/ef6d: b0 2c        ??mxd??? e .....                 bcs     LFEEF9B
+00416f fe/ef6f: c8           ??mxd??c e .....                 iny
+004170 fe/ef70: f0 29        ??mxd??c e .....                 beq     LFEEF9B
+004172 fe/ef72: 80 ef        ??mxd?zc e ...#.                 bra     LFEEF63

+004174 fe/ef74: 98           n?mxd?Zc e ....> LFEEF74         tya
+004175 fe/ef75: a0 03 00     ??mxd??c e .....                 ldy     #$0003
+004178 fe/ef78: d7 03        n?mxd?zc e .....                 cmp     [DPCOP_X],y
+00417a fe/ef7a: b0 1f        ??mxd??? e .....                 bcs     LFEEF9B
+00417c fe/ef7c: a0 03 00     ??mxd??c e .....                 ldy     #$0003
+00417f fe/ef7f: b7 03        n?mxd?zc e .....                 lda     [DPCOP_X],y
+004181 fe/ef81: 18           ??mxd??c e .....                 clc
+004182 fe/ef82: 65 03        ??mxd??c e .....                 adc     DPCOP_X
+004184 fe/ef84: 69 02 00     ??mxd??? e .....                 adc     #$0002
+004187 fe/ef87: b0 12        ??mxd??? e .....                 bcs     LFEEF9B
+004189 fe/ef89: a0 03 00     ??mxd??c e .....                 ldy     #$0003
+00418c fe/ef8c: b7 03        n?mxd?zc e .....                 lda     [DPCOP_X],y
+00418e fe/ef8e: a8           ??mxd??c e .....                 tay
+00418f fe/ef8f: 8b           ??mxd??c e .....                 phb
+004190 fe/ef90: d4 04        ??mxd??c e .....                 pei     (DPCOP_X+1)
+004192 fe/ef92: ab           ??mxd??c e .....                 plb
+004193 fe/ef93: ab           ??mxd??c e .....                 plb
+004194 fe/ef94: d4 03        ??mxd??c e .....                 pei     (DPCOP_X)
+004196 fe/ef96: 68           ??mxd??c e .....                 pla
+004197 fe/ef97: 02 32        ??mxd??c e .....                 cop     COP_32_OPSUM
+004199 fe/ef99: ab           ??mxd??c e .....                 plb
+00419a fe/ef9a: 60           ??mxd??c e ...#.                 rts

+00419b fe/ef9b: 38           ??mxd??? e ....> LFEEF9B         sec
+00419c fe/ef9c: 60           ??mxd??C e ...#.                 rts

+00419d fe/ef9d: 20 67 f0     ??mxd??? e ....> LFEEF9D         jsr     LFEF067
+0041a0 fe/efa0: 90 03        ??mxd??? e .....                 bcc     LFEEFA5
+0041a2 fe/efa2: 82 98 00     ??mxd??C e ...#.                 brl     LFEF03D

+0041a5 fe/efa5: 48           ??mxd??c e ....> LFEEFA5         pha
+0041a6 fe/efa6: bd 02 00     ??mxd??c e .....                 lda     a:$0002,x
+0041a9 fe/efa9: c9 00 01     ??mxd??c e .....                 cmp     #$0100
+0041ac fe/efac: a0 00 00     ??mxd??? e .....                 ldy     #$0000
+0041af fe/efaf: b0 20        n?mxd?Z? e .....                 bcs     LFEEFD1
+0041b1 fe/efb1: 0b           n?mxd?Zc e .....                 phd
+0041b2 fe/efb2: 8b           n?mxd?Zc e .....                 phb
+0041b3 fe/efb3: a0 03 00     n?mxd?Zc e .....                 ldy     #$0003
+0041b6 fe/efb6: b7 03        n?mxd?zc e .....                 lda     [DPCOP_X],y
+0041b8 fe/efb8: 48           ??mxd??c e .....                 pha
+0041b9 fe/efb9: 1a           ??mxd??c e .....                 inc     A
+0041ba fe/efba: 1a           ??mxd??c e .....                 inc     A
+0041bb fe/efbb: bd 02 00     ??mxd??c e .....                 lda     a:$0002,x
+0041be fe/efbe: a8           ??mxd??c e .....                 tay
+0041bf fe/efbf: d4 04        ??mxd??c e .....                 pei     (DPCOP_X+1)
+0041c1 fe/efc1: ab           ??mxd??c e .....                 plb
+0041c2 fe/efc2: ab           ??mxd??c e .....                 plb
+0041c3 fe/efc3: a5 03        ??mxd??c e .....                 lda     DPCOP_X
+0041c5 fe/efc5: 2b           ??mxd??c e .....                 pld
+0041c6 fe/efc6: a2 04 00     ??mxd??c e .....                 ldx     #$0004
+0041c9 fe/efc9: 22 8c ff 00  n?mxd?zc e .....                 jsl     __MM
+0041cd fe/efcd: ab           ??mxd??? e .....                 plb
+0041ce fe/efce: 2b           ??mxd??? e .....                 pld
+0041cf fe/efcf: b0 6c        ??mxd??? e .....                 bcs     LFEF03D
+0041d1 fe/efd1: fa           ??mxd??? e ....> LFEEFD1         plx
+0041d2 fe/efd2: f0 15        ??mxd??? e .....                 beq     LFEEFE9
+0041d4 fe/efd4: bf 07 00 00  ??mxd?z? e .....                 ldal    f:DPCOP_B,x
+0041d8 fe/efd8: f0 0c        ??mxd??? e .....                 beq     LFEEFE6
+0041da fe/efda: da           ??mxd?z? e .....                 phx
+0041db fe/efdb: 5a           ??mxd?z? e .....                 phy
+0041dc fe/efdc: a8           ??mxd?z? e .....                 tay
+0041dd fe/efdd: a2 02 00     ??mxd??? e .....                 ldx     #$0002
+0041e0 fe/efe0: 22 8c ff 00  n?mxd?z? e .....                 jsl     __MM
+0041e4 fe/efe4: 7a           ??mxd??? e .....                 ply
+0041e5 fe/efe5: fa           ??mxd??? e .....                 plx
+0041e6 fe/efe6: 38           ??mxd??? e ....> LFEEFE6         sec
+0041e7 fe/efe7: 80 08        ??mxd??C e ...#.                 bra     LFEEFF1

+0041e9 fe/efe9: a9 0c 00     ??mxd?Z? e ....> LFEEFE9         lda     #HND_type_C_CBMOD
+0041ec fe/efec: 20 01 ce     n?mxd?z? e .....                 jsr     obtainFreeBlock
+0041ef fe/efef: b0 42        ??mxd??? e .....                 bcs     LFEF033
+0041f1 fe/eff1: a5 04        ??mxd??? e ....> LFEEFF1         lda     DPCOP_X+1
+0041f3 fe/eff3: 9f 05 00 00  ??mxd??? e .....                 stal    f:DPCOP_AH,x
+0041f7 fe/eff7: a5 03        ??mxd??? e .....                 lda     DPCOP_X
+0041f9 fe/eff9: 9f 04 00 00  ??mxd??? e .....                 stal    f:DPCOP_X+1,x
+0041fd fe/effd: 98           ??mxd??? e .....                 tya
+0041fe fe/effe: 9f 07 00 00  ??mxd??? e .....                 stal    f:DPCOP_B,x
+004202 fe/f002: b0 2c        ??mxd??? e .....                 bcs     LFEF030
+004204 fe/f004: 8b           ??mxd??c e .....                 phb
+004205 fe/f005: da           ??mxd??c e .....                 phx
+004206 fe/f006: bf 05 00 00  ??mxd??c e .....                 ldal    f:DPCOP_AH,x
+00420a fe/f00a: 48           ??mxd??c e .....                 pha
+00420b fe/f00b: ab           ??mxd??c e .....                 plb
+00420c fe/f00c: ab           ??mxd??c e .....                 plb
+00420d fe/f00d: bf 04 00 00  ??mxd??c e .....                 ldal    f:DPCOP_X+1,x
+004211 fe/f011: 18           ??mxd??c e .....                 clc
+004212 fe/f012: 69 0e 00     ??mxd??c e .....                 adc     #$000e
+004215 fe/f015: a2 00 00     ??mxd??? e .....                 ldx     #$0000
+004218 fe/f018: a0 00 00     n?mxd?Z? e .....                 ldy     #$0000
+00421b fe/f01b: 4b           n?mxd?Z? e .....                 phk
+00421c fe/f01c: 20 31 f2     n?mxd?Z? e .....                 jsr     findModuleByName_Q
+00421f fe/f01f: bb           ??mxd??? e .....                 tyx
+004220 fe/f020: bf 00 00 00  ??mxd??? e .....                 ldal    f:$000000,x
+004224 fe/f024: fa           ??mxd??? e .....                 plx
+004225 fe/f025: 9f 00 00 00  ??mxd??? e .....                 stal    f:$000000,x
+004229 fe/f029: 8a           ??mxd??? e .....                 txa
+00422a fe/f02a: bb           ??mxd??? e .....                 tyx
+00422b fe/f02b: 9f 00 00 00  ??mxd??? e .....                 stal    f:$000000,x
+00422f fe/f02f: ab           ??mxd??? e .....                 plb
+004230 fe/f030: 18           ??mxd??? e ....> LFEF030         clc
+004231 fe/f031: 80 0b        ??mxd??c e ...#.                 bra     LFEF03E

+004233 fe/f033: 98           ??mxd??C e ....> LFEF033         tya
+004234 fe/f034: f0 07        ??mxd??C e .....                 beq     LFEF03D
+004236 fe/f036: a2 02 00     ??mxd?zC e .....                 ldx     #$0002
+004239 fe/f039: 22 8c ff 00  n?mxd?zC e .....                 jsl     __MM
+00423d fe/f03d: 38           ??mxd??? e ....> LFEF03D         sec
+00423e fe/f03e: 08           ??mxd??? e ....> LFEF03E         php
+00423f fe/f03f: a0 03 00     ??mxd??? e .....                 ldy     #$0003
+004242 fe/f042: b7 03        n?mxd?z? e .....                 lda     [DPCOP_X],y
+004244 fe/f044: 18           ??mxd??? e .....                 clc
+004245 fe/f045: 65 03        ??mxd??c e .....                 adc     DPCOP_X
+004247 fe/f047: 48           ??mxd??? e .....                 pha
+004248 fe/f048: c8           ??mxd??? e .....                 iny
+004249 fe/f049: c8           ??mxd??? e .....                 iny
+00424a fe/f04a: b7 03        ??mxd??? e .....                 lda     [DPCOP_X],y
+00424c fe/f04c: 29 ff 00     ??mxd??? e .....                 and     #$00ff
+00424f fe/f04f: 65 05        n?mxd??? e .....                 adc     DPCOP_AH
+004251 fe/f051: 85 05        ??mxd??? e .....                 sta     DPCOP_AH
+004253 fe/f053: 68           ??mxd??? e .....                 pla
+004254 fe/f054: 85 03        ??mxd??? e .....                 sta     DPCOP_X
+004256 fe/f056: a5 03        ??mxd??? e .....                 lda     DPCOP_X
+004258 fe/f058: 18           ??mxd??? e .....                 clc
+004259 fe/f059: 69 02 00     ??mxd??c e .....                 adc     #$0002
+00425c fe/f05c: 85 03        ??mxd??? e .....                 sta     DPCOP_X
+00425e fe/f05e: a5 05        ??mxd??? e .....                 lda     DPCOP_AH
+004260 fe/f060: 69 00 00     ??mxd??? e .....                 adc     #$0000
+004263 fe/f063: 85 05        ??mxd??? e .....                 sta     DPCOP_AH
+004265 fe/f065: 28           ??mxd??? e .....                 plp
+004266 fe/f066: 60           ??mxd??? e ...#.                 rts

+004267 fe/f067: 08           ??mxd??? e ....> LFEF067         php
+004268 fe/f068: 0b           ??mxd??? e .....                 phd
+004269 fe/f069: 8b           ??mxd??? e .....                 phb
+00426a fe/f06a: da           ??mxd??? e .....                 phx
+00426b fe/f06b: f4 0e fe     ??mxd??? e .....                 pea     B0LST_MODULES_QRY
                                                               .rwid   shortm
+00426e fe/f06e: c2 20        ???xd??? e ....> LFEF06E         rep     #$20
                                                               .rwid   longm
+004270 fe/f070: fa           ??mxd??? e .....                 plx
+004271 fe/f071: bf 00 00 00  ??mxd??? e .....                 ldal    f:$000000,x
+004275 fe/f075: c9 0e fe     ??mxd??? e .....                 cmp     #$fe0e
+004278 fe/f078: f0 39        ??mxd??? e .....                 beq     LFEF0B3
+00427a fe/f07a: 48           ??mxd?z? e .....                 pha
+00427b fe/f07b: 20 c3 f1     ??mxd?z? e .....                 jsr     getModCallBlock
+00427e fe/f07e: 5b           ??mxd??? e .....                 tcd
+00427f fe/f07f: e2 20        ??mxd??? e .....                 sep     #$20
                                                               .rwid   shortm
+004281 fe/f081: a3 11        ??Mxd??? e .....                 lda     $11,S
+004283 fe/f083: 48           ??Mxd??? e .....                 pha
+004284 fe/f084: ab           ??Mxd??? e .....                 plb
+004285 fe/f085: a0 0d 00     ??Mxd??? e .....                 ldy     #$000d
+004288 fe/f088: c8           ??Mxd??? e ....> LFEF088         iny
+004289 fe/f089: b7 00        ??Mxd??? e .....                 lda     [$00],y
+00428b fe/f08b: 20 f7 f4     ??Mxd??? e .....                 jsr     checkValidModnameChar
+00428e fe/f08e: b0 08        ??Mxd??? e .....                 bcs     LFEF098
+004290 fe/f090: 53 0f        ??Mxd??c e .....                 eor     ($0f,S),y
+004292 fe/f092: 29 df        ??Mxd??c e .....                 and     #$df
+004294 fe/f094: d0 d8        ??Mxd??c e .....                 bne     LFEF06E
+004296 fe/f096: 80 f0        ??Mxd?Zc e ...#.                 bra     LFEF088

+004298 fe/f098: b3 0f        ??Mxd??C e ....> LFEF098         lda     ($0f,S),y
+00429a fe/f09a: 20 f7 f4     ??Mxd??C e .....                 jsr     checkValidModnameChar
+00429d fe/f09d: 90 cf        ??Mxd??? e .....                 bcc     LFEF06E
+00429f fe/f09f: a0 06 00     ??Mxd??C e .....                 ldy     #$0006
+0042a2 fe/f0a2: c2 20        n?Mxd?zC e .....                 rep     #$20
                                                               .rwid   longm
+0042a4 fe/f0a4: b7 00        n?mxd?zC e .....                 lda     [$00],y
+0042a6 fe/f0a6: d3 0f        ??mxd??C e .....                 cmp     ($0f,S),y
+0042a8 fe/f0a8: e2 20        ??mxd??? e .....                 sep     #$20
                                                               .rwid   shortm
+0042aa fe/f0aa: 90 0a        ??Mxd??? e .....                 bcc     LFEF0B6
+0042ac fe/f0ac: 2b           ??Mxd??C e .....                 pld
+0042ad fe/f0ad: fa           ??Mxd??C e .....                 plx
+0042ae fe/f0ae: ab           ??Mxd??C e .....                 plb
+0042af fe/f0af: 2b           ??Mxd??C e .....                 pld
+0042b0 fe/f0b0: 28           ??Mxd??C e .....                 plp
                                                               .rwid   longm
+0042b1 fe/f0b1: 38           ??mxd??? e .....                 sec
+0042b2 fe/f0b2: 60           ??mxd??C e ...#.                 rts

+0042b3 fe/f0b3: f4 00 00     ??mxd?Z? e ....> LFEF0B3         pea     $0000
                                                               .rwid   shortm
+0042b6 fe/f0b6: c2 20        ???xd??? e ....> LFEF0B6         rep     #$20
                                                               .rwid   longm
+0042b8 fe/f0b8: 68           ??mxd??? e .....                 pla
+0042b9 fe/f0b9: fa           ??mxd??? e .....                 plx
+0042ba fe/f0ba: ab           ??mxd??? e .....                 plb
+0042bb fe/f0bb: 2b           ??mxd??? e .....                 pld
+0042bc fe/f0bc: 28           ??mxd??? e .....                 plp
+0042bd fe/f0bd: 18           ??mxd??? e .....                 clc
+0042be fe/f0be: 60           ??mxd??c e ...#.                 rts

+0042bf fe/f0bf: c9 2c 00     n?mxd?zc e ....> LFEF0BF         cmp     #$002c
+0042c2 fe/f0c2: 90 19        ??mxd??? e .....                 bcc     LFEF0DD
+0042c4 fe/f0c4: c9 3a 00     ??mxd??C e .....                 cmp     #$003a
+0042c7 fe/f0c7: 90 16        ??mxd??? e .....                 bcc     LFEF0DF
+0042c9 fe/f0c9: c9 40 00     ??mxd??C e .....                 cmp     #$0040
+0042cc fe/f0cc: 90 0f        ??mxd??? e .....                 bcc     LFEF0DD
+0042ce fe/f0ce: c9 5b 00     ??mxd??C e .....                 cmp     #$005b
+0042d1 fe/f0d1: 90 0c        ??mxd??? e .....                 bcc     LFEF0DF
+0042d3 fe/f0d3: c9 61 00     ??mxd??C e .....                 cmp     #$0061
+0042d6 fe/f0d6: 90 05        ??mxd??? e .....                 bcc     LFEF0DD
+0042d8 fe/f0d8: c9 7b 00     ??mxd??C e .....                 cmp     #$007b
+0042db fe/f0db: 90 02        ??mxd??? e .....                 bcc     LFEF0DF
+0042dd fe/f0dd: 38           ??mxd??? e ....> LFEF0DD         sec
+0042de fe/f0de: 60           ??mxd??C e ...#.                 rts

+0042df fe/f0df: 18           ??mxd??c e ....> LFEF0DF         clc
+0042e0 fe/f0e0: 60           ??mxd??c e ...#.                 rts

+0042e1 fe/f0e1: 82                      ..... tblLFEF0E1      .dd1    $82
+0042e2 fe/f0e2: 00                      .....                 .dd1    $00
+0042e3 fe/f0e3: 00                      .....                 .dd1    $00
+0042e4 fe/f0e4: 00                      .....                 .dd1    $00
+0042e5 fe/f0e5: 01                      .....                 .dd1    $01
+0042e6 fe/f0e6: 01                      .....                 .dd1    $01
+0042e7 fe/f0e7: 00                      .....                 .dd1    $00
+0042e8 fe/f0e8: 00                      .....                 .dd1    $00
+0042e9 fe/f0e9: 00                      .....                 .dd1    $00
+0042ea fe/f0ea: 00                      .....                 .dd1    $00
+0042eb fe/f0eb: 01                      .....                 .dd1    $01
+0042ec fe/f0ec: 00                      .....                 .dd1    $00
+0042ed fe/f0ed: 80                      .....                 .dd1    $80
+0042ee fe/f0ee: ff                      .....                 .dd1    $ff
+0042ef fe/f0ef: ff                      .....                 .dd1    $ff
+0042f0 fe/f0f0: 00                      .....                 .dd1    $00
+0042f1 fe/f0f1: 00                      .....                 .dd1    $00

+0042f2 fe/f0f2: 08           ??mxd??? e ....> getModCallRef   php
+0042f3 fe/f0f3: 0b           ??mxd??? e .....                 phd
+0042f4 fe/f0f4: c2 30        ??mxd??? e .....                 rep     #$30
+0042f6 fe/f0f6: 4b           ??mxd??? e .....                 phk
+0042f7 fe/f0f7: 20 30 f1     ??mxd??? e .....                 jsr     findModule
+0042fa fe/f0fa: b0 30        ??mxd??? e .....                 bcs     @retsec
+0042fc fe/f0fc: 4b           ??mxd??c e .....                 phk
+0042fd fe/f0fd: 20 dd f1     ??mxd??c e .....                 jsr     getOrCreateModCallBlock
+004300 fe/f100: b0 2a        ??mxd??? e .....                 bcs     @retsec
+004302 fe/f102: aa           ??mxd??c e .....                 tax
+004303 fe/f103: e2 20        ??mxd??c e .....                 sep     #$20
                                                               .rwid   shortm
+004305 fe/f105: bf 07 00 00  ??Mxd??c e .....                 ldal    f:$000007,x       ;increment module reference count by 1
+004309 fe/f109: 1a           ??Mxd??c e .....                 inc     A
+00430a fe/f10a: d0 15        ??Mxd??c e .....                 bne     @ok
+00430c fe/f10c: 02 0f        ??Mxd?Zc e .....                 cop     COP_0F_OPERR      ;panic if mod ref >= 255
+00430e fe/f10e: 55 73 65 20+            .T...                 .zstr   “Use Count Overflow”
+004321 fe/f121: 9f 07 00 00  ??Mxd??c e ....> @ok             stal    f:DPCOP_B,x
+004325 fe/f125: c2 20        ??Mxd??c e .....                 rep     #$20
                                                               .rwid   longm
+004327 fe/f127: 8a           ??mxd??c e .....                 txa
+004328 fe/f128: 2b           ??mxd??c e .....                 pld
+004329 fe/f129: 28           ??mxd??c e .....                 plp
+00432a fe/f12a: 18           ??mxd??? e .....                 clc
+00432b fe/f12b: 6b           ??mxd??c e ...#.                 rtl

+00432c fe/f12c: 2b           ??mxd??C e ....> @retsec         pld
+00432d fe/f12d: 28           ??mxd??C e .....                 plp
+00432e fe/f12e: 38           ??mxd??? e .....                 sec
+00432f fe/f12f: 6b           ??mxd??C e ...#.                 rtl

                                               ; 
                                               ; Entry:  BHA is pointer to module name
                                               ;         Y is either 0 or required version number
                                               ; 
                                               ; Exit:   CC for found, pointer to module list entry in X
                                               ;         CS, X=-1 for not found
+004330 fe/f130: 08           ??mxd??? e ....> findModule      php
+004331 fe/f131: 0b           ??mxd??? e .....                 phd
+004332 fe/f132: c2 30        ??mxd??? e .....                 rep     #$30
+004334 fe/f134: f4 ff ff     ??mxd??? e .....                 pea     $ffff             ;this looks to be the return value, -1 means not found
+004337 fe/f137: 5a           ??mxd??? e .....                 phy
+004338 fe/f138: 8b           ??mxd??? e .....                 phb
+004339 fe/f139: 8b           ??mxd??? e .....                 phb
+00433a fe/f13a: 48           ??mxd??? e .....                 pha                       ;push BHA pointer
+00433b fe/f13b: f4 0e fe     ??mxd??? e .....                 pea     B0LST_MODULES_QRY
+00433e fe/f13e: a3 03        ??mxd??? e .....                 lda     $03,S             ;back off stacked BHA by 14 TODO:why not do this before pushing!?
+004340 fe/f140: 38           ??mxd??? e .....                 sec
+004341 fe/f141: e9 0e 00     ??mxd??C e .....                 sbc     #$000e
+004344 fe/f144: 83 03        ??mxd??? e .....                 sta     $03,S
+004346 fe/f146: a3 05        ??mxd??? e .....                 lda     $05,S
+004348 fe/f148: e9 00 00     ??mxd??? e .....                 sbc     #$0000
+00434b fe/f14b: 83 05        ??mxd??? e .....                 sta     $05,S
+00434d fe/f14d: fa           ??mxd??? e ....> @modsrchlp      plx                       ;get back list pointer
+00434e fe/f14e: bf 00 00 00  ??mxd??? e .....                 ldal    f:$000000,x
+004352 fe/f152: c9 0e fe     ??mxd??? e .....                 cmp     #B0LST_MODULES_QRY
+004355 fe/f155: f0 5c        ??mxd??? e .....                 beq     @unstackExit      ;if at head of list exit
+004357 fe/f157: 48           ??mxd?z? e .....                 pha
+004358 fe/f158: 20 c3 f1     ??mxd?z? e .....                 jsr     getModCallBlock
+00435b fe/f15b: aa           ??mxd??? e .....                 tax
+00435c fe/f15c: a0 0d 00     ??mxd??? e .....                 ldy     #$000d
+00435f fe/f15f: c8           n?mxd??? e ....> @strmatchlp     iny
+004360 fe/f160: f0 eb        ??mxd??? e .....                 beq     @modsrchlp
+004362 fe/f162: 3b           ??mxd?z? e .....                 tsc
+004363 fe/f163: 5b           ??mxd??? e .....                 tcd
+004364 fe/f164: b7 03        ??mxd??? e .....                 lda     [$03],y           ;get character from stacked long BHA-14 pointer
+004366 fe/f166: 20 f7 f4     ??mxd??? e .....                 jsr     checkValidModnameChar ;check it's a valid module name char
+004369 fe/f169: da           ??mxd??? e .....                 phx
+00436a fe/f16a: 2b           ??mxd??? e .....                 pld                       ;point to current module name in list
+00436b fe/f16b: b0 09        ??mxd??? e .....                 bcs     @skend            ;end of string
+00436d fe/f16d: 57 00        ??mxd??c e .....                 eor     [$00],y           ;check for equality
+00436f fe/f16f: 29 df 00     ??mxd??c e .....                 and     #$00df
+004372 fe/f172: d0 d9        n?mxd??c e .....                 bne     @modsrchlp        ;no match, next module please
+004374 fe/f174: 80 e9        n?mxd?Zc e ...#.                 bra     @strmatchlp

+004376 fe/f176: b7 00        ??mxd??C e ....> @skend          lda     [$00],y           ;we got to the end of the passed in string
+004378 fe/f178: 20 f7 f4     ??mxd??C e .....                 jsr     checkValidModnameChar ;were we at the end of the module string?
+00437b fe/f17b: 90 d0        ??mxd??? e .....                 bcc     @modsrchlp        ;no, next module...
+00437d fe/f17d: a3 07        ??mxd??C e .....                 lda     $07,S             ;retrieve passed in Y
+00437f fe/f17f: f0 0f        ??mxd??C e .....                 beq     @checkVerGt
+004381 fe/f181: a0 06 00     ??mxd?zC e .....                 ldy     #$0006
+004384 fe/f184: b7 00        n?mxd?zC e .....                 lda     [$00],y           ;get module version number
+004386 fe/f186: c3 07        ??mxd??C e .....                 cmp     $07,S             ;compare with passed in Y
+004388 fe/f188: d0 c3        ??mxd??? e .....                 bne     @modsrchlp        ;doesn't match, next module
+00438a fe/f18a: 68           ??mxd??? e ....> @setWinner      pla                       ;get back list entry pointer
+00438b fe/f18b: 48           ??mxd??? e .....                 pha
+00438c fe/f18c: 83 09        ??mxd??? e .....                 sta     $09,S             ;store in return value
+00438e fe/f18e: 80 bd        ??mxd??? e ...#.                 bra     @modsrchlp        ;keep going - why TODO: check if this happens, document?

+004390 fe/f190: a3 09        ??mxd?ZC e ....> @checkVerGt     lda     $09,S             ;get return value
+004392 fe/f192: c9 ff ff     ??mxd??C e .....                 cmp     #$ffff            ;has it been set already?
+004395 fe/f195: f0 f3        ??mxd??? e .....                 beq     @setWinner        ;if it hasn't set current as result
+004397 fe/f197: 20 c3 f1     ??mxd?z? e .....                 jsr     getModCallBlock
+00439a fe/f19a: 5b           ??mxd??? e .....                 tcd
+00439b fe/f19b: a0 06 00     ??mxd??? e .....                 ldy     #$0006
+00439e fe/f19e: b7 00        n?mxd?z? e .....                 lda     [$00],y           ;get winner's version
+0043a0 fe/f1a0: 48           ??mxd??? e .....                 pha                       ;save it
+0043a1 fe/f1a1: a3 03        ??mxd??? e .....                 lda     $03,S             ;get current module list entry
+0043a3 fe/f1a3: 20 c3 f1     ??mxd??? e .....                 jsr     getModCallBlock   ;get module pointer
+0043a6 fe/f1a6: 5b           ??mxd??? e .....                 tcd
+0043a7 fe/f1a7: b7 00        ??mxd??? e .....                 lda     [$00],y           ;get current module version number
+0043a9 fe/f1a9: 29 ff 00     ??mxd??? e .....                 and     #$00ff            ;mask off low part?!?!?
+0043ac fe/f1ac: c3 01        n?mxd??? e .....                 cmp     $01,S             ;compare
+0043ae fe/f1ae: 68           ??mxd??? e .....                 pla                       ;discard pushed
+0043af fe/f1af: 90 9c        ??mxd??? e .....                 bcc     @modsrchlp
+0043b1 fe/f1b1: 80 d7        ??mxd??C e ...#.                 bra     @setWinner

+0043b3 fe/f1b3: 2b           ??mxd?Z? e ....> @unstackExit    pld
+0043b4 fe/f1b4: 2b           ??mxd??? e .....                 pld
+0043b5 fe/f1b5: 2b           ??mxd??? e .....                 pld
+0043b6 fe/f1b6: 68           ??mxd??? e .....                 pla
+0043b7 fe/f1b7: c9 ff ff     ??mxd??? e .....                 cmp     #$ffff            ;check for winner
+0043ba fe/f1ba: 2b           ??mxd??? e .....                 pld
+0043bb fe/f1bb: b0 03        ??mxd??? e .....                 bcs     @retsec
+0043bd fe/f1bd: 28           ??mxd??c e .....                 plp
+0043be fe/f1be: 18           ??mx???? e .....                 clc
+0043bf fe/f1bf: 6b           ??mx???c e ...#.                 rtl

+0043c0 fe/f1c0: 28           ??mxd??C e ....> @retsec         plp
+0043c1 fe/f1c1: 38           ??mx???? e .....                 sec
+0043c2 fe/f1c2: 6b           ??mx???C e ...#.                 rtl

+0043c3 fe/f1c3: 0b           ??mxd??? e ....> getModCallBlock phd
+0043c4 fe/f1c4: 18           ??mxd??? e .....                 clc
+0043c5 fe/f1c5: 69 04 00     ??mxd??c e .....                 adc     #$0004            ;HA+=4
+0043c8 fe/f1c8: 5b           ??mxd??? e .....                 tcd                       ;DP=HA
+0043c9 fe/f1c9: a5 02        ??mxd??? e .....                 lda     $02               ;HA=[DP,2]
+0043cb fe/f1cb: 29 ff 00     ??mxd??? e .....                 and     #$00ff
+0043ce fe/f1ce: 38           n?mxd??? e .....                 sec
+0043cf fe/f1cf: d0 09        n?mxd??C e .....                 bne     @ret
+0043d1 fe/f1d1: a5 00        n?mxd?ZC e .....                 lda     $00
+0043d3 fe/f1d3: aa           ??mxd??C e .....                 tax
+0043d4 fe/f1d4: 18           ??mxd??C e .....                 clc
+0043d5 fe/f1d5: 69 02 00     ??mxd??c e .....                 adc     #$0002
+0043d8 fe/f1d8: 5b           ??mxd??? e .....                 tcd
+0043d9 fe/f1d9: 18           ??mxd??? e .....                 clc
+0043da fe/f1da: 7b           ??mxd??? e ....> @ret            tdc
+0043db fe/f1db: 2b           ??mxd??? e .....                 pld
+0043dc fe/f1dc: 60           ??mxd??? e ...#.                 rts

+0043dd fe/f1dd: 20 c3 f1     ??mxd??c e ....> getOrCreateModCallBlock jsr getModCallBlock
+0043e0 fe/f1e0: 90 3a        ??mxd??? e .....                 bcc     @retTxa
+0043e2 fe/f1e2: 0b           ??mxd??C e .....                 phd
+0043e3 fe/f1e3: 5b           ??mxd??C e .....                 tcd
+0043e4 fe/f1e4: a9 06 00     ??mxd??C e .....                 lda     #HND_type_6_CBCO
+0043e7 fe/f1e7: 20 01 ce     n?mxd?zC e .....                 jsr     obtainFreeBlock
+0043ea fe/f1ea: b0 31        ??mxd??? e .....                 bcs     @ret
+0043ec fe/f1ec: a9 00 00     ??mxd??c e .....                 lda     #$0000
+0043ef fe/f1ef: e2 20        n?mxd?Zc e .....                 sep     #$20
                                                               .rwid   shortm
+0043f1 fe/f1f1: 9f 07 00 00  n?Mxd?Zc e .....                 stal    f:$000007,x       ;refernce count
+0043f5 fe/f1f5: c2 20        n?Mxd?Zc e .....                 rep     #$20
                                                               .rwid   longm
+0043f7 fe/f1f7: 9f 08 00 00  n?mxd?Zc e .....                 stal    f:$000008,x       ;QRY what is at offset 8
+0043fb fe/f1fb: 4b           n?mxd?Zc e .....                 phk
                                                               .dbank  K (auto)
+0043fc fe/f1fc: ab           n?mxd?Zc e .....                 plb
+0043fd fe/f1fd: ad 1e f2     ??mxd??c e .....                 lda     templateModCallBlock & $ffff ;get phd, jsl opcodes
+004400 fe/f200: 9f 00 00 00  ??mxd??c e .....                 stal    f:$000000,x       ;store at offset 0
+004404 fe/f204: ad 23 f2     ??mxd??c e .....                 lda     0+(templateModCallBlock & $ffff)+5 ;get pld, rtl opcodes
+004407 fe/f207: 9f 05 00 00  ??mxd??c e .....                 stal    f:$000005,x       ;store at offset 5
+00440b fe/f20b: a5 01        ??mxd??c e .....                 lda     $01               ;get program bank and high byte of module service
+00440d fe/f20d: 9f 03 00 00  ??mxd??c e .....                 stal    f:$000003,x       ;store at offset 3
+004411 fe/f211: a5 00        ??mxd??c e .....                 lda     $00               ;get 16 bit low address of module
+004413 fe/f213: 9f 02 00 00  ??mxd??c e .....                 stal    f:$000002,x       ;store at offset 2
+004417 fe/f217: 64 01        ??mxd??c e .....                 stz     $01
+004419 fe/f219: 86 00        ??mxd??c e .....                 stx     $00               ;store DPX at 0 - QRY why?
+00441b fe/f21b: 2b           ??mxd??c e .....                 pld
+00441c fe/f21c: 8a           ??mxd??c e ....> @retTxa         txa
+00441d fe/f21d: 6b           ??mxd??? e ...#> @ret            rtl

                                               ; This is a template module call that is copied to Bank 0 when a module is first
                                               ; referenced
                                                               .rwid   shortm,shortx
+00441e fe/f21e: 0b           ??MXd??? e @T... templateModCallBlock phd
+00441f fe/f21f: 22 00 00 00  ??MXd??? e .....                 jsl     $000000
+004423 fe/f223: 2b           ??MXd??? e .....                 pld
+004424 fe/f224: 6b           ??MXd??? e ...#.                 rtl

+004425 fe/f225: 82 09 00     ??MXd??? e @T.#.                 brl     findModuleByName_Q

+004428 fe/f228: 82 47 01     ??MXd??? e @T.#.                 brl     LFEF372

                                                               .rwid   longm,longx
+00442b fe/f22b: 82 54 02     ??mxd??? e ...#> brlFindModuleByAddress brl findModuleByAddress

+00442e fe/f22e: 82 86 00     ??mxd??? e .T.#> LFEF22E         brl     LFEF2B7

+004431 fe/f231: 0b           ??mxd??? e ....> findModuleByName_Q phd
+004432 fe/f232: da           ??mxd??? e .....                 phx
+004433 fe/f233: 5a           ??mxd??? e .....                 phy
+004434 fe/f234: f4 0e fe     ??mxd??? e .....                 pea     B0LST_MODULES_QRY
+004437 fe/f237: f4 00 00     ??mxd??? e .....                 pea     $0000
+00443a fe/f23a: f4 00 00     ??mxd??? e .....                 pea     $0000
+00443d fe/f23d: 8b           ??mxd??? e .....                 phb
+00443e fe/f23e: 48           ??mxd??? e .....                 pha
+00443f fe/f23f: 0b           ??mxd??? e .....                 phd
+004440 fe/f240: 0b           ??mxd??? e .....                 phd
+004441 fe/f241: 3b           ??mxd??? e .....                 tsc
+004442 fe/f242: 1a           ??mxd??? e .....                 inc     A
+004443 fe/f243: 5b           ??mxd??? e .....                 tcd
+004444 fe/f244: a5 0f        ??mxd??? e .....                 lda     $0f
+004446 fe/f246: d0 07        ??mxd??? e .....                 bne     LFEF24F
+004448 fe/f248: a2 0e fe     ??mxd?Z? e .....                 ldx     #B0LST_MODULES_QRY
+00444b fe/f24b: bf 00 00 00  ??mxd??? e ....> LFEF24B         ldal    f:$000000,x
+00444f fe/f24f: c9 0e fe     ??mxd??? e ....> LFEF24F         cmp     #B0LST_MODULES_QRY
+004452 fe/f252: f0 3f        ??mxd??? e .....                 beq     LFEF293
+004454 fe/f254: aa           ??mxd?z? e .....                 tax
+004455 fe/f255: 4b           ??mxd??? e .....                 phk
+004456 fe/f256: 20 b7 f2     ??mxd??? e .....                 jsr     LFEF2B7
+004459 fe/f259: 4b           ??mxd??? e .....                 phk
+00445a fe/f25a: 20 e7 f2     ??mxd??? e .....                 jsr     LFEF2E7
+00445d fe/f25d: 70 08        ??mxd??? e .....                 bvs     LFEF267
+00445f fe/f25f: 26 09        ?vmxd??? e .....                 rol     DPCOP_DP+1
+004461 fe/f261: 66 09        ?vmxd??? e .....                 ror     DPCOP_DP+1
+004463 fe/f263: d0 02        ?vmxd??? e .....                 bne     LFEF267
+004465 fe/f265: 86 0b        ?vmxd?Z? e .....                 stx     DPCOP_PC
+004467 fe/f267: b0 26        ??mxd??? e ....> LFEF267         bcs     LFEF28F
+004469 fe/f269: c0 00 00     ??mxd??c e .....                 cpy     #$0000
+00446c fe/f26c: d0 08        ??mxd??? e .....                 bne     LFEF276
+00446e fe/f26e: 85 07        ??mxd?Z? e .....                 sta     DPCOP_B
+004470 fe/f270: 86 09        ??mxd?Z? e .....                 stx     DPCOP_DP+1
+004472 fe/f272: 84 0b        ??mxd?Z? e .....                 sty     DPCOP_PC
+004474 fe/f274: 80 1d        ??mxd?Z? e ...#.                 bra     LFEF293

+004476 fe/f276: 26 0d        ??mxd?z? e ....> LFEF276         rol     DPCOP_K
+004478 fe/f278: 66 0d        ??mxd??? e .....                 ror     DPCOP_K
+00447a fe/f27a: f0 13        ??mxd??? e .....                 beq     LFEF28F
+00447c fe/f27c: 26 09        ??mxd?z? e .....                 rol     DPCOP_DP+1
+00447e fe/f27e: 66 09        ??mxd??? e .....                 ror     DPCOP_DP+1
+004480 fe/f280: f0 07        ??mxd??? e .....                 beq     LFEF289
+004482 fe/f282: a9 ff ff     ??mxd?z? e .....                 lda     #$ffff
+004485 fe/f285: 85 09        n?mxd?z? e .....                 sta     DPCOP_DP+1
+004487 fe/f287: 80 06        n?mxd?z? e ...#.                 bra     LFEF28F

+004489 fe/f289: 85 07        ??mxd?Z? e ....> LFEF289         sta     DPCOP_B
+00448b fe/f28b: 86 09        ??mxd?Z? e .....                 stx     DPCOP_DP+1
+00448d fe/f28d: 84 0b        ??mxd?Z? e .....                 sty     DPCOP_PC
+00448f fe/f28f: a5 0f        ??mxd??? e ....> LFEF28F         lda     $0f
+004491 fe/f291: f0 b8        ??mxd??? e .....                 beq     LFEF24B
+004493 fe/f293: a5 09        ??mxd??? e ....> LFEF293         lda     DPCOP_DP+1
+004495 fe/f295: 38           ??mxd??? e .....                 sec
+004496 fe/f296: f0 08        ??mxd??C e .....                 beq     LFEF2A0
+004498 fe/f298: 1a           ??mxd?zC e .....                 inc     A
+004499 fe/f299: f0 02        ??mxd??C e .....                 beq     LFEF29D
+00449b fe/f29b: 80 02        ??mxd?zC e ...#.                 bra     LFEF29F

+00449d fe/f29d: 64 09        ??mxd?ZC e ....> LFEF29D         stz     DPCOP_DP+1
+00449f fe/f29f: 18           ??mxd??C e ....> LFEF29F         clc
+0044a0 fe/f2a0: 2b           ??mxd??? e ....> LFEF2A0         pld
+0044a1 fe/f2a1: 2b           ??mxd??? e .....                 pld
+0044a2 fe/f2a2: 68           ??mxd??? e .....                 pla
+0044a3 fe/f2a3: 08           ??mxd??? e .....                 php
+0044a4 fe/f2a4: 18           ??mxd??? e .....                 clc
+0044a5 fe/f2a5: 63 03        ??mxd??c e .....                 adc     $03,S
+0044a7 fe/f2a7: 90 05        ??mxd??? e .....                 bcc     LFEF2AE
+0044a9 fe/f2a9: 28           ??mxd??C e .....                 plp
+0044aa fe/f2aa: fa           ??mxd??? e .....                 plx
+0044ab fe/f2ab: e8           ??mxd??? e .....                 inx
+0044ac fe/f2ac: da           ??mxd??? e .....                 phx
+0044ad fe/f2ad: 08           ??mxd??? e .....                 php
+0044ae fe/f2ae: 28           ??mxd??? e ....> LFEF2AE         plp
+0044af fe/f2af: ab           ??mxd??? e .....                 plb
+0044b0 fe/f2b0: 2b           ??mxd??? e .....                 pld
+0044b1 fe/f2b1: fa           ??mxd??? e .....                 plx
+0044b2 fe/f2b2: 7a           ??mxd??? e .....                 ply
+0044b3 fe/f2b3: 2b           ??mxd??? e .....                 pld
+0044b4 fe/f2b4: 2b           ??mxd??? e .....                 pld
+0044b5 fe/f2b5: 2b           ??mxd??? e .....                 pld
+0044b6 fe/f2b6: 6b           ??mxd??? e ...#.                 rtl

+0044b7 fe/f2b7: da           ??mxd??? e ....> LFEF2B7         phx
+0044b8 fe/f2b8: bf 04 00 00  ??mxd??? e .....                 ldal    f:DPCOP_X+1,x
+0044bc fe/f2bc: 85 00        ??mxd??? e .....                 sta     $00
+0044be fe/f2be: e2 20        ??mxd??? e .....                 sep     #$20
                                                               .rwid   shortm
+0044c0 fe/f2c0: bf 06 00 00  ??Mxd??? e .....                 ldal    f:DPCOP_AH+1,x
+0044c4 fe/f2c4: 85 02        ??Mxd??? e .....                 sta     DPCOP_Y+1
+0044c6 fe/f2c6: c2 20        ??Mxd??? e .....                 rep     #$20
                                                               .rwid   longm
+0044c8 fe/f2c8: 29 ff 00     ??mxd??? e .....                 and     #$00ff
+0044cb fe/f2cb: 38           n?mxd??? e .....                 sec
+0044cc fe/f2cc: d0 17        n?mxd??C e .....                 bne     LFEF2E5
+0044ce fe/f2ce: bf 04 00 00  n?mxd?ZC e .....                 ldal    f:DPCOP_X+1,x
+0044d2 fe/f2d2: aa           ??mxd??C e .....                 tax
+0044d3 fe/f2d3: bf 02 00 00  ??mxd??C e .....                 ldal    f:DPCOP_Y+1,x
+0044d7 fe/f2d7: 85 00        ??mxd??C e .....                 sta     $00
+0044d9 fe/f2d9: e2 20        ??mxd??C e .....                 sep     #$20
                                                               .rwid   shortm
+0044db fe/f2db: bf 04 00 00  ??Mxd??C e .....                 ldal    f:DPCOP_X+1,x
+0044df fe/f2df: 85 02        ??Mxd??C e .....                 sta     DPCOP_Y+1
+0044e1 fe/f2e1: c2 20        ??Mxd??C e .....                 rep     #$20
                                                               .rwid   longm
+0044e3 fe/f2e3: 8a           ??mxd??C e .....                 txa
+0044e4 fe/f2e4: 18           ??mxd??C e .....                 clc
+0044e5 fe/f2e5: fa           ??mxd??? e ....> LFEF2E5         plx
+0044e6 fe/f2e6: 6b           ??mxd??? e ...#.                 rtl

+0044e7 fe/f2e7: a0 0e 00     ??mxd??? e ....> LFEF2E7         ldy     #$000e
+0044ea fe/f2ea: 20 43 f3     n?mxd?z? e .....                 jsr     LFEF343
                                               ; Action: This call checks a list of names to see if a specific name is present.
                                               ; If it is then the offset of the name from the start of the list is given in Y.
                                               ; 
                                               ; On entry: The 4 byte address at D,0 points to the start of the name list.
                                               ;           The 4 byte address at D,4 points to the name to be located.
                                               ;           If Y = 0 then the slash "/" character is used as a delimiter.
                                               ;           If Y <> 0 then the character whose ASCII code is in Y is used as 
                                               ;           a delimiter.
                                               ; On exit:  If C = 0 then the name is in the list at offset Y from the start 
                                               ;           If C = 1 then the name is not in the list
                                               ;           No registers preserved
+0044ed fe/f2ed: da           ??mxd??? e ....> doNameSearch    phx
+0044ee fe/f2ee: 5a           ??mxd??? e .....                 phy
+0044ef fe/f2ef: a2 00 00     ??mxd??? e .....                 ldx     #$0000
+0044f2 fe/f2f2: 9b           n?mxd?Z? e .....                 txy
+0044f3 fe/f2f3: e8           ??mxd??? e ....> LFEF2F3         inx
+0044f4 fe/f2f4: ca           ??mxd??? e .....                 dex
+0044f5 fe/f2f5: d0 02        ??mxd??? e .....                 bne     LFEF2F9
+0044f7 fe/f2f7: e2 40        ??mxd?Z? e .....                 sep     #$40
+0044f9 fe/f2f9: b7 00        ??mxd??? e ....> LFEF2F9         lda     [$00],y
+0044fb fe/f2fb: 20 de f4     ??mxd??? e .....                 jsr     LFEF4DE
+0044fe fe/f2fe: b0 0a        ??mxd??? e .....                 bcs     LFEF30A
+004500 fe/f300: 57 04        ??mxd??c e .....                 eor     [DPCOP_X+1],y
+004502 fe/f302: 29 df 00     ??mxd??c e .....                 and     #$00df
+004505 fe/f305: d0 10        n?mxd??c e .....                 bne     LFEF317
+004507 fe/f307: c8           n?mxd?Zc e .....                 iny
+004508 fe/f308: 80 ef        ??mxd??c e ...#.                 bra     LFEF2F9

+00450a fe/f30a: b7 04        ??mxd??C e ....> LFEF30A         lda     [DPCOP_X+1],y
+00450c fe/f30c: 20 de f4     ??mxd??C e .....                 jsr     LFEF4DE
+00450f fe/f30f: 90 20        ??mxd??? e .....                 bcc     LFEF331
+004511 fe/f311: 98           ??mxd??C e .....                 tya
+004512 fe/f312: 9b           ??mxd??C e .....                 txy
+004513 fe/f313: 18           ??mxd??C e .....                 clc
+004514 fe/f314: fa           ??mxd??c e .....                 plx
+004515 fe/f315: fa           ??mxd??c e .....                 plx
+004516 fe/f316: 6b           ??mxd??c e ...#.                 rtl

+004517 fe/f317: b7 04        n?mxd?zc e ....> LFEF317         lda     [DPCOP_X+1],y
+004519 fe/f319: 20 de f4     ??mxd??c e .....                 jsr     LFEF4DE
+00451c fe/f31c: b0 0e        ??mxd??? e .....                 bcs     LFEF32C
+00451e fe/f31e: 29 df 00     ??mxd??c e .....                 and     #$00df
+004521 fe/f321: 48           n?mxd??c e .....                 pha
+004522 fe/f322: b7 00        n?mxd??c e .....                 lda     [$00],y
+004524 fe/f324: 29 df 00     ??mxd??c e .....                 and     #$00df
+004527 fe/f327: c3 01        n?mxd??c e .....                 cmp     $01,S
+004529 fe/f329: 68           ??mxd??? e .....                 pla
+00452a fe/f32a: b0 05        ??mxd??? e .....                 bcs     LFEF331
+00452c fe/f32c: e8           ??mxd??? e ....> LFEF32C         inx
+00452d fe/f32d: ca           ??mxd??? e .....                 dex
+00452e fe/f32e: d0 01        ??mxd??? e .....                 bne     LFEF331
+004530 fe/f330: b8           ??mxd?Z? e .....                 clv
+004531 fe/f331: a3 01        ??mxd??? e ....> LFEF331         lda     $01,S
+004533 fe/f333: 20 5e f3     ??mxd??? e .....                 jsr     LFEF35E
+004536 fe/f336: c9 00 00     ??mxd??? e .....                 cmp     #$0000
+004539 fe/f339: f0 04        ??mxd??? e .....                 beq     LFEF33F
+00453b fe/f33b: e8           ??mxd?z? e .....                 inx
+00453c fe/f33c: e8           ??mxd??? e .....                 inx
+00453d fe/f33d: 80 b4        ??mxd??? e ...#.                 bra     LFEF2F3

+00453f fe/f33f: 38           ??mxd?Z? e ....> LFEF33F         sec
+004540 fe/f340: fa           ??mxd?ZC e .....                 plx
+004541 fe/f341: fa           ??mxd??C e .....                 plx
+004542 fe/f342: 6b           ??mxd??C e ...#.                 rtl

+004543 fe/f343: 48           ??mxd??? e ....> LFEF343         pha
+004544 fe/f344: 08           ??mxd??? e .....                 php
+004545 fe/f345: 98           ??mxd??? e .....                 tya
+004546 fe/f346: 18           ??mxd??? e .....                 clc
+004547 fe/f347: 65 00        ??mxd??c e .....                 adc     $00
+004549 fe/f349: 85 00        ??mxd??? e .....                 sta     $00
+00454b fe/f34b: e2 20        ??mxd??? e .....                 sep     #$20
                                                               .rwid   shortm
+00454d fe/f34d: a9 00        ??Mxd??? e .....                 lda     #$00
+00454f fe/f34f: 65 02        n?Mxd?Z? e .....                 adc     DPCOP_Y+1
+004551 fe/f351: 85 02        ??Mxd??? e .....                 sta     DPCOP_Y+1
+004553 fe/f353: c2 20        ??Mxd??? e .....                 rep     #$20
                                                               .rwid   longm
+004555 fe/f355: a0 00 00     ??mxd??? e .....                 ldy     #$0000
+004558 fe/f358: 28           n?mxd?Z? e .....                 plp
+004559 fe/f359: 68           ??mxd??? e .....                 pla
+00455a fe/f35a: 60           ??mxd??? e ...#.                 rts

+00455b fe/f35b: a9 00 00     ??mxd?Z? e ....> LFEF35B         lda     #$0000
+00455e fe/f35e: 48           ??mxd??? e ....> LFEF35E         pha
+00455f fe/f35f: 80 01        ??mxd??? e ...#.                 bra     LFEF362

+004561 fe/f361: c8           ??mxd??c e ....> LFEF361         iny
+004562 fe/f362: b7 00        ??mxd??? e ....> LFEF362         lda     [$00],y
+004564 fe/f364: 20 de f4     ??mxd??? e .....                 jsr     LFEF4DE
+004567 fe/f367: 90 f8        ??mxd??? e .....                 bcc     LFEF361
+004569 fe/f369: c8           ??mxd??C e .....                 iny
+00456a fe/f36a: 20 43 f3     ??mxd??C e .....                 jsr     LFEF343
+00456d fe/f36d: 7a           ??mxd??? e .....                 ply
+00456e fe/f36e: a0 00 00     ??mxd??? e .....                 ldy     #$0000
+004571 fe/f371: 60           n?mxd?Z? e ...#.                 rts

                                                               .rwid   shortm,shortx
+004572 fe/f372: 08           ??M?d??? e ....> LFEF372         php
+004573 fe/f373: 0b           ??M?d??? e .....                 phd
+004574 fe/f374: c2 30        ??M?d??? e .....                 rep     #$30
                                                               .rwid   longm,longx
+004576 fe/f376: 8b           ??mxd??? e .....                 phb
+004577 fe/f377: 48           ??mxd??? e .....                 pha
+004578 fe/f378: 8b           ??mxd??? e .....                 phb
+004579 fe/f379: 48           ??mxd??? e .....                 pha
+00457a fe/f37a: 3b           ??mxd??? e .....                 tsc
+00457b fe/f37b: 1a           ??mxd??? e .....                 inc     A
+00457c fe/f37c: 5b           ??mxd??? e .....                 tcd
+00457d fe/f37d: a0 00 00     ??mxd??? e .....                 ldy     #$0000
+004580 fe/f380: 20 5b f3     n?mxd?Z? e .....                 jsr     LFEF35B
+004583 fe/f383: a2 00 00     ??mxd??? e .....                 ldx     #$0000
+004586 fe/f386: c9 2f 00     n?mxd?Z? e .....                 cmp     #$002f
+004589 fe/f389: d0 19        ??mxd??? e .....                 bne     LFEF3A4
+00458b fe/f38b: 68           ??mxd?Z? e .....                 pla
+00458c fe/f38c: ab           ??mxd??? e .....                 plb
+00458d fe/f38d: 8b           ??mxd??? e .....                 phb
+00458e fe/f38e: 48           ??mxd??? e .....                 pha
+00458f fe/f38f: a2 00 00     ??mxd??? e .....                 ldx     #$0000
+004592 fe/f392: a0 00 00     n?mxd?Z? e .....                 ldy     #$0000
+004595 fe/f395: 4b           n?mxd?Z? e .....                 phk
+004596 fe/f396: 20 31 f2     n?mxd?Z? e .....                 jsr     findModuleByName_Q
+004599 fe/f399: 90 03        ??mxd??? e .....                 bcc     LFEF39E
+00459b fe/f39b: 82 7a 00     ??mxd??C e ...#.                 brl     @reterrModNotFound

+00459e fe/f39e: 8a           ??mxd??c e ....> LFEF39E         txa
+00459f fe/f39f: d0 03        ??mxd??c e .....                 bne     LFEF3A4
+0045a1 fe/f3a1: 82 a1 00     ??mxd?Zc e ...#.                 brl     @reterrCommandError

+0045a4 fe/f3a4: 20 75 f4     ??mxd?z? e ....> LFEF3A4         jsr     LFEF475
+0045a7 fe/f3a7: 68           ??mxd??? e .....                 pla
+0045a8 fe/f3a8: ab           ??mxd??? e .....                 plb
+0045a9 fe/f3a9: 8b           ??mxd??? e .....                 phb
+0045aa fe/f3aa: 48           ??mxd??? e .....                 pha
+0045ab fe/f3ab: a0 01 00     ??mxd??? e .....                 ldy     #$0001
+0045ae fe/f3ae: 4b           n?mxd?z? e .....                 phk
+0045af fe/f3af: 20 31 f2     n?mxd?z? e .....                 jsr     findModuleByName_Q
+0045b2 fe/f3b2: 90 03        ??mxd??? e .....                 bcc     LFEF3B7
+0045b4 fe/f3b4: 82 5d 00     ??mxd??C e ...#.                 brl     @retSev

+0045b7 fe/f3b7: 8a           ??mxd??c e ....> LFEF3B7         txa
+0045b8 fe/f3b8: d0 03        ??mxd??c e .....                 bne     LFEF3BD
+0045ba fe/f3ba: 82 70 00     ??mxd?Zc e ...#.                 brl     @reterrAmbiuousCommand

+0045bd fe/f3bd: da           ??mxd?zc e ....> LFEF3BD         phx
+0045be fe/f3be: 5a           ??mxd?zc e .....                 phy
+0045bf fe/f3bf: 8a           ??mxd?zc e .....                 txa
+0045c0 fe/f3c0: 4b           ??mxd??c e .....                 phk
+0045c1 fe/f3c1: 20 dd f1     ??mxd??c e .....                 jsr     getOrCreateModCallBlock
+0045c4 fe/f3c4: a0 00 00     ??mxd??? e .....                 ldy     #$0000
+0045c7 fe/f3c7: 20 5b f3     n?mxd?Z? e .....                 jsr     LFEF35B
+0045ca fe/f3ca: c9 2f 00     ??mxd??? e .....                 cmp     #$002f
+0045cd fe/f3cd: d0 03        ??mxd??? e .....                 bne     LFEF3D2
+0045cf fe/f3cf: 20 5b f3     ??mxd?Z? e .....                 jsr     LFEF35B
+0045d2 fe/f3d2: a5 00        ??mxd??? e ....> LFEF3D2         lda     $00
+0045d4 fe/f3d4: c9 01 00     ??mxd??? e .....                 cmp     #$0001
+0045d7 fe/f3d7: c6 00        ??mxd??? e .....                 dec     $00
+0045d9 fe/f3d9: b0 06        ??mxd??? e .....                 bcs     LFEF3E1
+0045db fe/f3db: e2 20        ??mxd??c e .....                 sep     #$20
                                                               .rwid   shortm
+0045dd fe/f3dd: c6 02        ??Mxd??c e .....                 dec     DPCOP_Y+1
+0045df fe/f3df: c2 20        ??Mxd??c e .....                 rep     #$20
                                                               .rwid   longm
+0045e1 fe/f3e1: 7a           ??mxd??? e ....> LFEF3E1         ply
+0045e2 fe/f3e2: fa           ??mxd??? e .....                 plx
+0045e3 fe/f3e3: a7 00        ??mxd??? e .....                 lda     [$00]
+0045e5 fe/f3e5: 29 ff 00     ??mxd??? e .....                 and     #$00ff
+0045e8 fe/f3e8: c9 21 00     n?mxd??? e .....                 cmp     #$0021
+0045eb fe/f3eb: b0 24        ??mxd??? e .....                 bcs     LFEF411
+0045ed fe/f3ed: 68           ??mxd??c e .....                 pla
+0045ee fe/f3ee: ab           ??mxd??c e .....                 plb
+0045ef fe/f3ef: 8b           ??mxd??c e .....                 phb
+0045f0 fe/f3f0: 48           ??mxd??c e .....                 pha
+0045f1 fe/f3f1: 4b           ??mxd??c e .....                 phk
+0045f2 fe/f3f2: f4 0c f4     ??mxd??c e .....                 pea     LFEF40C & $ffff
+0045f5 fe/f3f5: 8b           ??mxd??c e .....                 phb
+0045f6 fe/f3f6: 48           ??mxd??c e .....                 pha
+0045f7 fe/f3f7: 4b           ??mxd??c e .....                 phk
+0045f8 fe/f3f8: 20 b7 f2     ??mxd??c e .....                 jsr     LFEF2B7
+0045fb fe/f3fb: b0 46        ??mxd??? e .....                 bcs     @plaplberrCommandError
+0045fd fe/f3fd: aa           ??mxd??c e .....                 tax
+0045fe fe/f3fe: e2 20        ??mxd??c e .....                 sep     #$20
                                                               .rwid   shortm
+004600 fe/f400: a9 00        ??Mxd??c e .....                 lda     #$00
+004602 fe/f402: 83 03        n?Mxd?Zc e .....                 sta     $03,S
+004604 fe/f404: c2 20        n?Mxd?Zc e .....                 rep     #$20
                                                               .rwid   longm
+004606 fe/f406: 68           n?mxd?Zc e .....                 pla
+004607 fe/f407: da           ??mxd??c e .....                 phx
+004608 fe/f408: a2 00 00     ??mxd??c e .....                 ldx     #$0000
+00460b fe/f40b: 08           n?mxd?Zc e .....                 php
+00460c fe/f40c: 40           n?mxd?Zc e ...#. LFEF40C         rti

                                                               .rwid   shortm,shortx
+00460d fe/f40d: c2 30        ??MXd??? e @T...                 rep     #$30
                                                               .rwid   longm,longx
+00460f fe/f40f: 80 48        ??mxd??? e ...#.                 bra     LFEF459

+004611 fe/f411: 20 75 f4     ??mxd??C e ....> LFEF411         jsr     LFEF475
+004614 fe/f414: e2 40        ??mxd??? e ....> @retSev         sep     #$40
+004616 fe/f416: 80 42        ?Vmxd??? e ...#.                 bra     @popsandret

+004618 fe/f418: 02 26        ??mxd??C e ....> @reterrModNotFound cop  COP_26_OPBHA
+00461a fe/f41a: 4d 6f 64 75+            .T...                 .zstr   “Module not found”
+00462b fe/f42b: 80 28        ??mxd??C e ...#.                 bra     @xeq1retsec

+00462d fe/f42d: 02 26        ??mxd?Zc e ....> @reterrAmbiuousCommand cop COP_26_OPBHA
+00462f fe/f42f: 41 6d 62 69+            .T...                 .zstr   “Ambiguous command”
+004641 fe/f441: 80 12        ??mxd?Zc e ...#.                 bra     @xeq1retsec

+004643 fe/f443: 68           ??mxd??C e ....> @plaplberrCommandError pla
+004644 fe/f444: ab           ??mxd??C e .....                 plb
+004645 fe/f445: 02 26        ??mxd??? e ....> @reterrCommandError cop COP_26_OPBHA
+004647 fe/f447: 43 6f 6d 6d+            .T...                 .zstr   “Command error”
+004655 fe/f455: a2 01 00     ??mxd??? e ....> @xeq1retsec     ldx     #$0001
+004658 fe/f458: 38           n?mxd?z? e .....                 sec
+004659 fe/f459: b8           ??mxd??? e ....> LFEF459         clv
+00465a fe/f45a: 2b           ??mxd??? e ....> @popsandret     pld
+00465b fe/f45b: 2b           ??mxd??? e .....                 pld
+00465c fe/f45c: 2b           ??mxd??? e .....                 pld
+00465d fe/f45d: 2b           ??mxd??? e .....                 pld
+00465e fe/f45e: 90 0a        ??mxd??? e .....                 bcc     @retClcSev
+004660 fe/f460: 50 04        ??mxd??C e .....                 bvc     @retsecclv
+004662 fe/f462: 28           ?Vmxd??C e .....                 plp
+004663 fe/f463: e2 41        ??mx???? e .....                 sep     #$41
+004665 fe/f465: 6b           ?Vmx???C e ...#.                 rtl

+004666 fe/f466: 28           ?vmxd??C e ....> @retsecclv      plp
+004667 fe/f467: 38           ??mx???? e .....                 sec
+004668 fe/f468: b8           ??mx???C e .....                 clv
+004669 fe/f469: 6b           ?vmx???C e ...#.                 rtl

+00466a fe/f46a: 50 05        ??mxd??c e ....> @retClcSev      bvc     @retClcClv
+00466c fe/f46c: 28           ?Vmxd??c e .....                 plp
+00466d fe/f46d: 18           n?mxd?Zc e .....                 clc
+00466e fe/f46e: e2 40        n?mxd?Zc e .....                 sep     #$40
+004670 fe/f470: 6b           nVmxd?Zc e ...#.                 rtl

+004671 fe/f471: 28           ?vmxd??c e ....> @retClcClv      plp
+004672 fe/f472: 18           n?mxd?Zc e .....                 clc
+004673 fe/f473: b8           n?mxd?Zc e .....                 clv
+004674 fe/f474: 6b           nvmxd?Zc e ...#.                 rtl

+004675 fe/f475: a5 03        ??mxd??? e ....> LFEF475         lda     DPCOP_X
+004677 fe/f477: 85 00        ??mxd??? e .....                 sta     $00
+004679 fe/f479: e2 20        ??mxd??? e .....                 sep     #$20
                                                               .rwid   shortm
+00467b fe/f47b: a5 05        ??Mxd??? e .....                 lda     DPCOP_AH
+00467d fe/f47d: 85 02        ??Mxd??? e .....                 sta     DPCOP_Y+1
+00467f fe/f47f: c2 20        ??Mxd??? e .....                 rep     #$20
                                                               .rwid   longm
+004681 fe/f481: 60           ??mxd??? e ...#.                 rts

+004682 fe/f482: 0b           ??mxd??? e ....> findModuleByAddress phd
+004683 fe/f483: 0b           ??mxd??? e .....                 phd
+004684 fe/f484: 0b           ??mxd??? e .....                 phd
+004685 fe/f485: 8b           ??mxd??? e .....                 phb
+004686 fe/f486: 8b           ??mxd??? e .....                 phb
+004687 fe/f487: 48           ??mxd??? e .....                 pha
+004688 fe/f488: 8b           ??mxd??? e .....                 phb
+004689 fe/f489: 48           ??mxd??? e .....                 pha
+00468a fe/f48a: 3b           ??mxd??? e .....                 tsc
+00468b fe/f48b: 1a           ??mxd??? e .....                 inc     A
+00468c fe/f48c: 5b           ??mxd??? e .....                 tcd
+00468d fe/f48d: a2 0e fe     ??mxd??? e .....                 ldx     #$fe0e
                                                               .rwid   shortm
+004690 fe/f490: c2 20        ???xd??? e ....> LFEF490         rep     #$20
                                                               .rwid   longm
+004692 fe/f492: bf 00 00 00  ??mxd??? e .....                 ldal    f:$000000,x
+004696 fe/f496: a2 00 00     ??mxd??? e .....                 ldx     #$0000
+004699 fe/f499: c9 0e fe     n?mxd?Z? e .....                 cmp     #$fe0e
+00469c fe/f49c: f0 38        ??mxd??? e .....                 beq     LFEF4D6
+00469e fe/f49e: aa           ??mxd?z? e .....                 tax
+00469f fe/f49f: 4b           ??mxd??? e .....                 phk
+0046a0 fe/f4a0: 20 b7 f2     ??mxd??? e .....                 jsr     LFEF2B7
+0046a3 fe/f4a3: e2 20        ??mxd??? e .....                 sep     #$20
                                                               .rwid   shortm
+0046a5 fe/f4a5: 38           ??Mxd??? e .....                 sec
+0046a6 fe/f4a6: a5 03        ??Mxd??C e .....                 lda     DPCOP_X
+0046a8 fe/f4a8: e5 00        ??Mxd??C e .....                 sbc     $00
+0046aa fe/f4aa: 85 07        ??Mxd??? e .....                 sta     DPCOP_B
+0046ac fe/f4ac: a5 04        ??Mxd??? e .....                 lda     DPCOP_X+1
+0046ae fe/f4ae: e5 01        ??Mxd??? e .....                 sbc     DPCOP_Y
+0046b0 fe/f4b0: 85 08        ??Mxd??? e .....                 sta     DPCOP_DP
+0046b2 fe/f4b2: a5 05        ??Mxd??? e .....                 lda     DPCOP_AH
+0046b4 fe/f4b4: e5 02        ??Mxd??? e .....                 sbc     DPCOP_Y+1
+0046b6 fe/f4b6: 85 09        ??Mxd??? e .....                 sta     DPCOP_DP+1
+0046b8 fe/f4b8: 90 d6        ??Mxd??? e .....                 bcc     LFEF490
+0046ba fe/f4ba: a0 03 00     ??Mxd??C e .....                 ldy     #$0003
+0046bd fe/f4bd: b7 00        n?Mxd?zC e .....                 lda     [$00],y
+0046bf fe/f4bf: e5 07        ??Mxd??C e .....                 sbc     DPCOP_B
+0046c1 fe/f4c1: c8           ??Mxd??? e .....                 iny
+0046c2 fe/f4c2: b7 00        ??Mxd??? e .....                 lda     [$00],y
+0046c4 fe/f4c4: e5 08        ??Mxd??? e .....                 sbc     DPCOP_DP
+0046c6 fe/f4c6: c8           ??Mxd??? e .....                 iny
+0046c7 fe/f4c7: b7 00        ??Mxd??? e .....                 lda     [$00],y
+0046c9 fe/f4c9: e5 09        ??Mxd??? e .....                 sbc     DPCOP_DP+1
+0046cb fe/f4cb: 90 c3        ??Mxd??? e .....                 bcc     LFEF490
+0046cd fe/f4cd: c2 20        ??Mxd??C e .....                 rep     #$20
                                                               .rwid   longm
+0046cf fe/f4cf: a0 0e 00     ??mxd??C e .....                 ldy     #$000e
+0046d2 fe/f4d2: 20 43 f3     n?mxd?zC e .....                 jsr     LFEF343
+0046d5 fe/f4d5: 18           ??mxd??? e .....                 clc
+0046d6 fe/f4d6: 68           ??mxd??? e ....> LFEF4D6         pla
+0046d7 fe/f4d7: ab           ??mxd??? e .....                 plb
+0046d8 fe/f4d8: 2b           ??mxd??? e .....                 pld
+0046d9 fe/f4d9: 2b           ??mxd??? e .....                 pld
+0046da fe/f4da: 2b           ??mxd??? e .....                 pld
+0046db fe/f4db: 2b           ??mxd??? e .....                 pld
+0046dc fe/f4dc: 2b           ??mxd??? e .....                 pld
+0046dd fe/f4dd: 6b           ??mxd??? e ...#.                 rtl

+0046de fe/f4de: 29 ff 00     ??mxd??? e ....> LFEF4DE         and     #$00ff
+0046e1 fe/f4e1: 48           n?mxd??? e .....                 pha
+0046e2 fe/f4e2: a3 05        n?mxd??? e .....                 lda     $05,S
+0046e4 fe/f4e4: c9 01 00     ??mxd??? e .....                 cmp     #$0001
+0046e7 fe/f4e7: 68           ??mxd??? e .....                 pla
+0046e8 fe/f4e8: 90 0d        ??mxd??? e .....                 bcc     checkValidModnameChar
+0046ea fe/f4ea: c9 00 00     ??mxd??C e .....                 cmp     #$0000
+0046ed fe/f4ed: f0 06        ??mxd??? e .....                 beq     LFEF4F5
+0046ef fe/f4ef: c3 03        ??mxd?z? e .....                 cmp     $03,S
+0046f1 fe/f4f1: f0 02        ??mxd??? e .....                 beq     LFEF4F5
+0046f3 fe/f4f3: 18           ??mxd?z? e .....                 clc
+0046f4 fe/f4f4: 60           ??mxd?zc e ...#.                 rts

+0046f5 fe/f4f5: 38           ??mxd?Z? e ....> LFEF4F5         sec
+0046f6 fe/f4f6: 60           ??mxd?ZC e ...#.                 rts

                                               ; Check if the character passed in A is in '!', '.', '0'..'9', 'A'..'Z',
                                               ; 'a'..'z'
                                                               .rwid   shortm
+0046f7 fe/f4f7: 08           ???xd??? e ....> checkValidModnameChar php
+0046f8 fe/f4f8: c2 20        ???xd??? e .....                 rep     #$20
                                                               .rwid   longm
+0046fa fe/f4fa: 29 ff 00     ??mxd??? e .....                 and     #$00ff
+0046fd fe/f4fd: c9 7b 00     n?mxd??? e .....                 cmp     #‘{’
+004700 fe/f500: b0 23        ??mxd??? e .....                 bcs     @retsec
+004702 fe/f502: c9 61 00     ??mxd??c e .....                 cmp     #‘a’
+004705 fe/f505: b0 21        ??mxd??? e .....                 bcs     @retCLC
+004707 fe/f507: c9 5b 00     ??mxd??c e .....                 cmp     #‘[’
+00470a fe/f50a: b0 19        ??mxd??? e .....                 bcs     @retsec
+00470c fe/f50c: c9 41 00     ??mxd??c e .....                 cmp     #‘A’
+00470f fe/f50f: b0 17        ??mxd??? e .....                 bcs     @retCLC
+004711 fe/f511: c9 3a 00     ??mxd??c e .....                 cmp     #‘:’
+004714 fe/f514: b0 0f        ??mxd??? e .....                 bcs     @retsec
+004716 fe/f516: c9 30 00     ??mxd??c e .....                 cmp     #‘0’
+004719 fe/f519: b0 0d        ??mxd??? e .....                 bcs     @retCLC
+00471b fe/f51b: c9 2e 00     ??mxd??c e .....                 cmp     #‘.’
+00471e fe/f51e: f0 08        ??mxd??? e .....                 beq     @retCLC
+004720 fe/f520: c9 21 00     ??mxd?z? e .....                 cmp     #‘!’
+004723 fe/f523: f0 03        ??mxd??? e .....                 beq     @retCLC
+004725 fe/f525: 28           ??mxd??? e ....> @retsec         plp
                                                               .rwid   shortm
+004726 fe/f526: 38           ???xd??? e .....                 sec
+004727 fe/f527: 60           ???xd??C e ...#.                 rts

                                                               .rwid   longm
+004728 fe/f528: 28           ??mxd??? e ....> @retCLC         plp
                                                               .rwid   shortm
+004729 fe/f529: 18           ???xd??? e .....                 clc
+00472a fe/f52a: 60           ???xd??c e ...#.                 rts

                                                               .rwid   shortx
+00472b fe/f52b: 48           ????d??? e ....> doErrorDepndOnX pha
+00472c fe/f52c: 8a           ????d??? e .....                 txa
+00472d fe/f52d: 4a           ????d??? e .....                 lsr     A
+00472e fe/f52e: b0 0b        n???d??? e .....                 bcs     @Sk
+004730 fe/f530: 68           n???d??c e .....                 pla
+004731 fe/f531: 02 26        ????d??c e .....                 cop     COP_26_OPBHA
+004733 fe/f533: 45 72 72 6f+            .T...                 .zstr   “Error”
+004739 fe/f539: 38           ????d??c e .....                 sec
+00473a fe/f53a: 6b           ????d??C e ...#.                 rtl

+00473b fe/f53b: 68           n???d??C e ....> @Sk             pla
+00473c fe/f53c: 38           ????d??C e .....                 sec
+00473d fe/f53d: 6b           ????d??C e ...#.                 rtl

                                               ********************************************************************************
                                               * Given a Handle in Y returns details - QRY - what details                     *
                                               *                                                                              *
                                               * On Entry:                                                                    *
                                               *    Y   A file handle                                                         *
                                               *                                                                              *
                                               * On Exit:                                                                     *
                                               *    C=0 The file handle was found                                             *
                                               *    V=1 if the file handle was an odd number QRY - access device control      *
                                               * channel                                                                      *
                                               *    X   pointer to filing system module entry point in B0                     *
                                               *    Y   file handle with bottom bit cleared                                   *
                                               *                                                                              *
                                               * or C=1 The file handle was not found of not of type file                     *
                                               *    X=1                                                                       *
                                               *    BHA An error string                                                       *
                                               ********************************************************************************
                                                               .rwid   longm,longx
+00473e fe/f53e: 48           ??mxd??? e ....> getFileHandleInfo pha                     ;save through routine (unless there's an error)
+00473f fe/f53f: 98           ??mxd??? e .....                 tya                       ;get bottom bit of Y into V and clear
+004740 fe/f540: 4a           ??mxd??? e .....                 lsr     A
+004741 fe/f541: 08           n?mxd??? e .....                 php
+004742 fe/f542: 0a           n?mxd??? e .....                 asl     A
+004743 fe/f543: 28           ??mxd??? e .....                 plp
+004744 fe/f544: a8           n?mxd??? e .....                 tay
+004745 fe/f545: aa           ??mxd??? e .....                 tax
+004746 fe/f546: b8           ??mxd??? e .....                 clv
+004747 fe/f547: 90 02        ?vmxd??? e .....                 bcc     @nosev
+004749 fe/f549: e2 40        ?vmxd??C e .....                 sep     #$40              ;set V here if an odd handle was used - indicates request to access device control channel ?QRY?
+00474b fe/f54b: e0 00 01     ??mxd??? e ....> @nosev          cpx     #$0100            ;check handle validity
+00474e fe/f54e: 90 14        ??mxd??? e .....                 bcc     @err_badHandle
+004750 fe/f550: bf 0b 00 00  ??mxd??C e .....                 ldal    f:HND_off_B_type,x ;get handle block type
+004754 fe/f554: 29 ff 00     ??mxd??C e .....                 and     #$00ff
+004757 fe/f557: c9 10 00     n?mxd??C e .....                 cmp     #HND_type_10_CBHN ;check it's a file
+00475a fe/f55a: d0 27        ??mxd??? e .....                 bne     @err_unknown_handle
+00475c fe/f55c: bf 03 00 00  ??mxd?Z? e .....                 ldal    f:$000003,x       ;get B0 FS entry trampoline address
+004760 fe/f560: aa           ??mxd??? e .....                 tax                       ;return in X
+004761 fe/f561: 68           ??mxd??? e .....                 pla                       ;restore A
+004762 fe/f562: 18           ??mxd??? e .....                 clc
+004763 fe/f563: 6b           ??mxd??c e ...#.                 rtl

+004764 fe/f564: 02 26        ??mxd??c e ....> @err_badHandle  cop     COP_26_OPBHA
+004766 fe/f566: 42 61 64 20+            .T...                 .zstr   “Bad handle (top byte zero)”
+004781 fe/f581: 80 19        ??mxd??c e ...#.                 bra     @popXeq1retsec

+004783 fe/f583: 02 26        ??mxd?z? e ....> @err_unknown_handle cop COP_26_OPBHA
+004785 fe/f585: 42 61 64 20+            .T...                 .zstr   “Bad handle (not known)”
+00479c fe/f59c: fa           ??mxd??? e ....> @popXeq1retsec  plx
+00479d fe/f59d: a2 01 00     ??mxd??? e .....                 ldx     #$0001
+0047a0 fe/f5a0: 38           n?mxd?z? e .....                 sec
+0047a1 fe/f5a1: 6b           n?mxd?zC e ...#.                 rtl

+0047a2 fe/f5a2: 4b           ??mxd??? e ....> doBGET          phk
+0047a3 fe/f5a3: 20 3e f5     ??mxd??? e .....                 jsr     getFileHandleInfo
+0047a6 fe/f5a6: b0 12        ??mxd??? e .....                 bcs     @ret
+0047a8 fe/f5a8: 4b           ??mxd??c e .....                 phk
+0047a9 fe/f5a9: 62 b7 08     ??mxd??c e .....                 per     LFEFE64_anRTL-1
+0047ac fe/f5ac: f4 00 00     ??mxd??c e .....                 pea     $0000
                                                               .dbank  $00
+0047af fe/f5af: ab           ??mxd??c e .....                 plb
+0047b0 fe/f5b0: ca           ??mxd??c e .....                 dex
+0047b1 fe/f5b1: da           ??mxd??c e .....                 phx                       ;push the module jump pointer - 1 suitable for the RTL
+0047b2 fe/f5b2: a2 16 00     ??mxd??c e .....                 ldx     #__DVBGT
+0047b5 fe/f5b5: 50 03        n?mxd?zc e .....                 bvc     @ret
+0047b7 fe/f5b7: a2 1a 00     nVmxd?zc e .....                 ldx     #__DVCGT          ;control channel get
+0047ba fe/f5ba: 6b           ??mxd??? e ...#> @ret            rtl

+0047bb fe/f5bb: 4b           ??mxd??? e ....> doBPUT          phk
+0047bc fe/f5bc: 20 3e f5     ??mxd??? e .....                 jsr     getFileHandleInfo
+0047bf fe/f5bf: b0 12        ??mxd??? e .....                 bcs     @ret
+0047c1 fe/f5c1: 4b           ??mxd??c e .....                 phk
+0047c2 fe/f5c2: 62 9e 08     ??mxd??c e .....                 per     LFEFE64_anRTL-1   ;the module will return to here - QRY check this out, seems a bit convoluted!
+0047c5 fe/f5c5: f4 00 00     ??mxd??c e .....                 pea     $0000
+0047c8 fe/f5c8: ab           ??mxd??c e .....                 plb
+0047c9 fe/f5c9: ca           ??mxd??c e .....                 dex
+0047ca fe/f5ca: da           ??mxd??c e .....                 phx
+0047cb fe/f5cb: a2 18 00     ??mxd??c e .....                 ldx     #__DVBPT          ;BPUT to device
+0047ce fe/f5ce: 50 03        n?mxd?zc e .....                 bvc     @ret
+0047d0 fe/f5d0: a2 1c 00     nVmxd?zc e .....                 ldx     #__DVCPT          ;BPUT to device control channel
+0047d3 fe/f5d3: 6b           ??mxd??? e ...#> @ret            rtl

+0047d4 fe/f5d4: 4b           ??mxd??? e ....> CheckEOF        phk
+0047d5 fe/f5d5: 20 3e f5     ??mxd??? e .....                 jsr     getFileHandleInfo
+0047d8 fe/f5d8: b0 0d        ??mxd??? e .....                 bcs     LFEF5E7
+0047da fe/f5da: 4b           ??mxd??c e .....                 phk
+0047db fe/f5db: 62 85 08     ??mxd??c e .....                 per     LFEFE64_anRTL-1
+0047de fe/f5de: f4 00 00     ??mxd??c e .....                 pea     $0000
+0047e1 fe/f5e1: ab           ??mxd??c e .....                 plb
+0047e2 fe/f5e2: ca           ??mxd??c e .....                 dex
+0047e3 fe/f5e3: da           ??mxd??c e .....                 phx
+0047e4 fe/f5e4: a2 1e 00     ??mxd??c e .....                 ldx     #__DVEOF
+0047e7 fe/f5e7: 6b           ??mxd??? e ...#> LFEF5E7         rtl

                                               ; QRY - dead code?
                                                               .rwid   shortm,shortx
+0047e8 fe/f5e8: 6b           ??MXd??? e @T.#.                 rtl

                                               ; QRY - dead code?
                                                               .rwid   longm,longx
+0047e9 fe/f5e9: 48           ??mxd??? e @T...                 pha
+0047ea fe/f5ea: 98           ??mxd??? e .....                 tya
+0047eb fe/f5eb: 29 ff 00     ??mxd??? e .....                 and     #$00ff
+0047ee fe/f5ee: a8           n?mxd??? e .....                 tay
+0047ef fe/f5ef: 68           ??mxd??? e .....                 pla
+0047f0 fe/f5f0: 5a           ??mxd??? e .....                 phy
+0047f1 fe/f5f1: 7a           ??mxd??? e .....                 ply
+0047f2 fe/f5f2: d0 0b        ??mxd??? e .....                 bne     doOPOPN_openFile
+0047f4 fe/f5f4: 48           ??mxd?Z? e .....                 pha
+0047f5 fe/f5f5: 68           ??mxd?Z? e .....                 pla
+0047f6 fe/f5f6: d0 03        ??mxd??? e .....                 bne     @sk
+0047f8 fe/f5f8: 82 bf 01     ??mxd?Z? e ...#.                 brl     closeAllFiles

+0047fb fe/f5fb: a8           ??mxd?z? e ....> @sk             tay
+0047fc fe/f5fc: 82 a1 01     ??mxd??? e ...#.                 brl     closeFile

                                               ********************************************************************************
                                               * This is the main file open entry                                             *
                                               *                                                                              *
                                               * for entry / exit see OPOPN                                                   *
                                               ********************************************************************************
+0047ff fe/f5ff: 0b           ??mxd??? e ....> doOPOPN_openFile phd
+004800 fe/f600: ba           ??mxd??? e .....                 tsx
+004801 fe/f601: 0b           ??mxd??? e .....                 phd
+004802 fe/f602: 0b           ??mxd??? e .....                 phd
+004803 fe/f603: f4 00 00     ??mxd??? e .....                 pea     $0000
+004806 fe/f606: 0b           ??mxd??? e .....                 phd
+004807 fe/f607: 0b           ??mxd??? e .....                 phd
+004808 fe/f608: 0b           ??mxd??? e .....                 phd
+004809 fe/f609: 0b           ??mxd??? e .....                 phd
+00480a fe/f60a: 5a           ??mxd??? e .....                 phy
+00480b fe/f60b: 8b           ??mxd??? e .....                 phb
+00480c fe/f60c: 48           ??mxd??? e .....                 pha
+00480d fe/f60d: da           ??mxd??? e .....                 phx
+00480e fe/f60e: ba           ??mxd??? e .....                 tsx
+00480f fe/f60f: da           ??mxd??? e .....                 phx
+004810 fe/f610: 2b           ??mxd??? e .....                 pld
+004811 fe/f611: 5a           ??mxd??? e .....                 phy
                                               ; stack   DP
                                               ; 
                                               ; +17     +16 DP (stack point A just below here)
                                               ; +16     +14 DP
                                               ; +14     +12 DP
                                               ; +12     +10 "$0000"
                                               ; +10     +E  DP
                                               ; +E      +C  DP
                                               ; +C      +A  DP
                                               ; +A      +8  DP
                                               ; +7      +6  Y (open mode)
                                               ; +5      +3  BHA filename pointer
                                               ; +3      +1  stack pointer (A) above
                                               ; +1       -  Y (open mode)
+004812 fe/f612: 4b           ??mxd??? e .....                 phk
+004813 fe/f613: 20 28 f8     ??mxd??? e .....                 jsr     getFSTrampolineFromprefix
+004816 fe/f616: 84 14        ??mxd??? e .....                 sty     $14               ;store module type at DP,$14
+004818 fe/f618: 7a           ??mxd??? e .....                 ply                       ;restore Y
+004819 fe/f619: b0 57        ??mxd??? e .....                 bcs     @errModuleNotFoundRestoreEnv
+00481b fe/f61b: 85 08        ??mxd??c e .....                 sta     $08
+00481d fe/f61d: 8b           ??mxd??c e .....                 phb
+00481e fe/f61e: 8b           ??mxd??c e .....                 phb
+00481f fe/f61f: 68           ??mxd??c e .....                 pla
+004820 fe/f620: 85 0a        ??mxd??c e .....                 sta     $0a               ;store updated BHA (after :) at 8
+004822 fe/f622: ca           ??mxd??c e .....                 dex
+004823 fe/f623: 86 0c        ??mxd??c e .....                 stx     DPCOP_PC+1        ;store module trampoline-1 (RTS entry) at C
                                               ; stack   DP
                                               ; 
                                               ; +16     +16 DP (stack point A just below here)
                                               ; +14     +14 FS Module code type bytes
                                               ; +12     +12 DP
                                               ; +10     +10 "$0000"
                                               ; +E      +E  DP
                                               ; +C      +C  FS trampoline address
                                               ; +B      +B  B of below
                                               ; +8      +8  BHA of remainder of filename
                                               ; +6      +6  Y (open mode)
                                               ; +3      +3  BHA filename pointer
                                               ; +1      +1  stack pointer (A) above
+004825 fe/f625: 4b           ??mxd??c e .....                 phk
+004826 fe/f626: 62 6b 00     ??mxd??c e .....                 per     doOPOPN_continue-1
+004829 fe/f629: f4 00 00     ??mxd??c e .....                 pea     $0000
                                                               .dbank  $00
+00482c fe/f62c: ab           ??mxd??c e .....                 plb
+00482d fe/f62d: da           ??mxd??c e .....                 phx
+00482e fe/f62e: 98           ??mxd??c e .....                 tya
+00482f fe/f62f: 29 c0 00     ??mxd??c e .....                 and     #$00c0
+004832 fe/f632: a8           n?mxd??c e .....                 tay
+004833 fe/f633: a5 08        ??mxd??c e .....                 lda     $08
+004835 fe/f635: d4 0a        ??mxd??c e .....                 pei     ($0a)
+004837 fe/f637: ab           ??mxd??c e .....                 plb
+004838 fe/f638: ab           ??mxd??c e .....                 plb
                                               ; stack   DP
                                               ; 
                                               ; +1C     +16 DP (stack point A just below here)
                                               ; +1A     +14 FS Module code type bytes
                                               ; +18     +12 DP
                                               ; +16     +10 "$0000"
                                               ; +14     +E  DP
                                               ; +12     +C  FS trampoline address -1
                                               ; +F      +B  B of below
                                               ; +E      +8  BHA of remainder of filename
                                               ; +C      +6  Y (open mode)
                                               ; +9      +3  BHA filename pointer
                                               ; +7      +1  stack pointer (A) above
                                               ; +4          K,F695 address of continuation?
                                               ; +1          00,FS trampoline address -1 (ready to rtl to)
                                               ;             
                                               ; 
+004839 fe/f639: a2 12 00     ??mxd??c e .....                 ldx     #__DVOPN
+00483c fe/f63c: 6b           n?mxd?zc e ...#.                 rtl                       ;this will chain to FS operation 12 in module pushed above

+00483d fe/f63d: 18           ??mxd??? e ....> @clcRetYinA     clc
+00483e fe/f63e: 80 50        ??mxd??c e ...#.                 bra     @retYinA

+004840 fe/f640: 02 26        ??mxd??c e ....> @opbhaFileClosedByDriver cop COP_26_OPBHA
+004842 fe/f642: 46 69 6c 65+            .T...                 .zstr   “File closed by driver”
+004858 fe/f658: 80 2b        ??mxd??c e ...#.                 bra     @retErrString

+00485a fe/f65a: 02 26        ??mxd??C e ....> @opbhaCouldntConfig cop COP_26_OPBHA
+00485c fe/f65c: 43 6f 75 6c+            .T...                 .zstr   “Could not configure”
+004870 fe/f670: 80 13        ??mxd??C e ...#.                 bra     @retErrString

+004872 fe/f672: 02 26        ??mxd??C e ....> @errModuleNotFoundRestoreEnv cop COP_26_OPBHA
+004874 fe/f674: 4d 6f 64 75+            .T...                 .zstr   “Module not known”
+004885 fe/f685: a2 01 00     ??mxd??? e ....> @retErrString   ldx     #$0001
                                                               .rwid   shortm,shortx
+004888 fe/f688: 9b           ????d??? e ....> @unstackAndError txy
+004889 fe/f689: fa           ????d??? e .....                 plx
+00488a fe/f68a: 9a           ????d??? e .....                 txs
+00488b fe/f68b: 2b           ????d??? e .....                 pld
+00488c fe/f68c: bb           ????d??? e .....                 tyx
+00488d fe/f68d: 82 9b fe     ????d??? e ...#.                 brl     doErrorDepndOnX

                                                               .rwid   longm,longx
+004890 fe/f690: fa           ??mxd??c e ....> @retYinA        plx
+004891 fe/f691: 9a           ??mxd??c e .....                 txs
+004892 fe/f692: 2b           ??mxd??c e .....                 pld
+004893 fe/f693: 98           ??mxd??c e .....                 tya
                                                               .rwid   shortm,shortx
+004894 fe/f694: 6b           ????d??? e @T.#.                 rtl

                                               ; stack   DP
                                               ; 
                                               ; +16     +16 DP (stack point A just below here)
                                               ; +14     +14 FS Module code type bytes
                                               ; +12     +12 DP
                                               ; +10     +10 "$0000"
                                               ; +E      +E  DP
                                               ; +C      +C  FS trampoline address -1
                                               ; +B      +B  B of below
                                               ; +8      +8  BHA of remainder of filename
                                               ; +6      +6  Y (open mode)
                                               ; +3      +3  BHA filename pointer
                                               ; +1      +1  stack pointer (A) above
                                               ; 
                                               ; This code is the return point from the doOPOPN_xxx function above
                                               ; 
                                               ; Assume DP preserved across the FS call
                                                               .rwid   longm,longx
+004895 fe/f695: b0 f1        ??mxd??? e @T... doOPOPN_continue bcs    @unstackAndError
+004897 fe/f697: 84 0e        ??mxd??c e .....                 sty     $0e               ;store handle
+004899 fe/f699: a9 20 00     ??mxd??c e .....                 lda     #$0020            ;Bypass device configuration
+00489c fe/f69c: 24 06        n?mxd?zc e .....                 bit     $06               ;check Y passed in to OPOPN
+00489e fe/f69e: d0 0c        ??mxd??c e .....                 bne     @skipConfig
+0048a0 fe/f6a0: a5 14        ??mxd?Zc e .....                 lda     $14               ;get FS code type bytes
+0048a2 fe/f6a2: 29 20 00     ??mxd??c e .....                 and     #MHCFS            ;is a filing system?
+0048a5 fe/f6a5: d0 96        n?mxd??c e .....                 bne     @clcRetYinA       ;yes return the handle...
+0048a7 fe/f6a7: 20 fa f6     n?mxd?Zc e .....                 jsr     configureDevice   ;TODO: what goes on in here - looks to open a secondary device or something?!
+0048aa fe/f6aa: b0 ae        ??mxd??? e .....                 bcs     @opbhaCouldntConfig
                                               ; stack   DP
                                               ; 
                                               ; +16     +16 DP (stack point A just below here)
                                               ; +14     +14 FS Module code type bytes
                                               ; +12     +12 config handle - the configuration file handle
                                               ; +10     +10 "$0000" - if configure device called used as a pointer 
                                               ;             to "RAM:!C.<DEV>"
                                               ; +E      +E  File handle
                                               ; +C      +C  FS trampoline address -1
                                               ; +B      +B  B of below
                                               ; +8      +8  BHA of remainder of filename
                                               ; +6      +6  Y (open mode)
                                               ; +3      +3  BHA filename pointer
                                               ; +1      +1  stack pointer (A) above
                                               ; 
                                               ; This code is the return point from the doOPOPN_xxx function above
                                               ; 
                                               ; Assume DP preserved across the FS call
+0048ac fe/f6ac: d4 0a        ??mxd??c e ....> @skipConfig     pei     ($0a)
+0048ae fe/f6ae: ab           ??mxd??c e .....                 plb
+0048af fe/f6af: ab           ??mxd??c e .....                 plb
+0048b0 fe/f6b0: a5 08        ??mxd??c e .....                 lda     $08               ;get back BHA
+0048b2 fe/f6b2: 4b           ??mxd??c e .....                 phk
+0048b3 fe/f6b3: 20 04 f8     ??mxd??c e .....                 jsr     skipFileNameAndTrailingSpaces ;skip to next item after filename
+0048b6 fe/f6b6: 85 08        ??mxd??? e .....                 sta     $08
+0048b8 fe/f6b8: 8b           ??mxd??? e .....                 phb
+0048b9 fe/f6b9: 8b           ??mxd??? e .....                 phb
+0048ba fe/f6ba: 68           ??mxd??? e .....                 pla
+0048bb fe/f6bb: 85 0a        ??mxd??? e .....                 sta     $0a               ;store updated BHA at DP,8
+0048bd fe/f6bd: b0 1d        ??mxd??? e .....                 bcs     @atendofstring
                                               ; send characters after filename as control bytes
                                               ; multiple items separated by ";"
+0048bf fe/f6bf: a0 00 00     ??mxd??c e .....                 ldy     #$0000
+0048c2 fe/f6c2: b7 08        ??mxd??? e ....> @lp2            lda     [$08],y
+0048c4 fe/f6c4: 29 ff 00     ??mxd??? e .....                 and     #$00ff
+0048c7 fe/f6c7: c9 20 00     n?mxd??? e .....                 cmp     #‘ ’
+0048ca fe/f6ca: 90 10        ??mxd??? e .....                 bcc     @atendofstring
+0048cc fe/f6cc: c9 3b 00     ??mxd??C e .....                 cmp     #‘;’
+0048cf fe/f6cf: d0 03        ??mxd??? e .....                 bne     LFEF6D4
+0048d1 fe/f6d1: a9 0d 00     ??mxd?Z? e .....                 lda     #$000d
+0048d4 fe/f6d4: 5a           ??mxd?z? e ....> LFEF6D4         phy
+0048d5 fe/f6d5: 20 88 f7     ??mxd?z? e .....                 jsr     call_DVCPT
+0048d8 fe/f6d8: 7a           ??mxd??? e .....                 ply
+0048d9 fe/f6d9: c8           ??mxd??? e .....                 iny
+0048da fe/f6da: 80 e6        ??mxd??? e ...#.                 bra     @lp2

+0048dc fe/f6dc: 20 85 f7     ??mxd??? e ....> @atendofstring  jsr     call_DVCPT_0D
+0048df fe/f6df: a9 3b 00     ??mxd??? e .....                 lda     #‘;’
+0048e2 fe/f6e2: 20 88 f7     n?mxd?z? e .....                 jsr     call_DVCPT
+0048e5 fe/f6e5: 20 85 f7     ??mxd??? e .....                 jsr     call_DVCPT_0D
+0048e8 fe/f6e8: 20 8d f7     ??mxd??? e .....                 jsr     call_DVCGT
+0048eb fe/f6eb: 90 03        ??mxd??? e .....                 bcc     @closedbyDrv1
+0048ed fe/f6ed: 82 4d ff     ??mxd??C e ...#.                 brl     @clcRetYinA

+0048f0 fe/f6f0: 02 45        ??mxd??c e ....> @closedbyDrv1   cop     COP_45_OPCLS
+0048f2 fe/f6f2: 90 03        ??mxd??c e ...#.                 bcc     @closedbyDrv2

                                                               .rwid   shortm,shortx
+0048f4 fe/f6f4: 82 91 ff     ??MXd??? e @T.#.                 brl     @unstackAndError

                                                               .rwid   longm,longx
+0048f7 fe/f6f7: 82 46 ff     ??mxd??c e ...#> @closedbyDrv2   brl     @opbhaFileClosedByDriver

                                               ; Allocate a string buffer and construct a string that contains
                                               ; 
                                               ; "RAM:!C.<device name>" 
                                               ; 
                                               ; Use this to open a text file on the RAM disk containing configuration commands
                                               ; for the device being opened. Try to send those commands to the device's
                                               ; control channel to configure it
+0048fa fe/f6fa: 0b           n?mxd?Zc e ....> configureDevice phd
+0048fb fe/f6fb: 02 10        n?mxd?Zc e .....                 cop     COP_10_OPADP
+0048fd fe/f6fd: 12 00                   .T...                 .dd2    $0012             ;size to allocate - 18 bytes
+0048ff fe/f6ff: 2b           n?mxd?Zc e .....                 pld
+004900 fe/f700: b0 78        ??mxd??c e ..!..                 bcs     @freeex
+004902 fe/f702: 85 10        ??mxd??c e .....                 sta     $10               ;store X/pointer at offset 10 (device ?QRY?)
+004904 fe/f704: aa           ??mxd??c e .....                 tax
+004905 fe/f705: a9 52 41     ??mxd??c e .....                 lda     #$4152            ;TODO: encode as zstr "RAM:!C."
+004908 fe/f708: 9f 00 00 00  n?mxd?zc e .....                 stal    f:$000000,x
+00490c fe/f70c: a9 4d 3a     n?mxd?zc e .....                 lda     #$3a4d
+00490f fe/f70f: 9f 02 00 00  n?mxd?zc e .....                 stal    f:$000002,x
+004913 fe/f713: a9 21 43     n?mxd?zc e .....                 lda     #$4321
+004916 fe/f716: 9f 04 00 00  n?mxd?zc e .....                 stal    f:$000004,x
+00491a fe/f71a: a9 2e 00     n?mxd?zc e .....                 lda     #$002e
+00491d fe/f71d: 9f 06 00 00  n?mxd?zc e .....                 stal    f:$000006,x
+004921 fe/f721: a0 00 00     n?mxd?zc e .....                 ldy     #$0000
+004924 fe/f724: b7 03        ??mxd??c e ....> @lp             lda     [$03],y           ;append the filepath before ":" to string above < 12 chars
+004926 fe/f726: e2 20        ??mxd??c e .....                 sep     #$20
                                                               .rwid   shortm
+004928 fe/f728: c9 3a        ??Mxd??c e .....                 cmp     #‘:’
+00492a fe/f72a: d0 02        ??Mxd??? e .....                 bne     @sk0
+00492c fe/f72c: a9 00        ??Mxd?Z? e .....                 lda     #$00
+00492e fe/f72e: 9f 07 00 00  ??Mxd??? e ....> @sk0            stal    f:$000007,x
+004932 fe/f732: c2 20        ??Mxd??? e .....                 rep     #$20
                                                               .rwid   longm
+004934 fe/f734: f0 09        ??mxd??? e .....                 beq     @ok
+004936 fe/f736: e8           ??mxd?z? e .....                 inx
+004937 fe/f737: c8           ??mxd??? e .....                 iny
+004938 fe/f738: c0 0b 00     ??mxd??? e .....                 cpy     #$000b
+00493b fe/f73b: b0 3d        ??mxd??? e .....                 bcs     @freeex
+00493d fe/f73d: 80 e5        ??mxd??c e ...#.                 bra     @lp

+00493f fe/f73f: f4 00 00     ??mxd?Z? e ....> @ok             pea     $0000
+004942 fe/f742: ab           ??mxd?Z? e .....                 plb
                                                               .dbank  $00
+004943 fe/f743: ab           ??mxd??? e .....                 plb
+004944 fe/f744: a5 10        ??mxd??? e .....                 lda     $10               ;get back pointer to device config file name
+004946 fe/f746: a0 60 00     ??mxd??? e .....                 ldy     #$0060
+004949 fe/f749: 4b           n?mxd?z? e .....                 phk
+00494a fe/f74a: 20 ff f5     n?mxd?z? e .....                 jsr     doOPOPN_openFile  ;openDevice and skip configuration
+00494d fe/f74d: b0 2a        ??mxd??? e .....                 bcs     @clcfreeex
+00494f fe/f74f: 84 12        ??mxd??c e .....                 sty     $12               ;store config file handle
+004951 fe/f751: a4 12        ??mxd??? e ....> @cfgloop        ldy     $12               ;get back config file handle
+004953 fe/f753: 02 0a        ??mxd??? e .....                 cop     COP_0A_OPBGT      ;BGET a byte of the config file
+004955 fe/f755: b0 1b        ??mxd??? e .....                 bcs     @configEof
+004957 fe/f757: 29 ff 00     ??mxd??c e .....                 and     #$00ff
+00495a fe/f75a: c9 3b 00     n?mxd??c e .....                 cmp     #‘;’
+00495d fe/f75d: d0 0e        ??mxd??? e .....                 bne     @sendctl
+00495f fe/f75f: 02 0a        ??mxd??? e ....> @skcomment      cop     COP_0A_OPBGT
+004961 fe/f761: b0 0f        ??mxd??? e .....                 bcs     @configEof
+004963 fe/f763: 29 ff 00     ??mxd??c e .....                 and     #$00ff
+004966 fe/f766: c9 0d 00     n?mxd??c e .....                 cmp     #$000d
+004969 fe/f769: d0 f4        ??mxd??? e .....                 bne     @skcomment
+00496b fe/f76b: 80 e4        ??mxd?Z? e ...#.                 bra     @cfgloop

+00496d fe/f76d: 20 88 f7     ??mxd?z? e ....> @sendctl        jsr     call_DVCPT        ;send the control byte to the device
+004970 fe/f770: 80 df        ??mxd??? e ...#.                 bra     @cfgloop

+004972 fe/f772: 4b           ??mxd??C e ....> @configEof      phk
+004973 fe/f773: 20 a0 f7     ??mxd??C e .....                 jsr     closeFile
+004976 fe/f776: 20 85 f7     ??mxd??? e .....                 jsr     call_DVCPT_0D
+004979 fe/f779: 18           ??mxd??? e ....> @clcfreeex      clc
+00497a fe/f77a: 08           ??mxd??? e ....> @freeex         php
+00497b fe/f77b: a5 10        ??mxd??? e .....                 lda     $10
+00497d fe/f77d: f0 04        ??mxd??? e .....                 beq     @skfree
+00497f fe/f77f: 02 1a        ??mxd?z? e .....                 cop     COP_1A_OPFZB
+004981 fe/f781: 64 10        ??mxd?z? e .....                 stz     $10
+004983 fe/f783: 28           ??mxd??? e ....> @skfree         plp
+004984 fe/f784: 60           ??mxd??? e ...#.                 rts

+004985 fe/f785: a9 0d 00     ??mxd??? e ....> call_DVCPT_0D   lda     #$000d
+004988 fe/f788: a2 1c 00     ??mxd?z? e ....> call_DVCPT      ldx     #__DVCPT
+00498b fe/f78b: 80 03        n?mxd?z? e ...#.                 bra     call_DV_atDP_C

+00498d fe/f78d: a2 1a 00     ??mxd??? e ....> call_DVCGT      ldx     #__DVCGT
+004990 fe/f790: 4b           n?mxd?z? e ....> call_DV_atDP_C  phk
+004991 fe/f791: 62 08 00     n?mxd?z? e .....                 per     ldDP0Erts-1
+004994 fe/f794: f4 00 00     n?mxd?z? e .....                 pea     $0000
+004997 fe/f797: ab           n?mxd?z? e .....                 plb
+004998 fe/f798: d4 0c        ??mxd??? e .....                 pei     ($0c)
+00499a fe/f79a: a4 0e        ??mxd??? e .....                 ldy     $0e               ;retrieve file handle
+00499c fe/f79c: 6b           ??mxd??? e ...#.                 rtl

                                                               .rwid   shortm,shortx
+00499d fe/f79d: a4 0e        ??MXd??? e @T... ldDP0Erts       ldy     $0e               ;retrieve file handle
+00499f fe/f79f: 60           ??MXd??? e ...#.                 rts

                                                               .rwid   longm,longx
+0049a0 fe/f7a0: 4b           ??mxd??? e ....> closeFile       phk
+0049a1 fe/f7a1: 20 3e f5     ??mxd??? e .....                 jsr     getFileHandleInfo
+0049a4 fe/f7a4: b0 13        ??mxd??? e .....                 bcs     LFEF7B9
+0049a6 fe/f7a6: 4b           ??mxd??c e .....                 phk
+0049a7 fe/f7a7: 62 b9 06     ??mxd??c e .....                 per     LFEFE64_anRTL-1
+0049aa fe/f7aa: f4 00 00     ??mxd??c e .....                 pea     $0000
+0049ad fe/f7ad: ab           ??mxd??c e .....                 plb
+0049ae fe/f7ae: ca           ??mxd??c e .....                 dex
+0049af fe/f7af: da           ??mxd??c e .....                 phx                       ;TODO - QRY I think this here calls the filing system with op 14
+0049b0 fe/f7b0: a9 00 00     ??mxd??c e .....                 lda     #$0000
+0049b3 fe/f7b3: 50 01        n?mxd?Zc e .....                 bvc     LFEF7B6
+0049b5 fe/f7b5: 1a           nVmxd?Zc e .....                 inc     A
+0049b6 fe/f7b6: a2 14 00     ??mxd??c e ....> LFEF7B6         ldx     #__DVCLS          ;14 - DVCLS - close device/file
+0049b9 fe/f7b9: 6b           ??mxd??? e ...#> LFEF7B9         rtl

+0049ba fe/f7ba: a2 fe fd     ??mxd??? e ....> closeAllFiles   ldx     #B0LST_OPEN_FILES
+0049bd fe/f7bd: da           n?mxd?z? e .....                 phx
+0049be fe/f7be: bf 00 00 00  n?mxd?z? e .....                 ldal    f:$000000,x
+0049c2 fe/f7c2: c3 01        ??mxd??? e ....> @lp             cmp     $01,S             ;TODO: this could be a cmp #B0LST_OPEN_FILES instead and save the phx/plx
+0049c4 fe/f7c4: f0 0f        ??mxd??? e .....                 beq     @endoflist
+0049c6 fe/f7c6: aa           ??mxd?z? e .....                 tax
+0049c7 fe/f7c7: bf 00 00 00  ??mxd??? e .....                 ldal    f:$000000,x
+0049cb fe/f7cb: 48           ??mxd??? e .....                 pha                       ;next in list pointer, save
+0049cc fe/f7cc: 9b           ??mxd??? e .....                 txy
+0049cd fe/f7cd: c8           ??mxd??? e .....                 iny
+0049ce fe/f7ce: 4b           ??mxd??? e .....                 phk
+0049cf fe/f7cf: 20 a0 f7     ??mxd??? e .....                 jsr     closeFile
+0049d2 fe/f7d2: 68           ??mxd??? e .....                 pla                       ;get back next pointer
+0049d3 fe/f7d3: 80 ed        ??mxd??? e ...#.                 bra     @lp

+0049d5 fe/f7d5: fa           ??mxd?Z? e ....> @endoflist      plx
+0049d6 fe/f7d6: 18           ??mxd??? e .....                 clc
+0049d7 fe/f7d7: 6b           ??mxd??c e ...#.                 rtl

                                                               .rwid   shortm,shortx
+0049d8 fe/f7d8: 08           ????d??? e ....> skipSpacesBHA   php
+0049d9 fe/f7d9: c2 30        ????d??? e .....                 rep     #$30
                                                               .rwid   longm,longx
+0049db fe/f7db: 0b           ??mxd??? e .....                 phd
+0049dc fe/f7dc: 5a           ??mxd??? e .....                 phy
+0049dd fe/f7dd: 80 03        ??mxd??? e ...#.                 bra     @skst

+0049df fe/f7df: 20 b4 f8     ??mxd?Z? e ....> @lp             jsr     incBHA
+0049e2 fe/f7e2: 8b           ??mxd??? e ....> @skst           phb
+0049e3 fe/f7e3: 48           ??mxd??? e .....                 pha
+0049e4 fe/f7e4: a0 00 00     ??mxd??? e .....                 ldy     #$0000
+0049e7 fe/f7e7: b3 01        n?mxd?Z? e .....                 lda     ($01,S),y
+0049e9 fe/f7e9: 29 ff 00     ??mxd??? e .....                 and     #$00ff
+0049ec fe/f7ec: a8           n?mxd??? e .....                 tay
+0049ed fe/f7ed: 68           ??mxd??? e .....                 pla
+0049ee fe/f7ee: ab           ??mxd??? e .....                 plb
+0049ef fe/f7ef: c0 20 00     ??mxd??? e .....                 cpy     #‘ ’
+0049f2 fe/f7f2: f0 eb        ??mxd??? e .....                 beq     @lp
+0049f4 fe/f7f4: b0 03        ??mxd?z? e .....                 bcs     @retclcply
+0049f6 fe/f7f6: 38           ??mxd?zc e .....                 sec
+0049f7 fe/f7f7: 80 01        ??mxd?zC e ...#.                 bra     @plyret

+0049f9 fe/f7f9: 18           ??mxd?zC e ....> @retclcply      clc
+0049fa fe/f7fa: 7a           ??mxd?z? e ....> @plyret         ply
+0049fb fe/f7fb: 2b           ??mxd??? e .....                 pld
+0049fc fe/f7fc: b0 03        ??mxd??? e .....                 bcs     @retsec
+0049fe fe/f7fe: 28           ??mxd??c e .....                 plp
+0049ff fe/f7ff: 18           ??mxd??? e .....                 clc
+004a00 fe/f800: 6b           ??mxd??c e ...#.                 rtl

+004a01 fe/f801: 28           ??mxd??C e ....> @retsec         plp
+004a02 fe/f802: 38           ??mxd??? e .....                 sec
+004a03 fe/f803: 6b           ??mxd??C e ...#.                 rtl

+004a04 fe/f804: 0b           ??mxd??c e ....> skipFileNameAndTrailingSpaces phd
+004a05 fe/f805: 5a           ??mxd??c e .....                 phy
+004a06 fe/f806: 8b           ??mxd??? e ....> @lp             phb
+004a07 fe/f807: 48           ??mxd??? e .....                 pha
+004a08 fe/f808: a0 00 00     ??mxd??? e .....                 ldy     #$0000
+004a0b fe/f80b: b3 01        n?mxd?Z? e .....                 lda     ($01,S),y
+004a0d fe/f80d: 29 ff 00     ??mxd??? e .....                 and     #$00ff
+004a10 fe/f810: a8           n?mxd??? e .....                 tay
+004a11 fe/f811: 68           ??mxd??? e .....                 pla
+004a12 fe/f812: ab           ??mxd??? e .....                 plb
+004a13 fe/f813: 20 b4 f8     ??mxd??? e .....                 jsr     incBHA
+004a16 fe/f816: c0 20 00     ??mxd??? e .....                 cpy     #‘ ’
+004a19 fe/f819: f0 05        ??mxd??? e .....                 beq     @skspace
+004a1b fe/f81b: b0 e9        ??mxd?z? e .....                 bcs     @lp
+004a1d fe/f81d: 38           ??mxd?zc e .....                 sec
+004a1e fe/f81e: 80 05        ??mxd?zC e ...#.                 bra     @retplypld

+004a20 fe/f820: 4b           ??mxd?Z? e ....> @skspace        phk
+004a21 fe/f821: 20 d8 f7     ??mxd?Z? e .....                 jsr     skipSpacesBHA
+004a24 fe/f824: 18           ??mxd??? e .....                 clc
+004a25 fe/f825: 7a           ??mxd??? e ....> @retplypld      ply
+004a26 fe/f826: 2b           ??mxd??? e .....                 pld
+004a27 fe/f827: 6b           ??mxd??? e ...#.                 rtl

                                               ; Finds or creates a module B0 trampoline based upon the prefix of the filename.
                                               ; Filenames must be prefixed with a module name or ":" for Net? QRY (check
                                               ; documentation)
                                               ; 
                                               ; On Entry:
                                               ;     BHA  contains pointer to filename
                                               ; 
                                               ; On Exit:
                                               ;     C=1  success
                                               ;     BHA  points just after ":"
                                               ;     X    contains a block 0 module entry trampoline address
                                               ;     Y    contains the module code type bytes
                                               ; or  C=0
                                               ;     BHA  preserved ?QRY
                                               ;     X    ?
+004a28 fe/f828: 0b           ??mxd??? e ....> getFSTrampolineFromprefix phd
+004a29 fe/f829: 5a           ??mxd??? e .....                 phy
+004a2a fe/f82a: 8b           ??mxd??? e .....                 phb
+004a2b fe/f82b: 48           ??mxd??? e .....                 pha
+004a2c fe/f82c: 3b           ??mxd??? e .....                 tsc
+004a2d fe/f82d: 5b           ??mxd??? e .....                 tcd
+004a2e fe/f82e: a7 01        ??mxd??? e .....                 lda     [$01]             ;get char from BHA
+004a30 fe/f830: 29 ff 00     ??mxd??? e .....                 and     #$00ff
+004a33 fe/f833: c9 3a 00     n?mxd??? e .....                 cmp     #‘:’
+004a36 fe/f836: f0 15        ??mxd??? e .....                 beq     @retNET
+004a38 fe/f838: a0 00 00     ??mxd?z? e .....                 ldy     #$0000
+004a3b fe/f83b: b7 01        ??mxd??? e ....> @lp             lda     [$01],y
+004a3d fe/f83d: 29 ff 00     ??mxd??? e .....                 and     #$00ff
+004a40 fe/f840: c9 21 00     n?mxd??? e .....                 cmp     #‘!’
+004a43 fe/f843: 90 08        ??mxd??? e .....                 bcc     @retNET
+004a45 fe/f845: c9 3a 00     ??mxd??C e .....                 cmp     #‘:’
+004a48 fe/f848: f0 17        ??mxd??? e .....                 beq     @cont
+004a4a fe/f84a: c8           ??mxd?z? e .....                 iny
+004a4b fe/f84b: d0 ee        ??mxd??? e .....                 bne     @lp
+004a4d fe/f84d: 02 26        ??mxd??? e ....> @retNET         cop     COP_26_OPBHA
+004a4f fe/f84f: 4e 45 54 3a+            .T...                 .zstr   “NET:”
+004a54 fe/f854: 4b           ??mxd??? e .....                 phk
+004a55 fe/f855: 20 28 f8     ??mxd??? e .....                 jsr     getFSTrampolineFromprefix
+004a58 fe/f858: 84 04        ??mxd??? e .....                 sty     $04               ;return in Y
+004a5a fe/f85a: b0 4d        ??mxd??? e .....                 bcs     @retsec2
+004a5c fe/f85c: 68           ??mxd??c e .....                 pla
+004a5d fe/f85d: ab           ??mxd??c e .....                 plb
+004a5e fe/f85e: 18           ??mxd??c e .....                 clc
+004a5f fe/f85f: 80 4e        ??mxd??c e ...#.                 bra     @retSev

+004a61 fe/f861: 68           ??mxd?Z? e ....> @cont           pla                       ;reset BHA pointer as passed in
+004a62 fe/f862: ab           ??mxd??? e .....                 plb
+004a63 fe/f863: 8b           ??mxd??? e .....                 phb
+004a64 fe/f864: 48           ??mxd??? e .....                 pha
+004a65 fe/f865: a2 00 00     ??mxd??? e .....                 ldx     #$0000
+004a68 fe/f868: a0 02 00     n?mxd?Z? e .....                 ldy     #$0002
+004a6b fe/f86b: 02 34        n?mxd?z? e .....                 cop     COP_34_OPRMI      ;get module code type
+004a6d fe/f86d: b0 3a        n?mxd?z? e .....                 bcs     @retsec2
+004a6f fe/f86f: 85 04        n?mxd?zc e .....                 sta     $04               ;store in saved Y
+004a71 fe/f871: 29 60 00     n?mxd?zc e .....                 and     #$0060            ;TODO MHCDEV | MHCFS
+004a74 fe/f874: f0 33        n?mxd??c e .....                 beq     @retsec2
+004a76 fe/f876: 68           n?mxd?zc e .....                 pla                       ;reset BHA as passed in
+004a77 fe/f877: ab           ??mxd??c e .....                 plb
+004a78 fe/f878: a2 00 00     ??mxd??c e .....                 ldx     #$0000
+004a7b fe/f87b: a0 00 00     n?mxd?Zc e .....                 ldy     #$0000
+004a7e fe/f87e: 4b           n?mxd?Zc e .....                 phk
+004a7f fe/f87f: 20 31 f2     n?mxd?Zc e .....                 jsr     findModuleByName_Q
+004a82 fe/f882: b0 27        ??mxd??? e .....                 bcs     @retsec
+004a84 fe/f884: 8b           ??mxd??c e .....                 phb
+004a85 fe/f885: 48           ??mxd??c e .....                 pha
+004a86 fe/f886: 8a           ??mxd??c e .....                 txa
+004a87 fe/f887: 4b           ??mxd??c e .....                 phk
+004a88 fe/f888: 20 dd f1     ??mxd??c e .....                 jsr     getOrCreateModCallBlock
+004a8b fe/f88b: b0 1c        ??mxd??? e .....                 bcs     @retsec2
+004a8d fe/f88d: aa           ??mxd??c e .....                 tax
+004a8e fe/f88e: 68           ??mxd??c e .....                 pla
+004a8f fe/f88f: ab           ??mxd??c e .....                 plb
+004a90 fe/f890: 48           ??mxd??c e .....                 pha
+004a91 fe/f891: a0 00 00     ??mxd??c e .....                 ldy     #$0000
+004a94 fe/f894: b3 01        n?mxd?Zc e .....                 lda     ($01,S),y
+004a96 fe/f896: 29 ff 00     ??mxd??c e .....                 and     #$00ff
+004a99 fe/f899: 49 3a 00     n?mxd??c e .....                 eor     #$003a
+004a9c fe/f89c: c9 01 00     ??mxd??c e .....                 cmp     #$0001
+004a9f fe/f89f: 68           ??mxd??? e .....                 pla
+004aa0 fe/f8a0: b0 09        ??mxd??? e .....                 bcs     @retsec
+004aa2 fe/f8a2: 20 b4 f8     ??mxd??c e .....                 jsr     incBHA            ;step over terminating :
+004aa5 fe/f8a5: b8           ??mxd??? e .....                 clv
+004aa6 fe/f8a6: 18           ?vmxd??? e .....                 clc
+004aa7 fe/f8a7: 80 08        ?vmxd??c e ...#.                 bra     @ret

+004aa9 fe/f8a9: 68           ??mxd??? e ....> @retsec2        pla
+004aaa fe/f8aa: ab           ??mxd??? e .....                 plb
+004aab fe/f8ab: a2 00 00     ??mxd??? e ....> @retsec         ldx     #$0000
+004aae fe/f8ae: 38           n?mxd?Z? e .....                 sec
+004aaf fe/f8af: e2 40        ??mxd??? e ....> @retSev         sep     #$40
+004ab1 fe/f8b1: 7a           ??mxd??? e ....> @ret            ply
+004ab2 fe/f8b2: 2b           ??mxd??? e .....                 pld
+004ab3 fe/f8b3: 6b           ??mxd??? e ...#.                 rtl

                                               ; TODO: this is a horrid way of doing BHA++
+004ab4 fe/f8b4: 08           ??mxd??? e ....> incBHA          php
+004ab5 fe/f8b5: c2 20        ??mxd??? e .....                 rep     #$20
+004ab7 fe/f8b7: 0b           ??mxd??? e .....                 phd
+004ab8 fe/f8b8: 8b           ??mxd??? e .....                 phb
+004ab9 fe/f8b9: 48           ??mxd??? e .....                 pha
+004aba fe/f8ba: 3b           ??mxd??? e .....                 tsc
+004abb fe/f8bb: 5b           ??mxd??? e .....                 tcd
+004abc fe/f8bc: e2 20        ??mxd??? e .....                 sep     #$20
                                                               .rwid   shortm
+004abe fe/f8be: e6 01        ??Mxd??? e .....                 inc     $01
+004ac0 fe/f8c0: d0 06        ??Mxd??? e .....                 bne     @sk
+004ac2 fe/f8c2: e6 02        ??Mxd?Z? e .....                 inc     $02
+004ac4 fe/f8c4: d0 02        ??Mxd??? e .....                 bne     @sk
+004ac6 fe/f8c6: e6 03        ??Mxd?Z? e .....                 inc     $03
+004ac8 fe/f8c8: c2 20        ??Mxd??? e ....> @sk             rep     #$20
                                                               .rwid   longm
+004aca fe/f8ca: 68           ??mxd??? e .....                 pla
+004acb fe/f8cb: ab           ??mxd??? e .....                 plb
+004acc fe/f8cc: 2b           ??mxd??? e .....                 pld
+004acd fe/f8cd: 28           ??mxd??? e .....                 plp
+004ace fe/f8ce: 60           ??mxd??? e ...#.                 rts

                                               ; TODO: seemingly pointless dead code?
                                                               .rwid   shortm,shortx
+004acf fe/f8cf: 08           ??MXd??? e @T...                 php
+004ad0 fe/f8d0: 8b           ??MXd??? e .....                 phb
+004ad1 fe/f8d1: 48           ??MXd??? e .....                 pha
+004ad2 fe/f8d2: 68           ??MXd??? e .....                 pla
+004ad3 fe/f8d3: ab           ??MXd??? e .....                 plb
+004ad4 fe/f8d4: 28           ??MXd??? e .....                 plp
+004ad5 fe/f8d5: 60           ??MXd??? e ...#.                 rts

+004ad6 fe/f8d6: 5a           ??MXd??? e @T...                 phy
+004ad7 fe/f8d7: bb           ??MXd??? e .....                 tyx
+004ad8 fe/f8d8: bf 00 00 00  ??MXd??? e .....                 ldal    f:$000000,x
+004adc fe/f8dc: c3 01        ??MXd??? e .....                 cmp     $01,S
+004ade fe/f8de: f0 02        ??MXd??? e .....                 beq     LFEF8E2
+004ae0 fe/f8e0: aa           ??MXd?z? e .....                 tax
+004ae1 fe/f8e1: 18           ??MXd??? e .....                 clc
+004ae2 fe/f8e2: 7a           ??MXd??? e ....> LFEF8E2         ply
+004ae3 fe/f8e3: 60           ??MXd??? e ...#.                 rts

                                                               .rwid   longm,longx
+004ae4 fe/f8e4: 20 01 ce     nvmxd?zc e ....> LFEF8E4         jsr     obtainFreeBlock
+004ae7 fe/f8e7: b0 03        ??mxd??? e .....                 bcs     LFEF8EC
+004ae9 fe/f8e9: 20 ed f8     ??mxd??c e .....                 jsr     LFEF8ED
+004aec fe/f8ec: 60           ??mxd??? e ...#> LFEF8EC         rts

+004aed fe/f8ed: da           ??mxd??c e ....> LFEF8ED         phx
+004aee fe/f8ee: 5a           ??mxd??c e .....                 phy
+004aef fe/f8ef: bb           ??mxd??c e .....                 tyx
+004af0 fe/f8f0: 20 42 f9     ??mxd??c e .....                 jsr     LFEF942
+004af3 fe/f8f3: 90 28        ??mxd??? e .....                 bcc     LFEF91D
+004af5 fe/f8f5: 00 00        ??mxd??C e ...#.                 brk     $00

+004af7 fe/f8f7: 4c                      .....                 .dd1    $4c
+004af8 fe/f8f8: 69                      .....                 .dd1    $69
+004af9 fe/f8f9: 73                      .....                 .dd1    $73
+004afa fe/f8fa: 74                      .....                 .dd1    $74
+004afb fe/f8fb: 20                      .....                 .dd1    $20
+004afc fe/f8fc: 68                      .....                 .dd1    $68
+004afd fe/f8fd: 65                      .....                 .dd1    $65
+004afe fe/f8fe: 61                      .....                 .dd1    $61
+004aff fe/f8ff: 64                      .....                 .dd1    $64
+004b00 fe/f900: 65                      .....                 .dd1    $65
+004b01 fe/f901: 72                      .....                 .dd1    $72
+004b02 fe/f902: 20                      .....                 .dd1    $20
+004b03 fe/f903: 6e                      .....                 .dd1    $6e
+004b04 fe/f904: 6f                      .....                 .dd1    $6f
+004b05 fe/f905: 74                      .....                 .dd1    $74
+004b06 fe/f906: 20                      .....                 .dd1    $20
+004b07 fe/f907: 66                      .....                 .dd1    $66
+004b08 fe/f908: 6f                      .....                 .dd1    $6f
+004b09 fe/f909: 75                      .....                 .dd1    $75
+004b0a fe/f90a: 6e                      .....                 .dd1    $6e
+004b0b fe/f90b: 64                      .....                 .dd1    $64
+004b0c fe/f90c: 20                      .....                 .dd1    $20
+004b0d fe/f90d: 2d                      .....                 .dd1    $2d
+004b0e fe/f90e: 20                      .....                 .dd1    $20
+004b0f fe/f90f: 73                      .....                 .dd1    $73
+004b10 fe/f910: 65                      .....                 .dd1    $65
+004b11 fe/f911: 72                      .....                 .dd1    $72
+004b12 fe/f912: 69                      .....                 .dd1    $69
+004b13 fe/f913: 6f                      .....                 .dd1    $6f
+004b14 fe/f914: 75                      .....                 .dd1    $75
+004b15 fe/f915: 73                      .....                 .dd1    $73
+004b16 fe/f916: 20                      .....                 .dd1    $20
+004b17 fe/f917: 65                      .....                 .dd1    $65
+004b18 fe/f918: 72                      .....                 .dd1    $72
+004b19 fe/f919: 72                      .....                 .dd1    $72
+004b1a fe/f91a: 6f                      .....                 .dd1    $6f
+004b1b fe/f91b: 72                      .....                 .dd1    $72
+004b1c fe/f91c: 00                      .....                 .dd1    $00

+004b1d fe/f91d: 68           ??mxd??c e ....> LFEF91D         pla
+004b1e fe/f91e: fa           ??mxd??c e .....                 plx
+004b1f fe/f91f: 9f 00 00 00  ??mxd??c e .....                 stal    f:$000000,x
+004b23 fe/f923: 8a           ??mxd??c e .....                 txa
+004b24 fe/f924: bb           ??mxd??c e .....                 tyx
+004b25 fe/f925: 9f 00 00 00  ??mxd??c e .....                 stal    f:$000000,x
+004b29 fe/f929: aa           ??mxd??c e .....                 tax
+004b2a fe/f92a: 18           ??mxd??c e .....                 clc
+004b2b fe/f92b: 60           ??mxd??c e ...#.                 rts

+004b2c fe/f92c: 20 35 f9     n?mxd?z? e ....> LFEF92C         jsr     LFEF935
+004b2f fe/f92f: b0 03        ??mxd??? e .....                 bcs     LFEF934
+004b31 fe/f931: 20 da cd     ??mxd??c e .....                 jsr     returnXToFreeList
+004b34 fe/f934: 60           ??mxd??? e ...#> LFEF934         rts

+004b35 fe/f935: 20 42 f9     n?mxd?z? e ....> LFEF935         jsr     LFEF942
+004b38 fe/f938: b0 07        ??mxd??? e .....                 bcs     LFEF941
+004b3a fe/f93a: da           ??mxd??c e .....                 phx
+004b3b fe/f93b: bb           ??mxd??c e .....                 tyx
+004b3c fe/f93c: 9f 00 00 00  ??mxd??c e .....                 stal    f:$000000,x
+004b40 fe/f940: fa           ??mxd??c e .....                 plx
+004b41 fe/f941: 60           ??mxd??? e ...#> LFEF941         rts

+004b42 fe/f942: da           ??mxd??? e ....> LFEF942         phx
+004b43 fe/f943: 5a           ??mxd??? e .....                 phy
+004b44 fe/f944: 98           ??mxd??? e .....                 tya
+004b45 fe/f945: aa           ??mxd??? e ....> LFEF945         tax
+004b46 fe/f946: bf 00 00 00  ??mxd??? e .....                 ldal    f:$000000,x
+004b4a fe/f94a: c3 03        ??mxd??? e .....                 cmp     $03,S
+004b4c fe/f94c: f0 08        ??mxd??? e .....                 beq     LFEF956
+004b4e fe/f94e: c3 01        ??mxd?z? e .....                 cmp     $01,S
+004b50 fe/f950: d0 f3        ??mxd??? e .....                 bne     LFEF945
+004b52 fe/f952: 7a           ??mxd?Z? e .....                 ply
+004b53 fe/f953: fa           ??mxd??? e .....                 plx
+004b54 fe/f954: 38           ??mxd??? e .....                 sec
+004b55 fe/f955: 60           ??mxd??C e ...#.                 rts

+004b56 fe/f956: 9b           ??mxd?Z? e ....> LFEF956         txy
+004b57 fe/f957: fa           ??mxd??? e .....                 plx
+004b58 fe/f958: fa           ??mxd??? e .....                 plx
+004b59 fe/f959: bf 00 00 00  ??mxd??? e .....                 ldal    f:$000000,x
+004b5d fe/f95d: 18           ??mxd??? e .....                 clc
+004b5e fe/f95e: 60           ??mxd??c e ...#.                 rts

+004b5f fe/f95f: c2 30        ??mxd??? e ....> doOPSTAR        rep     #$30
+004b61 fe/f961: 02 0e        ??mxd??? e .....                 cop     COP_0E_OPCOM
+004b63 fe/f963: 08           ??mxd??? e .....                 php                       ;TODO - bcc before all the pushing and popping!
+004b64 fe/f964: 8b           ??mxd??? e .....                 phb
+004b65 fe/f965: 48           ??mxd??? e .....                 pha
+004b66 fe/f966: da           ??mxd??? e .....                 phx
+004b67 fe/f967: 5a           ??mxd??? e .....                 phy
+004b68 fe/f968: 90 0a        ??mxd??? e .....                 bcc     @sk
+004b6a fe/f96a: 02 61        ??mxd??C e .....                 cop     COP_61_OPERC
+004b6c fe/f96c: a2 00 00     ??mxd??C e .....                 ldx     #$0000
+004b6f fe/f96f: 02 02        n?mxd?ZC e .....                 cop     COP_02_OPWRA
+004b71 fe/f971: 02 03        n?mxd?ZC e .....                 cop     COP_03_OPNLI
+004b73 fe/f973: 38           n?mxd?ZC e .....                 sec
+004b74 fe/f974: 7a           ??mxd??? e ....> @sk             ply
+004b75 fe/f975: fa           ??mxd??? e .....                 plx
+004b76 fe/f976: 68           ??mxd??? e .....                 pla
+004b77 fe/f977: ab           ??mxd??? e .....                 plb
+004b78 fe/f978: 28           ??mxd??? e .....                 plp
+004b79 fe/f979: 60           ??mxd??? e ...#.                 rts

                                                               .rwid   shortm,shortx
+004b7a fe/f97a: 02 5b        ??MXd??? e @T... starDELETE      cop     COP_5B_OPDEL
+004b7c fe/f97c: 60           ??MXd??? e ...#.                 rts

+004b7d fe/f97d: 02 5c        ??MXd??? e @T... starRENAME      cop     COP_5C_OPREN
+004b7f fe/f97f: 60           ??MXd??? e ...#.                 rts

+004b80 fe/f980: 0b           ??MXd??? e @T... starEX          phd
+004b81 fe/f981: c2 30        ??MXd??? e .....                 rep     #$30
                                                               .rwid   longm,longx
+004b83 fe/f983: a0 ff ff     ??mxd??? e .....                 ldy     #$ffff
+004b86 fe/f986: 80 06        n?mxd?z? e ...#.                 bra     LFEF98E

                                                               .rwid   shortm,shortx
+004b88 fe/f988: 0b           ??MXd?Z? e .T..> starCAT         phd
+004b89 fe/f989: c2 30        ??MXd?Z? e .....                 rep     #$30
                                                               .rwid   longm,longx
+004b8b fe/f98b: a0 00 00     ??mxd?Z? e .....                 ldy     #$0000
+004b8e fe/f98e: ba           n?mxd??? e ....> LFEF98E         tsx
+004b8f fe/f98f: f4 00 00     ??mxd??? e .....                 pea     $0000
+004b92 fe/f992: f4 00 00     ??mxd??? e .....                 pea     $0000
+004b95 fe/f995: 8b           ??mxd??? e .....                 phb
+004b96 fe/f996: 8b           ??mxd??? e .....                 phb
+004b97 fe/f997: 48           ??mxd??? e .....                 pha
+004b98 fe/f998: da           ??mxd??? e .....                 phx
+004b99 fe/f999: 5a           ??mxd??? e .....                 phy
+004b9a fe/f99a: 02 10        ??mxd??? e .....                 cop     COP_10_OPADP
+004b9c fe/f99c: 00 01                   .T...                 .dd2    $0100             ;direct page size to allocate
+004b9e fe/f99e: 7a           ??mxd??? e .....                 ply
+004b9f fe/f99f: 90 29        ??mxd??? e .....                 bcc     LFEF9CA
+004ba1 fe/f9a1: fa           ??mxd??C e .....                 plx
+004ba2 fe/f9a2: 9a           ??mxd??C e .....                 txs
+004ba3 fe/f9a3: 2b           ??mxd??C e .....                 pld
+004ba4 fe/f9a4: 02 26        ??mxd??C e .....                 cop     COP_26_OPBHA
+004ba6 fe/f9a6: 46 61 69 6c+            .T...                 .zstr   “Failed to allocate direct page”
+004bc5 fe/f9c5: a2 01 00     ??mxd??C e .....                 ldx     #$0001
+004bc8 fe/f9c8: 38           n?mxd?zC e .....                 sec
+004bc9 fe/f9c9: 60           n?mxd?zC e ...#.                 rts

+004bca fe/f9ca: 5b           ??mxd??c e ....> LFEF9CA         tcd
+004bcb fe/f9cb: 84 00        ??mxd??c e .....                 sty     $00
+004bcd fe/f9cd: a3 03        ??mxd??c e .....                 lda     $03,S
+004bcf fe/f9cf: 4b           ??mxd??c e .....                 phk
+004bd0 fe/f9d0: 20 d8 f7     ??mxd??c e .....                 jsr     skipSpacesBHA
+004bd3 fe/f9d3: 83 03        ??mxd??? e .....                 sta     $03,S
+004bd5 fe/f9d5: f4 00 00     ??mxd??? e .....                 pea     $0000
+004bd8 fe/f9d8: ab           ??mxd??? e .....                 plb
+004bd9 fe/f9d9: ab           ??mxd??? e .....                 plb
+004bda fe/f9da: ba           ??mxd??? e .....                 tsx
+004bdb fe/f9db: e8           ??mxd??? e .....                 inx
+004bdc fe/f9dc: e8           ??mxd??? e .....                 inx
+004bdd fe/f9dd: e8           ??mxd??? e .....                 inx
+004bde fe/f9de: 0b           ??mxd??? e .....                 phd
+004bdf fe/f9df: a9 0a 00     ??mxd??? e .....                 lda     #$000a
+004be2 fe/f9e2: 18           n?mxd?z? e .....                 clc
+004be3 fe/f9e3: 63 01        n?mxd?zc e .....                 adc     $01,S
+004be5 fe/f9e5: 83 09        ??mxd??? e .....                 sta     $09,S
+004be7 fe/f9e7: 8a           ??mxd??? e .....                 txa
+004be8 fe/f9e8: fa           ??mxd??? e .....                 plx
+004be9 fe/f9e9: 02 59        ??mxd??? e .....                 cop     COP_59_OPRCH
+004beb fe/f9eb: 90 03        ??mxd??? e .....                 bcc     LFEF9F0
+004bed fe/f9ed: 4c a1 fa     ??mxd??C e ...#.                 jmp     LFEFAA1

+004bf0 fe/f9f0: a2 0d 00     ??mxd??c e ....> LFEF9F0         ldx     #$000d
+004bf3 fe/f9f3: a0 0a 00     n?mxd?zc e .....                 ldy     #$000a
+004bf6 fe/f9f6: 20 85 fb     n?mxd?zc e .....                 jsr     writeYcharsFromDPX
+004bf9 fe/f9f9: a9 20 00     ??mxd??? e .....                 lda     #$0020
+004bfc fe/f9fc: 02 00        n?mxd?z? e .....                 cop     COP_00_OPWRC
+004bfe fe/f9fe: a9 28 00     n?mxd?z? e .....                 lda     #$0028
+004c01 fe/fa01: 02 00        n?mxd?z? e .....                 cop     COP_00_OPWRC
+004c03 fe/fa03: a5 0b        n?mxd?z? e .....                 lda     DPCOP_PC
+004c05 fe/fa05: 29 ff 00     ??mxd??? e .....                 and     #$00ff
+004c08 fe/fa08: 85 02        n?mxd??? e .....                 sta     DPCOP_Y+1
+004c0a fe/fa0a: a9 64 00     n?mxd??? e .....                 lda     #$0064
+004c0d fe/fa0d: 85 04        n?mxd?z? e .....                 sta     DPCOP_X+1
+004c0f fe/fa0f: 20 5f fb     n?mxd?z? e .....                 jsr     LFEFB5F
+004c12 fe/fa12: a9 0a 00     ??mxd??? e .....                 lda     #$000a
+004c15 fe/fa15: 85 04        n?mxd?z? e .....                 sta     DPCOP_X+1
+004c17 fe/fa17: 20 5f fb     n?mxd?z? e .....                 jsr     LFEFB5F
+004c1a fe/fa1a: a9 30 00     ??mxd??? e .....                 lda     #$0030
+004c1d fe/fa1d: 18           n?mxd?z? e .....                 clc
+004c1e fe/fa1e: 65 02        n?mxd?zc e .....                 adc     DPCOP_Y+1
+004c20 fe/fa20: 02 00        ??mxd??? e .....                 cop     COP_00_OPWRC
+004c22 fe/fa22: a9 29 00     ??mxd??? e .....                 lda     #$0029
+004c25 fe/fa25: 02 00        n?mxd?z? e .....                 cop     COP_00_OPWRC
+004c27 fe/fa27: a2 04 00     n?mxd?z? e .....                 ldx     #$0004
+004c2a fe/fa2a: 20 79 fb     n?mxd?z? e .....                 jsr     LFEFB79
+004c2d fe/fa2d: a5 0a        ??mxd??? e .....                 lda     DPCOP_P
+004c2f fe/fa2f: 29 ff 00     ??mxd??? e .....                 and     #$00ff
+004c32 fe/fa32: d0 0a        n?mxd??? e .....                 bne     LFEFA3E
+004c34 fe/fa34: 02 01        n?mxd?Z? e .....                 cop     COP_01_OPWRS
+004c36 fe/fa36: 4f 77 6e 65+            .T...                 .zstr   “Owner”
+004c3c fe/fa3c: 80 09        n?mxd?Z? e ...#.                 bra     LFEFA47

+004c3e fe/fa3e: 02 01        n?mxd?z? e ....> LFEFA3E         cop     COP_01_OPWRS
+004c40 fe/fa40: 50 75 62 6c+            .T...                 .zstr   “Public”
+004c47 fe/fa47: 02 03        n?mxd??? e ....> LFEFA47         cop     COP_03_OPNLI
+004c49 fe/fa49: a2 17 00     n?mxd??? e .....                 ldx     #$0017
+004c4c fe/fa4c: a0 10 00     n?mxd?z? e .....                 ldy     #$0010
+004c4f fe/fa4f: 20 85 fb     n?mxd?z? e .....                 jsr     writeYcharsFromDPX
+004c52 fe/fa52: a2 04 00     ??mxd??? e .....                 ldx     #$0004
+004c55 fe/fa55: 20 79 fb     n?mxd?z? e .....                 jsr     LFEFB79
+004c58 fe/fa58: 02 01        ??mxd??? e .....                 cop     COP_01_OPWRS
+004c5a fe/fa5a: 4f 70 74 69+            .T...                 .zstr   “Option ”
+004c62 fe/fa62: a5 0c        ??mxd??? e .....                 lda     DPCOP_PC+1
+004c64 fe/fa64: 29 03 00     ??mxd??? e .....                 and     #$0003
+004c67 fe/fa67: 0a           n?mxd??? e .....                 asl     A
+004c68 fe/fa68: aa           ??mxd??? e .....                 tax
+004c69 fe/fa69: 4b           ??mxd??? e .....                 phk
                                                               .dbank  K (auto)
+004c6a fe/fa6a: ab           ??mxd??? e .....                 plb
+004c6b fe/fa6b: bd 93 fb     ??mxd??? e .....                 lda     tblStrPtrOpts & $ffff,x
+004c6e fe/fa6e: a2 00 00     ??mxd??? e .....                 ldx     #$0000
+004c71 fe/fa71: 02 02        n?mxd?Z? e .....                 cop     COP_02_OPWRA
+004c73 fe/fa73: 02 03        n?mxd?Z? e .....                 cop     COP_03_OPNLI
+004c75 fe/fa75: 02 01        n?mxd?Z? e .....                 cop     COP_01_OPWRS
+004c77 fe/fa77: 44 69 72 2e+            .T...                 .zstr   “Dir. ”
+004c7d fe/fa7d: a2 27 00     n?mxd?Z? e .....                 ldx     #$0027
+004c80 fe/fa80: a0 0a 00     n?mxd?z? e .....                 ldy     #$000a
+004c83 fe/fa83: 20 85 fb     n?mxd?z? e .....                 jsr     writeYcharsFromDPX
+004c86 fe/fa86: a2 05 00     ??mxd??? e .....                 ldx     #$0005
+004c89 fe/fa89: 20 79 fb     n?mxd?z? e .....                 jsr     LFEFB79
+004c8c fe/fa8c: 02 01        ??mxd??? e .....                 cop     COP_01_OPWRS
+004c8e fe/fa8e: 4c 69 62 2e+            .T...                 .zstr   “Lib. ”
+004c94 fe/fa94: a2 31 00     ??mxd??? e .....                 ldx     #$0031
+004c97 fe/fa97: a0 0a 00     n?mxd?z? e .....                 ldy     #$000a
+004c9a fe/fa9a: 20 85 fb     n?mxd?z? e .....                 jsr     writeYcharsFromDPX
+004c9d fe/fa9d: 02 03        ??mxd??? e .....                 cop     COP_03_OPNLI
+004c9f fe/fa9f: 02 03        ??mxd??? e .....                 cop     COP_03_OPNLI
+004ca1 fe/faa1: fa           ??mxd??? e ....> LFEFAA1         plx
+004ca2 fe/faa2: 68           ??mxd??? e .....                 pla
+004ca3 fe/faa3: ab           ??mxd??? e .....                 plb
+004ca4 fe/faa4: ab           ??mxd??? e .....                 plb
+004ca5 fe/faa5: 85 02        ??mxd??? e .....                 sta     DPCOP_Y+1
+004ca7 fe/faa7: 68           ??mxd??? e .....                 pla
+004ca8 fe/faa8: 68           ??mxd??? e .....                 pla
+004ca9 fe/faa9: a0 08 00     ??mxd??? e .....                 ldy     #$0008
+004cac fe/faac: f4 00 00     ??mxd?z? e ....> LFEFAAC         pea     $0000
+004caf fe/faaf: 88           ??mxd?z? e .....                 dey
+004cb0 fe/fab0: d0 fa        ??mxd??? e .....                 bne     LFEFAAC
+004cb2 fe/fab2: f4 0c 00     ??mxd?Z? e .....                 pea     $000c
+004cb5 fe/fab5: a9 01 00     ??mxd?Z? e .....                 lda     #$0001
+004cb8 fe/fab8: 24 00        n?mxd?z? e .....                 bit     $00
+004cba fe/faba: 10 01        ??mxd??? e .....                 bpl     LFEFABD
+004cbc fe/fabc: 1a           N?mxd??? e .....                 inc     A
+004cbd fe/fabd: 48           ??mxd??? e ....> LFEFABD         pha
+004cbe fe/fabe: f4 00 00     ??mxd??? e .....                 pea     $0000
+004cc1 fe/fac1: 0b           ??mxd??? e .....                 phd
+004cc2 fe/fac2: a9 0a 00     ??mxd??? e .....                 lda     #$000a
+004cc5 fe/fac5: 18           n?mxd?z? e .....                 clc
+004cc6 fe/fac6: 63 01        n?mxd?zc e .....                 adc     $01,S
+004cc8 fe/fac8: 83 01        ??mxd??? e .....                 sta     $01,S
+004cca fe/faca: 8b           ??mxd??? e .....                 phb
+004ccb fe/facb: 8b           ??mxd??? e .....                 phb
+004ccc fe/facc: d4 02        ??mxd??? e .....                 pei     (DPCOP_Y+1)
+004cce fe/face: da           ??mxd??? e .....                 phx
+004ccf fe/facf: a2 08 00     ??mxd??? e .....                 ldx     #$0008
+004cd2 fe/fad2: a9 a0 00     n?mxd?z? e .....                 lda     #$00a0
+004cd5 fe/fad5: 02 06        n?mxd?z? e .....                 cop     COP_06_OPOSB
+004cd7 fe/fad7: 86 04        n?mxd?z? e .....                 stx     DPCOP_X+1
+004cd9 fe/fad9: a2 0a 00     n?mxd?z? e .....                 ldx     #$000a
+004cdc fe/fadc: 02 06        n?mxd?z? e .....                 cop     COP_06_OPOSB
+004cde fe/fade: 8a           n?mxd?z? e .....                 txa
+004cdf fe/fadf: 38           ??mxd??? e .....                 sec
+004ce0 fe/fae0: e5 04        ??mxd??C e .....                 sbc     DPCOP_X+1
+004ce2 fe/fae2: 85 04        ??mxd??? e .....                 sta     DPCOP_X+1
+004ce4 fe/fae4: 85 06        ??mxd??? e .....                 sta     DPCOP_AH+1
+004ce6 fe/fae6: ba           ??mxd??? e .....                 tsx
+004ce7 fe/fae7: 8a           ??mxd??? e .....                 txa
+004ce8 fe/fae8: 1a           ??mxd??? e .....                 inc     A
+004ce9 fe/fae9: 1a           ??mxd??? e .....                 inc     A
+004cea fe/faea: 1a           ??mxd??? e .....                 inc     A
+004ceb fe/faeb: 85 02        ??mxd??? e .....                 sta     DPCOP_Y+1
+004ced fe/faed: f4 00 00     ??mxd??? e ....> LFEFAED         pea     $0000
+004cf0 fe/faf0: ab           ??mxd??? e .....                 plb
+004cf1 fe/faf1: ab           ??mxd??? e .....                 plb
+004cf2 fe/faf2: 02 5a        ??mxd??? e .....                 cop     COP_5A_OPRFN
+004cf4 fe/faf4: 90 12        ??mxd??? e .....                 bcc     LFEFB08
+004cf6 fe/faf6: 86 02        ??mxd??C e .....                 stx     DPCOP_Y+1
+004cf8 fe/faf8: fa           ??mxd??C e .....                 plx
+004cf9 fe/faf9: 9a           ??mxd??C e .....                 txs
+004cfa fe/fafa: a6 02        ??mxd??C e .....                 ldx     DPCOP_Y+1
+004cfc fe/fafc: da           ??mxd??C e .....                 phx
+004cfd fe/fafd: 8b           ??mxd??C e .....                 phb
+004cfe fe/fafe: 48           ??mxd??C e .....                 pha
+004cff fe/faff: 7b           ??mxd??C e .....                 tdc
+004d00 fe/fb00: 02 1a        ??mxd??C e .....                 cop     COP_1A_OPFZB
+004d02 fe/fb02: 68           ??mxd??C e .....                 pla
+004d03 fe/fb03: ab           ??mxd??C e .....                 plb
+004d04 fe/fb04: fa           ??mxd??C e .....                 plx
+004d05 fe/fb05: 2b           ??mxd??C e .....                 pld
+004d06 fe/fb06: 38           ??mxd??C e .....                 sec
+004d07 fe/fb07: 60           ??mxd??C e ...#.                 rts

+004d08 fe/fb08: f4 00 00     ??mxd??c e ....> LFEFB08         pea     $0000
+004d0b fe/fb0b: ab           ??mxd??c e .....                 plb
                                                               .dbank  $00
+004d0c fe/fb0c: ab           ??mxd??c e .....                 plb
+004d0d fe/fb0d: 9b           ??mxd??c e .....                 txy
+004d0e fe/fb0e: d0 10        ??mxd??c e .....                 bne     LFEFB20
+004d10 fe/fb10: a6 04        ??mxd?Zc e .....                 ldx     DPCOP_X+1
+004d12 fe/fb12: e4 06        ??mxd??c e .....                 cpx     DPCOP_AH+1
+004d14 fe/fb14: f0 02        ??mxd??? e .....                 beq     LFEFB18
+004d16 fe/fb16: 02 03        ??mxd?z? e .....                 cop     COP_03_OPNLI
+004d18 fe/fb18: 7b           ??mxd??? e ....> LFEFB18         tdc
+004d19 fe/fb19: 02 1a        ??mxd??? e .....                 cop     COP_1A_OPFZB
+004d1b fe/fb1b: fa           ??mxd??? e .....                 plx
+004d1c fe/fb1c: 9a           ??mxd??? e .....                 txs
+004d1d fe/fb1d: 2b           ??mxd??? e .....                 pld
+004d1e fe/fb1e: 18           ??mxd??? e .....                 clc
+004d1f fe/fb1f: 60           ??mxd??c e ...#.                 rts

+004d20 fe/fb20: a2 00 00     ??mxd?zc e ....> LFEFB20         ldx     #$0000
+004d23 fe/fb23: a9 14 00     ??mxd??? e ....> LFEFB23         lda     #$0014
+004d26 fe/fb26: 85 08        n?mxd?z? e .....                 sta     DPCOP_DP
+004d28 fe/fb28: e2 20        n?mxd?z? e .....                 sep     #$20
                                                               .rwid   shortm
+004d2a fe/fb2a: b5 0a        ??Mxd??? e ....> LFEFB2A         lda     DPCOP_P,x
+004d2c fe/fb2c: f0 07        ??Mxd??? e .....                 beq     LFEFB35
+004d2e fe/fb2e: e8           ??Mxd?z? e .....                 inx
+004d2f fe/fb2f: 02 00        ??Mxd??? e .....                 cop     COP_00_OPWRC
+004d31 fe/fb31: c6 08        ??Mxd??? e .....                 dec     DPCOP_DP
+004d33 fe/fb33: 80 f5        ??Mxd??? e ...#.                 bra     LFEFB2A

+004d35 fe/fb35: e8           ??Mxd?Z? e ....> LFEFB35         inx
+004d36 fe/fb36: 24 00        ??Mxd??? e .....                 bit     $00
+004d38 fe/fb38: 30 1a        ??Mxd??? e .....                 bmi     LFEFB54
+004d3a fe/fb3a: a5 06        n?Mxd??? e .....                 lda     DPCOP_AH+1
+004d3c fe/fb3c: 38           ??Mxd??? e .....                 sec
+004d3d fe/fb3d: e9 14        ??Mxd??C e .....                 sbc     #$14
+004d3f fe/fb3f: 85 06        ??Mxd??? e .....                 sta     DPCOP_AH+1
+004d41 fe/fb41: 90 0d        ??Mxd??? e .....                 bcc     LFEFB50
+004d43 fe/fb43: da           ??Mxd??C e .....                 phx
+004d44 fe/fb44: a6 08        ??Mxd??C e .....                 ldx     DPCOP_DP
+004d46 fe/fb46: c2 30        ??Mxd??C e .....                 rep     #$30
                                                               .rwid   longm
+004d48 fe/fb48: 20 79 fb     ??mxd??C e .....                 jsr     LFEFB79
+004d4b fe/fb4b: e2 20        ??mxd??? e .....                 sep     #$20
                                                               .rwid   shortm
+004d4d fe/fb4d: fa           ??Mxd??? e .....                 plx
+004d4e fe/fb4e: 80 06        ??Mxd??? e ...#.                 bra     LFEFB56

+004d50 fe/fb50: a5 04        ??Mxd??c e ....> LFEFB50         lda     DPCOP_X+1
+004d52 fe/fb52: 85 06        ??Mxd??c e .....                 sta     DPCOP_AH+1
+004d54 fe/fb54: 02 03        ??Mxd??? e ....> LFEFB54         cop     COP_03_OPNLI
+004d56 fe/fb56: c2 30        ??Mxd??? e ....> LFEFB56         rep     #$30
                                                               .rwid   longm
+004d58 fe/fb58: 88           ??mxd??? e .....                 dey
+004d59 fe/fb59: d0 c8        ??mxd??? e .....                 bne     LFEFB23
+004d5b fe/fb5b: a5 02        ??mxd?Z? e .....                 lda     DPCOP_Y+1
+004d5d fe/fb5d: 80 8e        ??mxd??? e ...#.                 bra     LFEFAED

+004d5f fe/fb5f: 64 06        n?mxd?z? e ....> LFEFB5F         stz     DPCOP_AH+1
+004d61 fe/fb61: a5 02        n?mxd?z? e .....                 lda     DPCOP_Y+1
+004d63 fe/fb63: 38           ??mxd??? e .....                 sec
+004d64 fe/fb64: e5 04        ??mxd??C e ....> LFEFB64         sbc     DPCOP_X+1
+004d66 fe/fb66: 90 04        ??mxd??? e .....                 bcc     LFEFB6C
+004d68 fe/fb68: e6 06        ??mxd??C e .....                 inc     DPCOP_AH+1
+004d6a fe/fb6a: 80 f8        ??mxd??C e ...#.                 bra     LFEFB64

+004d6c fe/fb6c: 65 04        ??mxd??c e ....> LFEFB6C         adc     DPCOP_X+1
+004d6e fe/fb6e: 85 02        ??mxd??? e .....                 sta     DPCOP_Y+1
+004d70 fe/fb70: 18           ??mxd??? e .....                 clc
+004d71 fe/fb71: a9 30 00     ??mxd??c e .....                 lda     #$0030
+004d74 fe/fb74: 65 06        n?mxd?zc e .....                 adc     DPCOP_AH+1
+004d76 fe/fb76: 02 00        ??mxd??? e .....                 cop     COP_00_OPWRC
+004d78 fe/fb78: 60           ??mxd??? e ...#.                 rts

+004d79 fe/fb79: 8a           ??mxd??? e ....> LFEFB79         txa
+004d7a fe/fb7a: f0 08        ??mxd??? e .....                 beq     LFEFB84
+004d7c fe/fb7c: a9 20 00     ??mxd?z? e .....                 lda     #$0020
+004d7f fe/fb7f: 02 00        ??mxd?z? e ....> LFEFB7F         cop     COP_00_OPWRC
+004d81 fe/fb81: ca           ??mxd?z? e .....                 dex
+004d82 fe/fb82: d0 fb        ??mxd??? e .....                 bne     LFEFB7F
+004d84 fe/fb84: 60           ??mxd?Z? e ...#> LFEFB84         rts

+004d85 fe/fb85: f4 00 00     ??mxd?z? e ....> writeYcharsFromDPX pea  $0000
+004d88 fe/fb88: ab           ??mxd?z? e .....                 plb
                                                               .dbank  $00
+004d89 fe/fb89: ab           ??mxd??? e .....                 plb
+004d8a fe/fb8a: b5 00        ??mxd??? e .....                 lda     $00,x
+004d8c fe/fb8c: 02 00        ??mxd??? e .....                 cop     COP_00_OPWRC
+004d8e fe/fb8e: e8           ??mxd??? e .....                 inx
+004d8f fe/fb8f: 88           ??mxd??? e .....                 dey
+004d90 fe/fb90: d0 f3        ??mxd??? e .....                 bne     writeYcharsFromDPX
+004d92 fe/fb92: 60           ??mxd?Z? e ...#.                 rts

+004d93 fe/fb93: 9b fb                   ..... tblStrPtrOpts   .dd2    strOff & $ffff
+004d95 fe/fb95: a4 fb                   .....                 .dd2    strLoad & $ffff
+004d97 fe/fb97: ae fb                   .....                 .dd2    strRun & $ffff
+004d99 fe/fb99: b7 fb                   .....                 .dd2    strExec & $ffff
+004d9b fe/fb9b: 30 30 20 28+            ..... strOff          .zstr   “00 (Off)”
+004da4 fe/fba4: 30 31 20 28+            ..... strLoad         .zstr   “01 (Load)”
+004dae fe/fbae: 30 32 20 28+            ..... strRun          .zstr   “02 (Run)”
+004db7 fe/fbb7: 30 33 20 28+            ..... strExec         .zstr   “03 (Exec)”

                                               ; TODO - dead code?
                                                               .rwid   shortm,shortx
+004dc1 fe/fbc1: 60           ??MXd??? e @T.#.                 rts

                                               ********************************************************************************
                                               * Main interrupt handler                                                       *
                                               *                                                                              *
                                               * This setups (after preserving some registers) setups up an IRQ handler stack *
                                               * then scans through the priority list if registered IRQ handlers calling ones *
                                               * which have a pending irq (detected by using their registered hardware        *
                                               * address and masks)                                                           *
                                               ********************************************************************************
+004dc2 fe/fbc2: c2 30        ???????? e @T... default_IVIRQ   rep     #$30
                                                               .rwid   longm,longx
+004dc4 fe/fbc4: 8b           ??mx???? e .....                 phb
+004dc5 fe/fbc5: 48           ??mx???? e .....                 pha
+004dc6 fe/fbc6: da           ??mx???? e .....                 phx
+004dc7 fe/fbc7: af 10 fe 00  ??mx???? e .....                 ldal    f:B0_IRQ_STACK    ;get interrupt stack
+004dcb fe/fbcb: f0 12        ??mx???? e .....                 beq     @nos              ;if 0 then we're already running from that stack TODO: hopefully! check in Mame
+004dcd fe/fbcd: ba           ??mx??z? e .....                 tsx                       ;X = current stack
+004dce fe/fbce: 1b           ??mx???? e .....                 tcs                       ;set up new interrupt stack
+004dcf fe/fbcf: 4b           ??mx???? e .....                 phk                       ;push long address of stack restore code
+004dd0 fe/fbd0: 62 4b 00     ??mx???? e .....                 per     @restoreOrgStack
+004dd3 fe/fbd3: f4 00 04     ??mx???? e .....                 pea     $0400             ;push phoney flags (0x04) and bank to be discarded in restore
+004dd6 fe/fbd6: 48           ??mx???? e .....                 pha                       ;push A (contains stack top)
+004dd7 fe/fbd7: da           ??mx???? e .....                 phx                       ;push X (original stack)
+004dd8 fe/fbd8: a9 00 00     ??mx???? e .....                 lda     #$0000
+004ddb fe/fbdb: 8f 10 fe 00  n?mx??Z? e .....                 stal    f:B0_IRQ_STACK
+004ddf fe/fbdf: 0b           ??mx??Z? e ....> @nos            phd
+004de0 fe/fbe0: 5a           ??mx??Z? e .....                 phy
+004de1 fe/fbe1: f4 06 fe     ??mx??Z? e .....                 pea     B0LST_IRQ_HANDLER
                                                               .rwid   shortm,shortx
+004de4 fe/fbe4: e2 30        ???????? e ....> @lp2            sep     #$30
+004de6 fe/fbe6: 2b           ??MX???? e .....                 pld                       ;DP is now address of the list head
+004de7 fe/fbe7: d4 00        ??MX???? e ....> @lp             pei     ($00)             ;get address of next item
+004de9 fe/fbe9: 2b           ??MX???? e .....                 pld                       ;into DP
+004dea fe/fbea: a7 02        ??MX???? e .....                 lda     [$02]             ;read hardware test register into A
+004dec fe/fbec: a8           ??MX???? e .....                 tay                       ;into Y
+004ded fe/fbed: 27 09        ??MX???? e .....                 and     [$09]             ;and with pointer AND mask
+004def fe/fbef: 45 06        ??MX???? e .....                 eor     $06               ;eor with mask
+004df1 fe/fbf1: 25 05        ??MX???? e .....                 and     $05               ;and with other AND mask
+004df3 fe/fbf3: f0 f2        ??MX???? e .....                 beq     @lp
+004df5 fe/fbf5: 0b           ??MX??z? e .....                 phd                       ;push block primary pointer to stack - if handler returns with CS this is used to continue the loop
+004df6 fe/fbf6: 4b           ??MX??z? e .....                 phk                       ;push program bank
+004df7 fe/fbf7: f4 12 fc     ??MX??z? e .....                 pea     0+(@interruptExit & $ffff)-1 ;and address of an rti
+004dfa fe/fbfa: d4 07        ??MX??z? e .....                 pei     ($07)             ;address of secondary irq block
+004dfc fe/fbfc: 2b           ??MX??z? e .....                 pld                       ;into DP
+004dfd fe/fbfd: e6 07        ??MX???? e .....                 inc     $07
+004dff fe/fbff: d0 0a        ??MX???? e .....                 bne     @skinccy
+004e01 fe/fc01: e6 08        ??MX??Z? e .....                 inc     $08
+004e03 fe/fc03: d0 06        ??MX???? e .....                 bne     @skinccy
+004e05 fe/fc05: e6 09        ??MX??Z? e .....                 inc     $09
+004e07 fe/fc07: d0 02        ??MX???? e .....                 bne     @skinccy
+004e09 fe/fc09: e6 0a        ??MX??Z? e .....                 inc     $0a
+004e0b fe/fc0b: d4 05        ??MX???? e ....> @skinccy        pei     ($05)             ;push handler K,PCH
+004e0d fe/fc0d: d4 03        ??MX???? e .....                 pei     ($03)             ;push handler P, PCL
+004e0f fe/fc0f: d4 01        ??MX???? e .....                 pei     ($01)             ;get handler DP
+004e11 fe/fc11: 2b           ??MX???? e .....                 pld
+004e12 fe/fc12: 40           ??MX???? e ...#.                 rti

+004e13 fe/fc13: b0 cf        ??MXd??? e @T... @interruptExit  bcs     @lp2              ;if Cy set at handler exit continue with other handlers
+004e15 fe/fc15: 2b           ??MXd??c e .....                 pld                       ;discard stacked block pointer
+004e16 fe/fc16: c2 30        ??MXd??c e .....                 rep     #$30
                                                               .rwid   longm,longx
+004e18 fe/fc18: 7a           ??mxd??c e .....                 ply                       ;restore all stacked stuff and RTI from vector
+004e19 fe/fc19: 2b           ??mxd??c e .....                 pld
+004e1a fe/fc1a: fa           ??mxd??c e .....                 plx
+004e1b fe/fc1b: 68           ??mxd??c e .....                 pla
+004e1c fe/fc1c: ab           ??mxd??c e .....                 plb
+004e1d fe/fc1d: 40           ??mxd??c e ...#.                 rti

                                                               .rwid   shortm,shortx
+004e1e fe/fc1e: 8f 10 fe 00  ??MXd??? e @T... @restoreOrgStack stal   f:B0_IRQ_STACK    ;restore irq stack address
+004e22 fe/fc22: 9a           ??MXd??? e .....                 txs                       ;restore original stack
+004e23 fe/fc23: fa           ??MXd??? e .....                 plx                       ;exit to outer vector
+004e24 fe/fc24: 68           ??MXd??? e .....                 pla
+004e25 fe/fc25: ab           ??MXd??? e .....                 plb
+004e26 fe/fc26: 40           ??MXd??? e ...#.                 rti

                                               ********************************************************************************
                                               * COP 2F - OPIIQ - Add interrupt handler                                       *
                                               *                                                                              *
                                               * Action: This call is used to add a device's interrupt service to the list of *
                                               * such services maintained by the operating system.                            *
                                               *                                                                              *
                                               * On entry: Inline 3 byte hardware address of the device which requires        *
                                               *           servicing's status register.                                       *
                                               *           Inline 1 byte EOR mask, allowing inversion of bits to the correct  *
                                               *           logic level if necessary.                                          *
                                               *           BHA points to the start address of the interrupt routine.          *
                                               *           X contains an AND mask to discriminate between different devices   *
                                               *           causing interrupts. (X must be set to zero if a call to OPMIQ is   *
                                               *           required.)                                                         *
                                               *           Y contains the priority (range 1 to 255). This will be the         *
                                               *           position within the list of devices which the new entry will       *
                                               * occupy.                                                                      *
                                               *           The lower the value the higher the priority.                       *
                                               *           D is set to the direct page required whilst in the interrupt       *
                                               *           routine.                                                           *
                                               *           P flags are set to give the mode required in the interrupt         *
                                               * routine.                                                                     *
                                               *           (The operating system sets the I flag.)                            *
                                               * On exit:  If C = O then the call succeeded. Y = handle and HA = handle.      *
                                               *           If C = 1 then the call failed. Y = 0 and HA = O.                   *
                                               *           No registers preserved                                             *
                                               ********************************************************************************
                                                               .rwid   longm,longx
+004e27 fe/fc27: c0 00 00     ??mxd??? e @T... COP_2F          cpy     #$0000
+004e2a fe/fc2a: d0 09        ??mxd??? e .....                 bne     @YnZ
+004e2c fe/fc2c: af 06 fe 00  ??mxd?Z? e .....                 ldal    f:B0LST_IRQ_HANDLER
+004e30 fe/fc30: f0 03        ??mxd??? e .....                 beq     @YnZ
+004e32 fe/fc32: 82 c1 00     ??mxd?z? e ...#.                 brl     @retSec

+004e35 fe/fc35: a9 0e 00     ??mxd??? e ....> @YnZ            lda     #HND_type_E_CBIQ
+004e38 fe/fc38: 20 01 ce     n?mxd?z? e .....                 jsr     obtainFreeBlock
+004e3b fe/fc3b: 90 03        ??mxd??? e .....                 bcc     @skok1
+004e3d fe/fc3d: 82 b6 00     ??mxd??C e ...#.                 brl     @retSec

+004e40 fe/fc40: da           ??mxd??c e ....> @skok1          phx
+004e41 fe/fc41: a9 0e 00     ??mxd??c e .....                 lda     #HND_type_E_CBIQ
+004e44 fe/fc44: 20 01 ce     n?mxd?zc e .....                 jsr     obtainFreeBlock
+004e47 fe/fc47: 90 03        ??mxd??? e .....                 bcc     @skok2
+004e49 fe/fc49: 82 a6 00     ??mxd??C e ...#.                 brl     @retSec2

+004e4c fe/fc4c: e2 20        ??mxd??c e ....> @skok2          sep     #$20
                                                               .rwid   shortm
+004e4e fe/fc4e: a5 01        ??Mxd??c e .....                 lda     DPCOP_Y
+004e50 fe/fc50: 9f 00 00 00  ??Mxd??c e .....                 stal    f:$000000,x
+004e54 fe/fc54: a5 0a        ??Mxd??c e .....                 lda     DPCOP_P
+004e56 fe/fc56: 09 04        ??Mxd??c e .....                 ora     #$04
+004e58 fe/fc58: 9f 03 00 00  ??Mxd?zc e .....                 stal    f:$000003,x
+004e5c fe/fc5c: c2 20        ??Mxd?zc e .....                 rep     #$20
                                                               .rwid   longm
+004e5e fe/fc5e: a5 06        ??mxd?zc e .....                 lda     DPCOP_AH+1
+004e60 fe/fc60: 9f 05 00 00  ??mxd??c e .....                 stal    f:$000005,x
+004e64 fe/fc64: a5 05        ??mxd??c e .....                 lda     DPCOP_AH
+004e66 fe/fc66: 9f 04 00 00  ??mxd??c e .....                 stal    f:$000004,x
+004e6a fe/fc6a: a5 08        ??mxd??c e .....                 lda     DPCOP_DP
+004e6c fe/fc6c: 9f 01 00 00  ??mxd??c e .....                 stal    f:$000001,x
+004e70 fe/fc70: a9 00 00     ??mxd??c e .....                 lda     #$0000
+004e73 fe/fc73: 9f 07 00 00  n?mxd?Zc e .....                 stal    f:$000007,x
+004e77 fe/fc77: 9f 09 00 00  n?mxd?Zc e .....                 stal    f:$000009,x
+004e7b fe/fc7b: 8a           n?mxd?Zc e .....                 txa
+004e7c fe/fc7c: fa           ??mxd??c e .....                 plx
+004e7d fe/fc7d: 9f 07 00 00  ??mxd??c e .....                 stal    f:$000007,x
+004e81 fe/fc81: a0 01 00     ??mxd??c e .....                 ldy     #$0001
+004e84 fe/fc84: b7 0b        n?mxd?zc e .....                 lda     [DPCOP_PC],y
+004e86 fe/fc86: 9f 02 00 00  ??mxd??c e .....                 stal    f:$000002,x
+004e8a fe/fc8a: c8           ??mxd??c e .....                 iny
+004e8b fe/fc8b: b7 0b        ??mxd??c e .....                 lda     [DPCOP_PC],y
+004e8d fe/fc8d: 9f 03 00 00  ??mxd??c e .....                 stal    f:$000003,x
+004e91 fe/fc91: e2 20        ??mxd??c e .....                 sep     #$20
                                                               .rwid   shortm
+004e93 fe/fc93: c8           ??Mxd??c e .....                 iny
+004e94 fe/fc94: c8           ??Mxd??c e .....                 iny
+004e95 fe/fc95: b7 0b        ??Mxd??c e .....                 lda     [DPCOP_PC],y
+004e97 fe/fc97: 9f 06 00 00  ??Mxd??c e .....                 stal    f:$000006,x
+004e9b fe/fc9b: a5 03        ??Mxd??c e .....                 lda     DPCOP_X
+004e9d fe/fc9d: 9f 05 00 00  ??Mxd??c e .....                 stal    f:$000005,x
+004ea1 fe/fca1: c2 20        ??Mxd??c e .....                 rep     #$20
                                                               .rwid   longm
+004ea3 fe/fca3: a9 06 fd     ??mxd??c e .....                 lda     #LFD06_anFF & $ffff
+004ea6 fe/fca6: 9f 09 00 00  n?mxd?zc e .....                 stal    f:$000009,x
+004eaa fe/fcaa: e2 20        n?mxd?zc e .....                 sep     #$20
                                                               .rwid   shortm
+004eac fe/fcac: 4b           n?Mxd?zc e .....                 phk
+004ead fe/fcad: 68           n?Mxd?zc e .....                 pla
+004eae fe/fcae: 9f 0b 00 00  ??Mxd??c e .....                 stal    f:$00000b,x
+004eb2 fe/fcb2: c2 20        ??Mxd??c e .....                 rep     #$20
                                                               .rwid   longm
+004eb4 fe/fcb4: f4 00 00     ??mxd??c e .....                 pea     $0000
+004eb7 fe/fcb7: ab           ??mxd??c e .....                 plb
                                                               .dbank  $00
+004eb8 fe/fcb8: ab           ??mxd??c e .....                 plb
+004eb9 fe/fcb9: d4 01        ??mxd??c e .....                 pei     (DPCOP_Y)         ;push original Y parameter
+004ebb fe/fcbb: 0b           ??mxd??c e .....                 phd                       ;push DP of COP handler stack frame
+004ebc fe/fcbc: 08           ??mxd??c e .....                 php                       ;push current flags/mode
+004ebd fe/fcbd: 78           ??mxd??c e .....                 sei                       ;disable interrupts
+004ebe fe/fcbe: da           ??mxdI?c e .....                 phx                       ;push X of 1st IRQ handler block
+004ebf fe/fcbf: f4 06 fe     ??mxdI?c e .....                 pea     B0LST_IRQ_HANDLER ;push address of IRQ list head
+004ec2 fe/fcc2: 2b           ??mxdI?c e .....                 pld                       ;make that DP
+004ec3 fe/fcc3: 0b           ??mxdI?? e ....> @lp             phd
                                               ; stack 
                                               ; +8 Y param (priority)
                                               ; +6 COP frame
                                               ; +5 flags/mode
                                               ; +3 pointer to IQ block
                                               ; +1 next entry pointer
+004ec4 fe/fcc4: a5 00        ??mxdI?? e .....                 lda     $00               ;get pointer at offset 0 (next item)
+004ec6 fe/fcc6: f0 0d        ??mxdI?? e .....                 beq     @skdone           ;if 0 exit
+004ec8 fe/fcc8: 5b           ??mxdIz? e .....                 tcd                       ;make DP point at it
+004ec9 fe/fcc9: b2 07        ??mxdI?? e .....                 lda     ($07)             ;get the interrupt priority from the 1st byte of the second block
+004ecb fe/fccb: 29 ff 00     ??mxdI?? e .....                 and     #$00ff
+004ece fe/fcce: c3 08        n?mxdI?? e .....                 cmp     $08,S             ;compare with stacked Y parameters
+004ed0 fe/fcd0: 68           ??mxdI?? e .....                 pla
+004ed1 fe/fcd1: b0 f0        ??mxdI?? e .....                 bcs     @lp               ;if current entry higher or same priority loop
+004ed3 fe/fcd3: 48           ??mxdI?c e .....                 pha
+004ed4 fe/fcd4: 7b           ??mxdI?c e .....                 tdc
                                               ; we're now at a point in the list that is lower priority - insert here, or at
                                               ; the end
                                               ; 
                                               ; stack
                                               ; +8 Y param (priority)
                                               ; +6 COP frame
                                               ; +5 flags/mode
                                               ; +3 pointer to IQ block
                                               ; +1 address of pointer to current entry (or B0LST_IRQ_HANDLER)
                                               ; 
                                               ; A points at current entry or zero if end of list
+004ed5 fe/fcd5: 2b           ??mxdI?? e ....> @skdone         pld
+004ed6 fe/fcd6: fa           ??mxdI?? e .....                 plx
+004ed7 fe/fcd7: 9f 00 00 00  ??mxdI?? e .....                 stal    f:$000000,x       ;store pointer to new entry at next pointer
+004edb fe/fcdb: 8a           ??mxdI?? e .....                 txa
+004edc fe/fcdc: 85 00        ??mxdI?? e .....                 sta     $00               ;update previous item's (or list front) to point at new entry
+004ede fe/fcde: 28           ??mxdI?? e .....                 plp
+004edf fe/fcdf: 2b           ??mxd??c e .....                 pld
+004ee0 fe/fce0: fa           ??mxd??c e .....                 plx                       ;discard stacked Y (priority)
+004ee1 fe/fce1: aa           ??mxd??c e .....                 tax
+004ee2 fe/fce2: 20 a1 ce     ??mxd??c e .....                 jsr     allocHandleQRY    ;allocate a handle
+004ee5 fe/fce5: 84 01        ??mxd??? e .....                 sty     DPCOP_Y           ;return in Y
+004ee7 fe/fce7: 90 10        ??mxd??? e .....                 bcc     @retY             ;success
+004ee9 fe/fce9: da           ??mxd??C e .....                 phx                       ;fail, save X (pointer to 1st block)
+004eea fe/fcea: bf 07 00 00  ??mxd??C e .....                 ldal    f:$000007,x       ;get second block
+004eee fe/fcee: aa           ??mxd??C e .....                 tax
+004eef fe/fcef: 20 da cd     ??mxd??C e .....                 jsr     returnXToFreeList ;free second block
+004ef2 fe/fcf2: fa           ??mxd??? e ....> @retSec2        plx                       ;pop pointer to 1st block
+004ef3 fe/fcf3: 20 da cd     ??mxd??? e .....                 jsr     returnXToFreeList ;free 1st block
+004ef6 fe/fcf6: 38           ??mxd??? e ....> @retSec         sec                       ;return fail
+004ef7 fe/fcf7: 64 01        ??mxd??C e .....                 stz     DPCOP_Y           ;zero Y
+004ef9 fe/fcf9: a5 01        ??mxd??? e ....> @retY           lda     DPCOP_Y
+004efb fe/fcfb: 85 05        ??mxd??? e .....                 sta     DPCOP_AH
+004efd fe/fcfd: e6 0b        ??mxd??? e .....                 inc     DPCOP_PC          ;step over the immediate parameters
+004eff fe/fcff: e6 0b        ??mxd??? e .....                 inc     DPCOP_PC
+004f01 fe/fd01: e6 0b        ??mxd??? e .....                 inc     DPCOP_PC
+004f03 fe/fd03: e6 0b        ??mxd??? e .....                 inc     DPCOP_PC
+004f05 fe/fd05: 6b           ??mxd??? e ...#.                 rtl

+004f06 fe/fd06: ff                      ..... LFD06_anFF      .dd1    $ff

                                               ********************************************************************************
                                               * COP 31 - OPMIQ - Modify interrupt intercept                                  *
                                               *                                                                              *
                                               * Action: This call allows the modification of the address of the AND mask (by *
                                               * default set to a location containing &FF), and the value of the AND mask     *
                                               * contained in X. (X should be set to zero by OPIIQ before using OPMIQ. OPMIQ  *
                                               * is then used to specify the required mask.)                                  *
                                               *                                                                              *
                                               * On entry: Y = handle returned by OPIIQ.                                      *
                                               *           BHA = 0 means do not modify the address of the AND mask.           *
                                               *           BHA <> 0 means BHA is the new address of the AND mask.             *
                                               *           X = 0 means do not modify the AND mask.                            *
                                               *           X <> 0 means X is the new AND mask.                                *
                                               * On exit:  C = 0 means that the inieirupt intercept was modified.             *
                                               *           C = 1 means that the interrupt intercept was not modified.         *
                                               *           No registers preserved                                             *
                                               ********************************************************************************
+004f07 fe/fd07: 20 da ce     ??mxd??? e @T... COP_31          jsr     getHandleYinDP    ;look up handle
+004f0a fe/fd0a: b0 36        ??mxd??? e .....                 bcs     @retsec           ;fail
+004f0c fe/fd0c: da           ??mxd??c e .....                 phx                       ;save pointer to 1st block
+004f0d fe/fd0d: bf 07 00 00  ??mxd??c e .....                 ldal    f:$000007,x       ;get second block pointer
+004f11 fe/fd11: aa           ??mxd??c e .....                 tax                       ;put it in X
+004f12 fe/fd12: bf 0b 00 00  ??mxd??c e .....                 ldal    f:$00000b,x       ;get type byte in to AH
+004f16 fe/fd16: fa           ??mxd??c e .....                 plx                       ;get back 2st block pointer
+004f17 fe/fd17: 29 ff 00     ??mxd??c e .....                 and     #$00ff            ;mask off type
+004f1a fe/fd1a: c9 0e 00     n?mxd??c e .....                 cmp     #HND_type_E_CBIQ  ;check that this is correct type
+004f1d fe/fd1d: d0 23        ??mxd??? e .....                 bne     @retsec           ;fail
+004f1f fe/fd1f: a5 06        ??mxd?Z? e .....                 lda     DPCOP_AH+1
+004f21 fe/fd21: 05 05        ??mxd??? e .....                 ora     DPCOP_AH          ;Z will be set if passed in BHA = 0
+004f23 fe/fd23: 08           ??mxd??? e .....                 php                       ;save mode before disable interrupts
+004f24 fe/fd24: 78           ??mxd??? e .....                 sei                       ;disable interrupts
+004f25 fe/fd25: f0 0c        ??mxdI?? e .....                 beq     @sk               ;skip forward for BHA=0
+004f27 fe/fd27: a5 06        ??mxdIz? e .....                 lda     DPCOP_AH+1        ;update address of AND mask to BHA
+004f29 fe/fd29: 9f 0a 00 00  ??mxdI?? e .....                 stal    f:$00000a,x
+004f2d fe/fd2d: a5 05        ??mxdI?? e .....                 lda     DPCOP_AH
+004f2f fe/fd2f: 9f 09 00 00  ??mxdI?? e .....                 stal    f:$000009,x
+004f33 fe/fd33: a5 03        ??mxdI?? e ....> @sk             lda     DPCOP_X
+004f35 fe/fd35: f0 08        ??mxdI?? e .....                 beq     @plpretclc
+004f37 fe/fd37: e2 20        ??mxdIz? e .....                 sep     #$20
                                                               .rwid   shortm
+004f39 fe/fd39: 9f 05 00 00  ??MxdIz? e .....                 stal    f:$000005,x       ;store updated AND mask
+004f3d fe/fd3d: c2 20        ??MxdIz? e .....                 rep     #$20
                                                               .rwid   longm
+004f3f fe/fd3f: 28           ??mxdI?? e ....> @plpretclc      plp
+004f40 fe/fd40: 18           ??mxd??? e .....                 clc
+004f41 fe/fd41: 6b           ??mxd??c e ...#.                 rtl

+004f42 fe/fd42: 38           ??mxd??? e ....> @retsec         sec
+004f43 fe/fd43: 6b           ??mxd??C e ...#.                 rtl

                                               ********************************************************************************
                                               * COP 30 - OPRIQ - release interrupt                                           *
                                               *                                                                              *
                                               * Action: This call removes the specified interrupt service from the list      *
                                               *                                                                              *
                                               * On entry: Y = handle returned by OPIIQ.                                      *
                                               * On exit:  C = 0 means that the call released the interrupt intercept.        *
                                               *           C = 1 means that the call failed to release the interrupt          *
                                               * intercept                                                                    *
                                               *           No registers preserved                                             *
                                               ********************************************************************************
+004f44 fe/fd44: 20 da ce     ??mxd??? e @T... COP_30          jsr     getHandleYinDP    ;get block address from handle
+004f47 fe/fd47: b0 32        ??mxd??? e .....                 bcs     @retsec
+004f49 fe/fd49: da           ??mxd??c e .....                 phx                       ;save X
+004f4a fe/fd4a: 08           ??mxd??c e .....                 php                       ;save mode before disable interrupts
+004f4b fe/fd4b: 78           ??mxd??c e .....                 sei
+004f4c fe/fd4c: bf 00 00 00  ??mxdI?c e .....                 ldal    f:$000000,x       ;get address of next lower priority interrupt handler
+004f50 fe/fd50: 48           ??mxdI?c e .....                 pha                       ;save it
+004f51 fe/fd51: a9 06 fe     ??mxdI?c e .....                 lda     #B0LST_IRQ_HANDLER ;get address of front of priority list in A
+004f54 fe/fd54: aa           ??mxdIz? e ....> @lp             tax                       ;X=A
+004f55 fe/fd55: bf 00 00 00  ??mxdI?? e .....                 ldal    f:$000000,x       ;get address of next item in list
+004f59 fe/fd59: f0 1d        ??mxdI?? e .....                 beq     @retsk            ;end of queue
+004f5b fe/fd5b: c3 04        ??mxdIz? e .....                 cmp     $04,S             ;is this the item being removed
+004f5d fe/fd5d: d0 f5        ??mxdI?? e .....                 bne     @lp               ;not keep looking
+004f5f fe/fd5f: 68           ??mxdIZ? e .....                 pla                       ;get address of item following the one being removed
+004f60 fe/fd60: 9f 00 00 00  ??mxdI?? e .....                 stal    f:$000000,x       ;store in the previous item's next pointer (or front of list)
+004f64 fe/fd64: 28           ??mxdI?? e .....                 plp                       ;restore interrupt state
+004f65 fe/fd65: fa           ??mxd??c e .....                 plx                       ;get back X
+004f66 fe/fd66: 20 1e cf     ??mxd??c e .....                 jsr     freeHandlePointerX ;free the handle for this block (TODO: why not use Y to index here?)P
+004f69 fe/fd69: da           ??mxd??? e .....                 phx                       ;save X
+004f6a fe/fd6a: bf 07 00 00  ??mxd??? e .....                 ldal    f:$000007,x       ;get pointer to secondary block
+004f6e fe/fd6e: aa           ??mxd??? e .....                 tax
+004f6f fe/fd6f: 20 da cd     ??mxd??? e .....                 jsr     returnXToFreeList ;free secondary block
+004f72 fe/fd72: fa           ??mxd??? e .....                 plx                       ;get back address of primary block
+004f73 fe/fd73: 20 da cd     ??mxd??? e .....                 jsr     returnXToFreeList ;free it
+004f76 fe/fd76: 18           ??mxd??? e .....                 clc                       ;indicate success
+004f77 fe/fd77: 6b           ??mxd??c e ...#.                 rtl

+004f78 fe/fd78: 28           ??mxdIZ? e ....> @retsk          plp                       ;TODO: this is a failure route - I think it should SEC here?
+004f79 fe/fd79: 2b           ??mxd??c e .....                 pld
+004f7a fe/fd7a: 2b           ??mxd??c e .....                 pld
+004f7b fe/fd7b: 6b           ??mxd??? e ...#> @retsec         rtl

                                                               .rwid   shortm,shortx
+004f7c fe/fd7c: 08           ??MXdI?? e ....> setupIRQstackandhandlers php
+004f7d fe/fd7d: c2 30        ??MXdI?? e .....                 rep     #$30
                                                               .rwid   longm,longx
+004f7f fe/fd7f: 0b           ??mxdI?? e .....                 phd
+004f80 fe/fd80: 8b           ??mxdI?? e .....                 phb
+004f81 fe/fd81: 02 13        ??mxdI?? e .....                 cop     COP_13_OPAST      ;allocate a stack
+004f83 fe/fd83: 00 01                   .T...                 .dd2    $0100             ;stack size
+004f85 fe/fd85: b0 fe        ??mxdI?? e ....> @lockup         bcs     @lockup           ;if carry set here lock up the machine !
+004f87 fe/fd87: 8f 10 fe 00  ??mxdI?c e .....                 stal    f:B0_IRQ_STACK
+004f8b fe/fd8b: a9 00 00     ??mxdI?c e .....                 lda     #$0000
+004f8e fe/fd8e: 8f 06 fe 00  n?mxdIZc e .....                 stal    f:B0LST_IRQ_HANDLER
+004f92 fe/fd92: 4b           n?mxdIZc e .....                 phk
                                                               .dbank  K (auto)
+004f93 fe/fd93: ab           n?mxdIZc e .....                 plb
+004f94 fe/fd94: e2 30        ??mxdI?c e .....                 sep     #$30
                                                               .rwid   shortm,shortx
+004f96 fe/fd96: a9 cc        ??MXdI?c e .....                 lda     #>irqh_catchall
+004f98 fe/fd98: eb           N?MXdIzc e .....                 xba
+004f99 fe/fd99: a9 b9        ??MXdI?c e .....                 lda     #<irqh_catchall
+004f9b fe/fd9b: a2 ff        N?MXdIzc e .....                 ldx     #$ff
+004f9d fe/fd9d: a0 00        N?MXdIzc e .....                 ldy     #$00
+004f9f fe/fd9f: f4 00 ac     n?MXdIZc e .....                 pea     DPSYS
+004fa2 fe/fda2: 2b           n?MXdIZc e .....                 pld
+004fa3 fe/fda3: 02 2f        ??MXdI?c e .....                 cop     COP_2F_OPIIQ      ;set up a catch-all IRQ handler with lowest priority
+004fa5 fe/fda5: ff ff 00                .T...                 .dd3    $00ffff           ;device address
+004fa8 fe/fda8: 00                      .T...                 .dd1    $00               ;device eor mask
+004fa9 fe/fda9: a9 cd        ??MXdI?c e .....                 lda     #>irqh_ula_rtc
+004fab fe/fdab: eb           N?MXdIzc e .....                 xba
+004fac fe/fdac: a9 00        ??MXdI?c e .....                 lda     #<irqh_ula_rtc
+004fae fe/fdae: a0 21        n?MXdIZc e .....                 ldy     #$21              ;rtc priority
+004fb0 fe/fdb0: 20 fb fd     n?MXdIzc e .....                 jsr     OPIIQ_ULA_IRQ
+004fb3 fe/fdb3: a2 08        ??MXdI?? e .....                 ldx     #$08              ;real time clock interrupt mask
+004fb5 fe/fdb5: 20 ee fd     n?MXdIz? e .....                 jsr     OPMIQ_ULA_IRQ     ;also mask with SYSVAR_ELK_ULA_IE
+004fb8 fe/fdb8: a9 cc        ??MXdI?? e .....                 lda     #>irqh_vsync
+004fba fe/fdba: eb           N?MXdIz? e .....                 xba
+004fbb fe/fdbb: a9 ca        ??MXdI?? e .....                 lda     #<irqh_vsync
+004fbd fe/fdbd: a0 20        N?MXdIz? e .....                 ldy     #$20              ;vsync priority
+004fbf fe/fdbf: 20 fb fd     n?MXdIz? e .....                 jsr     OPIIQ_ULA_IRQ
+004fc2 fe/fdc2: a2 04        ??MXdI?? e .....                 ldx     #$04              ;vsync interrupt mask
+004fc4 fe/fdc4: 20 ee fd     n?MXdIz? e .....                 jsr     OPMIQ_ULA_IRQ     ;also mask with SYSVAR_ELK_ULA_IE
+004fc7 fe/fdc7: a9 cc        ??MXdI?? e .....                 lda     #>irqh_via_cb1
+004fc9 fe/fdc9: eb           N?MXdIz? e .....                 xba
+004fca fe/fdca: a9 ba        ??MXdI?? e .....                 lda     #<irqh_via_cb1
+004fcc fe/fdcc: 4b           N?MXdIz? e .....                 phk
                                                               .dbank  K (auto)
+004fcd fe/fdcd: ab           N?MXdIz? e .....                 plb
+004fce fe/fdce: a2 00        ??MXdI?? e .....                 ldx     #$00
+004fd0 fe/fdd0: a0 10        n?MXdIZ? e .....                 ldy     #$10              ;priority
+004fd2 fe/fdd2: f4 00 ac     n?MXdIz? e .....                 pea     DPSYS
+004fd5 fe/fdd5: 2b           n?MXdIz? e .....                 pld
+004fd6 fe/fdd6: 02 2f        ??MXdI?? e .....                 cop     COP_2F_OPIIQ
+004fd8 fe/fdd8: 0d 00 42                .T...                 .dd3    VIA_IFR
+004fdb fe/fddb: 00                      .T...                 .dd1    $00
+004fdc fe/fddc: a2 10        ??MXdI?? e .....                 ldx     #$10              ;via_cb1
+004fde fe/fdde: f4 00 42     n?MXdIz? e .....                 pea     $4200             ;TODO: set to >VIA base
+004fe1 fe/fde1: ab           n?MXdIz? e .....                 plb
+004fe2 fe/fde2: ab           ??MXdI?? e .....                 plb
+004fe3 fe/fde3: a9 00        ??MXdI?? e .....                 lda     #>VIA_IER
+004fe5 fe/fde5: eb           n?MXdIZ? e .....                 xba
+004fe6 fe/fde6: a9 0e        ??MXdI?? e .....                 lda     #<VIA_IER
+004fe8 fe/fde8: 02 31        n?MXdIz? e .....                 cop     COP_31_OPMIQ
+004fea fe/fdea: ab           n?MXdIz? e .....                 plb
+004feb fe/fdeb: 2b           ??MXdI?? e .....                 pld
+004fec fe/fdec: 28           ??MXdI?? e .....                 plp
+004fed fe/fded: 60           ??MXdI?? e ...#.                 rts

+004fee fe/fdee: f4 00 00     n?MXdIz? e ....> OPMIQ_ULA_IRQ   pea     $0000
                                                               .dbank  $00
+004ff1 fe/fdf1: ab           n?MXdIz? e .....                 plb
+004ff2 fe/fdf2: ab           ??MXdI?? e .....                 plb
+004ff3 fe/fdf3: a9 a5        ??MXdI?? e .....                 lda     #>SYSVAR_ELK_ULA_IE
+004ff5 fe/fdf5: eb           N?MXdIz? e .....                 xba
+004ff6 fe/fdf6: a9 5b        ??MXdI?? e .....                 lda     #<SYSVAR_ELK_ULA_IE
+004ff8 fe/fdf8: 02 31        n?MXdIz? e .....                 cop     COP_31_OPMIQ
+004ffa fe/fdfa: 60           n?MXdIz? e ...#.                 rts

+004ffb fe/fdfb: 4b           n?MXdIz? e ....> OPIIQ_ULA_IRQ   phk
                                                               .dbank  K (auto)
+004ffc fe/fdfc: ab           n?MXdIz? e .....                 plb
+004ffd fe/fdfd: a2 00        ??MXdI?? e .....                 ldx     #$00
+004fff fe/fdff: f4 00 ac     n?MXdIZ? e .....                 pea     DPSYS
+005002 fe/fe02: 2b           n?MXdIZ? e .....                 pld
+005003 fe/fe03: 02 2f        ??MXdI?? e .....                 cop     COP_2F_OPIIQ
+005005 fe/fe05: 00 fe 45                .T...                 .dd3    sheila_ULA_IRQ_CTL
+005008 fe/fe08: 00                      .T...                 .dd1    $00
+005009 fe/fe09: 60           ??MXdI?? e ...#.                 rts

                                                               .rwid   longm,longx
+00500a fe/fe0a: 02 26        ??mxdI?? e ....> LFEFE0A         cop     COP_26_OPBHA
+00500c fe/fe0c: 56 44 55 00             .T...                 .zstr   “VDU”
+005010 fe/fe10: a2 bf 00     ??mxdI?? e .....                 ldx     #DPSYS_MOD_VDU-$ac00
+005013 fe/fe13: a0 00 00     n?mxdIz? e .....                 ldy     #$0000
+005016 fe/fe16: 02 29        n?mxdIZ? e .....                 cop     COP_29_OPRFR
+005018 fe/fe18: 02 26        n?mxdIZ? e .....                 cop     COP_26_OPBHA
+00501a fe/fe1a: 4e 45 54 00             .T...                 .zstr   “NET”
+00501e fe/fe1e: a2 af 00     n?mxdIZ? e .....                 ldx     #DPSYS_MOD_NET-$ac00
+005021 fe/fe21: a0 00 00     n?mxdIz? e .....                 ldy     #$0000
+005024 fe/fe24: 02 29        n?mxdIZ? e .....                 cop     COP_29_OPRFR
+005026 fe/fe26: 02 26        n?mxdIZ? e .....                 cop     COP_26_OPBHA
+005028 fe/fe28: 45 43 4f 4e+            .T...                 .zstr   “ECONET”
+00502f fe/fe2f: a2 9f 00     n?mxdIZ? e .....                 ldx     #DPSYS_MOD_ECONET-$ac00
+005032 fe/fe32: a0 00 00     n?mxdIz? e .....                 ldy     #$0000
+005035 fe/fe35: 02 29        n?mxdIZ? e .....                 cop     COP_29_OPRFR
+005037 fe/fe37: 60           n?mxdIZ? e ...#.                 rts

                                                               .rwid   shortm,shortx
+005038 fe/fe38: 08           ????d??? e ....> callModVDU      php
+005039 fe/fe39: 0b           ????d??? e .....                 phd
+00503a fe/fe3a: 4b           ????d??? e .....                 phk
+00503b fe/fe3b: 20 41 fe     ????d??? e .....                 jsr     _callModVduInt
+00503e fe/fe3e: 2b           ????d??? e .....                 pld
+00503f fe/fe3f: 28           ????d??? e .....                 plp
+005040 fe/fe40: 6b           n???d?z? e ...#.                 rtl

+005041 fe/fe41: f4 00 ac     ????d??? e ....> _callModVduInt  pea     DPSYS
+005044 fe/fe44: 2b           ????d??? e .....                 pld
+005045 fe/fe45: d4 c3        ????d??? e .....                 pei     (<DPSYS_MOD_VDU+4)
+005047 fe/fe47: d4 c1        ????d??? e .....                 pei     (<DPSYS_MOD_VDU+2)
+005049 fe/fe49: d4 bf        ????d??? e .....                 pei     (<DPSYS_MOD_VDU)
+00504b fe/fe4b: 6b           ????d??? e ...#.                 rtl

                                                               .rwid   longm,longx
+00504c fe/fe4c: d4 b3        ??mxd??? e ....> _callModNetwork pei     (<DPSYS_MOD_NET+4)
+00504e fe/fe4e: d4 b1        ??mxd??? e .....                 pei     (<DPSYS_MOD_NET+2)
+005050 fe/fe50: d4 af        ??mxd??? e .....                 pei     (<DPSYS_MOD_NET)
+005052 fe/fe52: 6b           ??mxd??? e ...#.                 rtl

+005053 fe/fe53: d4 a3        ??mxd??? e ....> _callModEconet  pei     (<DPSYS_MOD_ECONET+4)
+005055 fe/fe55: d4 a1        ??mxd??? e .....                 pei     (<DPSYS_MOD_ECONET+2)
+005057 fe/fe57: d4 9f        ??mxd??? e .....                 pei     (<DPSYS_MOD_ECONET)
+005059 fe/fe59: d4 9d        ??mxd??? e .....                 pei     (<DPSYS_DP_ECO)
+00505b fe/fe5b: 2b           ??mxd??? e .....                 pld
+00505c fe/fe5c: 6b           ??mxd??? e ...#.                 rtl

                                                               .rwid   shortm,shortx
+00505d fe/fe5d: d4 cb        ???????? e @T... default__KB     pei     (<DPSYS_DP_KEYBOARD+4)
+00505f fe/fe5f: d4 c9        ???????? e .....                 pei     (<DPSYS_DP_KEYBOARD+2)
+005061 fe/fe61: d4 c7        ???????? e .....                 pei     (<DPSYS_DP_KEYBOARD)
+005063 fe/fe63: 6b           ???????? e ...#.                 rtl

+005064 fe/fe64: 6b           ??MXd??? e @T.#. LFEFE64_anRTL   rtl                       ;This is where module calls return to by default

+005065 fe/fe65: 66 79                   .T...                 .dd2    $7966             ;checksum TODO - generate post assemble
+005067 fe/fe67: ff ff ff ff+            .....                 .fill   153,$ff           ;padding TODO - remove
                                                               .adrend ↑ $feae00
