                                       ; 6502bench SourceGen v1.8.1
                                       CO_off_stack    .eq     0      {const}    ;coroutine stack
                                       COP_00_OPWRC    .eq     0      {const}    ;OPWRC - write character in A to VDU
                                       __EVESC         .eq     1      {const}    ;ESCape flag
                                       COP_01_OPWRS    .eq     1      {const}    ;Print the zero-terminate text following the cop instruction
                                       HDMMM           .eq     1      {const}    ;MM Global handle - ???
                                       MM_HANDLE_1_SPECIAL_QRY .eq 1      {const}
                                       __EVPRE         .eq     2      {const}    ;Event mask indicates a pre-empt
                                       __MMFP          .eq     $02    {const}    ;Free a pool
                                       CO_off_Parent   .eq     2      {const}    ;Pointer to parent coroutine
                                       COP_02_OPWRA    .eq     2      {const}    ;OPWRA - write string at BHA
                                       HND_type_2_CBMEM .eq    2      {const}    ;Handle type - Memory block
                                       COP_03_OPNLI    .eq     3      {const}    ;OSNEWL
                                       HNDFILE_off_module .eq  3      {const}    ;file handle block offset to module pointer
                                       __MMBP          .eq     4      {const}    ;Undocumented mm call - TODO check for deprecated
                                       CO_off_flags    .eq     4      {const}    ;Coroutine block offset - flags
                                       COP_04_OPRDC    .eq     $04    {const}
                                       HND_type_4_CBSIND .eq   4      {const}    ;Handle type - module call reference - QRY
                                       CO_off_B        .eq     5      {const}    ;offset in couroutine of bank register
                                       __MMASD         .eq     6      {const}    ;Allocate small descending
                                       CO_off_DP       .eq     6      {const}    ;offset in couroutine block of DP pointer
                                       COP_06_OPOSB    .eq     6      {const}    ;OSBYTE
                                       HND_type_6_CBCO .eq     6      {const}    ;Handle type - coroutine
                                       COP_07_OPOSW    .eq     7      {const}    ;OSWORD
                                       HDMMW           .eq     7      {const}    ;A memory pool well known handle - QRY - looks to be used with some unknown hardare at 450000
                                       VDU_07_BELL     .eq     7      {const}
                                       CO_off_8_BRKBLOCK .eq   8      {const}    ;Contains a pointer to block that contains a pointer to a break handler in bank 0
                                       HND_type_8_CBCO2 .eq    8      {const}    ;Handle type - coroutine break handler QRY
                                       VDUMOD_OPX_8_EXPLODE .eq 8      {const}
                                       __MMASA         .eq     $0a    {const}    ;Allocate small ascending
                                       __STGIT         .eq     $0a    {const}
                                       COP_0A_OPBGT    .eq     $0a    {const}    ;BGET
                                       HND_type_A_CBLCB .eq    $0a    {const}    ;Handle type - ???
                                       VDUMOD_OPX_A    .eq     $0a    {const}
                                       COP_0B_OPBPT    .eq     $0b    {const}    ;BPUT
                                       COP_0B_OPBPUT   .eq     $0b    {const}    ;BPUT
                                       HND_off_B_type  .eq     $0b    {const}    ;Offset of the type byte in a handle block
                                       __MMALA         .eq     $0c    {const}    ;Allocate large asending area
                                       __STGLN         .eq     $0c    {const}
                                       HND_type_C_CBMOD .eq    $0c    {const}    ;Handle type - module QRY
                                       VDUMOD_OPX_C_HIMEM .eq  $0c    {const}
                                       VDU_0D_CR       .eq     $0d    {const}
                                       __MMBAS         .eq     $0e    {const}    ;Return Pool Base in BHA
                                       __STGRD         .eq     $0e    {const}
                                       COP_0E_OPCOM    .eq     $0e    {const}    ;Interpret command in BHA
                                       HND_type_E_CBIQ .eq     $0e    {const}    ;Handle type - Interrupt handler
                                       VDUMOD_OPX_E_HIMEMBYX .eq $0e    {const}
                                       COP_0F_OPERR    .eq     $0f    {const}
                                       COP_10_OPADP    .eq     $10    {const}    ;Allocate direct page
                                       HND_type_10_CBHN .eq    $10    {const}    ;Handle type - device handle
                                       HND_type_10_file .eq    $10    {const}    ;handle type for files
                                       MMLEN           .eq     $10    {const}    ;COPMM reason code, Y contains handle, exit BHA contains length
                                       VDUMOD_OPX_10_GETCURSOR .eq $10    {const}
                                       __MMTOP         .eq     $12    {const}    ;Return the address of the top of the pool
                                       HND_type_12_CBDFR .eq   $12    {const}    ;Handle type - ???
                                       COP_13_OPAST    .eq     $13    {const}    ;allocate stack
                                       __STSBK         .eq     $14    {const}    ;Read Break Signature
                                       VDUMOD_OPX_14_FLASH_QRY .eq $14    {const}
                                       VDU_15_DELLN    .eq     $15    {const}
                                       FSOP_16_BGET    .eq     $16    {const}    ;Call a filing system module to get a byte from a handle
                                       VDUMOD_OPX_16_GETCHARXY .eq $16    {const}
                                       __MMAZB         .eq     $18    {const}    ;Allocate Bank 0 area
                                       COP_18_OPRLH    .eq     $18    {const}    ;Read hex number
                                       FSOP_18_BPUT    .eq     $18    {const}
                                       VDUMOD_OPX_24_READVDUVAR .eq 24     {const}
                                       FSOP_1A_BGET_odd .eq    $1a    {const}    ;FS service call 1A - used for BGET on odd numbered handles
                                       FSOP_1C_BPUT_odd .eq    $1c    {const}
                                       FSOP_1E_CheckEOF .eq    $1e    {const}
                                       COFLAG_hasBRKhandler .eq $20    {const}   ;When set there's a break handler
                                       COP_20_OPSEV    .eq     $20    {const}    ;Set Event - QRY - set escape when called with A=0003
                                       COP_21_OPPRE    .eq     $21    {const}    ;allow pre-emption
                                       VDUMOD_OPX_22_READSTATUS .eq $22    {const}
                                       COP_24_OPCVD    .eq     $24    {const}    ;Convert direct page index
                                       COP_26_OPBHA    .eq     $26    {const}    ;Set BHA to start of string immediate
                                       COP_28_OPCMD    .eq     $28    {const}
                                       COP_29_OPRFR    .eq     $29    {const}    ;Find reference to module, entry BHA points name, X contains pointer in DP to 8 byte block
                                       COP_2C_OPFMA    .eq     $2c    {const}    ;Find module by address
                                       COP_2D_OPWRM    .eq     $2d    {const}    ;OPWRM - write module name
                                       COP_2F_OPIIQ    .eq     $2f    {const}    ;intercept interrupt
                                       COP_32_OPSUM    .eq     $32    {const}    ;Compute end-around-carry sum
                                       COP_34_OPRMI    .eq     $34    {const}    ;Read module info
                                       COP_36_OPNLU    .eq     $36    {const}    ;Name lookup
                                       COFLAG_HASDP    .eq     $40    {const}    ;coroutine block flags bitmask for has valid DP
                                       __VDU_42        .eq     $42    {const}    ;Vdu module command 42
                                       __VDU_44        .eq     $44    {const}    ;Copy screen contents to BHA
                                       COP_44_OPOPN    .eq     $44    {const}
                                       COP_45_OPCLS    .eq     $45    {const}    ;Close file
                                       __VDU_46        .eq     $46    {const}    ;Restore variables
                                       COP_46_OPEND    .eq     $46    {const}    ;Check for EOF
                                       __VDU_48        .eq     $48    {const}    ;restore the screen contents
                                       __VDU_4A        .eq     $4a    {const}    ;VDU module call 4A
                                       COP_4F_OPSAV    .eq     $4f    {const}    ;save a file from memory
                                       COP_50_OPRLE    .eq     $50    {const}    ;Read Load/Execute/Length of file
                                       COP_51_OPWLE    .eq     $51    {const}    ;Write Load/Exec address of file
                                       COP_57_OPRLL    .eq     $57    {const}    ;read logical length (extent)
                                       COP_59_OPRCH    .eq     $59    {const}    ;OPRCH - read catalogue header information
                                       COP_5A_OPRFN    .eq     $5a    {const}    ;OPRFN - read file object info
                                       COP_5C_OPREN    .eq     $5c    {const}    ;rename file
                                       COP_61_OPERC    .eq     $61    {const}
                                       DPLOC_SYS       .eq     $ac00  {const}
                                       STACKTOP_SYS_QRY .eq    $adff  {const}    ;Set at reset QRY
                                       STACKTOP_RESET  .eq     $ffe0  {const}    ;Stack during reset
                                       DPCOP_Y         .eq     1      {addr/2}   ;offset of Y in COP entry/exit frame
                                       DPCOP_X         .eq     3      {addr/3}   ;offset of X in COP entry/exit frame
                                       DPCOP_AH        .eq     5      {addr/2}   ;offset of AH in COP entry/exit frame
                                       DPCOP_B         .eq     7      {addr/1}   ;offset of B(ank) in COP entry/exit frame
                                       DPCOP_DP        .eq     8      {addr/2}   ;offset of DP in COP entry/exit frame
                                       DPCOP_P         .eq     10     {addr/1}   ;offset of P in COP entry/exit frame
                                       DPCOP_PC        .eq     11     {addr/2}   ;offset of PC in COP entry/exit frame
                                       DPCOP_K         .eq     13     {addr/1}   ;offset of K (program bank) in COP entry/exit frame
                                       __MMFND         .eq     $14               ;Find a memory pool by task pool handle
                                       __STTBK         .eq     $16               ;Read BRK message text
                                       COP_1A_OPFZB    .eq     $1a               ;free zero bank pool
                                       COP_2E_OPFPO    .eq     $2e               ;find pool owner
                                       COP_31_OPMIQ    .eq     $31               ;modify interrupt intercept
                                       __VDU_40        .eq     $40               ;VDU module call 40 - QRY get screen size in HA
                                       COP_4E_OPLOD    .eq     $4e               ;load a file into memory
                                       COP_5B_OPDEL    .eq     $5b               ;delete file
                                       VDU_7F_BKSP     .eq     $7f               ;Backspace
                                       DPSYS_D8_B_SAV  .eq     $d8    {addr/1}   ;OSWORD saves caller's bank register
                                       BANK0_MEM_IRQ6502 .eq   $4040             ;QRY? Vector for IRQ in 6502 mode set at reset
                                       SYSVARS         .eq     $a500  {addr/207} ;QRY SYSVARS
                                       QOSBY_VECTOR    .eq     $a524  {addr/2}
                                       SYSVARS_INSV    .eq     $a52a  {addr/2}
                                       SYSVARS_REMV    .eq     $a52c  {addr/2}
                                       SYSVARS_CNPV    .eq     $a52e  {addr/2}
                                       SYSVAR_CFS_TIMEOUT .eq  $a540  {addr/1}
                                       SYSVAR_41_input_stream .eq $a541          ;Currently selected input stream
                                       SYSVAR_RS232_MODE .eq   $a545  {addr/1}
                                       SYSVAR_48_UNKNOWN_ULA .eq $a548
                                       SYSVAR_51_FLASHCTDN .eq $a551  {addr/1}
                                       SYSVAR_FLASH_MARK .eq   $a553
                                       SYSVAR_58_ESCBRK_EFFECT .eq $a558  {addr/1}
                                       SYSVAR_ELK_ULA_IE .eq   $a55b  {addr/1}   ;Soft copy of ULA interrupt mask
                                       SYSVAR_ELK_SOFTKEY_STRLEN .eq $a55d  {addr/1}
                                       SYSVAR_FLAGS_SOMETHINGOSBYTEY .eq $a55e  {addr/1}
                                       SYSVAR_SOFTKEY_STRLEN .eq $a568  {addr/1}
                                       SYSVAR_VDU_QLEN .eq     $a56a  {addr/1}
                                       SYSVAR_SOUND_EXT_FLAG .eq $a56b  {addr/1}
                                       SYSVARS_6C_ESCCHAR .eq  $a56c  {addr/1}
                                       SYSVARS_75_ESCACTION .eq $a575  {addr/1}
                                       SYSVARS_7C_OUTDEST .eq  $a57c  {addr/1}   ;output destination - FX3
                                       SYSVARS_ULA_MISC_COPY .eq $a582  {addr/1}
                                       SYSVAR_SOFTKEY_CONS .eq $a584
                                       SYSVARS_8d_lastbreak .eq $a58d
                                       SYSVAR_OSBYTE_255_STARTUP .eq $a58f
                                       SYSVARS_B0_INKEYCTDN .eq $a5b0  {addr/2}
                                       SYSVARS_OSWORD_0_PARMS .eq $a5b2  {addr/3}
                                       SYSVARS_ELK_BUFFER_BUSY .eq $a5c3  {addr/8}
                                       DPSYS_OSWORD0_BUFPTR .eq $a5e3  {addr/2}
                                       SOUND_QRY_T     .eq     $a814
                                       SOUND_QRY_S     .eq     $a81b
                                       SOUND_STATUS_QRY .eq    $a820  {addr/1}
                                       SOUND_TONE_QRY  .eq     $a821  {addr/1}
                                       SOUND_QRY_X     .eq     $a822  {addr/1}
                                       SOUND_CUR_CHAN_QRY .eq  $a825  {addr/1}
                                       SYSFNK          .eq     $ab00  {addr/256} ;Soft Keys Area
                                       DPSYS           .eq     $ac00  {addr/256} ;System's direct page area
                                       DPSYS_PAGEMODE_CTR .eq  $ac69
                                       DPSYS_DP_ECO    .eq     $ac9d  {addr/2}   ;Econet Direct Page Save QRY
                                       DPSYS_MOD_ECONET .eq    $ac9f  {addr/8}   ;module reference for econet
                                       DPSYS_MOD_NET   .eq     $acaf  {addr/6}   ;Module block for high level network module QRY - find out name
                                       DPSYS_MOD_VDU   .eq     $acbf  {addr/8}   ;vdu module reference
                                       DPSYS_DP_KEYBOARD .eq   $acc7  {addr/8}   ;module reference for keyboard module
                                       DPSYS_D1_EXEC_handle .eq $acd1  {addr/2}
                                       DPVAR_ACD4_HANDSET_STATUS_QRY .eq $acd4  {addr/1}
                                       DPSYS_D6_OSW_DPSAV .eq  $acd6  {addr/2}   ;OSWORD caller's saved DP
                                       DPSYS_GSREAD_flags .eq  $acdd  {addr/1}   ;bit 7 is quotes detected, bit 6 is terminate on space
                                       DPSYS_OSB_X     .eq     $acea  {addr/1}   ;OSBYTE saved X
                                       DPSYS_OSB_Y     .eq     $aceb  {addr/1}   ;OSBYTE saved Y
                                       DPSYS_OSB_A     .eq     $acec  {addr/1}   ;OSBYTE save in SYS DP
                                       DPSYS_GSREAD_ptr .eq    $aced  {addr/3}   ;GSREAD pointer in __ST
                                       DPSYS_OSB_IND   .eq     $acf6  {addr/2}
                                       B0LST_FREE_BLOCKS .eq   $fe00  {addr/2}   ;A list of free [handle block]s
                                       B0LSTEND_FREE_BLOCKS .eq $fe02  {addr/2}  ;points to the last entry in the free list
                                       B0LST_IRQ_HANDLER .eq   $fe06  {addr/2}   ;looks to be a list of interrupt handlers
                                       DP_HANDLE_VIDEO_QRY .eq $fe0c  {addr/2}   ;QRY see fe/d355
                                       B0LST_MODULES_QRY .eq   $fe0e  {addr/2}
                                       tblB0JumpTableFE80_QRY .eq $fe80  {addr/52} ;QRY set up from ROM during reset at FEb4e8
                                       tblB0JumpTableFEE0_QRY .eq $fee0  {addr/32}
                                       EXSYS           .eq     $ff00  {addr/256} ;Extended system variables
                                       MM_HANDLE_TAB   .eq     $ff00  {addr/80}  ;Looks to contain a set of memory handles
                                       EXSYS_HANDLEBLOCK_LONGPTR .eq $ff02  {addr/3}
                                       EXSYS_CO_A_SAVE .eq     $ff05  {addr/2}   ;used in CCO
                                       EXSYS_0D_BRKADDR_SAVE .eq $ff0d  {addr/3}
                                       EXSYS_CUR_COROUTINE .eq $ff10  {addr/2}   ;Stores the current coroutine's pointer
                                       SYS_ESCAPE_FLAG_QRY .eq $ff13
                                       tblB0JumpTableFF80_QRY .eq $ff80  {addr/80} ;jump table that branches to jmls to default cop handlers QRY?
                                       LOWCALL__MM     .eq     $ff8c
                                       LOWCALL__KB     .eq     $ffac             ;direct call to Keyboard routines QRY?
                                       BANK0_HW_VECTORS .eq    $ffe0  {addr/32}
                                       BANK0_HW_NMI816 .eq     $ffea  {addr/2}   ;Native mode IRQ HW vector
                                       BANK0_HW_IRQ6502 .eq    $fffe  {addr/2}   ;hardware vector 6502 IRQ
                                       BANK0_HW_NMI816_SHAD1M .eq $10ffea {addr/2}
                                       BANK0_HW_IRQ6502_SHAD1M .eq $10fffe {addr/2} ;IRQ for 6502 mode in 1M shadow bank QRY? see reset
                                       HW_ECONET       .eq     $410000
                                       VIA_ORB         .eq     $420000 {addr/1}
                                       VIA_ORA         .eq     $420001 {addr/1}
                                       VIA_DDRB        .eq     $420002 {addr/1}
                                       VIA_DDRA        .eq     $420003 {addr/1}
                                       VIA_T1C_L       .eq     $420004 {addr/1}
                                       VIA_T1C_H       .eq     $420005 {addr/1}
                                       VIA_T1L_L       .eq     $420006 {addr/1}
                                       VIA_T1L_H       .eq     $420007 {addr/1}
                                       VIA_ACR         .eq     $42000b {addr/1}
                                       VIA_PCR         .eq     $42000c {addr/1}
                                       VIA_IFR         .eq     $42000d {addr/1}
                                       VIA_IER         .eq     $42000e {addr/1}
                                       HW_VIDEO_BASE   .eq     $450000 {addr/10000} ;Video ULA / Screen memory
                                       sheila_ULA_IRQ_CTL .eq  $45fe00
                                       sheila_ULA_CASSH .eq    $45fe04 {addr/1}
                                       sheila_ULA_PAG_IRQCLR .eq $45fe05 {addr/1}
                                       sheila_UKA_TONE .eq     $45fe06
                                       shiela_ULA_MISC .eq     $45fe07 {addr/1}  ;ULA misc control
                                       sheila_ULA_PAL  .eq     $45fe08 {addr/8}
                                       HW_EXTIO        .eq     $800000 {addr/10000} ;External IO space
                                       HW_TYPE_DETECT_QRY .eq  $f0fff8           ;QRY Seems to detect different motherboard types
                                       SYSVAR_IRQCTL_COPY .eq  $fea55b {addr/1}

                                                       .addrs  $feae00
                                                       .rwid   shortm,shortx
fe/ae00: 82 f2 00     ??MXd??? e @T.#. LFEAE00         brl     ServiceEnter      ;Branch to Service Routine

fe/ae03: 65 50 00                .....                 .dd3    $005065           ;Module length-2
fe/ae06: 00 01                   .....                 .dd2    $0100             ;version BCD
fe/ae08: 02 00 00 00             .T...                 .dd4    $00000002         ;FLAGS
fe/ae0c: 00 00                   .T...                 .dd2    $0000             ;RESV
fe/ae0e: 4d 4f 53 2f+            .....                 .zstr   “MOS/HELP/LOAD/SAVE/KEY/FX/EXEC/RESET/LCB/CLOSEALL/DELETE/RENAM” ;Command Table
                                                        +      “E/CAT/EX”
fe/ae55: 2f 2f 66 69+            .....                 .zstr   “//file [load_addr]/file [from_addr] [to_addr||+len] [exec_addr” ;Command help table
                                                        +      “] [load_addr]/key_num [string]/fx_num [x] [y]/[file]//num//fil”
                                                        +      “e/file1 file2/[fs:][dir]/[fs:][dir]”

                                       ; Service Call Handler
                                       ; 
                                       ; Dispatches to routine index in X
                                       ; 
                                       ; DP is hard coded to AC00
                                                       .rwid   longm,longx
fe/aef5: 08           ??mxd??? e ....> ServiceEnter    php
fe/aef6: c2 30        ??mxd??? e .....                 rep     #$30
fe/aef8: e0 0a 00     ??mxd??? e .....                 cpx     #$000a
fe/aefb: b0 0e        ??mxd??? e .....                 bcs     @ServiceExitFail
fe/aefd: f4 00 ac     ??mxd??c e .....                 pea     DPSYS
fe/af00: 2b           ??mxd??c e .....                 pld                       ;Set DP register tp AC00
fe/af01: e2 30        ??mxd??c e .....                 sep     #$30
                                                       .rwid   shortm,shortx
fe/af03: fc 0e af     ??MXd??c e .....                 jsr     (tblServices,x)
fe/af06: b0 03        ??MXd??? e .....                 bcs     @ServiceExitFail
fe/af08: 28           ??MXd??c e .....                 plp
                                                       .rwid   longm,longx
fe/af09: 18           ??mxd??? e .....                 clc
fe/af0a: 6b           ??mxd??c e ...#.                 rtl

                                                       .rwid   shortm,shortx
fe/af0b: 28           ????d??C e ....> @ServiceExitFail plp
                                                       .rwid   longm,longx
fe/af0c: 38           ??mxd??? e .....                 sec
fe/af0d: 6b           ??mxd??C e ...#.                 rtl

fe/af0e: 18 af                   ..... tblServices     .dd2    Serv0_starCommand & $ffff
fe/af10: 4f b0                   .....                 .dd2    Serv2_RESET & $ffff
fe/af12: 8a af                   .....                 .dd2    Serv4_QRY & $ffff
fe/af14: a3 af                   .....                 .dd2    Serv6_QRY & $ffff
fe/af16: e0 e8                   .....                 .dd2    Serv8_QRY & $ffff

                                                       .rwid   shortm,shortx
fe/af18: bb           ??MXd??? e @T... Serv0_starCommand tyx
fe/af19: a0 00        ??MXd??? e .....                 ldy     #$00
fe/af1b: 18           n?MXd?Z? e .....                 clc
fe/af1c: e2 30        n?MXd?Zc e .....                 sep     #$30
fe/af1e: fc 22 af     n?MXd?Zc e .....                 jsr     (tblStarCommandDispatch,x)
fe/af21: 60           ??MXd??? e ...#.                 rts

fe/af22: 47 af                   ..... tblStarCommandDispatch .dd2 starMOS & $ffff
fe/af24: 47 af                   .....                 .dd2    starMOS & $ffff
fe/af26: fb df                   .....                 .dd2    starLOAD & $ffff
fe/af28: ff df                   .....                 .dd2    starSAVE & $ffff
fe/af2a: 19 e1                   .....                 .dd2    starKEY & $ffff
fe/af2c: 20 e1                   .....                 .dd2    starFX & $ffff
fe/af2e: 0c ee                   .....                 .dd2    starEXEC & $ffff
fe/af30: b9 de                   .....                 .dd2    starRESET & $ffff
fe/af32: 1c e1                   .....                 .dd2    starLCB & $ffff
fe/af34: 3e af                   .....                 .dd2    starCLOSEALL & $ffff
fe/af36: 7a f9                   .....                 .dd2    starDELETE & $ffff
fe/af38: 7d f9                   .....                 .dd2    starRENAME & $ffff
fe/af3a: 88 f9                   .....                 .dd2    starCAT & $ffff
fe/af3c: 80 f9                   .....                 .dd2    starEX & $ffff

fe/af3e: 08           ??MXd??? e @T... starCLOSEALL    php
fe/af3f: c2 30        ??MXd??? e .....                 rep     #$30
                                                       .rwid   longm,longx
fe/af41: 4b           ??mxd??? e .....                 phk
fe/af42: 20 ba f7     ??mxd??? e .....                 jsr     LFEF7BA           ;long call
fe/af45: 28           ??mxd??? e .....                 plp
                                                       .rwid   shortm,shortx
fe/af46: 60           ??MXd??? e ...#.                 rts

fe/af47: 02 01        ??MXd??? e @T... starMOS         cop     COP_01_OPWRS
fe/af49: 43 6f 6d 6d+            .T...                 .zstr   “Communicator Operating System”,$0a,$0d,“Version 1.00 13/Nov/86”
                                                        +      “ (C)1986”,$0a,$0d
fe/af89: 60           ??MXd??? e .T.#.                 rts

fe/af8a: f4 00 00     ??MXd??? e @T... Serv4_QRY       pea     $0000
fe/af8d: ab           ??MXd??? e .....                 plb
                                                       .dbank  $00
fe/af8e: ab           ??MXd??? e .....                 plb                       ;Data Bank to 0
fe/af8f: 48           ??MXd??? e .....                 pha
fe/af90: a8           ??MXd??? e .....                 tay
fe/af91: 20 2e e2     ??MXd??? e .....                 jsr     LFEE22E
fe/af94: fa           ??MXd??? e .....                 plx
fe/af95: a9 00        ??MXd??? e .....                 lda     #$00
fe/af97: ec 6c a5     n?MXd?Z? e .....                 cpx     SYSVARS_6C_ESCCHAR
fe/af9a: d0 06        ??MXd??? e .....                 bne     LFEAFA2
fe/af9c: ae 75 a5     ??MXd?Z? e .....                 ldx     SYSVARS_75_ESCACTION
fe/af9f: d0 01        ??MXd??? e .....                 bne     LFEAFA2
fe/afa1: 1a           ??MXd?Z? e .....                 inc     A
fe/afa2: 60           ??MXd??? e ...#> LFEAFA2         rts

fe/afa3: f4 00 00     ??MXd??? e @T... Serv6_QRY       pea     $0000
fe/afa6: ab           ??MXd??? e .....                 plb
fe/afa7: ab           ??MXd??? e .....                 plb
fe/afa8: 49 00        ??MXd??? e .....                 eor     #$00
fe/afaa: f0 10        ??MXd??? e .....                 beq     LFEAFBC
fe/afac: 78           ??MXd?z? e .....                 sei
fe/afad: a5 d5        ??MXdIz? e .....                 lda     $d5
fe/afaf: c9 81        ??MXdI?? e .....                 cmp     #$81
fe/afb1: 90 07        ??MXdI?? e .....                 bcc     LFEAFBA
fe/afb3: 58           ??MXdI?C e .....                 cli
fe/afb4: a5 d5        ??MXdi?C e ....> LFEAFB4         lda     $d5
fe/afb6: c9 80        ??MXdi?C e .....                 cmp     #$80
fe/afb8: b0 fa        ??MXdi?? e .....                 bcs     LFEAFB4
fe/afba: a9 ff        ??MXd??c e ....> LFEAFBA         lda     #$ff
fe/afbc: 85 d3        ??MXd??? e ....> LFEAFBC         sta     $d3
fe/afbe: 60           ??MXd??? e ...#.                 rts

fe/afbf: e9 e0                   ..... tblInitSysVars  .dd2    defaultUSERV & $ffff ;USERV
fe/afc1: 34 b6                   .....                 .dd2    default_IVBRK & $ffff ;BRKV
fe/afc3: 00 00                   .....                 .dd2    $0000             ;IRQ1V
fe/afc5: 00 00                   .....                 .dd2    $0000             ;IRQ2V
fe/afc7: 9f dd                   .....                 .dd2    defaultCLIV & $ffff ;CLIV
fe/afc9: cc e7                   .....                 .dd2    doDispatchOSBYTE & $ffff
fe/afcb: 3d e8                   .....                 .dd2    enterOSWORD_BHA & $ffff
fe/afcd: ff de                   .....                 .dd2    TFEDEFF & $ffff
fe/afcf: 72 e2                   .....                 .dd2    int_OPRDC & $ffff
fe/afd1: 47 ee                   .....                 .dd2    donothingRTS & $ffff
fe/afd3: 47 ee                   .....                 .dd2    donothingRTS & $ffff
fe/afd5: 47 ee                   .....                 .dd2    donothingRTS & $ffff
fe/afd7: 47 ee                   .....                 .dd2    donothingRTS & $ffff
fe/afd9: 47 ee                   .....                 .dd2    donothingRTS & $ffff
fe/afdb: 47 ee                   .....                 .dd2    donothingRTS & $ffff
fe/afdd: 47 ee                   .....                 .dd2    donothingRTS & $ffff
fe/afdf: 47 ee                   .....                 .dd2    donothingRTS & $ffff
fe/afe1: 47 ee                   .....                 .dd2    donothingRTS & $ffff
fe/afe3: 47 ee                   .....                 .dd2    donothingRTS & $ffff
fe/afe5: 47 ee                   .....                 .dd2    donothingRTS & $ffff
fe/afe7: 00 00                   .....                 .dd2    $0000             ;KEYV - QRY assume this gets set up by KEYBOARD module?
fe/afe9: f1 e1                   .....                 .dd2    defaultINSV & $ffff ;ISNV
fe/afeb: a2 e1                   .....                 .dd2    defaultREMV & $ffff ;REMV
fe/afed: 78 df                   .....                 .dd2    defaultCNPV & $ffff ;CNPV
fe/afef: 47 ee                   .....                 .dd2    donothingRTS & $ffff ;IND1V
fe/aff1: 47 ee                   .....                 .dd2    donothingRTS & $ffff ;IND2V
fe/aff3: 47 ee                   .....                 .dd2    donothingRTS & $ffff ;IND3V
fe/aff5: 90 a4                   .....                 .dd2    SYSVARS-112       ;&236 - address of OS vars (A6)
fe/aff7: 9f 0d                   .....                 .dd2    $0d9f             ;&238 - address of vector table QRY
fe/aff9: a0 a5                   .....                 .dd2    $a5a0             ;&23A - address of ROM info table QRY
fe/affb: 00 00                   .....                 .dd2    $0000             ;&23C - address of key translation table QRY
fe/affd: 00 00                   .....                 .dd2    $0000             ;&23E - address of VDU variables QRY
fe/afff: 00                      .....                 .dd1    $00
fe/b000: 00                      .....                 .dd1    $00
fe/b001: ff                      .....                 .dd1    $ff
fe/b002: 00                      .....                 .dd1    $00
fe/b003: 00                      .....                 .dd1    $00
fe/b004: 00                      .....                 .dd1    $00
fe/b005: 00                      .....                 .dd1    $00
fe/b006: 00                      .....                 .dd1    $00
fe/b007: 00                      .....                 .dd1    $00
fe/b008: 00                      .....                 .dd1    $00
fe/b009: 00                      .....                 .dd1    $00
fe/b00a: ff                      .....                 .dd1    $ff
fe/b00b: 04                      .....                 .dd1    $04
fe/b00c: 04                      .....                 .dd1    $04
fe/b00d: 00                      .....                 .dd1    $00
fe/b00e: ff                      .....                 .dd1    $ff
fe/b00f: 00                      .....                 .dd1    $00
fe/b010: 19                      .....                 .dd1    $19
fe/b011: 19                      .....                 .dd1    $19
fe/b012: 19                      .....                 .dd1    $19
fe/b013: 32                      .....                 .dd1    $32
fe/b014: 08                      .....                 .dd1    $08
fe/b015: 00                      .....                 .dd1    $00
fe/b016: 00                      .....                 .dd1    $00
fe/b017: 00                      .....                 .dd1    $00
fe/b018: 00                      .....                 .dd1    $00
fe/b019: 00                      .....                 .dd1    $00
fe/b01a: ff                      .....                 .dd1    $ff
fe/b01b: 00                      .....                 .dd1    $00
fe/b01c: 00                      .....                 .dd1    $00
fe/b01d: 00                      .....                 .dd1    $00
fe/b01e: 00                      .....                 .dd1    $00
fe/b01f: 00                      .....                 .dd1    $00
fe/b020: 50                      .....                 .dd1    $50
fe/b021: 00                      .....                 .dd1    $00
fe/b022: 03                      .....                 .dd1    $03
fe/b023: 90                      .....                 .dd1    $90
fe/b024: 64                      .....                 .dd1    $64
fe/b025: 06                      .....                 .dd1    $06
fe/b026: 81                      .....                 .dd1    $81
fe/b027: 00                      .....                 .dd1    $00
fe/b028: 00                      .....                 .dd1    $00
fe/b029: 00                      .....                 .dd1    $00
fe/b02a: 00                      .....                 .dd1    $00
fe/b02b: 1b                      .....                 .dd1    $1b
fe/b02c: 01                      .....                 .dd1    $01
fe/b02d: d0                      .....                 .dd1    $d0
fe/b02e: e0                      .....                 .dd1    $e0
fe/b02f: f0                      .....                 .dd1    $f0
fe/b030: 01                      .....                 .dd1    $01
fe/b031: 80                      .....                 .dd1    $80
fe/b032: 90                      .....                 .dd1    $90
fe/b033: 00                      .....                 .dd1    $00
fe/b034: 00                      .....                 .dd1    $00
fe/b035: 00                      .....                 .dd1    $00
fe/b036: ff                      .....                 .dd1    $ff
fe/b037: ff                      .....                 .dd1    $ff
fe/b038: ff                      .....                 .dd1    $ff
fe/b039: 00                      .....                 .dd1    $00
fe/b03a: 00                      .....                 .dd1    $00
fe/b03b: 00                      .....                 .dd1    $00
fe/b03c: 00                      .....                 .dd1    $00
fe/b03d: 00                      .....                 .dd1    $00
fe/b03e: 00                      .....                 .dd1    $00
fe/b03f: 00                      .....                 .dd1    $00
fe/b040: 00                      .....                 .dd1    $00
fe/b041: 00                      .....                 .dd1    $00
fe/b042: 05                      .....                 .dd1    $05
fe/b043: ff                      .....                 .dd1    $ff
fe/b044: 00                      .....                 .dd1    $00
fe/b045: 0a                      .....                 .dd1    $0a
fe/b046: 00                      .....                 .dd1    $00
fe/b047: 00                      .....                 .dd1    $00
fe/b048: 00                      .....                 .dd1    $00
fe/b049: 00                      .....                 .dd1    $00
fe/b04a: 00                      .....                 .dd1    $00
fe/b04b: ff                      .....                 .dd1    $ff
fe/b04c: ea                      .....                 .dd1    $ea
fe/b04d: 4f                      .....                 .dd1    $4f
fe/b04e: b0                      .....                 .dd1    $b0

fe/b04f: 78           ??MXd??? e @T... Serv2_RESET     sei
fe/b050: 18           ??MXdI?? e .....                 clc
fe/b051: fb           ??MXdI?c e .....                 xce                       ;Enter native mode
fe/b052: af 00 00 40  ??MXdI?c e .....                 ldal    $400000           ;Disable boot rom mapping QRY
fe/b056: 78           ??MXdI?c e .....                 sei
fe/b057: 18           ??MXdI?c e .....                 clc
fe/b058: fb           ??MXdI?c e .....                 xce                       ;re-enter naitve mode WHY?
fe/b059: c2 38        ??MXdI?c e .....                 rep     #$38              ;16 bits and clear decimal flag
                                                       .rwid   longm,longx
fe/b05b: e2 20        ??mxdI?c e .....                 sep     #$20
                                                       .rwid   shortm
fe/b05d: a9 10        ??MxdI?c e .....                 lda     #$10              ;Clear Screen interrupt if
fe/b05f: 8f 07 fe 45  n?MxdIzc e .....                 stal    shiela_ULA_MISC
fe/b063: c2 20        n?MxdIzc e .....                 rep     #$20
                                                       .rwid   longm
fe/b065: a9 f0 0f     n?mxdIzc e .....                 lda     #$0ff0            ;palette to white on blue QRY?
fe/b068: 8f 08 fe 45  n?mxdIzc e .....                 stal    sheila_ULA_PAL
fe/b06c: 8f 0a fe 45  n?mxdIzc e .....                 stal    sheila_ULA_PAL+2
fe/b070: 8f 0c fe 45  n?mxdIzc e .....                 stal    sheila_ULA_PAL+4
fe/b074: 8f 0e fe 45  n?mxdIzc e .....                 stal    sheila_ULA_PAL+6
fe/b078: a9 40 40     n?mxdIzc e .....                 lda     #BANK0_MEM_IRQ6502
fe/b07b: 8f fe ff 00  n?mxdIzc e .....                 stal    f:BANK0_HW_IRQ6502
fe/b07f: 8f fe ff 10  n?mxdIzc e .....                 stal    BANK0_HW_IRQ6502_SHAD1M
fe/b083: a9 fe ff     n?mxdIzc e .....                 lda     #BANK0_HW_IRQ6502
fe/b086: 8f ea ff 00  n?mxdIzc e .....                 stal    f:BANK0_HW_NMI816
fe/b08a: 8f ea ff 10  n?mxdIzc e .....                 stal    BANK0_HW_NMI816_SHAD1M
fe/b08e: a9 e0 ff     n?mxdIzc e .....                 lda     #STACKTOP_RESET   ;we need a temporary stack for the next instructions
fe/b091: 1b           n?mxdIzc e .....                 tcs
fe/b092: 4b           n?mxdIzc e .....                 phk
                                                       .dbank  K (auto)
fe/b093: ab           n?mxdIzc e .....                 plb
fe/b094: 10 04        ??mxdI?c e .....                 bpl     @runninglow       ;if running from bank 0/low memory skip ahead, else vector through FFFFF0
                                       ; QRY - not sure what happens here, does the jml somehow do memory mapping or
                                       ; does the 440000 load?
fe/b096: 5c f0 ff ff  N?mxdI?c e ...#.                 jml     $fffff0           ;Not sure what this will do looks to jump into padding at end of Calculator if rom1 is at top of address space!?! QRY

fe/b09a: af 00 00 44  n?mxdI?c e ....> @runninglow     ldal    $440000           ;we're not sure why it does a read here QRY QRYMAME
fe/b09e: a9 ff ad     ??mxdI?c e .....                 lda     #STACKTOP_SYS_QRY
fe/b0a1: 1b           n?mxdIzc e .....                 tcs                       ;set system stack
fe/b0a2: a9 00 ac     n?mxdIzc e .....                 lda     #DPLOC_SYS
fe/b0a5: 5b           n?mxdIzc e .....                 tcd                       ;set system DP
fe/b0a6: a9 0e fe     ??mxdI?c e .....                 lda     #B0LST_MODULES_QRY ;empty modules list
fe/b0a9: 8f 0e fe 00  n?mxdIzc e .....                 stal    f:B0LST_MODULES_QRY
fe/b0ad: a9 fe fd     n?mxdIzc e .....                 lda     #$fdfe
fe/b0b0: 8f fe fd 00  n?mxdIzc e .....                 stal    f:$00fdfe
fe/b0b4: a9 00 00     n?mxdIzc e .....                 lda     #$0000
fe/b0b7: 8f 12 fe 00  n?mxdIZc e .....                 stal    f:$00fe12
fe/b0bb: 20 e1 b4     n?mxdIZc e .....                 jsr     initialize_default_vectors_QRY
fe/b0be: e2 30        ??mxdI?? e .....                 sep     #$30
                                                       .rwid   shortm,shortx
fe/b0c0: 20 59 cf     ??MXdI?? e .....                 jsr     LFECF59
fe/b0c3: 20 b5 cd     ??MXdI?? e .....                 jsr     LFECDB5
fe/b0c6: 20 b8 d2     ??MXdI?? e .....                 jsr     LFED2B8
fe/b0c9: 20 fc b2     ??MXdI?? e .....                 jsr     LFEB2FC
fe/b0cc: 20 a7 b3     ??MXdI?? e .....                 jsr     LFEB3A7
fe/b0cf: 20 7c fd     ??MXdI?? e .....                 jsr     LFEFD7C
fe/b0d2: 4b           ??MXdI?? e .....                 phk
fe/b0d3: 20 48 ee     ??MXdI?? e .....                 jsr     LFEEE48
fe/b0d6: c2 30        ??MXdI?? e .....                 rep     #$30
                                                       .rwid   longm,longx
fe/b0d8: 20 0a fe     ??mxdI?? e .....                 jsr     LFEFE0A
fe/b0db: e2 30        ??mxdI?? e .....                 sep     #$30
                                                       .rwid   shortm,shortx
fe/b0dd: f4 00 00     ??MXdI?? e .....                 pea     $0000
fe/b0e0: ab           ??MXdI?? e .....                 plb
fe/b0e1: ab           ??MXdI?? e .....                 plb
fe/b0e2: 20 eb b3     ??MXdI?? e .....                 jsr     LFEB3EB
fe/b0e5: 20 00 b4     ??MXdI?? e .....                 jsr     LFEB400
fe/b0e8: 20 30 b4     ??MXdI?? e .....                 jsr     resIrqLastBreak
fe/b0eb: 20 b8 b4     ??MXdI?? e .....                 jsr     LFEB4B8
fe/b0ee: a9 80        ??MXdI?? e .....                 lda     #$80
fe/b0f0: 8d 8e a5     N?MXdIz? e .....                 sta     $a58e
fe/b0f3: 8e 84 a5     N?MXdIz? e .....                 stx     $a584
fe/b0f6: 0b           N?MXdIz? e .....                 phd
fe/b0f7: f4 00 ff     N?MXdIz? e .....                 pea     $ff00
fe/b0fa: 2b           N?MXdIz? e .....                 pld
fe/b0fb: a9 70        ??MXdI?? e .....                 lda     #$70
fe/b0fd: 85 0d        n?MXdIz? e .....                 sta     DPCOP_K
fe/b0ff: a9 e8        n?MXdIz? e .....                 lda     #$e8
fe/b101: 85 0e        N?MXdIz? e .....                 sta     $0e
fe/b103: 4b           N?MXdIz? e .....                 phk
fe/b104: 68           N?MXdIz? e .....                 pla
fe/b105: 85 0f        ??MXdI?? e .....                 sta     $0f
fe/b107: 2b           ??MXdI?? e .....                 pld
fe/b108: f4 00 00     ??MXdI?? e .....                 pea     $0000
fe/b10b: ab           ??MXdI?? e .....                 plb
                                                       .dbank  $00
fe/b10c: ab           ??MXdI?? e .....                 plb
fe/b10d: a9 f8        ??MXdI?? e .....                 lda     #$f8
fe/b10f: 8d 8f a5     N?MXdIz? e .....                 sta     SYSVAR_OSBYTE_255_STARTUP
fe/b112: a2 90        N?MXdIz? e .....                 ldx     #$90
fe/b114: a0 8d        N?MXdIz? e .....                 ldy     #$8d
fe/b116: a9 01        N?MXdIz? e .....                 lda     #$01
fe/b118: 8d 8d a5     n?MXdIz? e .....                 sta     SYSVARS_8d_lastbreak
fe/b11b: b8           n?MXdIz? e .....                 clv
fe/b11c: 18           nvMXdIz? e .....                 clc
fe/b11d: 08           nvMXdIzc e .....                 php
fe/b11e: 20 11 b4     nvMXdIzc e .....                 jsr     initSYSVARS
fe/b121: 20 07 b4     ??MXdI?? e .....                 jsr     LFEB407
fe/b124: a2 02        ??MXdI?? e .....                 ldx     #$02
fe/b126: 4b           n?MXdIz? e .....                 phk
fe/b127: 20 38 fe     n?MXdIz? e .....                 jsr     callModVDU
fe/b12a: ad 8f a5     ??MXdI?? e .....                 lda     SYSVAR_OSBYTE_255_STARTUP
fe/b12d: a2 36        ??MXdI?? e .....                 ldx     #$36
fe/b12f: 4b           n?MXdIz? e .....                 phk
fe/b130: 20 38 fe     n?MXdIz? e .....                 jsr     callModVDU
fe/b133: 09 c4        ??MXdI?? e .....                 ora     #$c4
fe/b135: 8d 82 a5     N?MXdIz? e .....                 sta     SYSVARS_ULA_MISC_COPY
fe/b138: 8f 07 fe 45  N?MXdIz? e .....                 stal    shiela_ULA_MISC
fe/b13c: 8f 04 fe 45  N?MXdIz? e .....                 stal    sheila_ULA_CASSH
fe/b140: a9 0c        N?MXdIz? e .....                 lda     #$0c              ;enable display end and RTC interrupts
fe/b142: 8d 5b a5     n?MXdIz? e .....                 sta     SYSVAR_IRQCTL_COPY & $ffff
fe/b145: 8f 00 fe 45  n?MXdIz? e .....                 stal    sheila_ULA_IRQ_CTL
fe/b149: a9 88        n?MXdIz? e .....                 lda     #$88              ;rom page enable, NMI clear 6502 trumps NMI QRY
fe/b14b: 8f 05 fe 45  N?MXdIz? e .....                 stal    sheila_ULA_PAG_IRQCLR
fe/b14f: 20 30 ec     N?MXdIz? e .....                 jsr     OSBYTE_74
fe/b152: 20 6f b4     ??MXdI?? e .....                 jsr     LFEB46F
fe/b155: 20 40 b4     ??MXdI?? e .....                 jsr     LFEB440
fe/b158: 20 77 ea     ??MXdI?? e .....                 jsr     OSBYTE_12
fe/b15b: 02 26        ??MXdI?? e .....                 cop     COP_26_OPBHA      ;Set BHA to start of following string and skip
fe/b15d: 4b 45 59 42+            .T...                 .zstr   “KEYBOARD”
fe/b166: a2 c7        ??MXdI?? e .....                 ldx     #<DPSYS_DP_KEYBOARD ;offset in DP
fe/b168: a0 00        N?MXdIz? e .....                 ldy     #$00              ;must be 0?
fe/b16a: 02 29        n?MXdIZ? e .....                 cop     COP_29_OPRFR      ;Get reference to KEYBOARD module in dp at offset C7
fe/b16c: 90 1e        n?MXdIZ? e .....                 bcc     @keyboard_found
fe/b16e: 02 0f        n?MXdIZC e .....                 cop     COP_0F_OPERR      ;throw an error
fe/b170: 43 61 6e 6e+            .T...                 .zstr   “Cannot find KEYBOARD module”
fe/b18c: a2 02        n?MXdIZ? e ....> @keyboard_found ldx     #$02
fe/b18e: 22 ac ff 00  n?MXdIz? e .....                 jsl     LOWCALL__KB
fe/b192: a9 31        ??MXdI?? e .....                 lda     #$31
fe/b194: a2 18        n?MXdIz? e .....                 ldx     #$18
fe/b196: 22 ac ff 00  n?MXdIz? e .....                 jsl     __KB
fe/b19a: 4b           ??MXdI?? e .....                 phk
                                                       .dbank  K (auto)
fe/b19b: ab           ??MXdI?? e .....                 plb
fe/b19c: a9 16        ??MXdI?? e .....                 lda     #$16              ;22 - VDU set mode
fe/b19e: 02 00        n?MXdIz? e .....                 cop     COP_00_OPWRC
fe/b1a0: af 8f a5 00  n?MXdIz? e .....                 ldal    f:SYSVAR_OSBYTE_255_STARTUP
fe/b1a4: 02 00        ??MXdI?? e .....                 cop     COP_00_OPWRC
fe/b1a6: 20 46 ee     ??MXdI?? e .....                 jsr     LFEEE46
fe/b1a9: 8b           ??MXdI?? e .....                 phb
fe/b1aa: 02 01        ??MXdI?? e .....                 cop     COP_01_OPWRS      ;write immed
fe/b1ac: 0a 41 63 6f+            .T...                 .zstr   $0a,“Acorn Communicator ”
fe/b1c1: a0 01        ??MXdI?? e .....                 ldy     #MM_HANDLE_1_SPECIAL_QRY
fe/b1c3: a2 10        n?MXdIz? e .....                 ldx     #MMLEN
fe/b1c5: 22 8c ff 00  n?MXdIz? e .....                 jsl     LOWCALL__MM
fe/b1c9: 8b           ??MXdI?? e .....                 phb
fe/b1ca: 68           ??MXdI?? e .....                 pla
fe/b1cb: eb           ??MXdI?? e .....                 xba
fe/b1cc: c2 30        ??MXdI?? e .....                 rep     #$30
                                                       .rwid   longm,longx
fe/b1ce: 4a           ??mxdI?? e .....                 lsr     A
fe/b1cf: 4a           n?mxdI?? e .....                 lsr     A
fe/b1d0: 18           n?mxdI?? e .....                 clc
fe/b1d1: 69 28 00     n?mxdI?c e .....                 adc     #$0028
fe/b1d4: 48           ??mxdI?? e .....                 pha
fe/b1d5: f4 00 46     ??mxdI?? e .....                 pea     $4600
fe/b1d8: ab           ??mxdI?? e .....                 plb
fe/b1d9: ab           ??mxdI?? e .....                 plb
fe/b1da: ad 00 20     ??mxdI?? e .....                 lda     $2000
fe/b1dd: 49 80 00     ??mxdI?? e .....                 eor     #$0080
fe/b1e0: ae 00 00     ??mxdI?? e .....                 ldx     a:$0000
fe/b1e3: 8d 00 00     ??mxdI?? e .....                 sta     a:$0000
fe/b1e6: 4d 00 20     ??mxdI?? e .....                 eor     $2000
fe/b1e9: 8e 00 00     ??mxdI?? e .....                 stx     a:$0000
fe/b1ec: f0 03        ??mxdI?? e .....                 beq     LFEB1F1
fe/b1ee: a9 18 00     ??mxdIz? e .....                 lda     #$0018
fe/b1f1: 63 01        ??mxdI?? e ....> LFEB1F1         adc     $01,S
fe/b1f3: fa           ??mxdI?? e .....                 plx
fe/b1f4: 20 82 b3     ??mxdI?? e .....                 jsr     LFEB382
fe/b1f7: e2 30        ??mxdI?? e .....                 sep     #$30
                                                       .rwid   shortm,shortx
fe/b1f9: 02 01        ??MXdI?? e .....                 cop     COP_01_OPWRS
fe/b1fb: 4b 0d 0a 0a+            .T...                 .zstr   “K”,$0d,$0a,$0a
fe/b200: ab           ??MXdI?? e .....                 plb
fe/b201: 80 00        ??MXdI?? e ...#.                 bra     LFEB203

fe/b203: 4b           ??MXdI?? e ....> LFEB203         phk
                                                       .dbank  K (auto)
fe/b204: ab           ??MXdI?? e .....                 plb
fe/b205: a2 00        ??MXdI?? e .....                 ldx     #$00
fe/b207: 80 04        n?MXdIZ? e ...#.                 bra     @lpstart

fe/b209: 8a           ??MXdI?c e ....> @lp             txa
fe/b20a: 69 03        ??MXdI?c e .....                 adc     #$03
fe/b20c: aa           ??MXdI?? e .....                 tax
fe/b20d: bd ea b2     ??MXdI?? e ....> @lpstart        lda     LFEB2EA & $ffff,x
fe/b210: f0 05        ??MXdI?? e .....                 beq     LFEB217
fe/b212: 20 f3 b2     ??MXdIz? e .....                 jsr     LFEB2F3
fe/b215: 90 f2        ??MXdI?? e .....                 bcc     @lp
fe/b217: da           ??MXdI?? e ....> LFEB217         phx
fe/b218: a2 18        ??MXdI?? e .....                 ldx     #$18
fe/b21a: 22 ac ff 00  n?MXdIz? e .....                 jsl     __KB
fe/b21e: fa           ??MXdI?? e .....                 plx
fe/b21f: bd eb b2     ??MXdI?? e .....                 lda     LFEB2EB & $ffff,x
fe/b222: f0 0d        ??MXdI?? e .....                 beq     LFEB231
fe/b224: da           ??MXdIz? e .....                 phx
fe/b225: a2 02        ??MXdIz? e .....                 ldx     #$02
fe/b227: 02 28        n?MXdIz? e .....                 cop     COP_28_OPCMD
fe/b229: 45 43 4f 4e+            .T...                 .zstr   “ECONET”
fe/b230: fa           n?MXdIz? e .T...                 plx
fe/b231: bd ec b2     ??MXdI?? e ....> LFEB231         lda     LFEB2EC & $ffff,x
fe/b234: d0 24        ??MXdI?? e .....                 bne     LFEB25A
fe/b236: 02 26        ??MXdIZ? e .....                 cop     COP_26_OPBHA
fe/b238: 4d 45 4e 55+            .T...                 .zstr   “MENU”
fe/b23d: a0 00        ??MXdIZ? e .....                 ldy     #$00
fe/b23f: c2 30        n?MXdIZ? e .....                 rep     #$30
                                                       .rwid   longm,longx
fe/b241: 4b           n?mxdIZ? e .....                 phk
fe/b242: 20 4b ee     n?mxdIZ? e .....                 jsr     brlFindModule
fe/b245: e2 30        ??mxdI?? e .....                 sep     #$30
                                                       .rwid   shortm,shortx
fe/b247: b0 0f        ??MXdI?? e .....                 bcs     @nomenu
fe/b249: c2 30        ??MXdI?c e .....                 rep     #$30
                                                       .rwid   longm,longx
fe/b24b: 4b           ??mxdI?c e .....                 phk
fe/b24c: 20 51 ee     ??mxdI?c e .....                 jsr     LFEEE51
fe/b24f: e2 30        ??mxdI?? e .....                 sep     #$30
                                                       .rwid   shortm,shortx
fe/b251: f4 00 00     ??MXdI?? e .....                 pea     $0000
fe/b254: ab           ??MXdI?? e .....                 plb
fe/b255: ab           ??MXdI?? e .....                 plb
fe/b256: 90 5b        ??MXdI?? e .....                 bcc     LFEB2B3
fe/b258: a9 01        ??MXdI?C e ....> @nomenu         lda     #$01
fe/b25a: c9 01        ??MXdIz? e ....> LFEB25A         cmp     #$01
fe/b25c: f0 46        ??MXdI?? e .....                 beq     LFEB2A4
fe/b25e: a9 d3        ??MXdIz? e .....                 lda     #$d3
fe/b260: 20 f3 b2     N?MXdIz? e .....                 jsr     LFEB2F3
fe/b263: 90 3f        ??MXdI?? e .....                 bcc     LFEB2A4
fe/b265: 02 26        ??MXdI?C e .....                 cop     COP_26_OPBHA
fe/b267: 52 41 4d 69+            .T...                 .zstr   “RAMinitialise”,$0d
fe/b276: 02 0e        ??MXdI?C e .....                 cop     COP_0E_OPCOM
fe/b278: 02 01        ??MXdI?C e .....                 cop     COP_01_OPWRS
fe/b27a: 43 4d 4f 53+            .T...                 .zstr   “CMOS MEMORY INITIALISED - NOW REBOOT”,$0d,$0a,$0a
fe/b2a2: 80 fe        ??MXdI?C e ...#> LFEB2A2         bra     LFEB2A2

fe/b2a4: 02 26        ??MXdI?? e ....> LFEB2A4         cop     COP_26_OPBHA
fe/b2a6: 42 41 53 49+            .T...                 .zstr   “BASIC”
fe/b2ac: a2 00        ??MXdI?? e .....                 ldx     #$00
fe/b2ae: 9b           n?MXdIZ? e .....                 txy
fe/b2af: 02 34        ??MXdI?? e .....                 cop     COP_34_OPRMI
fe/b2b1: b0 fe        ??MXdI?? e ....> LFEB2B1         bcs     LFEB2B1
fe/b2b3: 8b           ??MXdI?c e ....> LFEB2B3         phb
fe/b2b4: eb           ??MXdI?c e .....                 xba
fe/b2b5: 48           ??MXdI?c e .....                 pha
fe/b2b6: eb           ??MXdI?c e .....                 xba
fe/b2b7: 48           ??MXdI?c e .....                 pha
fe/b2b8: f4 00 02     ??MXdI?c e .....                 pea     $0200
fe/b2bb: 2b           ??MXdI?c e .....                 pld
fe/b2bc: a2 02        ??MXdI?c e .....                 ldx     #$02
fe/b2be: 22 90 ff 00  n?MXdIzc e .....                 jsl     __CO
fe/b2c2: 90 1a        ??MXdI?? e .....                 bcc     LFEB2DE
fe/b2c4: 00 00        ??MXdI?C e ...#.                 brk     $00

fe/b2c6: 43 61 6e 6e+            .....                 .zstr   “Cannot start BASIC/MENU”

fe/b2de: 68           ??MXdI?c e ....> LFEB2DE         pla
fe/b2df: eb           ??MXdI?c e .....                 xba
fe/b2e0: 68           ??MXdI?c e .....                 pla
fe/b2e1: eb           ??MXdI?c e .....                 xba
fe/b2e2: ab           ??MXdI?c e .....                 plb
fe/b2e3: a2 02        ??MXdI?c e .....                 ldx     #$02
fe/b2e5: 20 35 dc     n?MXdIzc e .....                 jsr     LFEDC35
fe/b2e8: 80 fe        ??MXdI?? e ...#> LFEB2E8         bra     LFEB2E8

fe/b2ea: b1                      ..... LFEB2EA         .dd1    $b1
fe/b2eb: ff                      ..... LFEB2EB         .dd1    $ff
fe/b2ec: 01                      ..... LFEB2EC         .dd1    $01
fe/b2ed: e8                      .....                 .dd1    $e8
fe/b2ee: ff                      .....                 .dd1    $ff
fe/b2ef: 02                      .....                 .dd1    $02
fe/b2f0: 00                      .....                 .dd1    $00
fe/b2f1: ff                      .....                 .dd1    $ff
fe/b2f2: 00                      .....                 .dd1    $00

fe/b2f3: da           ??MXdIz? e ....> LFEB2F3         phx
fe/b2f4: a2 10        ??MXdIz? e .....                 ldx     #$10
fe/b2f6: 22 ac ff 00  n?MXdIz? e .....                 jsl     __KB
fe/b2fa: fa           ??MXdI?? e .....                 plx
fe/b2fb: 60           ??MXdI?? e ...#.                 rts

fe/b2fc: 08           ??MXdI?? e ....> LFEB2FC         php
fe/b2fd: 0b           ??MXdI?? e .....                 phd
fe/b2fe: 8b           ??MXdI?? e .....                 phb
fe/b2ff: c2 30        ??MXdI?? e .....                 rep     #$30
                                                       .rwid   longm,longx
fe/b301: a9 00 01     ??mxdI?? e .....                 lda     #$0100
fe/b304: a2 18 00     n?mxdIz? e .....                 ldx     #$0018
fe/b307: 22 8c ff 00  n?mxdIz? e .....                 jsl     __MM
fe/b30b: 90 1f        ??mxdI?? e .....                 bcc     LFEB32C
fe/b30d: 02 0f        ??mxdI?C e ....> LFEB30D         cop     COP_0F_OPERR
fe/b30f: 4d 4f 53 20+            .T...                 .zstr   “MOS couldn't allocate memory”
fe/b32c: f4 00 ff     ??mxdI?? e ....> LFEB32C         pea     $ff00
fe/b32f: 2b           ??mxdI?? e .....                 pld
fe/b330: 48           ??mxdI?? e .....                 pha
fe/b331: 8b           ??mxdI?? e .....                 phb
fe/b332: 8b           ??mxdI?? e .....                 phb
fe/b333: a9 e0 00     ??mxdI?? e .....                 lda     #$00e0
fe/b336: 85 00        n?mxdIz? e .....                 sta     $00
fe/b338: 0b           n?mxdIz? e .....                 phd
fe/b339: a2 10 00     n?mxdIz? e .....                 ldx     #$0010
fe/b33c: 22 8c ff 00  n?mxdIz? e .....                 jsl     __MM
fe/b340: 2b           ??mxdI?? e .....                 pld
fe/b341: fa           ??mxdI?? e .....                 plx
fe/b342: 86 03        ??mxdI?? e .....                 stx     DPCOP_X
fe/b344: fa           ??mxdI?? e .....                 plx
fe/b345: 86 02        ??mxdI?? e .....                 stx     DPCOP_Y+1
fe/b347: 87 02        ??mxdI?? e .....                 sta     [DPCOP_Y+1]
fe/b349: a8           ??mxdI?? e .....                 tay
fe/b34a: a9 00 00     ??mxdI?? e .....                 lda     #$0000
fe/b34d: 88           n?mxdIZ? e .....                 dey
fe/b34e: 88           ??mxdI?? e .....                 dey
fe/b34f: 97 02        ??mxdI?? e ....> LFEB34F         sta     [DPCOP_Y+1],y
fe/b351: 88           ??mxdI?? e .....                 dey
fe/b352: 88           ??mxdI?? e .....                 dey
fe/b353: d0 fa        ??mxdI?? e .....                 bne     LFEB34F
fe/b355: af 04 fe 00  ??mxdIZ? e .....                 ldal    f:$00fe04
fe/b359: a0 02 00     ??mxdI?? e .....                 ldy     #$0002
fe/b35c: 97 02        n?mxdIz? e .....                 sta     [DPCOP_Y+1],y
fe/b35e: a2 10 00     n?mxdIz? e .....                 ldx     #$0010
fe/b361: a0 05 00     n?mxdIz? e .....                 ldy     #$0005
fe/b364: 22 8c ff 00  n?mxdIz? e .....                 jsl     __MM
fe/b368: 5b           ??mxdI?? e .....                 tcd
fe/b369: a2 0e 00     ??mxdI?? e .....                 ldx     #$000e
fe/b36c: a0 05 00     n?mxdIz? e .....                 ldy     #$0005
fe/b36f: 22 8c ff 00  n?mxdIz? e .....                 jsl     __MM
fe/b373: b0 98        ??mxdI?? e .....                 bcs     LFEB30D
fe/b375: a2 04 00     ??mxdI?c e .....                 ldx     #$0004
fe/b378: 22 8c ff 00  n?mxdIzc e .....                 jsl     __MM
fe/b37c: b0 8f        ??mxdI?? e .....                 bcs     LFEB30D
fe/b37e: ab           ??mxdI?c e .....                 plb
fe/b37f: 2b           ??mxdI?c e .....                 pld
fe/b380: 28           ??mxdI?c e .....                 plp
fe/b381: 60           ??mx???? e ...#.                 rts

fe/b382: a2 64 00     ??mxdI?? e ....> LFEB382         ldx     #$0064
fe/b385: 20 91 b3     n?mxdIz? e .....                 jsr     LFEB391
fe/b388: a2 0a 00     ??mxdI?? e .....                 ldx     #$000a
fe/b38b: 20 91 b3     n?mxdIz? e .....                 jsr     LFEB391
fe/b38e: a2 01 00     ??mxdI?? e .....                 ldx     #$0001
fe/b391: da           n?mxdIz? e ....> LFEB391         phx
fe/b392: a2 ff ff     n?mxdIz? e .....                 ldx     #$ffff
fe/b395: e8           ??mxdI?? e ....> LFEB395         inx
fe/b396: 38           ??mxdI?? e .....                 sec
fe/b397: e3 01        ??mxdI?C e .....                 sbc     $01,S
fe/b399: b0 fa        ??mxdI?? e .....                 bcs     LFEB395
fe/b39b: 63 01        ??mxdI?c e .....                 adc     $01,S
fe/b39d: 48           ??mxdI?? e .....                 pha
fe/b39e: 8a           ??mxdI?? e .....                 txa
fe/b39f: 09 30 00     ??mxdI?? e .....                 ora     #$0030
fe/b3a2: 02 00        ??mxdIz? e .....                 cop     COP_00_OPWRC
fe/b3a4: 68           ??mxdIz? e .....                 pla
fe/b3a5: fa           ??mxdI?? e .....                 plx
fe/b3a6: 60           ??mxdI?? e ...#.                 rts

                                                       .rwid   shortm,shortx
fe/b3a7: 08           ??MXdI?? e ....> LFEB3A7         php
fe/b3a8: 8b           ??MXdI?? e .....                 phb
fe/b3a9: 4b           ??MXdI?? e .....                 phk
                                                       .dbank  K (auto)
fe/b3aa: ab           ??MXdI?? e .....                 plb
fe/b3ab: 0b           ??MXdI?? e .....                 phd
fe/b3ac: 7b           ??MXdI?? e .....                 tdc
fe/b3ad: c2 30        ??MXdI?? e .....                 rep     #$30
                                                       .rwid   longm,longx
fe/b3af: 2b           ??mxdI?? e .....                 pld
fe/b3b0: ab           ??mxdI?? e .....                 plb
fe/b3b1: 28           ??mxdI?? e .....                 plp
                                                       .rwid   shortm,shortx
fe/b3b2: 60           ??MXdI?? e ...#.                 rts

                                                       .rwid   longm,longx
fe/b3b3: da           ??mxdI?? e ....> LFEB3B3         phx
fe/b3b4: 2b           ??mxdI?? e .....                 pld                       ;set DP to X
fe/b3b5: 48           ??mxdI?? e .....                 pha
fe/b3b6: a9 04 00     ??mxdI?? e .....                 lda     #HND_type_4_CBSIND
fe/b3b9: 20 01 ce     n?mxdIz? e .....                 jsr     obtainFreeBlock
fe/b3bc: b0 2b        ??mxdI?? e .....                 bcs     LFEB3E9
fe/b3be: ad e2 b3     ??mxdI?c e .....                 lda     templateModCallBack2 & $ffff
fe/b3c1: 9f 00 00 00  ??mxdI?c e .....                 stal    f:$000000,x
fe/b3c5: ad e7 b3     ??mxdI?c e .....                 lda     0+(templateModCallBack2 & $ffff)+5
fe/b3c8: 9f 05 00 00  ??mxdI?c e .....                 stal    f:$000005,x
fe/b3cc: a5 01        ??mxdI?c e .....                 lda     DPCOP_Y
fe/b3ce: 9f 02 00 00  ??mxdI?c e .....                 stal    f:$000002,x
fe/b3d2: a5 02        ??mxdI?c e .....                 lda     DPCOP_Y+1
fe/b3d4: 9f 03 00 00  ??mxdI?c e .....                 stal    f:$000003,x
fe/b3d8: 64 02        ??mxdI?c e .....                 stz     DPCOP_Y+1
fe/b3da: 86 01        ??mxdI?c e .....                 stx     DPCOP_Y
fe/b3dc: 68           ??mxdI?c e .....                 pla
fe/b3dd: 9f 08 00 00  ??mxdI?c e .....                 stal    f:$000008,x
fe/b3e1: 60           ??mxdI?c e ...#.                 rts

                                                       .rwid   shortm,shortx
fe/b3e2: 0b           ??MXd??? e @T... templateModCallBack2 phd
fe/b3e3: 22 00 00 00  ??MXd??? e .....                 jsl     $000000
fe/b3e7: 2b           ??MXd??? e .....                 pld
fe/b3e8: 6b           ??MXd??? e ...#.                 rtl

                                                       .rwid   longm,longx
fe/b3e9: 80 fe        ??mxdI?C e ...#> LFEB3E9         bra     LFEB3E9

                                                       .rwid   shortm,shortx
fe/b3eb: a9 53        ??MXdI?? e ....> LFEB3EB         lda     #$53
fe/b3ed: 8f 06 00 40  n?MXdIz? e .....                 stal    $400006
fe/b3f1: 8f 06 00 40  n?MXdIz? e .....                 stal    $400006
fe/b3f5: a9 00        n?MXdIz? e .....                 lda     #$00
fe/b3f7: 8f 04 00 40  n?MXdIZ? e .....                 stal    $400004
fe/b3fb: 8f 02 00 40  n?MXdIZ? e .....                 stal    $400002
fe/b3ff: 60           n?MXdIZ? e ...#.                 rts

fe/b400: a9 03        ??MXdI?? e ....> LFEB400         lda     #$03
fe/b402: 8f 00 00 43  n?MXdIz? e .....                 stal    $430000
fe/b406: 60           n?MXdIz? e ...#.                 rts

fe/b407: a9 00        ??MXdI?? e ....> LFEB407         lda     #$00
fe/b409: a2 cf        n?MXdIZ? e .....                 ldx     #$cf
fe/b40b: 95 00        ??MXdIz? e ....> LFEB40B         sta     $00,x
fe/b40d: e8           ??MXdIz? e .....                 inx
fe/b40e: d0 fb        ??MXdI?? e .....                 bne     LFEB40B
fe/b410: 60           ??MXdIZ? e ...#.                 rts

fe/b411: 8b           nvMXdIzc e ....> initSYSVARS     phb
fe/b412: 4b           nvMXdIzc e .....                 phk
                                                       .dbank  K (auto)
fe/b413: ab           nvMXdIzc e .....                 plb
fe/b414: a9 00        ?vMXdI?c e .....                 lda     #$00
fe/b416: e0 c3        ?vMXdI?? e ....> @blanklp        cpx     #$c3
fe/b418: 90 02        ?vMXdI?? e .....                 bcc     @sk1
fe/b41a: a9 ff        ?vMXdI?C e .....                 lda     #$ff
fe/b41c: 9f 00 a5 00  ?vMXdI?? e ....> @sk1            stal    f:SYSVARS,x
fe/b420: e8           ?vMXdI?? e .....                 inx
fe/b421: d0 f3        ?vMXdI?? e .....                 bne     @blanklp
fe/b423: bb           ?vMXdIZ? e .....                 tyx
fe/b424: bd be af     ?vMXdI?? e ....> @cpylp          lda     0+(tblInitSysVars & $ffff)-1,x
fe/b427: 9f ff a4 00  ?vMXdI?? e .....                 stal    f:SYSVARS-1,x
fe/b42b: ca           ?vMXdI?? e .....                 dex
fe/b42c: d0 f6        ?vMXdI?? e .....                 bne     @cpylp
fe/b42e: ab           ?vMXdIZ? e .....                 plb
fe/b42f: 60           ?vMXdI?? e ...#.                 rts

fe/b430: a9 00        ??MXdI?? e ....> resIrqLastBreak lda     #$00
fe/b432: 8f 00 fe 45  n?MXdIZ? e .....                 stal    sheila_ULA_IRQ_CTL
fe/b436: 8d 8d a5     n?MXdIZ? e .....                 sta     SYSVARS_8d_lastbreak
fe/b439: a9 f8        n?MXdIZ? e .....                 lda     #$f8
fe/b43b: 8f 05 fe 45  N?MXdIz? e .....                 stal    sheila_ULA_PAG_IRQCLR
fe/b43f: 60           N?MXdIz? e ...#.                 rts

fe/b440: af f8 ff f0  ??MXdI?? e ....> LFEB440         ldal    HW_TYPE_DETECT_QRY
fe/b444: f0 28        ??MXdI?? e .....                 beq     LFEB46E
fe/b446: af 00 00 42  ??MXdIz? e .....                 ldal    VIA_ORB
fe/b44a: 29 df        ??MXdI?? e .....                 and     #$df
fe/b44c: 8f 00 00 42  ??MXdI?? e .....                 stal    VIA_ORB
fe/b450: af ff 9f 45  ??MXdI?? e .....                 ldal    $459fff
fe/b454: 29 0f        ??MXdI?? e .....                 and     #$0f
fe/b456: 85 cf        n?MXdI?? e .....                 sta     $cf
fe/b458: af ff bf 45  n?MXdI?? e .....                 ldal    $45bfff
fe/b45c: 0a           ??MXdI?? e .....                 asl     A
fe/b45d: 0a           ??MXdI?? e .....                 asl     A
fe/b45e: 0a           ??MXdI?? e .....                 asl     A
fe/b45f: 0a           ??MXdI?? e .....                 asl     A
fe/b460: 05 cf        ??MXdI?? e .....                 ora     $cf
fe/b462: 85 cf        ??MXdI?? e .....                 sta     $cf
fe/b464: af 00 00 42  ??MXdI?? e .....                 ldal    VIA_ORB
fe/b468: 09 20        ??MXdI?? e .....                 ora     #$20
fe/b46a: 8f 00 00 42  ??MXdIz? e .....                 stal    VIA_ORB
fe/b46e: 60           ??MXdI?? e ...#> LFEB46E         rts

fe/b46f: a9 90        ??MXdI?? e ....> LFEB46F         lda     #$90
fe/b471: 8f 0e 00 42  N?MXdIz? e .....                 stal    VIA_IER
fe/b475: a9 00        N?MXdIz? e .....                 lda     #$00
fe/b477: 8f 01 00 42  n?MXdIZ? e .....                 stal    VIA_ORA
fe/b47b: a9 ff        n?MXdIZ? e .....                 lda     #$ff
fe/b47d: 8f 03 00 42  N?MXdIz? e .....                 stal    VIA_DDRA
fe/b481: a9 6e        N?MXdIz? e .....                 lda     #$6e
fe/b483: 8f 00 00 42  n?MXdIz? e .....                 stal    VIA_ORB
fe/b487: af f8 ff f0  n?MXdIz? e .....                 ldal    HW_TYPE_DETECT_QRY
fe/b48b: d0 04        ??MXdI?? e .....                 bne     LFEB491
fe/b48d: a9 66        ??MXdIZ? e .....                 lda     #$66
fe/b48f: 80 02        n?MXdIz? e ...#.                 bra     LFEB493

fe/b491: a9 f6        ??MXdIz? e ....> LFEB491         lda     #$f6
fe/b493: 8f 02 00 42  ??MXdIz? e ....> LFEB493         stal    VIA_DDRB
fe/b497: a9 29        ??MXdIz? e .....                 lda     #$29
fe/b499: 8f 0c 00 42  n?MXdIz? e .....                 stal    VIA_PCR
fe/b49d: a9 a1        n?MXdIz? e .....                 lda     #$a1
fe/b49f: 8f 04 00 42  N?MXdIz? e .....                 stal    VIA_T1C_L
fe/b4a3: 8f 06 00 42  N?MXdIz? e .....                 stal    VIA_T1L_L
fe/b4a7: a9 01        N?MXdIz? e .....                 lda     #$01
fe/b4a9: 8f 05 00 42  n?MXdIz? e .....                 stal    VIA_T1C_H
fe/b4ad: 8f 07 00 42  n?MXdIz? e .....                 stal    VIA_T1L_H
fe/b4b1: a9 40        n?MXdIz? e .....                 lda     #$40
fe/b4b3: 8f 0b 00 42  n?MXdIz? e .....                 stal    VIA_ACR
fe/b4b7: 60           n?MXdIz? e ...#.                 rts

fe/b4b8: 0b           ??MXdI?? e ....> LFEB4B8         phd
fe/b4b9: 8b           ??MXdI?? e .....                 phb
fe/b4ba: 02 26        ??MXdI?? e .....                 cop     COP_26_OPBHA
fe/b4bc: 52 41 4d 73+            .T...                 .zstr   “RAMstart”,$0d
fe/b4c6: 02 0e        ??MXdI?? e .....                 cop     COP_0E_OPCOM
fe/b4c8: ab           ??MXdI?? e .....                 plb
fe/b4c9: 2b           ??MXdI?? e .....                 pld
fe/b4ca: 60           ??MXdI?? e ...#.                 rts

                                       ; moves program bytes from this rom to bank 0
                                       ; 
                                       ; number of bytes must be even and contained in HA
                                                       .rwid   longm,longx
fe/b4cb: 4b           n?mxdIz? e ....> movPrg2B0       phk
                                                       .dbank  K (auto)
fe/b4cc: ab           n?mxdIz? e .....                 plb
fe/b4cd: 3a           ??mxdI?? e ....> @lp             dec     A
fe/b4ce: 3a           ??mxdI?? e .....                 dec     A
fe/b4cf: 30 0f        ??mxdI?? e .....                 bmi     @ex
fe/b4d1: 48           n?mxdI?? e .....                 pha
fe/b4d2: b9 00 00     n?mxdI?? e .....                 lda     $0000,y
fe/b4d5: 9f 00 00 00  ??mxdI?? e .....                 stal    f:$000000,x
fe/b4d9: 68           ??mxdI?? e .....                 pla
fe/b4da: e8           ??mxdI?? e .....                 inx
fe/b4db: e8           ??mxdI?? e .....                 inx
fe/b4dc: c8           ??mxdI?? e .....                 iny
fe/b4dd: c8           ??mxdI?? e .....                 iny
fe/b4de: 80 ed        ??mxdI?? e ...#.                 bra     @lp

fe/b4e0: 60           N?mxdI?? e ...#> @ex             rts

fe/b4e1: 08           n?mxdIZc e ....> initialize_default_vectors_QRY php
fe/b4e2: 78           n?mxdIZc e .....                 sei
fe/b4e3: c2 30        n?mxdIZc e .....                 rep     #$30
fe/b4e5: a0 3d b5     n?mxdIZc e .....                 ldy     #tblDefaultRoutines & $ffff
fe/b4e8: a2 80 fe     n?mxdIzc e .....                 ldx     #tblB0JumpTableFE80_QRY
fe/b4eb: a9 34 00     n?mxdIzc e .....                 lda     #$0034
fe/b4ee: 20 cb b4     n?mxdIzc e .....                 jsr     movPrg2B0
fe/b4f1: e2 20        ??mxdI?? e .....                 sep     #$20
                                       ; Resets all the jml bank addresses to point to current ROM
                                                       .rwid   shortm
fe/b4f3: 4b           ??MxdI?? e .....                 phk
fe/b4f4: 68           ??MxdI?? e .....                 pla
fe/b4f5: a2 33 00     ??MxdI?? e .....                 ldx     #$0033
fe/b4f8: 9f 80 fe 00  n?MxdI?? e ....> @lp0            stal    f:LFE80,x
fe/b4fc: ca           n?MxdI?? e .....                 dex
fe/b4fd: ca           ??MxdI?? e .....                 dex
fe/b4fe: ca           ??MxdI?? e .....                 dex
fe/b4ff: ca           ??MxdI?? e .....                 dex
fe/b500: 10 f6        ??MxdI?? e .....                 bpl     @lp0
fe/b502: c2 20        N?MxdI?? e .....                 rep     #$20
                                                       .rwid   longm
fe/b504: a0 71 b5     N?mxdI?? e .....                 ldy     #tblDefaultRoutines2Pre & $ffff
fe/b507: a2 80 ff     n?mxdIz? e .....                 ldx     #tblB0JumpTableFF80_QRY
fe/b50a: a9 34 00     n?mxdIz? e .....                 lda     #$0034
fe/b50d: 20 cb b4     n?mxdIz? e .....                 jsr     movPrg2B0
fe/b510: a0 a5 b5     ??mxdI?? e .....                 ldy     #tblDefaultHwJml & $ffff
fe/b513: a2 e0 fe     n?mxdIz? e .....                 ldx     #tblB0JumpTableFEE0_QRY
fe/b516: a9 20 00     n?mxdIz? e .....                 lda     #$0020
fe/b519: 20 cb b4     n?mxdIz? e .....                 jsr     movPrg2B0
fe/b51c: e2 20        ??mxdI?? e .....                 sep     #$20
                                       ; Resets all the jml bank addresses to point to current ROM
                                                       .rwid   shortm
fe/b51e: 4b           ??MxdI?? e .....                 phk
fe/b51f: 68           ??MxdI?? e .....                 pla                       ;this ROM's bank 
fe/b520: a2 1f 00     ??MxdI?? e .....                 ldx     #$001f
fe/b523: 9f e0 fe 00  n?MxdI?? e ....> LFEB523         stal    f:LFEE0,x
fe/b527: ca           n?MxdI?? e .....                 dex
fe/b528: ca           ??MxdI?? e .....                 dex
fe/b529: ca           ??MxdI?? e .....                 dex
fe/b52a: ca           ??MxdI?? e .....                 dex
fe/b52b: 10 f6        ??MxdI?? e .....                 bpl     LFEB523
fe/b52d: c2 20        N?MxdI?? e .....                 rep     #$20
                                                       .rwid   longm
fe/b52f: a0 c6 b5     N?mxdI?? e .....                 ldy     #tblHWVectors & $ffff
fe/b532: a2 e0 ff     n?mxdIz? e .....                 ldx     #BANK0_HW_VECTORS
fe/b535: a9 20 00     n?mxdIz? e .....                 lda     #$0020
fe/b538: 20 cb b4     n?mxdIz? e .....                 jsr     movPrg2B0
fe/b53b: 28           ??mxdI?? e .....                 plp
fe/b53c: 60           n?mxdIZc e ...#.                 rts

                                       ********************************************************************************
                                       * ; Note: the following table is copied to bank 0 at fe80 and then all the     *
                                       * bank addresses are tweaked to point back at this ROM                         *
                                       *                                                                              *
                                       * TODO: tidy the arithmetic below to & 0x00FFFF                                *
                                       ********************************************************************************
fe/b53d:                               tblDefaultRoutines
                                                       .addrs  $fe80
                                                       .rwid   shortm,shortx
00/fe80: 5c e6 b5 00  ??MXd??? e @T.#> LFE80           jml     default__TB-$fe0000

00/fe84: 5c 04 b6 00  ??MXd??? e @T.#> LFE84           jml     default__LN-$fe0000

00/fe88: 5c bb cf 00  ???????? e .T.#> LFE88           jml     default__ST-$fe0000

00/fe8c: 5c 85 d2 00  ????d??? e .T.#> LFE8C           jml     default__MM-$fe0000

00/fe90: 5c 12 da 00  ??MXd??? e .T.#> LFE90           jml     default__CO-$fe0000

00/fe94: 5c 48 dc 00  ??MXd??? e @T.#> LFE94           jml     default__CCO-$fe0000

00/fe98: 5c ad dc 00  ??MXd??? e @T.#> LFE98           jml     default__CWT-$fe0000

00/fe9c: 5c 1b dc 00  ??MXd??? e @T.#> LFE9C           jml     default__CRS-$fe0000

00/fea0: 5c 97 ed 00  ??MXd??? e @T.#> LFEA0           jml     default__OSB-$fe0000

00/fea4: 5c 9a ed 00  ??MXd??? e @T.#> LFEA4           jml     default__OSW-$fe0000

00/fea8: 5c 03 b6 00  ??MXd??? e @T.#> LFEA8           jml     default__VDU-$fe0000

00/feac: 5c 5d fe 00  ??MXd??? e .T.#> LFEAC           jml     default__KB-$fe0000

00/feb0: 5c cb ed 00  ????d??? e @T.#> LFEB0           jml     default__EV-$fe0000
                                                       .adrend ↑ $fe80

                                       ********************************************************************************
                                       * BRL's to the jump table above for "well known" entry points                  *
                                       *                                                                              *
                                       * QRY not clear why this double indirection is needed?                         *
                                       ********************************************************************************
fe/b571:                               tblDefaultRoutines2Pre
                                                       .addrs  *-$fdb5f1
00/ff80: 82 fd fe     ??MXd??? e @T.#. __TB            brl     LFE80

00/ff83: ea           ??MXd??? e @T...                 nop
00/ff84: 82 fd fe     ??MXd??? e ...#. __LN            brl     LFE84

00/ff87: ea           ??MXd??? e @T...                 nop
00/ff88: 82 fd fe     ???????? e ...#> __ST            brl     LFE88

00/ff8b: ea           ??MXd??? e @T...                 nop
00/ff8c: 82 fd fe     ????d??? e ...#> __MM            brl     LFE8C

00/ff8f: ea           ??MXd??? e @T...                 nop
00/ff90: 82 fd fe     ??MXd??? e ...#> __CO            brl     LFE90

00/ff93: ea           ??MXd??? e @T...                 nop
00/ff94: 82 fd fe     ??MXd??? e ...#. __CCO           brl     LFE94

00/ff97: ea           ??MXd??? e @T...                 nop
00/ff98: 82 fd fe     ??MXd??? e ...#> __CWT           brl     LFE98

00/ff9b: ea           ??MXd??? e @T...                 nop
00/ff9c: 82 fd fe     ??MXd??? e ...#. __CRS           brl     LFE9C

00/ff9f: ea           ??MXd??? e @T...                 nop
00/ffa0: 82 fd fe     ??MXd??? e ...#. __OSB           brl     LFEA0

00/ffa3: ea           ??MXd??? e @T...                 nop
00/ffa4: 82 fd fe     ??MXd??? e ...#. OSW             brl     LFEA4

00/ffa7: ea           ??MXd??? e @T...                 nop
00/ffa8: 82 fd fe     ??MXd??? e ...#. __VDU           brl     LFEA8

00/ffab: ea           ??MXd??? e @T...                 nop
00/ffac: 82 fd fe     ??MXd??? e ...#> __KB            brl     LFEAC

00/ffaf: ea           ??MXd??? e @T...                 nop
00/ffb0: 82 fd fe     ????d??? e ...#> __EV            brl     LFEB0

00/ffb3: ea           ??MXd??? e @T...                 nop
                                                       .adrend ↑ $ff80

                                       ; ZXXXXXXX
fe/b5a5:                               tblDefaultHwJml
                                                       .addrs  $fee0
00/fee0: 5c a5 b5 00  ??MXd??? e @T.#. LFEE0           jml     tblDefaultHwJml-$fe0000

00/fee4: 5c a9 b5 00  ??MXd??? e @T.#.                 jml     tblDefaultHwJml-$fdfffc ;TODO - fix this up to reference self &FFFF

00/fee8: 5c 55 b6 00  ??MXd??? e @T.#. hwjmpvecCOP     jml     default_IVCOP-$fe0000 ;COP

00/feec: 5c 34 b6 00  ??MXd??? e @T.#. hwjmpvecBRK     jml     default_IVBRK-$fe0000 ;BRK

00/fef0: 5c 4f b0 00  ??MXd??? e @T.#. hwjmpvecABORT   jml     Serv2_RESET-$fe0000 ;ABORT - causes a RESET

00/fef4: 5c c5 b5 00  ??MXd??? e @T.#. hwjmpvecNMI     jml     default_IVNMI-$fe0000 ;NMI

00/fef8: 5c 4f b0 00  ??MXd??? e @T.#. hwjmpvecRESET   jml     Serv2_RESET-$fe0000 ;RESET

00/fefc: 5c c2 fb 00  ??MXd??? e @T.#. hwjmpvecIRQ     jml     default_IVIRQ-$fe0000 ;IRQ
                                                       .adrend ↑ $fee0

fe/b5c5: 40           ???????? e @T.#. default_IVNMI   rti

fe/b5c6: 00 00                   .T... tblHWVectors    .dd2    $0000
fe/b5c8: 00 00                   .T...                 .dd2    $0000
fe/b5ca: e8 fe                   .T...                 .dd2    hwjmpvecCOP
fe/b5cc: ec fe                   .T...                 .dd2    hwjmpvecBRK
fe/b5ce: f0 fe                   .T...                 .dd2    hwjmpvecABORT
fe/b5d0: f4 fe                   .T...                 .dd2    hwjmpvecNMI
fe/b5d2: f8 fe                   .T...                 .dd2    hwjmpvecRESET
fe/b5d4: fc fe                   .T...                 .dd2    hwjmpvecIRQ
fe/b5d6: 00 00                   .T...                 .dd2    $0000
fe/b5d8: 00 00                   .T...                 .dd2    $0000
fe/b5da: 00 00                   .T...                 .dd2    $0000
fe/b5dc: 00 00                   .T...                 .dd2    $0000
fe/b5de: f0 fe                   .T...                 .dd2    hwjmpvecABORT
fe/b5e0: f4 fe                   .T...                 .dd2    hwjmpvecNMI
fe/b5e2: f8 fe                   .T...                 .dd2    hwjmpvecRESET
fe/b5e4: 00 ff                   .T...                 .dd2    $ff00
fe/b5e6: 02 0f        ??MXd??? e @T... default__TB     cop     COP_0F_OPERR
fe/b5e8: 46 43 20 69+            .T...                 .zstr   “FC interface not supported”
fe/b603: 6b           ??MXd??? e .T.#. default__VDU    rtl

                                       ********************************************************************************
                                       * LN - ????                                                                    *
                                       *                                                                              *
                                       * QRY this is a "well known" entry point at 00/FF84                            *
                                       *                                                                              *
                                       * op 0 calls __ST/0 (get string pointer to "SYSTEM")                           *
                                       * op 2 calls the CLI vector                                                    *
                                       ********************************************************************************
fe/b604: 08           ??MXd??? e @T... default__LN     php
fe/b605: c2 30        ??MXd??? e .....                 rep     #$30
                                                       .rwid   longm,longx
fe/b607: e0 04 00     ??mxd??? e .....                 cpx     #$0004
fe/b60a: b0 12        ??mxd??? e .....                 bcs     @retsec
fe/b60c: 0b           ??mxd??c e .....                 phd
fe/b60d: 8b           ??mxd??c e .....                 phb
fe/b60e: f4 00 ac     ??mxd??c e .....                 pea     DPSYS
fe/b611: 2b           ??mxd??c e .....                 pld
fe/b612: e2 30        ??mxd??c e .....                 sep     #$30
                                                       .rwid   shortm,shortx
fe/b614: fc 21 b6     ??MXd??c e .....                 jsr     (tblLnFunctions,x)
fe/b617: ab           ??MXd??? e .....                 plb
fe/b618: 2b           ??MXd??? e .....                 pld
fe/b619: b0 03        ??MXd??? e .....                 bcs     @retsec
fe/b61b: 28           ??MXd??c e .....                 plp
fe/b61c: 18           ??MXd??? e .....                 clc
fe/b61d: 6b           ??MXd??c e ...#.                 rtl

fe/b61e: 28           ????d??C e ....> @retsec         plp
fe/b61f: 38           ??MXd??? e .....                 sec
fe/b620: 6b           ??MXd??C e ...#.                 rtl

fe/b621: 25 b6                   ..... tblLnFunctions  .dd2    __ST_0 & $ffff    ;0 - do __ST_0
fe/b623: 9f dd                   .....                 .dd2    defaultCLIV & $ffff ;2 - __LNCLI

                                       ********************************************************************************
                                       * __ST operation 0                                                             *
                                       *                                                                              *
                                       * return long pointer BHA to string "SYSTEM"                                   *
                                       ********************************************************************************
fe/b625: c2 30        ??MXd??? e @T... __ST_0          rep     #$30
                                                       .rwid   longm,longx
fe/b627: 4b           ??mxd??? e .....                 phk
                                                       .dbank  K (auto)
fe/b628: ab           ??mxd??? e .....                 plb
fe/b629: a9 2d b6     ??mxd??? e .....                 lda     #strSYSTEM & $ffff
fe/b62c: 60           n?mxd?z? e ...#.                 rts

fe/b62d: 53 59 53 54+            ..... strSYSTEM       .zstr   “SYSTEM”

                                       ********************************************************************************
                                       * Main BRK handler - saves the registers on the stack and passes control to    *
                                       * the coroutine BRK handler                                                    *
                                       ********************************************************************************
                                                       .rwid   shortm,shortx
fe/b634: d8           ???????? e @T... default_IVBRK   cld
fe/b635: c2 30        ????d??? e .....                 rep     #$30
                                                       .rwid   longm,longx
fe/b637: 0b           ??mxd??? e .....                 phd
fe/b638: 8b           ??mxd??? e .....                 phb
fe/b639: 48           ??mxd??? e .....                 pha
fe/b63a: da           ??mxd??? e .....                 phx
fe/b63b: 5a           ??mxd??? e .....                 phy
                                       ; stack/DP contains
                                       ; +D  K
                                       ; +B  PC
                                       ; +A  FLAGS
                                       ; +8  DP
                                       ; +7  B
                                       ; +5  HA
                                       ; +3  X
                                       ; +1  Y
fe/b63c: 3b           ??mxd??? e .....                 tsc
fe/b63d: 5b           ??mxd??? e .....                 tcd
fe/b63e: a5 0c        ??mxd??? e .....                 lda     $0c
fe/b640: 8f 0e ff 00  ??mxd??? e .....                 stal    f:EXSYS_0D_BRKADDR_SAVE+1 ;store 24 bit pointer to byte after the BRK instruction
fe/b644: a5 0b        ??mxd??? e .....                 lda     $0b
fe/b646: 3a           ??mxd??? e .....                 dec     A
fe/b647: 8f 0d ff 00  ??mxd??? e .....                 stal    f:EXSYS_0D_BRKADDR_SAVE
fe/b64b: a2 3c 00     ??mxd??? e .....                 ldx     #$003c            ;TODO: what VDU function?
fe/b64e: 4b           n?mxd?z? e .....                 phk
fe/b64f: 20 38 fe     n?mxd?z? e .....                 jsr     callModVDU
fe/b652: 4c fa dc     ??mxd??? e ...#.                 jmp     coHandleBRK

                                       ********************************************************************************
                                       * The COP handler                                                              *
                                       ********************************************************************************
                                                       .rwid   shortm,shortx
fe/b655: 28           ???????? e @T... default_IVCOP   plp
fe/b656: 08           ???????? e .....                 php                       ;Not sure what this sequence is for, reestablish caller's SEI or SED flags - seems dodgy
fe/b657: c2 38        ???????? e .....                 rep     #$38
                                                       .rwid   longm,longx
fe/b659: 0b           ??mxd??? e .....                 phd                       ;8
fe/b65a: 8b           ??mxd??? e .....                 phb                       ;7
fe/b65b: 48           ??mxd??? e .....                 pha                       ;5
fe/b65c: da           ??mxd??? e .....                 phx                       ;3
fe/b65d: 5a           ??mxd??? e .....                 phy                       ;1
fe/b65e: 3b           ??mxd??? e .....                 tsc
                                       ; at this point D and S point to the stack
                                       ; 
                                       ; +13   PBR
                                       ; +11   PC
                                       ; +10   P
                                       ; +8    DP
                                       ; +7    B
                                       ; +5    A
                                       ; +3    X
                                       ; +1    Y
fe/b65f: 5b           ??mxd??? e .....                 tcd
fe/b660: c6 0b        ??mxd??? e .....                 dec     DPCOP_PC          ;decrement 16 bit return pointer to point at the signature byte
fe/b662: a7 0b        ??mxd??? e .....                 lda     [DPCOP_PC]        ;get signature byte
fe/b664: 0a           ??mxd??? e .....                 asl     A                 ;multiply by 2 to get index
fe/b665: 29 ff 00     ??mxd??? e .....                 and     #$00ff            ;mask off whatever we fetched in high byte
fe/b668: c9 c4 00     n?mxd??? e .....                 cmp     #$00c4            ;compare to C4 - 2*$62
fe/b66b: b0 1b        ??mxd??? e .....                 bcs     @handlege62       ;jump forward for high COPs
fe/b66d: aa           ??mxd??? e ....> @dispatch       tax                       ;transfer index to X
fe/b66e: a5 05        ??mxd??? e .....                 lda     DPCOP_AH          ;restore A from stack
fe/b670: 4b           ??mxd??? e .....                 phk
                                       ; The callee stack will now look like this:
                                       ; 
                                       ; +16   PBR
                                       ; +14   PC
                                       ; +13   P
                                       ; +11   DP
                                       ; +10   B
                                       ; +8    A
                                       ; +6    X
                                       ; +4    Y
                                       ; +1    FE/B673 - return address of COP dispatcher
                                       ; 
                                       ; The DP register will point at byte below Y
                                       ; 
                                       ; +13   PBR
                                       ; +11   PC
                                       ; +10   P
                                       ; +8    DP
                                       ; +7    B
                                       ; +5    A
                                       ; +3    X
                                       ; +1    Y
fe/b671: fc 9d b6     ??mxd??? e .....                 jsr     (tblCOPDispatch,x) ;long jump to handler in dispatch table
fe/b674: c2 30        ??mxd??? e ....> @ret            rep     #$30
fe/b676: 7a           ??mxd??? e .....                 ply                       ;restore all regs except plp
fe/b677: fa           ??mxd??? e .....                 plx
fe/b678: 68           ??mxd??? e .....                 pla
fe/b679: ab           ??mxd??? e .....                 plb
fe/b67a: 2b           ??mxd??? e .....                 pld
fe/b67b: b0 03        ??mxd??? e .....                 bcs     @retSEC           ;check for CS and jump forward for return with CS
fe/b67d: 28           ??mxd??c e .....                 plp
                                                       .rwid   shortm,shortx
fe/b67e: 18           ???????? e .....                 clc
fe/b67f: 6b           ???????c e ...#.                 rtl

                                                       .rwid   longm,longx
fe/b680: 28           ??mxd??C e ....> @retSEC         plp
                                                       .rwid   shortm,shortx
fe/b681: 38           ???????? e .....                 sec
fe/b682: 6b           ???????C e ...#.                 rtl

                                                       .rwid   longm,longx
fe/b683: 64 03        ??mxd??? e ....> @ret_unimplemented stz  DPCOP_X           ;clear saved X
fe/b685: 38           ??mxd??? e .....                 sec                       ;return error
fe/b686: 80 ec        ??mxd??C e ...#.                 bra     @ret

fe/b688: c9 e0 00     ??mxd??C e ....> @handlege62     cmp     #$00e0
fe/b68b: 90 f6        ??mxd??? e .....                 bcc     @ret_unimplemented ;less than E0 - i.e COP 31..6F
fe/b68d: a7 0b        ??mxd??C e .....                 lda     [DPCOP_PC]        ;get cop number as 16 bits (will be nn7x)
fe/b68f: e6 0b        ??mxd??C e .....                 inc     DPCOP_PC          ;step return address past it
fe/b691: eb           ??mxd??C e .....                 xba                       ;swap byte order will now be somethig like 7xnn
fe/b692: 0a           ??mxd??C e .....                 asl     A                 ;now Exnn or Fxnn
fe/b693: c9 00 e0     ??mxd??? e .....                 cmp     #$e000
fe/b696: b0 eb        ??mxd??? e .....                 bcs     @ret_unimplemented ;QRY - this looks like a bug? they must all surely be >= e000?!?!
fe/b698: e9 3b df     ??mxd??c e .....                 sbc     #$df3b            ;subtract df3e to put in range 
fe/b69b: 80 d0        ??mxd??? e ...#.                 bra     @dispatch

fe/b69d: 95 b7                   ..... tblCOPDispatch  .dd2    COP_00 & $ffff    ;OPWRC 00 = OSWRCH
fe/b69f: 0d b8                   .....                 .dd2    COP_01 & $ffff    ;OPWRS 01 = Write String Immediate
fe/b6a1: 1d b8                   .....                 .dd2    COP_02 & $ffff    ;OPWRA 02 = Write string at BHA
fe/b6a3: 8b b7                   .....                 .dd2    COP_03 & $ffff    ;OPNLI 03 = OSNEWL - write CR/LF
fe/b6a5: 6f b8                   .....                 .dd2    COP_04 & $ffff    ;OPRDC 04 = read character
fe/b6a7: 83 b8                   .....                 .dd2    COP_05 & $ffff    ;OPCLI 05 = OSCLI = execute command
fe/b6a9: 9e b8                   .....                 .dd2    COP_06 & $ffff    ;OPOSB 06 - OSBYTE
fe/b6ab: b9 b8                   .....                 .dd2    COP_07 & $ffff    ;OPOSW 07 - OSWORD
fe/b6ad: 61 b7                   .....                 .dd2    copBadCOP & $ffff
fe/b6af: 61 b7                   .....                 .dd2    copBadCOP & $ffff
fe/b6b1: 98 ba                   .....                 .dd2    COP_0A & $ffff    ;OPBGT 0A - BGET
fe/b6b3: a1 ba                   .....                 .dd2    COP_0B & $ffff    ;OPBPT 0B - BPUT
fe/b6b5: 61 b7                   .....                 .dd2    copBadCOP & $ffff
fe/b6b7: 16 b9                   .....                 .dd2    COP_0D & $ffff    ;???? 0D - Throws a not implemented error
fe/b6b9: 86 b8                   .....                 .dd2    COP_OE & $ffff    ;OPCOM 0E - OSCLI with string in BHA
fe/b6bb: 61 bd                   .....                 .dd2    COP_0F & $ffff    ;OPERR 0E - Raise an error
fe/b6bd: c2 bd                   .....                 .dd2    COP_10 & $ffff    ;OPADP 10 - Allocate direct page
fe/b6bf: c2 bd                   .....                 .dd2    COP_10 & $ffff    ;OPADF 11 - Allocate direct page - supposed to be fast but isnt...or is it?
fe/b6c1: 07 be                   .....                 .dd2    COP_12 & $ffff    ;OPFD  12 - QRY not in docco
fe/b6c3: 34 be                   .....                 .dd2    COP_13 & $ffff    ;OPAST 13 - Allocate Stack
fe/b6c5: 5e be                   .....                 .dd2    COP_14 & $ffff    ;OPFST 14 - Free Stack
fe/b6c7: 83 b7                   .....                 .dd2    COP_15 & $ffff    ;OPASC 15 - Write ASCII convert <CR> to <CR><LF>
fe/b6c9: 89 be                   .....                 .dd2    COP_16 & $ffff    ;OPAEV 16 - Acknowledge Event
fe/b6cb: 40 b9                   .....                 .dd2    COP_17 & $ffff    ;OPBYX 17 - Convert BYXD to BHA
fe/b6cd: 65 c1                   .....                 .dd2    COP_18 & $ffff    ;OPRLH 18 - Read hex number
fe/b6cf: 78 c2                   .....                 .dd2    COP_19 & $ffff    ;OPRLS 19 - read literal string QRY not documented
fe/b6d1: 0b be                   .....                 .dd2    COP_1A & $ffff    ;OPFZB 1A - free bank 0 memory
fe/b6d3: 9d b7                   .....                 .dd2    COP_1B & $ffff    ;OPARM 1B - call Arithmetic module
fe/b6d5: c8 c2                   .....                 .dd2    COP_1C & $ffff    ;OPSCX 1C - Save Context 
fe/b6d7: ef c2                   .....                 .dd2    COP_1D & $ffff    ;OPRCX 1D - Restore Context
fe/b6d9: 0c c3                   .....                 .dd2    COP_1E & $ffff    ;OPSSC 1E - Save the screen
fe/b6db: 2a c3                   .....                 .dd2    COP_1F & $ffff    ;OPRSC 1F - Restore the screen
fe/b6dd: a1 be                   .....                 .dd2    COP_20 & $ffff    ;OPSEV 20 - QRY set even
fe/b6df: 65 b9                   .....                 .dd2    COP_21 & $ffff    ;OPPRE 21 - Allow preemption
fe/b6e1: b2 b9                   .....                 .dd2    COP_22 & $ffff    ;OPRLN 22 - Read a line to buffer
fe/b6e3: a1 b9                   .....                 .dd2    COP_23 & $ffff    ;OPCVS 23 - Convert stack index
fe/b6e5: 95 b9                   .....                 .dd2    COP_24 & $ffff    ;OPCVD 24 - convert direct page index
fe/b6e7: cb c3                   .....                 .dd2    COP_25 & $ffff    ;OPCRC 25 - superceded use OPSUM
fe/b6e9: b9 b7                   .....                 .dd2    COP_26 & $ffff    ;OPBHA 26 - Get BHA address of immediate string
fe/b6eb: 31 bd                   .....                 .dd2    COP_27 & $ffff    ;OPREF 27 - ?
fe/b6ed: 77 bc                   .....                 .dd2    COP_28 & $ffff    ;OPCMD 28 - call a module
fe/b6ef: 09 bd                   .....                 .dd2    COP_29 & $ffff    ;OPRFR 29 - reference a module
fe/b6f1: cb bc                   .....                 .dd2    COP_2A & $ffff    ;OPURF 2A - Unreference a module
fe/b6f3: f4 b7                   .....                 .dd2    COP_2B & $ffff    ;OPDIS 2B - ?
fe/b6f5: 52 c1                   .....                 .dd2    COP_2C & $ffff    ;OPFMA 2C - find module by address
fe/b6f7: 2e c1                   .....                 .dd2    COP_2D & $ffff    ;OPWRM 2D - write module name
fe/b6f9: ee c0                   .....                 .dd2    COP_2E & $ffff    ;OPFPO 2E - find pool owner
fe/b6fb: 27 fc                   .....                 .dd2    COP_2F & $ffff    ;OPIIQ 2F - intercept interrupt
fe/b6fd: 44 fd                   .....                 .dd2    COP_30 & $ffff    ;OPRIQ 30 - release interrupt
fe/b6ff: 07 fd                   .....                 .dd2    COP_31 & $ffff    ;OPMIQ 31 - modify interrupt
fe/b701: bc c0                   .....                 .dd2    COP_32 & $ffff    ;OPSUM 32 - compute end around carry checksum
fe/b703: ea bb                   .....                 .dd2    COP_33 & $ffff    ;OPSLM 33 - scan list of modules
fe/b705: a6 bb                   .....                 .dd2    COP_34 & $ffff    ;OPRMI 34 - read module info
fe/b707: 70 bb                   .....                 .dd2    COP_35 & $ffff    ;OPAM 35 - Add module
fe/b709: 61 bb                   .....                 .dd2    COP_36 & $ffff    ;OPNLU 36 - name lookup
fe/b70b: 61 b7                   .....                 .dd2    copBadCOP & $ffff ;37
fe/b70d: 23 bb                   .....                 .dd2    COP_38 & $ffff    ;OPAH 38 - allocate a 16 bit handle
fe/b70f: 43 bb                   .....                 .dd2    COP_39 & $ffff    ;OPFH 39 - free handle
fe/b711: 4c bb                   .....                 .dd2    COP_3A & $ffff    ;OPCUH 3A - call device driver using handle
fe/b713: 61 b7                   .....                 .dd2    copBadCOP & $ffff ;3B
fe/b715: b5 c8                   .....                 .dd2    COP_3C & $ffff    ;OPDTD 3C - ???
fe/b717: ab c0                   .....                 .dd2    COP_3D & $ffff    ;OPGSR 3D
fe/b719: ac c0                   .....                 .dd2    COP_3E & $ffff    ;OPADY 3E - Add Y to BHA
fe/b71b: 62 c0                   .....                 .dd2    COP_3F & $ffff    ;OPATR 3F - ???
fe/b71d: 9a c0                   .....                 .dd2    COP_40 & $ffff    ;OPFTR 40 - ???
fe/b71f: 07 c0                   .....                 .dd2    COP_41 & $ffff    ;OPECO 41 - call low-level Econet routines
fe/b721: df bf                   .....                 .dd2    COP_42 & $ffff    ;OPRHL 42 - ???
fe/b723: ca bf                   .....                 .dd2    COP_43 & $ffff    ;OPXKC 43 - Examine keyboard character
fe/b725: a8 ba                   .....                 .dd2    COP_44 & $ffff    ;OPOPN 44 - open device driver
fe/b727: be ba                   .....                 .dd2    COP_45 & $ffff    ;OPCLS 45 - close device driver
fe/b729: c5 ba                   .....                 .dd2    COP_46 & $ffff    ;OPEND 46 - test for EOF
fe/b72b: df b8                   .....                 .dd2    COP_47 & $ffff    ;OPMM 47 - call memory management module
fe/b72d: 7d b7                   .....                 .dd2    COP_48 & $ffff    ;OPVER 48 - return OS version number
fe/b72f: 3a c3                   .....                 .dd2    COP_49 & $ffff    ;OPFSC 49 - free screen
fe/b731: 37 c0                   .....                 .dd2    COP_4A & $ffff    ;OPNET 4A - high level Econet routines
fe/b733: ce ba                   .....                 .dd2    COP_4B & $ffff    ;OPVH 4B - validate handle
fe/b735: fb c3                   .....                 .dd2    COP_4C & $ffff    ;OPBGB 4C - get a block of bytes from a file
fe/b737: 05 c4                   .....                 .dd2    COP_4D & $ffff    ;OPBPB 4D - put a block of bytes to a file
fe/b739: b7 c4                   .....                 .dd2    COP_4E & $ffff    ;OPLOD 4E - load file
fe/b73b: c1 c4                   .....                 .dd2    COP_4F & $ffff    ;OPSAV 4F - save a file
fe/b73d: 0f c6                   .....                 .dd2    COP_50 & $ffff    ;OPRLE 50 - read file load/exec/length
fe/b73f: 6b c6                   .....                 .dd2    COP_51 & $ffff    ;OPWLE 51 - write file load/exec
fe/b741: 70 c6                   .....                 .dd2    COP_52 & $ffff    ;OPRAT 52 - read attributes
fe/b743: 75 c6                   .....                 .dd2    COP_53 & $ffff    ;OPWAT 53 - write file attributes
fe/b745: 7a c6                   .....                 .dd2    COP_54 & $ffff    ;OPRSP 54 - read sequential pointer
fe/b747: 7f c6                   .....                 .dd2    COP_55 & $ffff    ;OPWSP 55 - write sequential pointer
fe/b749: 84 c6                   .....                 .dd2    COP_56 & $ffff    ;OPRPL 56 - read physical length
fe/b74b: 89 c6                   .....                 .dd2    COP_57 & $ffff    ;OPRLL 57 - read logical length
fe/b74d: 8e c6                   .....                 .dd2    COP_58 & $ffff    ;OPWLL 58 - write logical length
fe/b74f: 93 c6                   .....                 .dd2    COP_59 & $ffff    ;OPRCH 59 - read catalogue header information
fe/b751: 98 c6                   .....                 .dd2    COP_5A & $ffff    ;OPRFN 5A - read object file names from directory
fe/b753: 41 c7                   .....                 .dd2    COP_5B & $ffff    ;OPDEL 5B - delete a named object
fe/b755: d2 c6                   .....                 .dd2    COP_5C & $ffff    ;OPREN 5C - rename object
fe/b757: 7f b8                   .....                 .dd2    COP_5D & $ffff    ;OPSTAR 5D - execute star command and print error
fe/b759: 44 c3                   .....                 .dd2    COP_5E & $ffff    ;OPFCX 5E - free vdu context including fonts
fe/b75b: b4 b8                   .....                 .dd2    COP_5F & $ffff    ;OPOSX 5F - call OSWORD with pointer in X QRY
fe/b75d: 4c bf                   .....                 .dd2    COP_60 & $ffff    ;OPDFR 60 - ???
fe/b75f: ce be                   .....                 .dd2    COP_61 & $ffff    ;OPERC 61 - ???? error something ???

fe/b761: 02 0f        ??mxd??? e @T... copBadCOP       cop     COP_0F_OPERR
fe/b763: 42 61 64 20+            .T...                 .zstr   “Bad COP - use new version”
                                       ********************************************************************************
                                       * COP 48 - OPVER - return version number                                       *
                                       *                                                                              *
                                       * Action: Puts the operating system version in A                               *
                                       *                                                                              *
                                       * On Entry: No requirements                                                    *
                                       * On Exit:  A = version number                                                 *
                                       *           DBXY preserved                                                     *
                                       *                                                                              *
                                       * returns 1 in A                                                               *
                                       ********************************************************************************
fe/b77d: a9 01 00     ??mxd??? e ..... COP_48          lda     #$0001
fe/b780: 85 05        n?mxd?z? e .....                 sta     DPCOP_AH          ;this is the saved A register
fe/b782: 6b           n?mxd?z? e ...#.                 rtl

                                       ********************************************************************************
                                       * COP 15 - OPASC - BBC OPASCI                                                  *
                                       *                                                                              *
                                       * Action: Send the byte in A to the VDU drivers. If the byte is &0D (carriage  *
                                       * return) then send &0A, &0D to the VDU drivers (line feed+ carriage return).  *
                                       *                                                                              *
                                       * On entry: A = character code.                                                *
                                       * On exit:  DBAXY preserved                                                    *
                                       ********************************************************************************
fe/b783: 29 ff 00     ??mxd??? e @T... COP_15          and     #$00ff
fe/b786: c9 0d 00     n?mxd??? e .....                 cmp     #$000d
fe/b789: d0 0a        ??mxd??? e .....                 bne     COP_00
                                       ********************************************************************************
                                       * COP 03 - OSNLI - BBC OSNEWL                                                  *
                                       *                                                                              *
                                       * Action: Send LF CR to the VDU drivers. Line feed is ASCII 10 (decimal),      *
                                       * carriage return is ASCII 13 (decimal).                                       *
                                       *                                                                              *
                                       * On entry: No requirement                                                     *
                                       * On exit:  DBAXY preserved                                                    *
                                       ********************************************************************************
fe/b78b: a9 0a 00     ??mxd?Z? e .T... COP_03          lda     #$000a
fe/b78e: 4b           n?mxd?z? e .....                 phk
fe/b78f: 20 95 b7     n?mxd?z? e .....                 jsr     COP_00
fe/b792: a9 0d 00     ??mxd??? e .....                 lda     #$000d
                                       ********************************************************************************
                                       * COP 00 - OPWRC - Write Char in A                                             *
                                       *                                                                              *
                                       * Action: Send the byte in A to the VDU drivers.                               *
                                       *                                                                              *
                                       * On entry: A = character code                                                 *
                                       * On exit:  DBAXY preserved                                                    *
                                       *                                                                              *
                                       ********************************************************************************
fe/b795: a2 04 00     ??mxd??? e .T..> COP_00          ldx     #$0004
fe/b798: 4b           n?mxd?z? e .....                 phk
fe/b799: 20 38 fe     n?mxd?z? e .....                 jsr     callModVDU
fe/b79c: 6b           ??mxd??? e ...#.                 rtl

                                       ********************************************************************************
                                       * COP 1B - call the ARITHMETIC module                                          *
                                       *                                                                              *
                                       * On Entry: Reason code in X, arithmetic stack pointer in BHA                  *
                                       *                                                                              *
                                       * On Exit:  BHA updated                                                        *
                                       ********************************************************************************
fe/b79d: a6 03        ??mxd??? e @T... COP_1B          ldx     DPCOP_X
fe/b79f: 0b           ??mxd??? e .....                 phd
fe/b7a0: 02 28        ??mxd??? e .....                 cop     COP_28_OPCMD
fe/b7a2: 41 52 49 54+            .T...                 .zstr   “ARITHMETIC”
fe/b7ad: 2b           ??mxd??? e .....                 pld
fe/b7ae: 86 03        ??mxd??? e .....                 stx     DPCOP_X
fe/b7b0: 85 05        ??mxd??? e .....                 sta     DPCOP_AH
fe/b7b2: e2 20        ??mxd??? e .....                 sep     #$20
                                                       .rwid   shortm
fe/b7b4: 8b           ??Mxd??? e .....                 phb
fe/b7b5: 68           ??Mxd??? e .....                 pla
fe/b7b6: 85 07        ??Mxd??? e .....                 sta     DPCOP_B
fe/b7b8: 6b           ??Mxd??? e ...#.                 rtl

                                       ********************************************************************************
                                       * COP 26 - OPBHA                                                               *
                                       *                                                                              *
                                       * returns the immediate string following the COP call as BHA                   *
                                       ********************************************************************************
                                                       .rwid   longm
fe/b7b9: a5 0c        ??mxd??? e @T... COP_26          lda     DPCOP_PC+1
fe/b7bb: 85 06        ??mxd??? e .....                 sta     DPCOP_AH+1
fe/b7bd: a5 0b        ??mxd??? e .....                 lda     DPCOP_PC
fe/b7bf: 1a           ??mxd??? e .....                 inc     A
fe/b7c0: 85 05        ??mxd??? e .....                 sta     DPCOP_AH
                                       ; This skips over any string following the cop call
fe/b7c2: e6 0b        ??mxd??? e ....> @copExitImmedStr inc    DPCOP_PC
fe/b7c4: a7 0b        ??mxd??? e .....                 lda     [DPCOP_PC]
fe/b7c6: 29 ff 00     ??mxd??? e .....                 and     #$00ff
fe/b7c9: d0 f7        n?mxd??? e .....                 bne     @copExitImmedStr
fe/b7cb: 6b           n?mxd?Z? e ...#.                 rtl

fe/b7cc: a9 06 00     ??mxd??? e ....> LFEB7CC         lda     #$0006
fe/b7cf: a2 4e 00     n?mxd?z? e .....                 ldx     #$004e
fe/b7d2: a0 00 00     n?mxd?z? e .....                 ldy     #$0000
fe/b7d5: 4b           n?mxd?Z? e .....                 phk
fe/b7d6: 20 38 fe     n?mxd?Z? e .....                 jsr     callModVDU
fe/b7d9: a9 0c 00     ??mxd??? e .....                 lda     #$000c
fe/b7dc: a2 4e 00     n?mxd?z? e .....                 ldx     #$004e
fe/b7df: a0 00 00     n?mxd?z? e .....                 ldy     #$0000
fe/b7e2: 4b           n?mxd?Z? e .....                 phk
fe/b7e3: 20 38 fe     n?mxd?Z? e .....                 jsr     callModVDU
fe/b7e6: a9 0a 00     ??mxd??? e .....                 lda     #$000a
fe/b7e9: a2 4e 00     n?mxd?z? e .....                 ldx     #$004e
fe/b7ec: a0 00 00     n?mxd?z? e .....                 ldy     #$0000
fe/b7ef: 4b           n?mxd?Z? e .....                 phk
fe/b7f0: 20 38 fe     n?mxd?Z? e .....                 jsr     callModVDU
fe/b7f3: 60           ??mxd??? e ...#.                 rts

                                       ********************************************************************************
                                       * COP 2B - OPDIS                                                               *
                                       *                                                                              *
                                       * QRY                                                                          *
                                       ********************************************************************************
fe/b7f4: 20 cc b7     ??mxd??? e @T... COP_2B          jsr     LFEB7CC
fe/b7f7: e6 0b        ??mxd??? e ....> LFEB7F7         inc     DPCOP_PC
fe/b7f9: a7 0b        ??mxd??? e .....                 lda     [DPCOP_PC]
fe/b7fb: 29 ff 00     ??mxd??? e .....                 and     #$00ff
fe/b7fe: f0 0c        n?mxd??? e .....                 beq     LFEB80C
fe/b800: a2 4e 00     n?mxd?z? e .....                 ldx     #$004e
fe/b803: a0 00 00     n?mxd?z? e .....                 ldy     #$0000
fe/b806: 4b           n?mxd?Z? e .....                 phk
fe/b807: 20 38 fe     n?mxd?Z? e .....                 jsr     callModVDU
fe/b80a: 80 eb        ??mxd??? e ...#.                 bra     LFEB7F7

fe/b80c: 6b           n?mxd?Z? e ...#> LFEB80C         rtl

                                       ********************************************************************************
                                       * COP 01 - OPWRS - write string immediate                                      *
                                       *                                                                              *
                                       * read characters from bytes following cop, check for 0 and pass on to write   *
                                       * character routine                                                            *
                                       ********************************************************************************
fe/b80d: e6 0b        ??mxd??? e @T..> COP_01          inc     DPCOP_PC
fe/b80f: a7 0b        ??mxd??? e .....                 lda     [DPCOP_PC]
fe/b811: 29 ff 00     ??mxd??? e .....                 and     #$00ff
fe/b814: f0 06        n?mxd??? e .....                 beq     @ret
fe/b816: 4b           n?mxd?z? e .....                 phk
fe/b817: 20 95 b7     n?mxd?z? e .....                 jsr     COP_00
fe/b81a: 80 f1        ??mxd??? e ...#.                 bra     COP_01

fe/b81c: 6b           n?mxd?Z? e ...#> @ret            rtl

                                       ********************************************************************************
                                       * COP 02 - OPWRA - write string at BHA                                         *
                                       *                                                                              *
                                       * TODO: DOCO: NOTE: This seems to imply that X is set to 0 for 0 terminated, 1 *
                                       * for control terminated string - not in systems manual                        *
                                       *                                                                              *
                                       ********************************************************************************
fe/b81d: a5 03        ??mxd??? e @T... COP_02          lda     DPCOP_X           ;get passed X and check is < 2 and use to determine type of terminator
fe/b81f: 4a           ??mxd??? e .....                 lsr     A
fe/b820: c9 02 00     n?mxd??? e .....                 cmp     #$0002
fe/b823: 90 29        ??mxd??? e .....                 bcc     @skok
fe/b825: 00 00        ??mxd??C e ...#.                 brk     $00

fe/b827: 43 4f 50 20+            .....                 .zstr   “COP `OPWRA: invalid termination option”

fe/b84e: aa           ??mxd??c e ....> @skok           tax
fe/b84f: a0 00 00     ??mxd??c e .....                 ldy     #$0000
fe/b852: b7 05        ??mxd??? e ....> @lp             lda     [DPCOP_AH],y      ;use BHA at 05 as pointer
fe/b854: 29 ff 00     ??mxd??? e .....                 and     #$00ff
fe/b857: f0 15        n?mxd??? e .....                 beq     @ret              ;check for 0 terminator
fe/b859: e0 01 00     n?mxd?z? e .....                 cpx     #$0001
fe/b85c: d0 05        ??mxd??? e .....                 bne     @sknocc           ;if X<>1 skip forwards
fe/b85e: c9 20 00     ??mxd?Z? e .....                 cmp     #$0020
fe/b861: 90 0b        ??mxd??? e .....                 bcc     @ret              ;else exit on control character
fe/b863: da           ??mxd??? e ....> @sknocc         phx
fe/b864: 5a           ??mxd??? e .....                 phy
fe/b865: 4b           ??mxd??? e .....                 phk
fe/b866: 20 95 b7     ??mxd??? e .....                 jsr     COP_00
fe/b869: 7a           ??mxd??? e .....                 ply
fe/b86a: fa           ??mxd??? e .....                 plx
fe/b86b: c8           ??mxd??? e .....                 iny
fe/b86c: 80 e4        ??mxd??? e ...#.                 bra     @lp

fe/b86e: 6b           ??mxd??? e ...#> @ret            rtl

                                       ********************************************************************************
                                       * COP 04 - OPRDC - read a character from input                                 *
                                       *                                                                              *
                                       * No conditions                                                                *
                                       *                                                                              *
                                       * On exit:                                                                     *
                                       * if C = 0 then A contains the ASCII value of the character.                   *
                                       * if C = 1 then                                                                *
                                       *   if HA = $1B (@SCESC) then the ESCAPE key was pressed                       *
                                       *   if HA = $00 (@SCPRE) then the current task was pre-empted.                 *
                                       *                                                                              *
                                       * DBXY preserved                                                               *
                                       ********************************************************************************
fe/b86f: 0b           ??mxd??? e @T... COP_04          phd
fe/b870: f4 00 ac     ??mxd??? e .....                 pea     $ac00
fe/b873: 2b           ??mxd??? e .....                 pld                       ;set DP = AC00
fe/b874: e2 30        ??mxd??? e .....                 sep     #$30
                                                       .rwid   shortm,shortx
fe/b876: 20 72 e2     ??MXd??? e .....                 jsr     int_OPRDC
fe/b879: 2b           ??MXd??? e .....                 pld
fe/b87a: 85 05        ??MXd??? e .....                 sta     DPCOP_AH          ;return in A, clear B
fe/b87c: 64 06        ??MXd??? e .....                 stz     DPCOP_AH+1
fe/b87e: 6b           ??MXd??? e ...#.                 rtl

                                       ********************************************************************************
                                       * COP 5D - OPSTAR - execute command in BHA                                     *
                                       *                                                                              *
                                       * Action: QRY looks to call OPCOM and if there's an error prints the error     *
                                       ********************************************************************************
                                                       .rwid   longm,longx
fe/b87f: 20 5f f9     ??mxd??? e @T... COP_5D          jsr     doOPSTAR
fe/b882: 6b           ??mxd??? e ...#.                 rtl

                                       ********************************************************************************
                                       * COP 05 - OPCLI - execute command line                                        *
                                       *                                                                              *
                                       * Action: This call sends the address of a command line string to the          *
                                       * operating system's command line interpreter. The string must be terminated   *
                                       * by CR (ASCII &0D).                                                           *
                                       * On entry: either: BYX contains the absolute address of the start of the      *
                                       * command line                                                                 *
                                       * OR: Y is 0 and X contains an offset from the direct page register D. The     *
                                       * start of the command line is in the direct page at address D+X.              *
                                       * On exit: No registers preserved                                              *
                                       ********************************************************************************
fe/b883: 20 4c b9     ??mxd??? e @T... COP_05          jsr     makeBXYptr
                                       ********************************************************************************
                                       * COP 0E OPCOM - execute command at BHA                                        *
                                       *                                                                              *
                                       * Action: This call sends the address of a command line string to the          *
                                       * operating system's command line interpreter. The string must be terminated   *
                                       * by CR (ASCII &0D).                                                           *
                                       * On entry: BHA points to the start of the command                             *
                                       * On exit: No registers preserved                                              *
                                       ********************************************************************************
fe/b886: 0b           ??mxd??? e .T... COP_OE          phd
fe/b887: f4 00 ac     ??mxd??? e .....                 pea     DPLOC_SYS
fe/b88a: 2b           ??mxd??? e .....                 pld
fe/b88b: 20 9f dd     ??mxd??? e .....                 jsr     defaultCLIV
fe/b88e: 2b           ??mxd??? e .....                 pld                       ;back to COP DP that points at user stack
fe/b88f: c2 30        ??mxd??? e .....                 rep     #$30              ;and update saved registers with results of OSCLI
fe/b891: 85 05        ??mxd??? e .....                 sta     DPCOP_AH
fe/b893: 86 03        ??mxd??? e .....                 stx     DPCOP_X
fe/b895: 84 01        ??mxd??? e .....                 sty     DPCOP_Y
fe/b897: e2 30        ??mxd??? e .....                 sep     #$30
                                                       .rwid   shortm,shortx
fe/b899: 8b           ??MXd??? e .....                 phb
fe/b89a: 68           ??MXd??? e .....                 pla
fe/b89b: 85 07        ??MXd??? e .....                 sta     DPCOP_B
fe/b89d: 6b           ??MXd??? e ...#.                 rtl

                                       ********************************************************************************
                                       * COP 06 - OPOSB = OSBYTE                                                      *
                                       *                                                                              *
                                       * This call caries out various operations, the specific operation depending on *
                                       * the contents of A on entry. Other data can be passed in X and Y. If results  *
                                       * are generated, these are returned in X and Y. Only a very small subset of    *
                                       * BBC OSBYTE calls is supported.                                               *
                                       * On entry: A contains the reason code. The reason code determines the         *
                                       * function of the call.                                                        *
                                       *                                                                              *
                                       * On exit: X and Y will contain results if the call produces them.             *
                                       *                                                                              *
                                       * D preserved                                                                  *
                                       ********************************************************************************
                                                       .rwid   longm,longx
fe/b89e: 0b           ??mxd??? e @T... COP_06          phd
fe/b89f: a6 03        ??mxd??? e .....                 ldx     DPCOP_X
fe/b8a1: e2 30        ??mxd??? e .....                 sep     #$30
                                                       .rwid   shortm,shortx
fe/b8a3: 20 cc e7     ??MXd??? e .....                 jsr     doDispatchOSBYTE
fe/b8a6: 2b           ??MXd??? e .....                 pld
fe/b8a7: e2 30        ??MXd??? e .....                 sep     #$30
fe/b8a9: 86 03        ??MXd??? e .....                 stx     DPCOP_X
fe/b8ab: 64 04        ??MXd??? e .....                 stz     DPCOP_X+1
fe/b8ad: e2 30        ????d??? e ....> copret8bitY     sep     #$30
fe/b8af: 84 01        ??MXd??? e .....                 sty     DPCOP_Y
fe/b8b1: 64 02        ??MXd??? e .....                 stz     DPCOP_Y+1
fe/b8b3: 6b           ??MXd??? e ...#.                 rtl

                                       ********************************************************************************
                                       * COP 5F - OPOSX - QRY                                                         *
                                       *                                                                              *
                                       * looks to call OSWORD but with a different pointer arrangement BYY?           *
                                       ********************************************************************************
                                                       .rwid   longm,longx
fe/b8b4: 0b           ??mxd??? e @T... COP_5F          phd
fe/b8b5: d4 01        ??mxd??? e .....                 pei     (DPCOP_Y)
fe/b8b7: 80 08        ??mxd??? e ...#.                 bra     LFEB8C1

                                       ********************************************************************************
                                       * COP 07 - OPOSW = OSWORD                                                      *
                                       *                                                                              *
                                       * Action: This call caries out various operations, the specific operation      *
                                       * depending on the contents of A on entry. BYX points to a control block in    *
                                       * memory, and this block contains data for the call, and will contain results  *
                                       * from the call.                                                               *
                                       * On entry:                                                                    *
                                       * EITHER: BYX points to a control block in memory                              *
                                       * OR: Y = 0 and X contains an offset from the direct page register D. The      *
                                       * start of the control block is in the direct page at address D+X.             *
                                       * A contains the reason code. The reason code determines the function of the   *
                                       * call.                                                                        *
                                       * On exit: D preserved                                                         *
                                       *                                                                              *
                                       * For OPOSW with A = 0 (read line from input)                                  *
                                       * Y = line length (including CR if applicable).                                *
                                       * If C = 0 then CR termimated input.                                           *
                                       * If C = 1 then ESCAPE terminated input                                        *
                                       ********************************************************************************
fe/b8b9: 0b           ??mxd??? e @T... COP_07          phd
fe/b8ba: a6 03        ??mxd??? e .....                 ldx     DPCOP_X
fe/b8bc: 20 4c b9     ??mxd??? e .....                 jsr     makeBXYptr
                                       ; The DP register will point at byte below Y BHA will have been rearranged if
                                       ; Y=0 so that BHA = 0/DP+X
                                       ; 
                                       ; +13   PBR
                                       ; +11   PC
                                       ; +10   P
                                       ; +8    DP
                                       ; +7    B
                                       ; +5    A
                                       ; +3    X
                                       ; +1    Y
fe/b8bf: d4 05        ??mxd??? e .....                 pei     (DPCOP_AH)        ;caller A
fe/b8c1: d4 06        ??mxd??? e ....> LFEB8C1         pei     (DPCOP_B-1)       ;caller H,B
fe/b8c3: d4 08        ??mxd??? e .....                 pei     (DPCOP_DP)        ;caller DP
fe/b8c5: f4 00 ac     ??mxd??? e .....                 pea     DPSYS
fe/b8c8: 2b           ??mxd??? e .....                 pld
fe/b8c9: fa           ??mxd??? e .....                 plx
fe/b8ca: 86 d6        ??mxd??? e .....                 stx     <DPSYS_D6_OSW_DPSAV
fe/b8cc: e2 30        ??mxd??? e .....                 sep     #$30
                                                       .rwid   shortm,shortx
fe/b8ce: fa           ??MXd??? e .....                 plx
fe/b8cf: fa           ??MXd??? e .....                 plx
fe/b8d0: 86 d8        ??MXd??? e .....                 stx     DPSYS_D8_B_SAV    ;caller's Bank
fe/b8d2: c2 30        ??MXd??? e .....                 rep     #$30
                                                       .rwid   longm,longx
fe/b8d4: fa           ??mxd??? e .....                 plx                       ;caller's A (OSWORD number)
fe/b8d5: e2 30        ??mxd??? e .....                 sep     #$30
                                                       .rwid   shortm,shortx
fe/b8d7: 20 3d e8     ??MXd??? e .....                 jsr     enterOSWORD_BHA
fe/b8da: c2 30        ??MXd??? e .....                 rep     #$30
                                                       .rwid   longm,longx
fe/b8dc: 2b           ??mxd??? e .....                 pld
fe/b8dd: 80 ce        ??mxd??? e ...#.                 bra     copret8bitY

                                       ********************************************************************************
                                       * COP 47 - OPMM - call the memory management routine                           *
                                       *                                                                              *
                                       * Action: This calls the memory management routine. The reason code is passed  *
                                       * in X, and the pool handle is passed in Y. All handles arc 16-bit. so calls   *
                                       * to OPMM must be made in 16-bit XY mode.                                      *
                                       *                                                                              *
                                       * On entry: X = reason code.                                                   *
                                       *           Y = pool handle.                                                   *
                                       * On exit:  If C = 0 then the call succeeded.                                  *
                                       *           If C = I then the call failed. X = error code. BHA points to       *
                                       *           zero-terminated error message.                                     *
                                       *           D preserved                                                        *
                                       ********************************************************************************
fe/b8df: 0b           ??mxd??? e @T... COP_47          phd
fe/b8e0: d4 03        ??mxd??? e .....                 pei     (DPCOP_X)
fe/b8e2: d4 08        ??mxd??? e .....                 pei     (DPCOP_DP)
fe/b8e4: 2b           ??mxd??? e .....                 pld
fe/b8e5: fa           ??mxd??? e .....                 plx
fe/b8e6: 22 8c ff 00  ??mxd??? e .....                 jsl     __MM
fe/b8ea: 2b           ??mxd??? e .....                 pld
fe/b8eb: b0 0f        ??mxd??? e .....                 bcs     LFEB8FC
fe/b8ed: 85 05        ??mxd??c e .....                 sta     DPCOP_AH
fe/b8ef: 86 03        ??mxd??c e .....                 stx     DPCOP_X
fe/b8f1: 84 01        ??mxd??c e .....                 sty     DPCOP_Y
fe/b8f3: e2 20        ??mxd??c e .....                 sep     #$20
                                                       .rwid   shortm
fe/b8f5: 8b           ??Mxd??c e .....                 phb
fe/b8f6: 68           ??Mxd??c e .....                 pla
fe/b8f7: 85 07        ??Mxd??c e .....                 sta     DPCOP_B
fe/b8f9: c2 20        ??Mxd??c e .....                 rep     #$20
                                                       .rwid   longm
fe/b8fb: 6b           ??mxd??c e ...#.                 rtl

fe/b8fc: 02 26        ??mxd??C e ....> LFEB8FC         cop     COP_26_OPBHA
fe/b8fe: 4d 65 6d 6f+            .T...                 .zstr   “Memory call failed”
fe/b911: a2 01 00     ??mxd??C e .....                 ldx     #$0001
fe/b914: 38           n?mxd?zC e .....                 sec
fe/b915: 6b           n?mxd?zC e ...#.                 rtl

                                       ********************************************************************************
                                       * COP 0D - ERR not implemented                                                 *
                                       *                                                                              *
                                       * Not implemented - throws an error                                            *
                                       ********************************************************************************
fe/b916: 02 0f        ??mxd??? e @T... COP_0D          cop     COP_0F_OPERR
fe/b918: 4f 50 46 4e+            .T...                 .zstr   “OPFND used - interface not longer valid”
                                       ********************************************************************************
                                       * COP 17 - OPBYX                                                               *
                                       *                                                                              *
                                       * Converts a BBC-type BYX pointer to a Communicator-type BHA pointer, ir Y is  *
                                       * non-zero then YX Ls simply copied to HA. If Y is zero then X is taken as an  *
                                       * ofTset from the direct page register D. BHA is calculated as the absolute    *
                                       * value of this direct page address.                                           *
                                       *                                                                              *
                                       * Entry:                                                                       *
                                       *     BYX points to an address, or Y = 0 and XD points to a direct page        *
                                       * address.                                                                     *
                                       * Exit:                                                                        *
                                       *     BHA points to equivalent address.                                        *
                                       *                                                                              *
                                       *     D preserved                                                              *
                                       ********************************************************************************
fe/b940: 20 4c b9     ??mxd??? e .T... COP_17          jsr     makeBXYptr
fe/b943: 85 05        ??mxd??? e .....                 sta     DPCOP_AH          ;store HA on stack frame at 05
fe/b945: e2 30        ??mxd??? e .....                 sep     #$30
                                                       .rwid   shortm,shortx
fe/b947: 8b           ??MXd??? e .....                 phb
fe/b948: 68           ??MXd??? e .....                 pla
fe/b949: 85 07        ??MXd??? e .....                 sta     DPCOP_B           ;store caller's B at 07
fe/b94b: 6b           ??MXd??? e ...#.                 rtl

                                       ********************************************************************************
                                       * either: BYX contains the absolute address                                    *
                                       * OR: Y(16) = 0 and X contains an offset from the direct page register D. The  *
                                       * pointer is D+X.                                                              *
                                       *                                                                              *
                                       * This assumes a COP entry frame in DP                                         *
                                       *                                                                              *
                                       ********************************************************************************
                                                       .rwid   longm,longx
fe/b94c: 08           ??mxd??? e ....> makeBXYptr      php
fe/b94d: e2 30        ??mxd??? e .....                 sep     #$30
                                                       .rwid   shortm,shortx
fe/b94f: 98           ??MXd??? e .....                 tya                       ;A(8)=Y(8)
fe/b950: eb           ??MXd??? e .....                 xba                       ;put Y in H
fe/b951: a5 03        ??MXd??? e .....                 lda     DPCOP_X           ;get X in A
fe/b953: c2 30        ??MXd??? e .....                 rep     #$30
                                                       .rwid   longm,longx
fe/b955: a4 01        ??mxd??? e .....                 ldy     DPCOP_Y           ;check for 0 in Y
fe/b957: d0 0a        ??mxd??? e .....                 bne     @ret
fe/b959: 18           ??mxd?Z? e .....                 clc                       ;if Y is zero
fe/b95a: a5 03        ??mxd?Zc e .....                 lda     DPCOP_X           ;add original X to DP and set B=0
fe/b95c: 65 08        ??mxd??c e .....                 adc     DPCOP_DP
                                                       .dbank  $00
fe/b95e: f4 00 00     ??mxd??? e .....                 pea     $0000
fe/b961: ab           ??mxd??? e .....                 plb
fe/b962: ab           ??mxd??? e .....                 plb
fe/b963: 28           ??mxd??? e ....> @ret            plp
fe/b964: 60           ??mxd??? e ...#.                 rts

                                       ********************************************************************************
                                       * COP 21 - OPPRE - allow preemption                                            *
                                       *                                                                              *
                                       * Action: This call is used lo allow pre-emption of the current task at a      *
                                       * convenient point. The call allows the MOS to check whether the user has      *
                                       * selected another task. If another task has been requested then the call      *
                                       * returns with the carry set, and the event must be acknowledged using OPAEV.  *
                                       *                                                                              *
                                       * On entry: No requirements.                                                   *
                                       *                                                                              *
                                       * On exit:  If C = 0 then the module was not pre-empted.                       *
                                       *           If C = 1 then the module was pre-empted.                           *
                                       *           DBHAXY preserved                                                   *
                                       ********************************************************************************
fe/b965: f4 00 ac     ??mxd??? e @T... COP_21          pea     $ac00
fe/b968: 2b           ??mxd??? e .....                 pld
fe/b969: 4b           ??mxd??? e .....                 phk
                                                       .dbank  K (auto)
fe/b96a: ab           ??mxd??? e .....                 plb
fe/b96b: e2 30        ??mxd??? e .....                 sep     #$30
                                                       .rwid   shortm,shortx
fe/b96d: af 41 a5 00  ??MXd??? e .....                 ldal    f:SYSVAR_41_input_stream
fe/b971: aa           ??MXd??? e .....                 tax
fe/b972: 20 8e e1     ??MXd??? e .....                 jsr     OSBYTE_98
fe/b975: b0 1c        ??MXd??? e .....                 bcs     @noparent
fe/b977: c9 f0        ??MXd??c e .....                 cmp     #$f0
fe/b979: 90 18        ??MXd??? e .....                 bcc     @noparent
fe/b97b: 20 83 dd     ??MXd??C e .....                 jsr     getCurCorParent
fe/b97e: b0 13        ??MXd??? e .....                 bcs     @noparent
fe/b980: eb           ??MXd??c e .....                 xba
fe/b981: a9 00        ??MXd??c e .....                 lda     #$00
fe/b983: eb           n?MXd?Zc e .....                 xba
fe/b984: a2 08        ??MXd??c e .....                 ldx     #$08
fe/b986: 22 98 ff 00  n?MXd?zc e .....                 jsl     __CWT
fe/b98a: a9 00        ??MXd??? e .....                 lda     #>__EVPRE
fe/b98c: eb           n?MXd?Z? e .....                 xba
fe/b98d: a9 02        ??MXd??? e .....                 lda     #__EVPRE
fe/b98f: 02 20        n?MXd?z? e .....                 cop     COP_20_OPSEV
fe/b991: 38           n?MXd?z? e .....                 sec
fe/b992: 6b           n?MXd?zC e ...#.                 rtl

fe/b993: 18           ??MXd??? e ....> @noparent       clc
fe/b994: 6b           ??MXd??c e ...#.                 rtl

                                       ********************************************************************************
                                       * COP 24 - OPCVD - convert DP index                                            *
                                       *                                                                              *
                                       * Action: This call takes a direct page relative address and converts it to an *
                                       * absolute BHA address.                                                        *
                                       *                                                                              *
                                       * On entry: HA contains a 16 bit offset from the direct page register.         *
                                       * On exit:  If C = 0 then BHA contains the absolute address (D+HA).            *
                                       *           If C = 1 then the direct page offset is invalid.                   *
                                       *           DXY preserved                                                      *
                                       ********************************************************************************
                                                       .rwid   longm,longx
fe/b995: 18           ??mxd??? e @T... COP_24          clc
fe/b996: 65 08        ??mxd??c e .....                 adc     DPCOP_DP
fe/b998: b0 06        ??mxd??? e .....                 bcs     @ret
fe/b99a: 85 05        ??mxd??c e .....                 sta     DPCOP_AH
fe/b99c: e2 20        ??mxd??c e .....                 sep     #$20
                                                       .rwid   shortm
fe/b99e: 64 07        ??Mxd??c e .....                 stz     DPCOP_B
fe/b9a0: 6b           ???xd??? e ...#> @ret            rtl

                                       ********************************************************************************
                                       * COP 23 - OPCVS - convert stack index                                         *
                                       *                                                                              *
                                       * Action: This call takes a stack pointer relative address and converts it to  *
                                       * an absolute BHA address.                                                     *
                                       *                                                                              *
                                       * On entry: HA contains a 16 bit offset from the stack pointer.                *
                                       * On exit:  If C = 0 then BHA contains the absolute address (S+HA).            *
                                       *           If C = 1 then the stack offset is invalid.                         *
                                       ********************************************************************************
                                                       .rwid   longm
fe/b9a1: 0b           ??mxd??? e @T... COP_23          phd
fe/b9a2: 18           ??mxd??? e .....                 clc
fe/b9a3: 63 01        ??mxd??c e .....                 adc     $01,S
fe/b9a5: 69 0d 00     ??mxd??? e .....                 adc     #$000d
fe/b9a8: 2b           ??mxd??? e .....                 pld
fe/b9a9: b0 06        ??mxd??? e .....                 bcs     @ret
fe/b9ab: 85 05        ??mxd??c e .....                 sta     DPCOP_AH
fe/b9ad: e2 20        ??mxd??c e .....                 sep     #$20
                                                       .rwid   shortm
fe/b9af: 64 07        ??Mxd??c e .....                 stz     DPCOP_B
fe/b9b1: 6b           ???xd??? e ...#> @ret            rtl

                                       ********************************************************************************
                                       * COP 22 - OPRLN - Read a line to buffer                                       *
                                       *                                                                              *
                                       * Action: This call will read a line of characters from the keyboard. The call *
                                       * uses a control block which gives the address at which the characters are to  *
                                       * be put, the length of this buffer, and the number of characters to be sent   *
                                       * to the VDU drivers. Ihis number can be zero in which case no characters are  *
                                       * printed.                                                                     *
                                       *                                                                              *
                                       * During this call the current task may be pre-empted, in which case the carry *
                                       * flag will indicate as much. If either ESCAPE is pressed or a preempt occurs  *
                                       * then the next cal1 must be to OPAEV to acknowledge the event.                *
                                       *                                                                              *
                                       * On entry:  BHA points to a control block somewhere in memory.                *
                                       *            The format of the control block is as follows.                    *
                                       *   +0 4 byte pointer to the keyboard buffer.                                  *
                                       *        The least significant byte first (0) and the most significant byte    *
                                       *        last (3). The most significant byte mu.stbe zero (&00}.               *
                                       *   +4 2 byte buffer size. The buffer can be any size up to 6SS3S characters.  *
                                       *   +6 2 byte prefix length. This is the number of characters in the buffer    *
                                       *        which will be sent to the VDU drivers. Therefore it must not be       *
                                       *        greater than the buffer size. If the prefix length is zero then no    *
                                       *        characters are sent to the VDU drivers                                *
                                       *   +8 4 byte 0 word for future expansion                                      *
                                       *                                                                              *
                                       * On exit:   If C = 0 then the lirte has been read and the characters are in   *
                                       *            the buffer.                                                       *
                                       *            A contains the terminator of the input siring (CR ASCII 13        *
                                       * decimal).                                                                    *
                                       *            The length of the string in the buffer is given by the 2 bytes at *
                                       *            offset +6 in the control block.                                   *
                                       *            If C = 1 then                                                     *
                                       *            if HA = @SCESC% (£SCESC in MASM) then the ESCAPE key was pressed  *
                                       * or                                                                           *
                                       *            if HA = @SCPRE% (£SCPRE in MASM) then the current task was pre-   *
                                       *            empted.                                                           *
                                       *            DBXY preserved                                                    *
                                       *            Offsets 0 to 5 remain the same.                                   *
                                       ********************************************************************************
                                                       .rwid   longm
fe/b9b2: a0 02 00     ??mxd??? e @T... COP_22          ldy     #$0002
fe/b9b5: b7 05        n?mxd?z? e .....                 lda     [DPCOP_AH],y
fe/b9b7: eb           ??mxd??? e .....                 xba
fe/b9b8: 48           ??mxd??? e .....                 pha
fe/b9b9: ab           ??mxd??? e .....                 plb
fe/b9ba: ab           ??mxd??? e .....                 plb
fe/b9bb: a7 05        ??mxd??? e .....                 lda     [DPCOP_AH]
fe/b9bd: 48           ??mxd??? e .....                 pha
fe/b9be: a0 04 00     ??mxd??? e .....                 ldy     #$0004
fe/b9c1: b7 05        n?mxd?z? e .....                 lda     [DPCOP_AH],y
fe/b9c3: 48           ??mxd??? e .....                 pha
fe/b9c4: a0 06 00     ??mxd??? e .....                 ldy     #$0006
fe/b9c7: b7 05        n?mxd?z? e .....                 lda     [DPCOP_AH],y
fe/b9c9: 48           ??mxd??? e .....                 pha
fe/b9ca: aa           ??mxd??? e .....                 tax
fe/b9cb: f0 10        ??mxd??? e .....                 beq     LFEB9DD
fe/b9cd: c3 03        ??mxd?z? e .....                 cmp     $03,S
fe/b9cf: f0 0c        ??mxd??? e .....                 beq     LFEB9DD
fe/b9d1: 90 03        ??mxd?z? e .....                 bcc     LFEB9D6
fe/b9d3: 82 7e 00     ??mxd?zC e ...#.                 brl     LFEBA54

fe/b9d6: a3 03        ??mxd?zc e ....> LFEB9D6         lda     $03,S
fe/b9d8: d0 03        ??mxd??c e .....                 bne     LFEB9DD
fe/b9da: 82 77 00     ??mxd?Zc e ...#.                 brl     LFEBA54

fe/b9dd: 20 7b ea     ??mxd??? e ....> LFEB9DD         jsr     LFEEA7B
fe/b9e0: 58           ??mxd??? e .....                 cli
fe/b9e1: a3 01        ??mxdi?? e .....                 lda     $01,S
fe/b9e3: a8           ??mxdi?? e .....                 tay
fe/b9e4: 80 07        ??mxdi?? e ...#.                 bra     LFEB9ED

fe/b9e6: a9 07 00     ??mxdi?? e ....> LFEB9E6         lda     #$0007
fe/b9e9: 88           n?mxdiz? e .....                 dey
fe/b9ea: c8           ??mxdi?? e ....> LFEB9EA         iny
fe/b9eb: 02 00        ??mxdi?? e ....> LFEB9EB         cop     COP_00_OPWRC
fe/b9ed: da           ??mxdi?? e ....> LFEB9ED         phx
fe/b9ee: a9 00 00     ??mxdi?? e .....                 lda     #$0000
fe/b9f1: eb           n?mxdiZ? e .....                 xba
fe/b9f2: a9 03 00     ??mxdi?? e .....                 lda     #$0003
fe/b9f5: a2 02 00     n?mxdiz? e .....                 ldx     #$0002
fe/b9f8: 22 b0 ff 00  n?mxdiz? e .....                 jsl     __EV
fe/b9fc: fa           ??mxdi?? e .....                 plx
fe/b9fd: b0 6d        ??mxdi?? e .....                 bcs     LFEBA6C
fe/b9ff: 02 04        ??mxdi?c e .....                 cop     COP_04_OPRDC
fe/ba01: b0 69        ??mxdi?c e ..!..                 bcs     LFEBA6C
fe/ba03: c9 7f 00     ??mxdi?c e .....                 cmp     #$007f
fe/ba06: d0 08        ??mxdi?? e .....                 bne     LFEBA10
fe/ba08: c0 00 00     ??mxdiZ? e .....                 cpy     #$0000
fe/ba0b: f0 e0        ??mxdi?? e .....                 beq     LFEB9ED
fe/ba0d: 88           ??mxdiz? e .....                 dey
fe/ba0e: 80 db        ??mxdi?? e ...#.                 bra     LFEB9EB

fe/ba10: c9 18 00     ??mxdiz? e ....> LFEBA10         cmp     #$0018
fe/ba13: f0 05        ??mxdi?? e .....                 beq     LFEBA1A
fe/ba15: c9 15 00     ??mxdiz? e .....                 cmp     #$0015
fe/ba18: d0 0d        ??mxdi?? e .....                 bne     LFEBA27
fe/ba1a: 98           ??mxdiZ? e ....> LFEBA1A         tya
fe/ba1b: f0 d0        ??mxdi?? e .....                 beq     LFEB9ED
fe/ba1d: a9 7f 00     ??mxdiz? e .....                 lda     #$007f
fe/ba20: 02 00        ??mxdiz? e ....> LFEBA20         cop     COP_00_OPWRC
fe/ba22: 88           ??mxdiz? e .....                 dey
fe/ba23: d0 fb        ??mxdi?? e .....                 bne     LFEBA20
fe/ba25: 80 c6        ??mxdiZ? e ...#.                 bra     LFEB9ED

fe/ba27: c9 0e 00     ??mxdiz? e ....> LFEBA27         cmp     #$000e
fe/ba2a: f0 bf        ??mxdi?? e .....                 beq     LFEB9EB
fe/ba2c: c9 0f 00     ??mxdiz? e .....                 cmp     #$000f
fe/ba2f: f0 ba        ??mxdi?? e .....                 beq     LFEB9EB
fe/ba31: c9 0d 00     ??mxdiz? e .....                 cmp     #$000d
fe/ba34: f0 05        ??mxdi?? e .....                 beq     LFEBA3B
fe/ba36: c9 20 00     ??mxdiz? e .....                 cmp     #$0020
fe/ba39: 90 ab        ??mxdi?? e .....                 bcc     LFEB9E6
fe/ba3b: e2 20        ??mxdi?? e ....> LFEBA3B         sep     #$20
                                                       .rwid   shortm
fe/ba3d: 93 05        ??Mxdi?? e .....                 sta     ($05,S),y
fe/ba3f: c2 20        ??Mxdi?? e .....                 rep     #$20
                                                       .rwid   longm
fe/ba41: c9 0d 00     ??mxdi?? e .....                 cmp     #$000d
fe/ba44: f0 14        ??mxdi?? e .....                 beq     LFEBA5A
fe/ba46: 48           ??mxdiz? e .....                 pha
fe/ba47: 98           ??mxdiz? e .....                 tya
fe/ba48: c3 05        ??mxdi?? e .....                 cmp     $05,S
fe/ba4a: 68           ??mxdi?? e .....                 pla
fe/ba4b: b0 99        ??mxdi?? e .....                 bcs     LFEB9E6
fe/ba4d: c9 20 00     ??mxdi?c e .....                 cmp     #$0020
fe/ba50: 90 9b        ??mxdi?? e .....                 bcc     LFEB9ED
fe/ba52: 80 96        ??mxdi?C e ...#.                 bra     LFEB9EA

fe/ba54: a2 ff ff     ??mxd??? e ....> LFEBA54         ldx     #$ffff
fe/ba57: 38           n?mxd?z? e .....                 sec
fe/ba58: 80 1c        n?mxd?zC e ...#.                 bra     LFEBA76

fe/ba5a: 02 03        ??mxdiZ? e ....> LFEBA5A         cop     COP_03_OPNLI
fe/ba5c: 48           ??mxdiZ? e .....                 pha
fe/ba5d: a9 00 00     ??mxdiZ? e .....                 lda     #$0000
fe/ba60: eb           n?mxdiZ? e .....                 xba
fe/ba61: a9 01 00     ??mxdi?? e .....                 lda     #$0001
fe/ba64: a2 02 00     n?mxdiz? e .....                 ldx     #$0002
fe/ba67: 22 b0 ff 00  n?mxdiz? e .....                 jsl     __EV
fe/ba6b: 68           ??mxdi?? e .....                 pla
fe/ba6c: 29 ff 00     ??mxdi?? e ....> LFEBA6C         and     #$00ff
fe/ba6f: aa           n?mxdi?? e .....                 tax
fe/ba70: 98           ??mxdi?? e .....                 tya
fe/ba71: a0 06 00     ??mxdi?? e .....                 ldy     #$0006
fe/ba74: 97 05        n?mxdiz? e .....                 sta     [DPCOP_AH],y
fe/ba76: 86 05        n?mxd?z? e ....> LFEBA76         stx     DPCOP_AH
fe/ba78: 7a           n?mxd?z? e .....                 ply
fe/ba79: 7a           ??mxd??? e .....                 ply
fe/ba7a: 7a           ??mxd??? e .....                 ply
fe/ba7b: 6b           ??mxd??? e ...#.                 rtl

fe/ba7c: 4b           ??mxd??? e @T...                 phk
fe/ba7d: 20 d4 f5     ??mxd??? e .....                 jsr     CheckEOF
fe/ba80: b0 15        ??mxd??? e .....                 bcs     LFEBA97
fe/ba82: 4a           ??mxd??c e .....                 lsr     A
fe/ba83: 90 12        n?mxd??? e .....                 bcc     LFEBA97
fe/ba85: 02 26        n?mxd??C e .....                 cop     COP_26_OPBHA
fe/ba87: 45 6e 64 20+            .T...                 .zstr   “End of file”
fe/ba93: a2 01 00     n?mxd??C e .....                 ldx     #$0001
fe/ba96: 38           n?mxd?zC e .....                 sec
fe/ba97: 6b           ??mxd??? e ...#> LFEBA97         rtl

                                       ********************************************************************************
                                       * COP 0A - OPBGT - BGET                                                        *
                                       *                                                                              *
                                       * Action: Read one byte from an open device or file. The channel must          *
                                       * previously have been opened using OPOPN.                                     *
                                       *                                                                              *
                                       * On entry: Y contains the handle from OPOPN.                                  *
                                       * On exit:  A contains the byte read from the file.                            *
                                       *           if C = I then an enor has occurred, and A is invalid.              *
                                       *           No registers preserved                                             *
                                       ********************************************************************************
fe/ba98: 4b           ??mxd??? e @T... COP_0A          phk
fe/ba99: 20 a2 f5     ??mxd??? e .....                 jsr     doBGET
fe/ba9c: 85 05        ??mxd??? e .....                 sta     DPCOP_AH
fe/ba9e: b0 11        ??mxd??? e .....                 bcs     retCopXBHA
fe/baa0: 6b           ??mxd??c e ...#.                 rtl

                                       ********************************************************************************
                                       * COP 0B - OPBPT - BPUT                                                        *
                                       *                                                                              *
                                       * Action: Write one byte to an open file or device. The channel must           *
                                       * previously have been opened using OPOPN.                                     *
                                       *                                                                              *
                                       * On entry: Y contains the file handle from OPOPN.                             *
                                       *           A contains the byte to be written.                                 *
                                       * On exit:  No registers preserved                                             *
                                       ********************************************************************************
fe/baa1: 4b           ??mxd??? e @T... COP_0B          phk
fe/baa2: 20 bb f5     ??mxd??? e .....                 jsr     doBPUT
fe/baa5: b0 0a        ??mxd??? e .....                 bcs     retCopXBHA
fe/baa7: 6b           ??mxd??c e ...#.                 rtl

                                       ********************************************************************************
                                       * COP 44 - OPOPN - open device driver                                          *
                                       * Action: This call opens a device driver.                                     *
                                       * On entry: BHA points to the name (with colon). terminated by CR(&0D).        *
                                       *           Y = &40 for input                                                  *
                                       *           Y = &80 Toroutput                                                  *
                                       *           Y = &C0 for update                                                 *
                                       * On exit:  C = 0 means that the device driver is open and Y = handle.         *
                                       *           If C= I then the device failed to open, the error code is in X     *
                                       *           and BHA points to a zeroterminated error message.                  *
                                       *           D preserved                                                        *
                                       ********************************************************************************
fe/baa8: 4b           ??mxd??? e @T... COP_44          phk
fe/baa9: 20 ff f5     ??mxd??? e .....                 jsr     @sk2
fe/baac: b0 03        ??mxd??? e .....                 bcs     retCopXBHA
fe/baae: 84 01        ??mxd??c e .....                 sty     DPCOP_Y
fe/bab0: 6b           ??mxd??c e ...#.                 rtl

fe/bab1: 86 03        ??mxd??? e ....> retCopXBHA      stx     DPCOP_X
fe/bab3: 85 05        ??mxd??? e .....                 sta     DPCOP_AH
fe/bab5: e2 20        ??mxd??? e .....                 sep     #$20
                                                       .rwid   shortm
fe/bab7: 8b           ??Mxd??? e .....                 phb
fe/bab8: 68           ??Mxd??? e .....                 pla
fe/bab9: 85 07        ??Mxd??? e .....                 sta     DPCOP_B
fe/babb: c2 20        ??Mxd??? e .....                 rep     #$20
                                                       .rwid   longm
fe/babd: 6b           ??mxd??? e ...#.                 rtl

                                       ********************************************************************************
                                       * COP 45 - OPCLS - close device driver                                         *
                                       * Action: This call closes a device driver which has been opened using OPOPN.  *
                                       *                                                                              *
                                       * On entry: Y = handle allocated by OPOPN.                                     *
                                       * On exit:  If C = 0 then driver is closed.                                    *
                                       *           If C = 1 then the driver close failed, X = error code and BHA      *
                                       *           points to a zero-terminated error message.                         *
                                       *           D preserved                                                        *
                                       ********************************************************************************
fe/babe: 4b           ??mxd??? e @T... COP_45          phk
fe/babf: 20 a0 f7     ??mxd??? e .....                 jsr     closeDevice
fe/bac2: b0 ed        ??mxd??? e .....                 bcs     retCopXBHA
fe/bac4: 6b           ??mxd??c e ...#.                 rtl

                                       ********************************************************************************
                                       * COP 46 - OPEND - test for end of file                                        *
                                       * Action: This call will test an open file to see if the end of file has been  *
                                       * reached.                                                                     *
                                       *                                                                              *
                                       * On entry: Y contains the file handle returned by OPOPN.                      *
                                       * On exit:  If C = 0 then                                                      *
                                       *             If lsb A = 0 the end of file has not been reached,               *
                                       *             If lsb A = 1 then the end of file has been reached.              *
                                       *           Note: only the least significant bit of A (or HA) need be tested.  *
                                       *           If C = 1 then the call failed.                                     *
                                       *           X = error code (X = 0 means "Not implemented on this driver").     *
                                       *           BHA points to a zero-terminated error message                      *
                                       *           DAXY preserved                                                     *
                                       ********************************************************************************
fe/bac5: 4b           ??mxd??? e @T... COP_46          phk
fe/bac6: 20 d4 f5     ??mxd??? e .....                 jsr     CheckEOF
fe/bac9: b0 e6        ??mxd??? e .....                 bcs     retCopXBHA
fe/bacb: 85 05        ??mxd??c e .....                 sta     DPCOP_AH
fe/bacd: 6b           ??mxd??c e ...#.                 rtl

                                       ********************************************************************************
                                       * COP 4B - OPVH - validate handle                                              *
                                       *                                                                              *
                                       * Action: Checks whether a handle is conect for the given device name.         *
                                       * On entry: BHA points to the zero-terminated device name.                     *
                                       *           Y = handle                                                         *
                                       * On exit:  If C = 0 then handle valid.                                        *
                                       *           If C = 1 then handle not valid.                                    *
                                       *           DY preserved                                                       *
                                       ********************************************************************************
fe/bace: c0 00 01     ??mxd??? e @T... COP_4B          cpy     #$0100
fe/bad1: 90 2b        ??mxd??? e .....                 bcc     @retNotAHandle
fe/bad3: bb           ??mxd??C e .....                 tyx
fe/bad4: bf 0b 00 00  ??mxd??C e .....                 ldal    f:$00000b,x
fe/bad8: 29 ff 00     ??mxd??C e .....                 and     #$00ff
fe/badb: 49 10 00     n?mxd??C e .....                 eor     #$0010
fe/bade: c9 01 00     ??mxd??C e .....                 cmp     #$0001
fe/bae1: b0 1b        ??mxd??? e .....                 bcs     @retNotAHandle
fe/bae3: bf 03 00 00  ??mxd??c e .....                 ldal    f:DPCOP_X,x
fe/bae7: 48           ??mxd??c e .....                 pha
fe/bae8: a5 05        ??mxd??c e .....                 lda     DPCOP_AH
fe/baea: 4b           ??mxd??c e .....                 phk
fe/baeb: 20 28 f8     ??mxd??c e .....                 jsr     LFEF828
fe/baee: 68           ??mxd??? e .....                 pla
fe/baef: b0 1e        ??mxd??? e .....                 bcs     @retBadModule
fe/baf1: 70 1c        ??mxd??c e .....                 bvs     @retBadModule
fe/baf3: 48           ?vmxd??c e .....                 pha
fe/baf4: 8a           ?vmxd??c e .....                 txa
fe/baf5: 43 01        ?vmxd??c e .....                 eor     $01,S
fe/baf7: c9 01 00     ?vmxd??c e .....                 cmp     #$0001
fe/bafa: 68           ?vmxd??? e .....                 pla
fe/bafb: b0 12        ?vmxd??? e .....                 bcs     @retBadModule
fe/bafd: 6b           ?vmxd??c e ...#.                 rtl

fe/bafe: 02 26        ??mxd??? e ....> @retNotAHandle  cop     COP_26_OPBHA
fe/bb00: 4e 6f 74 20+            .T...                 .zstr   “Not a handle”
fe/bb0d: 80 0d        ??mxd??? e ...#.                 bra     @retsecX1

fe/bb0f: 02 26        ??mxd??? e ....> @retBadModule   cop     COP_26_OPBHA
fe/bb11: 42 61 64 20+            .T...                 .zstr   “Bad module”
fe/bb1c: a2 01 00     ??mxd??? e ....> @retsecX1       ldx     #$0001
fe/bb1f: 38           n?mxd?z? e .....                 sec
fe/bb20: 82 8e ff     n?mxd?zC e ...#.                 brl     retCopXBHA

                                       ********************************************************************************
                                       * COP 38 - OPAH - allocate 16 bit handle                                       *
                                       * Action: This call allocates a 16 bit handle lo the device whose name is      *
                                       * pointed to by BHA. The handle is returned in Y.                              *
                                       *                                                                              *
                                       * On entry: BHA points to the device name. Device drivers are called with a    *
                                       *           colon appended to the module name to distinguish them from files.  *
                                       *           For example, to allocate a handle for the driver module MODEM,     *
                                       *           BHA must point to "MODEM:"                                         *
                                       *           Y = 0.                                                             *
                                       *                                                                              *
                                       * On exit: If C = 0 then handle was allocated and Y s handle.                  *
                                       *          If C = 1 then the call failed lo allocate a handle.                 *
                                       *          No registers preserved                                              *
                                       ********************************************************************************
fe/bb23: 4b           ??mxd??? e @T... COP_38          phk
fe/bb24: 20 28 f8     ??mxd??? e .....                 jsr     LFEF828
fe/bb27: b0 16        ??mxd??? e .....                 bcs     @retsec
fe/bb29: 70 14        ??mxd??c e .....                 bvs     @retsec
fe/bb2b: da           ?vmxd??c e .....                 phx
fe/bb2c: a0 fe fd     ?vmxd??c e .....                 ldy     #$fdfe
fe/bb2f: a9 10 00     nvmxd?zc e .....                 lda     #HND_type_10_CBHN
fe/bb32: 20 e4 f8     nvmxd?zc e .....                 jsr     LFEF8E4
fe/bb35: 68           ??mxd??? e .....                 pla
fe/bb36: b0 07        ??mxd??? e .....                 bcs     @retsec
fe/bb38: 9f 03 00 00  ??mxd??c e .....                 stal    f:$000003,x
fe/bb3c: 86 01        ??mxd??c e .....                 stx     DPCOP_Y
fe/bb3e: 6b           ??mxd??c e ...#.                 rtl

fe/bb3f: 64 03        ??mxd??? e ....> @retsec         stz     DPCOP_X
fe/bb41: 38           ??mxd??? e .....                 sec
fe/bb42: 6b           ??mxd??C e ...#.                 rtl

                                       ********************************************************************************
                                       * COP 39 - OPFH - free handle                                                  *
                                       *                                                                              *
                                       * Action: This call frees the handle allocated by OPAH.                        *
                                       *                                                                              *
                                       * On entry: Y = handle.                                                        *
                                       * On exit:  If C = 0 then the handle is freed.                                 *
                                       *           If C = 1 then the call failed to free the handle.                  *
                                       *           No registers preserved                                             *
                                       ********************************************************************************
fe/bb43: a6 01        ??mxd??? e @T... COP_39          ldx     DPCOP_Y
fe/bb45: a0 fe fd     ??mxd??? e .....                 ldy     #$fdfe
fe/bb48: 20 2c f9     n?mxd?z? e .....                 jsr     LFEF92C
fe/bb4b: 6b           ??mxd??? e ...#.                 rtl

                                       ********************************************************************************
                                       * COP 3A - OPCUH - call device driver using handle                             *
                                       *                                                                              *
                                       * Action: Calls the device driver whose handle was allocated by OPAH.          *
                                       *                                                                              *
                                       * On entry: Y = handle.                                                        *
                                       *           Other registers and/br data as required by device driver.          *
                                       * On exit:  HAXYB registers as returned from device driver.                    *
                                       *           If C = 0 then the codes returned from driver are valid.            *
                                       *           If C = 1 then either the handle was invalid, or the codes returned *
                                       *                                                                              *
                                       *           by the driver are invalid.                                         *
                                       *           D preserved                                                        *
                                       *                                                                              *
                                       * QRY - caller's X is used but not documented?                                 *
                                       ********************************************************************************
fe/bb4c: a6 03        ??mxd??? e @T... COP_3A          ldx     DPCOP_X
fe/bb4e: 4b           ??mxd??? e .....                 phk
fe/bb4f: 20 e9 c7     ??mxd??? e .....                 jsr     callDevHandle
fe/bb52: c2 30        ??mxd??? e .....                 rep     #$30
fe/bb54: 85 05        ??mxd??? e .....                 sta     DPCOP_AH
fe/bb56: 86 03        ??mxd??? e .....                 stx     DPCOP_X
fe/bb58: 84 01        ??mxd??? e .....                 sty     DPCOP_Y
fe/bb5a: e2 20        ??mxd??? e .....                 sep     #$20
                                                       .rwid   shortm
fe/bb5c: 8b           ??Mxd??? e .....                 phb
fe/bb5d: 68           ??Mxd??? e .....                 pla
fe/bb5e: 85 07        ??Mxd??? e .....                 sta     DPCOP_B
fe/bb60: 6b           ??Mxd??? e ...#.                 rtl

                                       ********************************************************************************
                                       * COP 36 - OPNLU - name lookup                                                 *
                                       *                                                                              *
                                       * Action: This call checks a list of names to see if a qiecific name is        *
                                       * present. If it is then the offset of the name from the start of the list is  *
                                       * given in Y.                                                                  *
                                       *                                                                              *
                                       * On entry: The 4 byte address at D,0 points to the start of the name list.    *
                                       *           The 4 byte address at D,4 points to the name to be located.        *
                                       *           If Y = 0 then the slash "/" character is used as a delimiter.      *
                                       *           If Y <> 0 then the character whose ASCII code is in Y is used as   *
                                       *           a delimiter.                                                       *
                                       * On exit:  If C = 0 then the name is in the list at offset Y from the start   *
                                       *           If C = 1 then the name is not in the list                          *
                                       *           No registers preserved                                             *
                                       *                                                                              *
                                       * TODO: Documentation correction the actual input addresses are D,X and D,X+4  *
                                       ********************************************************************************
                                                       .rwid   longm
fe/bb61: 0b           ??mxd??? e @T... COP_36          phd
fe/bb62: a5 08        ??mxd??? e .....                 lda     DPCOP_DP
fe/bb64: 18           ??mxd??? e .....                 clc
fe/bb65: 65 03        ??mxd??c e .....                 adc     DPCOP_X
fe/bb67: 5b           ??mxd??? e .....                 tcd
fe/bb68: 4b           ??mxd??? e .....                 phk
fe/bb69: 20 ed f2     ??mxd??? e .....                 jsr     doNameSearch
fe/bb6c: 2b           ??mxd??? e .....                 pld
fe/bb6d: 84 01        ??mxd??? e .....                 sty     DPCOP_Y
fe/bb6f: 6b           ??mxd??? e ...#.                 rtl

                                       ********************************************************************************
                                       * Action: Adds a module to the list of modules held by the MOS.                *
                                       *                                                                              *
                                       * On entry: Y holds the handle of the memory pool in which the module has been *
                                       *           loaded.                                                            *
                                       * On exit:  C = 0 means that the module was added to the list.                 *
                                       *           C = 1 means that the module was not added to the list.             *
                                       *           No registers preserved                                             *
                                       *                                                                              *
                                       * TODO: DOCO: Further to above when C = 1, X = 1 BHA contains a reason string  *
                                       ********************************************************************************
fe/bb70: a2 0e 00     ??mxd??? e @T... COP_35          ldx     #$000e
fe/bb73: 22 8c ff 00  n?mxd?z? e .....                 jsl     __MM
fe/bb77: b0 26        ??mxd??? e .....                 bcs     LFEBB9F
fe/bb79: 0b           ??mxd??c e .....                 phd
fe/bb7a: 8b           ??mxd??c e .....                 phb
fe/bb7b: 8b           ??mxd??c e .....                 phb
fe/bb7c: 48           ??mxd??c e .....                 pha
fe/bb7d: 62 6a 35     ??mxd??c e .....                 per     LFEF0EA
fe/bb80: 4b           ??mxd??c e .....                 phk
                                                       .dbank  K (auto)
fe/bb81: ab           ??mxd??c e .....                 plb
fe/bb82: 3b           ??mxd??c e .....                 tsc
fe/bb83: 5b           ??mxd??c e .....                 tcd
fe/bb84: 20 2d ef     ??mxd??c e .....                 jsr     LFEEF2D
fe/bb87: b0 0b        ??mxd??? e .....                 bcs     LFEBB94
fe/bb89: fa           ??mxd??c e .....                 plx
fe/bb8a: da           ??mxd??c e .....                 phx
fe/bb8b: 20 9d ef     ??mxd??c e .....                 jsr     LFEEF9D
fe/bb8e: 68           ??mxd??? e .....                 pla
fe/bb8f: 68           ??mxd??? e .....                 pla
fe/bb90: 68           ??mxd??? e .....                 pla
fe/bb91: 2b           ??mxd??? e .....                 pld
fe/bb92: 18           ??mxd??? e .....                 clc
fe/bb93: 6b           ??mxd??c e ...#.                 rtl

fe/bb94: 68           ??mxd??C e ....> LFEBB94         pla
fe/bb95: 68           ??mxd??C e .....                 pla
fe/bb96: 68           ??mxd??C e .....                 pla
fe/bb97: 2b           ??mxd??C e .....                 pld
fe/bb98: 20 94 c8     ??mxd??C e .....                 jsr     cop26BadModuleX1
fe/bb9b: 38           ??mxd??? e .....                 sec
fe/bb9c: 82 12 ff     ??mxd??C e ...#.                 brl     retCopXBHA

fe/bb9f: 20 a3 c8     ??mxd??C e ....> LFEBB9F         jsr     cop26BadHandleX1
fe/bba2: 38           ??mxd??? e .....                 sec
fe/bba3: 82 0b ff     ??mxd??C e ...#.                 brl     retCopXBHA

                                       ********************************************************************************
                                       * COP 34 - OPRMI - read module Info                                            *
                                       * Action: Read information about the module whose name is pointed to by BHA.   *
                                       * The entry address can be read, or the flag and code type bytes.              *
                                       *                                                                              *
                                       * On entry: BHA points to module name                                          *
                                       *           X = hint (returned by OPSLM) or 0.                                 *
                                       *           Y = 0 to read entry address (address of BRL).                      *
                                       *           Y = 2 to read the code type bytes.                                 *
                                       *           Y = 4 to read module version.                                      *
                                       *           Note: this COP must be called in 16-bit XY mode to read the        *
                                       *           module-type flags.                                                 *
                                       * On exit:  C = 0 means that the module was found and module information read. *
                                       *           C = 1 means that the module was not found.                         *
                                       *           If C = 0 and Y = 0 then BHA contains the entry address of the      *
                                       *           module, this being the address of the BRL, the first byte of       *
                                       *           the module header.                                                 *
                                       *           If C = 0 and Y = 2 then HA contains code type bytes 0 and 1, X     *
                                       *           contains code type bytes 2 and 3.                                  *
                                       *           If C = 0 and Y = 4 then HA = version.                              *
                                       *           D preserved                                                        *
                                       *                                                                              *
                                       ********************************************************************************
fe/bba6: a2 00 00     ??mxd??? e @T... COP_34          ldx     #$0000
fe/bba9: a0 00 00     n?mxd?Z? e .....                 ldy     #$0000
fe/bbac: 4b           n?mxd?Z? e .....                 phk
fe/bbad: 20 31 f2     n?mxd?Z? e .....                 jsr     LFEF231
fe/bbb0: b0 36        ??mxd??? e .....                 bcs     LFEBBE8
fe/bbb2: d4 01        ??mxd??c e .....                 pei     (DPCOP_Y)
fe/bbb4: 7b           ??mxd??c e .....                 tdc
fe/bbb5: 18           ??mxd??c e .....                 clc
fe/bbb6: 69 05 00     ??mxd??c e .....                 adc     #$0005
fe/bbb9: 5b           ??mxd??? e .....                 tcd
fe/bbba: 4b           ??mxd??? e .....                 phk
fe/bbbb: 20 b7 f2     ??mxd??? e .....                 jsr     LFEF2B7
fe/bbbe: fa           ??mxd??? e .....                 plx
fe/bbbf: f0 17        ??mxd??? e .....                 beq     LFEBBD8
fe/bbc1: 7b           ??mxd?z? e .....                 tdc
fe/bbc2: 3a           ??mxd??? e .....                 dec     A
fe/bbc3: 3a           ??mxd??? e .....                 dec     A
fe/bbc4: 5b           ??mxd??? e .....                 tcd
fe/bbc5: e0 02 00     ??mxd??? e .....                 cpx     #$0002
fe/bbc8: d0 10        ??mxd??? e .....                 bne     LFEBBDA
fe/bbca: a0 0a 00     ??mxd?Z? e .....                 ldy     #$000a
fe/bbcd: b7 02        n?mxd?z? e .....                 lda     [DPCOP_Y+1],y
fe/bbcf: aa           ??mxd??? e .....                 tax
fe/bbd0: 88           ??mxd??? e .....                 dey
fe/bbd1: 88           ??mxd??? e .....                 dey
fe/bbd2: b7 02        ??mxd??? e .....                 lda     [DPCOP_Y+1],y
fe/bbd4: 86 00        ??mxd??? e .....                 stx     $00
fe/bbd6: 85 02        ??mxd??? e .....                 sta     DPCOP_Y+1
fe/bbd8: 18           ??mxd??? e ....> LFEBBD8         clc
fe/bbd9: 6b           ??mxd??c e ...#.                 rtl

fe/bbda: e0 04 00     ??mxd?z? e ....> LFEBBDA         cpx     #$0004
fe/bbdd: d0 09        ??mxd??? e .....                 bne     LFEBBE8
fe/bbdf: a0 06 00     ??mxd?Z? e .....                 ldy     #$0006
fe/bbe2: b7 02        n?mxd?z? e .....                 lda     [DPCOP_Y+1],y
fe/bbe4: 85 02        ??mxd??? e .....                 sta     DPCOP_Y+1
fe/bbe6: 18           ??mxd??? e .....                 clc
fe/bbe7: 6b           ??mxd??c e ...#.                 rtl

fe/bbe8: 38           ??mxd??? e ....> LFEBBE8         sec
fe/bbe9: 6b           ??mxd??C e ...#.                 rtl

                                       ********************************************************************************
                                       * COP 33 - OPSLM - scan list of modules                                        *
                                       * Action: This call returns with BHA pointing to a location containing the     *
                                       * name of the next module in the list X and Y return hints used by the         *
                                       * operating system to find this module quickly.                                *
                                       *                                                                              *
                                       * On entry: BHA either points to the name of the previous module, or to a free *
                                       *                                                                              *
                                       *           area of memory containing a number of spaces terminated by zero    *
                                       * (&00).                                                                       *
                                       *           In the latter case, BHA is preserved, and the name of the first    *
                                       *           module in the list is written to the location pointed to by BHA.   *
                                       *           The first name in the list is either truncated or padded with      *
                                       *           spaces to fit the number of spaces allocated on entry.             *
                                       *           X = hint (retunted by previous OPSLM), or 0.                       *
                                       *           Y = hint (returned by previous OPSLM), or 0.                       *
                                       *                                                                              *
                                       * On exit:  BHA points to the name of the next module.                         *
                                       *           X = hint (number used by the operating system).                    *
                                       *           Y = hint (number used by the opeiatmg system).                     *
                                       *           No registers preserved                                             *
                                       *                                                                              *
                                       * To call:                                                                     *
                                       * Example:                                                                     *
                                       * COP                                                                          *
                                       * EQUB@OPSLU% from BASIC                                                       *
                                       ********************************************************************************
fe/bbea: 8b           ??mxd??? e @T... COP_33          phb
fe/bbeb: 48           ??mxd??? e .....                 pha
fe/bbec: 8b           ??mxd??? e .....                 phb
fe/bbed: 48           ??mxd??? e .....                 pha
fe/bbee: 3b           ??mxd??? e .....                 tsc
fe/bbef: 1a           ??mxd??? e .....                 inc     A
fe/bbf0: 5b           ??mxd??? e .....                 tcd
fe/bbf1: a0 00 00     ??mxd??? e .....                 ldy     #$0000
fe/bbf4: b7 03        n?mxd?Z? e .....                 lda     [DPCOP_X],y
fe/bbf6: 20 f7 f4     ??mxd??? e .....                 jsr     checkValidModnameChar
fe/bbf9: af 0e fe 00  ??mxd??? e .....                 ldal    f:B0LST_MODULES_QRY
fe/bbfd: b0 12        ??mxd??? e .....                 bcs     LFEBC11
fe/bbff: a5 03        ??mxd??c e .....                 lda     DPCOP_X
fe/bc01: a2 00 00     ??mxd??c e .....                 ldx     #$0000
fe/bc04: a0 00 00     n?mxd?Zc e .....                 ldy     #$0000
fe/bc07: 4b           n?mxd?Zc e .....                 phk
fe/bc08: 20 31 f2     n?mxd?Zc e .....                 jsr     LFEF231
fe/bc0b: b0 67        ??mxd??? e .....                 bcs     LFEBC74
fe/bc0d: bf 00 00 00  ??mxd??c e .....                 ldal    f:$000000,x
fe/bc11: c9 0e fe     ??mxd??? e ....> LFEBC11         cmp     #$fe0e
fe/bc14: f0 5e        ??mxd??? e .....                 beq     LFEBC74
fe/bc16: aa           ??mxd?z? e .....                 tax
fe/bc17: 4b           ??mxd??? e .....                 phk
fe/bc18: 20 b7 f2     ??mxd??? e .....                 jsr     LFEF2B7
fe/bc1b: a0 0e 00     ??mxd??? e .....                 ldy     #$000e
fe/bc1e: 20 43 f3     n?mxd?z? e .....                 jsr     LFEF343
fe/bc21: a0 ff ff     ??mxd??? e .....                 ldy     #$ffff
fe/bc24: c8           ??mxd??? e ....> LFEBC24         iny
fe/bc25: 30 4d        ??mxd??? e .....                 bmi     LFEBC74
fe/bc27: b7 00        n?mxd??? e .....                 lda     [$00],y
fe/bc29: 29 ff 00     ??mxd??? e .....                 and     #$00ff
fe/bc2c: c9 2f 00     n?mxd??? e .....                 cmp     #$002f
fe/bc2f: f0 05        ??mxd??? e .....                 beq     LFEBC36
fe/bc31: c9 20 00     ??mxd?z? e .....                 cmp     #$0020
fe/bc34: b0 ee        ??mxd??? e .....                 bcs     LFEBC24
fe/bc36: bb           ??mxd??? e ....> LFEBC36         tyx
fe/bc37: 88           ??mxd??? e ....> LFEBC37         dey
fe/bc38: 30 0a        ??mxd??? e .....                 bmi     LFEBC44
fe/bc3a: b7 03        n?mxd??? e .....                 lda     [DPCOP_X],y
fe/bc3c: 29 ff 00     ??mxd??? e .....                 and     #$00ff
fe/bc3f: c9 20 00     n?mxd??? e .....                 cmp     #$0020
fe/bc42: b0 f3        ??mxd??? e .....                 bcs     LFEBC37
fe/bc44: a0 00 00     ??mxd??? e ....> LFEBC44         ldy     #$0000
fe/bc47: 98           ??mxd??? e ....> LFEBC47         tya
fe/bc48: da           ??mxd??? e .....                 phx
fe/bc49: c3 01        ??mxd??? e .....                 cmp     $01,S
fe/bc4b: fa           ??mxd??? e .....                 plx
fe/bc4c: b0 0b        ??mxd??? e .....                 bcs     LFEBC59
fe/bc4e: e2 20        ??mxd??c e .....                 sep     #$20
                                                       .rwid   shortm
fe/bc50: b7 00        ??Mxd??c e .....                 lda     [$00],y
fe/bc52: 97 03        ??Mxd??c e .....                 sta     [DPCOP_X],y
fe/bc54: c2 20        ??Mxd??c e .....                 rep     #$20
                                                       .rwid   longm
fe/bc56: c8           ??mxd??c e .....                 iny
fe/bc57: 80 ee        ??mxd??c e ...#.                 bra     LFEBC47

fe/bc59: b7 03        ??mxd??C e ....> LFEBC59         lda     [DPCOP_X],y
fe/bc5b: 29 ff 00     ??mxd??C e .....                 and     #$00ff
fe/bc5e: c9 20 00     n?mxd??C e .....                 cmp     #$0020
fe/bc61: 90 0b        ??mxd??? e .....                 bcc     LFEBC6E
fe/bc63: e2 20        ??mxd??C e .....                 sep     #$20
                                                       .rwid   shortm
fe/bc65: a9 20        ??Mxd??C e .....                 lda     #$20
fe/bc67: 97 03        n?Mxd?zC e .....                 sta     [DPCOP_X],y
fe/bc69: c2 20        n?Mxd?zC e .....                 rep     #$20
                                                       .rwid   longm
fe/bc6b: c8           n?mxd?zC e .....                 iny
fe/bc6c: 80 eb        ??mxd??C e ...#.                 bra     LFEBC59

fe/bc6e: 18           ??mxd??c e ....> LFEBC6E         clc
fe/bc6f: 68           ??mxd??? e ....> LFEBC6F         pla
fe/bc70: ab           ??mxd??? e .....                 plb
fe/bc71: 68           ??mxd??? e .....                 pla
fe/bc72: ab           ??mxd??? e .....                 plb
fe/bc73: 6b           ??mxd??? e ...#.                 rtl

fe/bc74: 38           ??mxd??? e ....> LFEBC74         sec
fe/bc75: 80 f8        ??mxd??C e ...#.                 bra     LFEBC6F

                                       ********************************************************************************
                                       * COP 22 - OPCMD call a module                                                 *
                                       *                                                                              *
                                       * Action:   Call the module whose name, tenninated by zero,follows             *
                                       * cmmediately.                                                                 *
                                       *                                                                              *
                                       * On entry: Any values required by the module to be passed in the registers.   *
                                       *                                                                              *
                                       * Inline string which is the module name terminated by zero (&00).             *
                                       *                                                                              *
                                       * On exit: Carry bit is setand X = 0 if the module was not found.              *
                                       ********************************************************************************
fe/bc77: a5 0b        ??mxd??? e @T... COP_28          lda     DPCOP_PC          ;get caller PC
fe/bc79: 1a           ??mxd??? e .....                 inc     A                 ;increment to point at the module name
fe/bc7a: d4 0c        ??mxd??? e .....                 pei     (DPCOP_PC+1)      ;get caller's program bank into B
fe/bc7c: ab           ??mxd??? e .....                 plb
fe/bc7d: ab           ??mxd??? e .....                 plb
fe/bc7e: a0 00 00     ??mxd??? e .....                 ldy     #$0000
fe/bc81: 4b           n?mxd?Z? e .....                 phk
fe/bc82: 20 4b ee     n?mxd?Z? e .....                 jsr     brlFindModule     ;look for the module
fe/bc85: b0 3f        ??mxd??? e .....                 bcs     modNotFoundRetZ
fe/bc87: 4b           ??mxd??c e .....                 phk
fe/bc88: 20 51 ee     ??mxd??c e .....                 jsr     LFEEE51
fe/bc8b: b0 39        ??mxd??? e .....                 bcs     modNotFoundRetZ
                                       ; make an rti frame that will return to an rti
fe/bc8d: 0b           ??mxd??c e .....                 phd                       ;an rti frame that will return to an rti
fe/bc8e: 4b           ??mxd??c e .....                 phk
fe/bc8f: 62 16 00     ??mxd??c e .....                 per     LFEBCA8
fe/bc92: f4 00 00     ??mxd??c e .....                 pea     $0000             ;place 0000 on the stack
fe/bc95: ab           ??mxd??c e .....                 plb                       ;discard stacked byte
fe/bc96: 48           ??mxd??c e .....                 pha                       ;push A (module B0 jump block)
fe/bc97: f4 00 00     ??mxd??c e .....                 pea     $0000
fe/bc9a: ab           ??mxd??c e .....                 plb                       ;another single 0
fe/bc9b: d4 08        ??mxd??c e .....                 pei     (DPCOP_DP)
fe/bc9d: d4 06        ??mxd??c e .....                 pei     (DPCOP_AH+1)
fe/bc9f: ab           ??mxd??c e .....                 plb
fe/bca0: a5 05        ??mxd??c e .....                 lda     DPCOP_AH
fe/bca2: a6 03        ??mxd??c e .....                 ldx     DPCOP_X
fe/bca4: a4 01        ??mxd??c e .....                 ldy     DPCOP_Y
fe/bca6: ab           ??mxd??c e .....                 plb
fe/bca7: 2b           ??mxd??c e .....                 pld
                                       ; BHAXY are now as per caller
                                       ; 
                                       ; stack contains
                                       ; 
                                       ; +7  @rti long address for module to return to which will do another RTI - QRY
                                       ; why?
                                       ; +6  00 - bank 0
                                       ; +4  jump block entry in bank 0
                                       ; +3  00 - dummy flags
                                       ; +1  caller DP
fe/bca8: 40           ??mxd??c e ...#. LFEBCA8         rti

                                       ********************************************************************************
                                       * QRY - possible dead code?                                                    *
                                       ********************************************************************************
                                                       .rwid   shortm,shortx
fe/bca9: c2 30        ??MXd??? e @T...                 rep     #$30
                                                       .rwid   longm,longx
fe/bcab: 48           ??mxd??? e .....                 pha
fe/bcac: 0b           ??mxd??? e .....                 phd
fe/bcad: a3 05        ??mxd??? e .....                 lda     $05,S
fe/bcaf: 5b           ??mxd??? e .....                 tcd
fe/bcb0: 68           ??mxd??? e .....                 pla
fe/bcb1: 85 08        ??mxd??? e .....                 sta     DPCOP_DP
fe/bcb3: 68           ??mxd??? e .....                 pla
fe/bcb4: 85 05        ??mxd??? e .....                 sta     DPCOP_AH
fe/bcb6: 2b           ??mxd??? e .....                 pld
fe/bcb7: 86 03        ??mxd??? e .....                 stx     DPCOP_X
fe/bcb9: 84 01        ??mxd??? e .....                 sty     DPCOP_Y
fe/bcbb: e2 20        ??mxd??? e .....                 sep     #$20
                                                       .rwid   shortm
fe/bcbd: 8b           ??Mxd??? e .....                 phb
fe/bcbe: 68           ??Mxd??? e .....                 pla
fe/bcbf: 85 07        ??Mxd??? e .....                 sta     DPCOP_B
fe/bcc1: c2 20        ??Mxd??? e .....                 rep     #$20
                                                       .rwid   longm
fe/bcc3: 82 fc fa     ??mxd??? e ...#.                 brl     @copExitImmedStr

fe/bcc6: 64 03        ??mxd??C e ....> modNotFoundRetZ stz     DPCOP_X
fe/bcc8: 82 f7 fa     ??mxd??C e ...#.                 brl     @copExitImmedStr

                                       ********************************************************************************
                                       * COP 2A - OPURF - unreference module                                          *
                                       * Action: Let the operating system know you no longer require access to a      *
                                       * module.                                                                      *
                                       * On entry: X points to the start of the 8 byte block in direct page which was *
                                       * initialised when the module was referenced.                                  *
                                       * On exit:  C = 0 means that the module was found and unreferenced.            *
                                       *           C = 1 means that the value in X was invalid.                       *
                                       *           DBHA preserved                                                     *
                                       ********************************************************************************
fe/bccb: a5 08        ??mxd??? e @T... COP_2A          lda     DPCOP_DP
fe/bccd: 18           ??mxd??? e .....                 clc
fe/bcce: 65 03        ??mxd??c e .....                 adc     DPCOP_X
fe/bcd0: aa           ??mxd??? e .....                 tax
fe/bcd1: bf 02 00 00  ??mxd??? e .....                 ldal    f:$000002,x
fe/bcd5: 29 ff 00     ??mxd??? e .....                 and     #$00ff
fe/bcd8: c9 01 00     n?mxd??? e .....                 cmp     #$0001
fe/bcdb: bf 01 00 00  ??mxd??? e .....                 ldal    f:$000001,x
fe/bcdf: b0 05        ??mxd??? e .....                 bcs     @skq
fe/bce1: bf 00 00 00  ??mxd??c e .....                 ldal    f:$000000,x
fe/bce5: 1a           ??mxd??c e .....                 inc     A
fe/bce6: 5b           ??mxd??? e ....> @skq            tcd
fe/bce7: a5 0b        ??mxd??? e .....                 lda     $0b
fe/bce9: 29 ff 00     ??mxd??? e .....                 and     #$00ff
fe/bcec: c9 06 00     n?mxd??? e .....                 cmp     #$0006
fe/bcef: d0 16        ??mxd??? e .....                 bne     @retSEC
fe/bcf1: e2 20        ??mxd?Z? e .....                 sep     #$20
                                                       .rwid   shortm
fe/bcf3: a5 07        ??Mxd?Z? e .....                 lda     $07
fe/bcf5: f0 10        ??Mxd??? e .....                 beq     @retSEC
fe/bcf7: c6 07        ??Mxd?z? e .....                 dec     $07
fe/bcf9: c2 20        ??Mxd??? e .....                 rep     #$20
                                                       .rwid   longm
fe/bcfb: da           ??mxd??? e .....                 phx
fe/bcfc: 2b           ??mxd??? e .....                 pld
fe/bcfd: 64 00        ??mxd??? e .....                 stz     $00
fe/bcff: 64 02        ??mxd??? e .....                 stz     $02
fe/bd01: b0 02        ??mxd??? e .....                 bcs     @retCLC
fe/bd03: 64 04        ??mxd??c e .....                 stz     $04
fe/bd05: 18           ??mxd??? e ....> @retCLC         clc
fe/bd06: 6b           ??mxd??c e ...#.                 rtl

                                                       .rwid   shortm
fe/bd07: 38           ???xd??? e ....> @retSEC         sec
fe/bd08: 6b           ???xd??C e ...#.                 rtl

                                       ********************************************************************************
                                       * COP 29 - OPRFR - reference module                                            *
                                       * Action: Set up entry and return addresses in an 8 byte block in direct page  *
                                       * for the module whose name is pointed to by BHA.                              *
                                       * On entry: BHA points to the module name which is terminated by zero (&00).   *
                                       *           X points to the start of the 8 byte block in direct page which     *
                                       * will                                                                         *
                                       *           be initialised by the OPRFR routine.                               *
                                       *           Y = 0                                                              *
                                       * On exit:  C = 0 means that the module was found and the block initialised.   *
                                       *           C = 1 means that the module was not found.                         *
                                       *           DB preserved.                                                      *
                                       ********************************************************************************
                                                       .rwid   longm
fe/bd09: 4b           ??mxd??? e @T... COP_29          phk
fe/bd0a: 20 31 bd     ??mxd??? e .....                 jsr     COP_27
fe/bd0d: b0 21        ??mxd??? e .....                 bcs     @ret
fe/bd0f: bf 01 00 00  ??mxd??c e .....                 ldal    f:$000001,x       ;adjust the address at offset 01 to be an RTL addres
fe/bd13: 3a           ??mxd??c e .....                 dec     A                 ;i.e. subtract 1
fe/bd14: 9f 00 00 00  ??mxd??c e .....                 stal    f:$000000,x       ;store at offset 0
fe/bd18: a9 00 00     ??mxd??c e .....                 lda     #$0000            ;zero offset 2,3 - QRY bank address address at 01 will always be 0
fe/bd1b: 9f 02 00 00  n?mxd?Zc e .....                 stal    f:$000002,x
fe/bd1f: a9 63 fe     n?mxd?Zc e .....                 lda     #(LFEFE64_anRTL & $ffff)-1 ;make an RTLable address to an RTL
fe/bd22: 9f 03 00 00  n?mxd?zc e .....                 stal    f:$000003,x
fe/bd26: e2 20        n?mxd?zc e .....                 sep     #$20
                                                       .rwid   shortm
fe/bd28: 4b           n?Mxd?zc e .....                 phk
fe/bd29: 68           n?Mxd?zc e .....                 pla
fe/bd2a: 9f 05 00 00  ??Mxd??c e .....                 stal    f:$000005,x
fe/bd2e: c2 20        ??Mxd??c e .....                 rep     #$20
                                                       .rwid   longm
fe/bd30: 6b           ??mxd??? e ...#> @ret            rtl

                                       ********************************************************************************
                                       * COP 27 - OPREF - OPRFR with different return structure                       *
                                       *                                                                              *
                                       * On Entry: X is a DP offset to an 8 byte block to receive a module pointer    *
                                       *           BHA points to zero terminated module name                          *
                                       *                                                                              *
                                       * On Exit:  C = 0, offset 1,2 in block contain a pointer to code to call the   *
                                       *           module                                                             *
                                       *           C = 1 for not found                                                *
                                       *                                                                              *
                                       * QRY                                                                          *
                                       *                                                                              *
                                       * This looks to be called by OPRFR but OPRFR rearranges the returned block     *
                                       * order                                                                        *
                                       *                                                                              *
                                       * This find the module, and place a                                            *
                                       *                                                                              *
                                       *   phd                                                                        *
                                       *   jsl <module service entry>                                                 *
                                       *   pld                                                                        *
                                       *   rtl                                                                        *
                                       *                                                                              *
                                       * somewhere in bank 0 and place a 16 bit pointer to this at offset 1, the rest *
                                       * of the block in zeroed                                                       *
                                       ********************************************************************************
fe/bd31: a5 08        ??mxd??? e .T..> COP_27          lda     DPCOP_DP
fe/bd33: 18           ??mxd??? e .....                 clc
fe/bd34: 65 03        ??mxd??c e .....                 adc     DPCOP_X           ;HA = DPX
fe/bd36: 69 04 00     ??mxd??? e .....                 adc     #$0004
fe/bd39: b0 25        ??mxd??? e .....                 bcs     @ret              ;Exit with SEC if DPX+4 is outside bank 0
fe/bd3b: e9 03 00     ??mxd??c e .....                 sbc     #$0003            ;knock back to HA = DPX
fe/bd3e: aa           ??mxd??? e .....                 tax                       ;transfer to X
fe/bd3f: a9 00 00     ??mxd??? e .....                 lda     #$0000            ;clear DPX+0..DPX+7
fe/bd42: 9f 00 00 00  n?mxd?Z? e .....                 stal    f:$000000,x
fe/bd46: 9f 02 00 00  n?mxd?Z? e .....                 stal    f:$000002,x
fe/bd4a: 9f 04 00 00  n?mxd?Z? e .....                 stal    f:$000004,x
fe/bd4e: 9f 06 00 00  n?mxd?Z? e .....                 stal    f:$000006,x
fe/bd52: da           n?mxd?Z? e .....                 phx
fe/bd53: a5 05        n?mxd?Z? e .....                 lda     DPCOP_AH          ;get back BHA (module name)
fe/bd55: 4b           ??mxd??? e .....                 phk
fe/bd56: 20 4e ee     ??mxd??? e .....                 jsr     brlGetModCallRef  ;long call actual module find
fe/bd59: fa           ??mxd??? e .....                 plx                       ;get back DPX pointer
fe/bd5a: b0 04        ??mxd??? e .....                 bcs     @ret
fe/bd5c: 9f 01 00 00  ??mxd??c e .....                 stal    f:$000001,x       ;store pointer at offset 1
fe/bd60: 6b           ??mxd??? e ...#> @ret            rtl

                                       ********************************************************************************
                                       * COP 0F - OPERR - system error                                                *
                                       *                                                                              *
                                       * Action: This is used as a debugging aid. When the call is executed, a fatal  *
                                       * error is generated. A zero-terminated string immediately following the COP   *
                                       * signature is printed, followed by a listing of the contents of the 6SSC8l6's *
                                       * registers. The register string is printed as:                                *
                                       *                                                                              *
                                       *     address of COP OPERR signature byte (3 bytes)                            *
                                       *     status (I byte)                                                          *
                                       *     D (2 bytes)                                                              *
                                       *     BHA (3 bytes)                                                            *
                                       *     X (2 bytes)                                                              *
                                       *     Y (2 bytes)                                                              *
                                       * The bytes are printed as pairs of hexadecimaldigits separated by spaces.     *
                                       *                                                                              *
                                       * On entry: Inline error string.                                               *
                                       * On exit:  No exit the machine "hangs".                                       *
                                       ********************************************************************************
fe/bd61: 02 01        ??mxd??? e @T... COP_0F          cop     COP_01_OPWRS      ;Write a newline TODO: Use OPNLI
fe/bd63: 0d 0a 00                .T...                 .zstr   $0d,$0a
fe/bd66: 4b           ??mxd??? e .....                 phk
fe/bd67: 20 0d b8     ??mxd??? e .....                 jsr     COP_01            ;QRY - this prints the message after the original caller's COP
fe/bd6a: 02 01        ??mxd??? e .....                 cop     COP_01_OPWRS
fe/bd6c: 0d 0a 2a 2a+            .T...                 .zstr   $0d,$0a,“*** Fatal System Error:”
fe/bd86: a2 0d 00     ??mxd??? e .....                 ldx     #$000d
fe/bd89: 20 98 bd     n?mxd?z? e .....                 jsr     @dumpregs
fe/bd8c: 02 01        ??mxd??? e .....                 cop     COP_01_OPWRS
fe/bd8e: 20 2a 2a 2a+            .T...                 .zstr   “ ***”,$0d,$0a,$0a
fe/bd96: 80 fe        ??mxd??? e ...#> @here           bra     @here             ;hang up the machine

fe/bd98: a9 20 00     ??mx??z? e ....> @dumpregs       lda     #$0020            ;dump registers
fe/bd9b: 02 00        n?mx??z? e .....                 cop     COP_00_OPWRC
fe/bd9d: b5 00        n?mx??z? e .....                 lda     $00,x
fe/bd9f: 20 a6 bd     ??mx???? e .....                 jsr     printHexA
fe/bda2: ca           ??mx???? e .....                 dex
fe/bda3: d0 f3        ??mx???? e .....                 bne     @dumpregs
fe/bda5: 60           ??mx??Z? e ...#.                 rts

fe/bda6: 48           ??mx???? e ....> printHexA       pha
fe/bda7: 4a           ??mx???? e .....                 lsr     A
fe/bda8: 4a           n?mx???? e .....                 lsr     A
fe/bda9: 4a           n?mx???? e .....                 lsr     A
fe/bdaa: 4a           n?mx???? e .....                 lsr     A
fe/bdab: 20 af bd     n?mx???? e .....                 jsr     printHexNyb
fe/bdae: 68           ??mx???? e .....                 pla
fe/bdaf: 48           ??mx???? e ....> printHexNyb     pha
fe/bdb0: 08           ??mx???? e .....                 php
fe/bdb1: e2 20        ??mx???? e .....                 sep     #$20
                                                       .rwid   shortm
fe/bdb3: 29 0f        ??Mx???? e .....                 and     #$0f
fe/bdb5: 09 30        n?Mx???? e .....                 ora     #$30
fe/bdb7: c9 3a        ??Mx??z? e .....                 cmp     #$3a
fe/bdb9: 90 02        ??Mx???? e .....                 bcc     @sk
fe/bdbb: 69 06        ??Mx???C e .....                 adc     #$06
fe/bdbd: 02 00        ??Mx???? e ....> @sk             cop     COP_00_OPWRC
fe/bdbf: 28           ??Mx???? e .....                 plp
                                                       .rwid   longm
fe/bdc0: 68           ??mx???? e .....                 pla
fe/bdc1: 60           ??mx???? e ...#.                 rts

                                       ********************************************************************************
                                       * COP 10 - OPADP - Allocate direct page                                        *
                                       *                                                                              *
                                       * Action: This call is used to request a direct page of a certain size, the    *
                                       * size being a 2 byte number which follows the call. The call returns with HA  *
                                       * pointing to an address in bank zero which can be used as the base of the     *
                                       * direct page.                                                                 *
                                       *                                                                              *
                                       * On entry: Inline 2 byte size (in bytes) of direct page requested.            *
                                       * On exit:  C = 0 means that the direct page has been allocated, and HA        *
                                       *           contains the address of the base.                                  *
                                       *           C = 1 means that the call failed to allocate a direct page.        *
                                       *           XY preserved                                                       *
                                       *           Note: D is not preserved.                                          *
                                       *                                                                              *
                                       * TODO: Check against original docuimentation (above) OPADF returns in D not   *
                                       * in HA! check but it looks like DP and HA are set to the new value.           *
                                       *                                                                              *
                                       * QRY - OPADF and OPADP are the SAME - this must surely be a mistake? Or are   *
                                       * they all fast?!                                                              *
                                       ********************************************************************************
fe/bdc2: a0 01 00     ??mxd??? e @T... COP_10          ldy     #$0001
fe/bdc5: b7 0b        n?mxd?z? e .....                 lda     [DPCOP_PC],y      ;get 16 bit parameter into A
fe/bdc7: e6 0b        ??mxd??? e .....                 inc     DPCOP_PC
fe/bdc9: e6 0b        ??mxd??? e .....                 inc     DPCOP_PC          ;step return address past it
fe/bdcb: a2 18 00     ??mxd??? e .....                 ldx     #__MMAZB          ;allocate ZP page pool
fe/bdce: 22 8c ff 00  n?mxd?z? e .....                 jsl     __MM
fe/bdd2: b0 0d        ??mxd??? e .....                 bcs     @fail
fe/bdd4: 85 05        ??mxd??c e .....                 sta     DPCOP_AH
fe/bdd6: 85 08        ??mxd??c e .....                 sta     DPCOP_DP
fe/bdd8: 49 00 00     ??mxd??c e .....                 eor     #$0000            ;check for 0
fe/bddb: d0 06        ??mxd??c e .....                 bne     allocOK
fe/bddd: 4b           ??mxd?Zc e .....                 phk
fe/bdde: 20 07 be     ??mxd?Zc e .....                 jsr     COP_12            ;try and free it - TODO why would it return 0, why try and free?
fe/bde1: 38           ??mxd??? e ....> @fail           sec
fe/bde2: 6b           ??mxd??C e ...#.                 rtl

fe/bde3: da           ??mxd??? e ....> allocOK         phx
fe/bde4: d4 0c        ??mxd??? e .....                 pei     (DPCOP_PC+1)
fe/bde6: ab           ??mxd??? e .....                 plb
fe/bde7: ab           ??mxd??? e .....                 plb                       ;get return bank
fe/bde8: a5 0b        ??mxd??? e .....                 lda     DPCOP_PC          ;get return address
fe/bdea: 02 2c        ??mxd??? e .....                 cop     COP_2C_OPFMA      ;find the module that called us
fe/bdec: 90 11        ??mxd??? e .....                 bcc     LFEBDFF
fe/bdee: a2 14 00     ??mxd??? e @T...                 ldx     #__MMFND          ;find memory pool just returned
fe/bdf1: 22 8c ff 00  n?mxd?z? e .....                 jsl     __MM
fe/bdf5: a9 00 00     ??mxd??? e .....                 lda     #$0000
fe/bdf8: b0 06        n?mxd?Z? e .....                 bcs     LFEBE00
fe/bdfa: bf 08 00 00  n?mxd?Zc e .....                 ldal    f:$000008,x
fe/bdfe: aa           ??mxd??c e .....                 tax
fe/bdff: 8a           ??mxd??c e ....> LFEBDFF         txa
fe/be00: fa           ??mxd??? e ....> LFEBE00         plx
fe/be01: 9f 08 00 00  ??mxd??? e .....                 stal    f:DPCOP_DP,x
fe/be05: 18           ??mxd??? e .....                 clc
fe/be06: 6b           ??mxd??c e ...#.                 rtl

                                       ********************************************************************************
                                       * COP 12 - OPFD - Free direct page                                             *
                                       *                                                                              *
                                       * On Entry:  DP to free in D                                                   *
                                       * On Exit:   C = 0 freed ok                                                    *
                                       *                                                                              *
                                       * QRY no docco                                                                 *
                                       ********************************************************************************
fe/be07: a5 08        ??mxd?Zc e .T..> COP_12          lda     DPCOP_DP
fe/be09: 85 05        ??mxd??c e .....                 sta     DPCOP_AH
                                       ********************************************************************************
                                       * COP 1A - OPFZB - free bank 0 memory                                          *
                                       *                                                                              *
                                       * Action: Tells the operating system that space allocated in bank zero is      *
                                       * finished with. This should be done every time space is no longer requited so *
                                       * that bank zero is not exhausted.                                             *
                                       * On entry: HA contains the address of the bank zero pool base.                *
                                       * On exit:  If C = 0 then the pool has been freed.                             *
                                       *           If C = 1 then the routine could not free the pool.                 *
                                       *           No registers preserved                                             *
                                       ********************************************************************************
fe/be0b: f4 00 00     ??mxd??c e .T... COP_1A          pea     $0000
fe/be0e: ab           ??mxd??c e .....                 plb
                                                       .dbank  $00
fe/be0f: ab           ??mxd??c e .....                 plb
fe/be10: a0 01 00     ??mxd??c e .....                 ldy     #$0001
fe/be13: a2 14 00     n?mxd?zc e .....                 ldx     #__MMFND
fe/be16: 22 8c ff 00  n?mxd?zc e .....                 jsl     __MM
fe/be1a: b0 16        ??mxd??? e .....                 bcs     @retsec
fe/be1c: a2 0e 00     ??mxd??c e .....                 ldx     #__MMBAS
fe/be1f: 22 8c ff 00  n?mxd?zc e .....                 jsl     __MM
fe/be23: c5 05        ??mxd??? e .....                 cmp     DPCOP_AH
fe/be25: d0 0b        ??mxd??? e .....                 bne     @retsec
fe/be27: a2 02 00     ??mxd?Z? e .....                 ldx     #__MMFP
fe/be2a: 22 8c ff 00  n?mxd?z? e .....                 jsl     __MM
fe/be2e: b0 02        ??mxd??? e .....                 bcs     @retsec
fe/be30: 18           ??mxd??c e .....                 clc
fe/be31: 6b           ??mxd??c e ...#.                 rtl

fe/be32: 38           ??mxd??? e ....> @retsec         sec
fe/be33: 6b           ??mxd??C e ...#.                 rtl

                                       ********************************************************************************
                                       * COP 13 - OPAST - Allocate Stack                                              *
                                       *                                                                              *
                                       * Action: This call is used to request a stack of a certain size, the size     *
                                       * being a 2 byte number which follows the call. The call returns with HA       *
                                       * containing an address which can be transferred to the stack pointer.         *
                                       *                                                                              *
                                       * On entry: Inline 2 byte size (in bytes) of stack requested.                  *
                                       * On exit:  C = 0 means that the stack has been allocated, and HA contains     *
                                       *           the address to be transferred to the stack pointer.                *
                                       *           C = 1 means that the call failed to allocate a stack.              *
                                       *           DBXY preserved                                                     *
                                       ********************************************************************************
fe/be34: a0 01 00     ??mxd??? e @T... COP_13          ldy     #$0001
fe/be37: b7 0b        n?mxd?z? e .....                 lda     [DPCOP_PC],y
fe/be39: e6 0b        ??mxd??? e .....                 inc     DPCOP_PC
fe/be3b: e6 0b        ??mxd??? e .....                 inc     DPCOP_PC
fe/be3d: a2 18 00     ??mxd??? e .....                 ldx     #__MMAZB
fe/be40: 22 8c ff 00  n?mxd?z? e .....                 jsl     __MM
fe/be44: b0 17        ??mxd??? e .....                 bcs     @ret
fe/be46: a2 12 00     ??mxd??c e .....                 ldx     #__MMTOP
fe/be49: 22 8c ff 00  n?mxd?zc e .....                 jsl     __MM
fe/be4d: aa           ??mxd??? e .....                 tax
fe/be4e: ca           ??mxd??? e .....                 dex
fe/be4f: ca           ??mxd??? e .....                 dex
fe/be50: a9 ad de     ??mxd??? e .....                 lda     #$dead            ;Store "DEAD" above stack - checked in OPFST (free)
fe/be53: 9f 00 00 00  n?mxd?z? e .....                 stal    f:$000000,x
fe/be57: ca           n?mxd?z? e .....                 dex
fe/be58: 86 05        ??mxd??? e .....                 stx     DPCOP_AH
fe/be5a: 82 86 ff     ??mxd??? e ...#.                 brl     allocOK

fe/be5d: 6b           ??mxd??C e ...#> @ret            rtl

                                       ********************************************************************************
                                       * COP 14 - OPFST - Free a stack                                                *
                                       *                                                                              *
                                       * Action: Tells the operating system that space allocated to a stack is        *
                                       * finished with. This should be done every time a stack is no longer required. *
                                       * Only space allocated by OPAST can be freed by this call.                     *
                                       *                                                                              *
                                       * On entry: HA contains an address within the stack. (This means that the      *
                                       *           current value of the stack pointer can usually be used to free the *
                                       *           stack.)                                                            *
                                       *                                                                              *
                                       * On exit:  If C = 0 then the stack has been freed.                            *
                                       *           If C = I then the routine could not free the stack.                *
                                       *           DBAXY preserved                                                    *
                                       ********************************************************************************
fe/be5e: f4 00 00     ??mxd??? e @T... COP_14          pea     $0000
fe/be61: ab           ??mxd??? e .....                 plb
fe/be62: ab           ??mxd??? e .....                 plb
fe/be63: a2 14 00     ??mxd??? e .....                 ldx     #__MMFND
fe/be66: 22 8c ff 00  n?mxd?z? e .....                 jsl     __MM
fe/be6a: b0 1b        ??mxd??? e .....                 bcs     @retsec
fe/be6c: a2 12 00     ??mxd??c e .....                 ldx     #__MMTOP
fe/be6f: 22 8c ff 00  n?mxd?zc e .....                 jsl     __MM
fe/be73: aa           ??mxd??? e .....                 tax
fe/be74: ca           ??mxd??? e .....                 dex
fe/be75: ca           ??mxd??? e .....                 dex
fe/be76: bf 00 00 00  ??mxd??? e .....                 ldal    f:$000000,x
fe/be7a: c9 ad de     ??mxd??? e .....                 cmp     #$dead            ;check for "DEAD" at the top of stack and panic if not there
fe/be7d: d0 08        ??mxd??? e .....                 bne     @retsec
fe/be7f: a2 02 00     ??mxd?Z? e .....                 ldx     #__MMFP           ;Free it
fe/be82: 22 8c ff 00  n?mxd?z? e .....                 jsl     __MM
fe/be86: 6b           ??mxd??? e ...#.                 rtl

fe/be87: 38           ??mxd??? e ....> @retsec         sec
fe/be88: 6b           ??mxd??C e ...#.                 rtl

                                       ********************************************************************************
                                       * COP 16 - OPAEV - Acknowledge Event                                           *
                                       *                                                                              *
                                       * Action: This call acknowledges the occurrence of an event                    *
                                       *                                                                              *
                                       * On entry: HA contains the event mask which specifies the events to be        *
                                       *           acknowledged. Possible event masks arc __EVESC to acknowledge the  *
                                       *           ESCAPE event and __EVPRE to acknowledge the pre-emptevent          *
                                       * On exit:  If C = 0 then the specified event is acknowledged.                 *
                                       *           If C = 1 then an attempt was made to clear an event which had not  *
                                       *           previously been set                                                *
                                       *           DBAXY preserved                                                    *
                                       ********************************************************************************
fe/be89: 48           ??mxd??? e @T... COP_16          pha
fe/be8a: af 13 ff 00  ??mxd??? e .....                 ldal    f:SYS_ESCAPE_FLAG_QRY
fe/be8e: aa           ??mxd??? e .....                 tax
fe/be8f: 23 01        ??mxd??? e .....                 and     $01,S
fe/be91: 43 01        ??mxd??? e .....                 eor     $01,S
fe/be93: c9 01 00     ??mxd??? e .....                 cmp     #$0001
fe/be96: 8a           ??mxd??? e .....                 txa
fe/be97: 03 01        ??mxd??? e .....                 ora     $01,S
fe/be99: 43 01        ??mxd??? e .....                 eor     $01,S
fe/be9b: 8f 13 ff 00  ??mxd??? e .....                 stal    f:SYS_ESCAPE_FLAG_QRY
fe/be9f: 68           ??mxd??? e .....                 pla
fe/bea0: 6b           ??mxd??? e ...#.                 rtl

                                       ********************************************************************************
                                       * COP 20 - OPSEV - Set an event                                                *
                                       *                                                                              *
                                       * QRY                                                                          *
                                       *                                                                              *
                                       * On Entry: HA contains even flags mask that are to be set                     *
                                       ********************************************************************************
fe/bea1: 0f 13 ff 00  ??mxd??? e @T... COP_20          oral    f:SYS_ESCAPE_FLAG_QRY
fe/bea5: 8f 13 ff 00  ??mxd??? e .....                 stal    f:SYS_ESCAPE_FLAG_QRY
fe/bea9: 18           ??mxd??? e .....                 clc
fe/beaa: 6b           ??mxd??c e ...#.                 rtl

fe/beab: 08           ??mxd??? e @T...                 php
fe/beac: c2 30        ??mxd??? e .....                 rep     #$30
fe/beae: 0b           ??mxd??? e .....                 phd
fe/beaf: 8b           ??mxd??? e .....                 phb
fe/beb0: 48           ??mxd??? e .....                 pha
fe/beb1: da           ??mxd??? e .....                 phx
fe/beb2: 5a           ??mxd??? e .....                 phy
fe/beb3: 02 01        ??mxd??? e .....                 cop     COP_01_OPWRS
fe/beb5: 20 20 72 65+            .T...                 .zstr   “  regs:”
fe/bebd: 3b                      .T...                 .dd1    $3b
fe/bebe: 5b           ??mxd??? e .....                 tcd
fe/bebf: a2 0a 00     ??mxd??? e .....                 ldx     #$000a
fe/bec2: 20 98 bd     n?mxd?z? e .....                 jsr     @dumpregs
fe/bec5: 02 03        ??mxd??? e .....                 cop     COP_03_OPNLI
fe/bec7: 7a           ??mxd??? e .....                 ply
fe/bec8: fa           ??mxd??? e .....                 plx
fe/bec9: 68           ??mxd??? e .....                 pla
fe/beca: ab           ??mxd??? e .....                 plb
fe/becb: 2b           ??mxd??? e .....                 pld
fe/becc: 28           ??mxd??? e .....                 plp
fe/becd: 60           ??mxd??? e ...#.                 rts

                                       ********************************************************************************
                                       * OPERC 61 - ???? error something ???                                          *
                                       *                                                                              *
                                       * QRY -                                                                        *
                                       *                                                                              *
                                       * looks if X & 1 = 0 then "Error (no message)"                                 *
                                       * the string pointed to BHA is < 4 ASCII chars "Error (terse message)"         *
                                       * if it contains unprintable chars then "Error (bad message)"                  *
                                       * else pass thru BHA                                                           *
                                       ********************************************************************************
fe/bece: a5 03        ??mxd??? e @T... COP_61          lda     DPCOP_X
fe/bed0: 4a           ??mxd??? e .....                 lsr     A
fe/bed1: 90 26        n?mxd??? e .....                 bcc     bhaErrorNoMessage
fe/bed3: d4 06        n?mxd??C e .....                 pei     (DPCOP_AH+1)
fe/bed5: ab           n?mxd??C e .....                 plb
fe/bed6: ab           ??mxd??C e .....                 plb
fe/bed7: a6 05        ??mxd??C e .....                 ldx     DPCOP_AH
fe/bed9: a0 00 00     ??mxd??C e .....                 ldy     #$0000
fe/bedc: da           ??mxd??? e ....> LFEBEDC         phx
fe/bedd: b3 01        ??mxd??? e .....                 lda     ($01,S),y
fe/bedf: fa           ??mxd??? e .....                 plx
fe/bee0: 29 ff 00     ??mxd??? e .....                 and     #$00ff
fe/bee3: f0 0d        n?mxd??? e .....                 beq     LFEBEF2
fe/bee5: c9 20 00     n?mxd?z? e .....                 cmp     #$0020
fe/bee8: 90 26        ??mxd??? e .....                 bcc     bhaErrorBadErrorMEssage
fe/beea: c9 7f 00     ??mxd??C e .....                 cmp     #$007f
fe/beed: b0 21        ??mxd??? e .....                 bcs     bhaErrorBadErrorMEssage
fe/beef: c8           ??mxd??c e .....                 iny
fe/bef0: 80 ea        ??mxd??c e ...#.                 bra     LFEBEDC

fe/bef2: c0 04 00     n?mxd?Z? e ....> LFEBEF2         cpy     #$0004
fe/bef5: 90 31        ??mxd??? e .....                 bcc     bhaErrorTerse
fe/bef7: 18           ??mxd??C e .....                 clc
fe/bef8: 6b           ??mxd??c e ...#.                 rtl

fe/bef9: 02 26        n?mxd??c e ....> bhaErrorNoMessage cop   COP_26_OPBHA
fe/befb: 45 72 72 6f+            .T...                 .zstr   “Error (no message)”
fe/bf0e: 80 30        n?mxd??c e ...#.                 bra     LFEBF40

fe/bf10: 02 26        ??mxd??? e ....> bhaErrorBadErrorMEssage cop COP_26_OPBHA
fe/bf12: 45 72 72 6f+            .T...                 .zstr   “Error (bad message)”
fe/bf26: 80 18        ??mxd??? e ...#.                 bra     LFEBF40

fe/bf28: 02 26        ??mxd??c e ....> bhaErrorTerse   cop     COP_26_OPBHA
fe/bf2a: 45 72 72 6f+            .T...                 .zstr   “Error (terse message)”
fe/bf40: 48                      .T... LFEBF40         .dd1    $48
fe/bf41: a5 03        ??mxd??c e .....                 lda     DPCOP_X
fe/bf43: 09 01 00     ??mxd??c e .....                 ora     #$0001
fe/bf46: aa           ??mxd?zc e .....                 tax
fe/bf47: 68           ??mxd??c e .....                 pla
fe/bf48: 38           ??mxd??c e .....                 sec
fe/bf49: 82 65 fb     ??mxd??C e ...#.                 brl     retCopXBHA

                                       ********************************************************************************
                                       * COP 60 - OPDFR - ????                                                        *
                                       ********************************************************************************
fe/bf4c: a9 12 00     ??mxd??? e @T... COP_60          lda     #HND_type_12_CBDFR
fe/bf4f: 20 01 ce     n?mxd?z? e .....                 jsr     obtainFreeBlock
fe/bf52: b0 37        ??mxd??? e .....                 bcs     @reterrNoRoom
fe/bf54: a9 00 00     ??mxd??c e .....                 lda     #$0000
fe/bf57: 9f 00 00 00  n?mxd?Zc e .....                 stal    f:$000000,x
fe/bf5b: a5 01        n?mxd?Zc e .....                 lda     DPCOP_Y
fe/bf5d: 9f 04 00 00  ??mxd??c e .....                 stal    f:DPCOP_X+1,x
fe/bf61: a5 03        ??mxd??c e .....                 lda     DPCOP_X
fe/bf63: 9f 06 00 00  ??mxd??c e .....                 stal    f:DPCOP_AH+1,x
fe/bf67: a5 08        ??mxd??c e .....                 lda     DPCOP_DP
fe/bf69: 9f 02 00 00  ??mxd??c e .....                 stal    f:DPCOP_Y+1,x
fe/bf6d: a5 06        ??mxd??c e .....                 lda     DPCOP_AH+1
fe/bf6f: 9f 09 00 00  ??mxd??c e .....                 stal    f:DPCOP_DP+1,x
fe/bf73: a5 05        ??mxd??c e .....                 lda     DPCOP_AH
fe/bf75: 9f 08 00 00  ??mxd??c e .....                 stal    f:DPCOP_DP,x
fe/bf79: da           ??mxd??c e .....                 phx
fe/bf7a: a9 12 fe     ??mxd??c e .....                 lda     #$fe12
fe/bf7d: aa           ??mxd?zc e ....> LFEBF7D         tax
fe/bf7e: bf 00 00 00  ??mxd??c e .....                 ldal    f:$000000,x
fe/bf82: d0 f9        ??mxd??c e .....                 bne     LFEBF7D
fe/bf84: 68           ??mxd?Zc e .....                 pla
fe/bf85: 9f 00 00 00  ??mxd??c e .....                 stal    f:$000000,x
fe/bf89: 18           ??mxd??c e .....                 clc
fe/bf8a: 6b           ??mxd??c e ...#.                 rtl

fe/bf8b: 02 26        ??mxd??C e ....> @reterrNoRoom   cop     COP_26_OPBHA
fe/bf8d: 4e 6f 20 72+            .T...                 .zstr   “No room”
fe/bf95: a2 01 00     ??mxd??C e .....                 ldx     #$0001
fe/bf98: 82 16 fb     n?mxd?zC e ...#.                 brl     retCopXBHA

                                                       .rwid   shortm,shortx
fe/bf9b: 08           ??MXd??? e ....> LFEBF9B         php
fe/bf9c: 8b           ??MXd??? e .....                 phb
fe/bf9d: 0b           ??MXd??? e ..... LFEBF9D         phd
fe/bf9e: c2 30        ??MXd??? e .....                 rep     #$30
                                                       .rwid   longm,longx
fe/bfa0: af 12 fe 00  ??mxd??? e .....                 ldal    f:$00fe12
fe/bfa4: f0 1f        ??mxd??? e .....                 beq     LFEBFC5
fe/bfa6: 5b           ??mxd?z? e .....                 tcd
fe/bfa7: aa           ??mxd??? e .....                 tax
fe/bfa8: a5 00        ??mxd??? e .....                 lda     $00
fe/bfaa: 8f 12 fe 00  ??mxd??? e .....                 stal    f:$00fe12
fe/bfae: 4b           ??mxd??? e .....                 phk
fe/bfaf: 62 eb ff     ??mxd??? e .....                 per     LFEBF9D
fe/bfb2: d4 09        ??mxd??? e .....                 pei     (DPCOP_DP+1)
fe/bfb4: d4 07        ??mxd??? e .....                 pei     (DPCOP_B)
fe/bfb6: ab           ??mxd??? e .....                 plb
fe/bfb7: d4 02        ??mxd??? e .....                 pei     (DPCOP_Y+1)
fe/bfb9: d4 06        ??mxd??? e .....                 pei     (DPCOP_AH+1)
fe/bfbb: d4 04        ??mxd??? e .....                 pei     (DPCOP_X+1)
fe/bfbd: 20 da cd     ??mxd??? e .....                 jsr     returnXToFreeList
fe/bfc0: 7a           ??mxd??? e .....                 ply
fe/bfc1: fa           ??mxd??? e .....                 plx
fe/bfc2: 2b           ??mxd??? e .....                 pld
fe/bfc3: 08           ??mxd??? e .....                 php
fe/bfc4: 40           ??mxd??? e ...#.                 rti

fe/bfc5: 2b           ??mxd?Z? e ....> LFEBFC5         pld
fe/bfc6: ab           ??mxd??? e .....                 plb
fe/bfc7: 28           ??mxd??? e .....                 plp
fe/bfc8: 18           ??mxd??? e .....                 clc
fe/bfc9: 6b           ??mxd??c e ...#.                 rtl

                                       ********************************************************************************
                                       * COP 43 - OPXKC - examine keyboard character                                  *
                                       * Action: If keyboard buffer is not empty then A becomes the first character   *
                                       * in the buffer. Note that the character is not removed from the keyboard      *
                                       * buffer so repetition of this call will yield the same result. Consequently a *
                                       * call to OPXKC cannot cause a pre-empt tooccur.                               *
                                       *                                                                              *
                                       * On entry: No requirements                                                    *
                                       * On exit:  If C = 0 then A = first character in keyboard buffer.              *
                                       *           If C = I then keyboard buffer is empty.                            *
                                       *           DX preserved                                                       *
                                       *                                                                              *
                                       ********************************************************************************
fe/bfca: 0b           ??mxd??? e @T... COP_43          phd
fe/bfcb: f4 00 ac     ??mxd??? e .....                 pea     $ac00
fe/bfce: 2b           ??mxd??? e .....                 pld
fe/bfcf: 4b           ??mxd??? e .....                 phk
                                                       .dbank  K (auto)
fe/bfd0: ab           ??mxd??? e .....                 plb
fe/bfd1: e2 30        ??mxd??? e .....                 sep     #$30
                                                       .rwid   shortm,shortx
fe/bfd3: af 41 a5 00  ??MXd??? e .....                 ldal    f:SYSVAR_41_input_stream
fe/bfd7: aa           ??MXd??? e .....                 tax
fe/bfd8: 20 8e e1     ??MXd??? e .....                 jsr     OSBYTE_98
fe/bfdb: 2b           ??MXd??? e .....                 pld
fe/bfdc: 85 05        ??MXd??? e .....                 sta     DPCOP_AH
fe/bfde: 6b           ??MXd??? e ...#.                 rtl

                                       ********************************************************************************
                                       * COP 42 - OPRHL - ???                                                         *
                                       *                                                                              *
                                       * QRY - something Econet-ey                                                    *
                                       ********************************************************************************
                                                       .rwid   longm,longx
fe/bfdf: af f8 ff f0  ??mxd??? e @T... COP_42          ldal    HW_TYPE_DETECT_QRY
fe/bfe3: d0 06        ??mxd??? e .....                 bne     LFEBFEB
fe/bfe5: af 00 00 41  ??mxd?Z? e .....                 ldal    HW_ECONET
fe/bfe9: 80 04        ??mxd??? e ...#.                 bra     LFEBFEF

fe/bfeb: af cf ac 00  ??mxd?z? e ....> LFEBFEB         ldal    f:DPSYS+207
fe/bfef: 48           ??mxd??? e ....> LFEBFEF         pha
fe/bff0: 29 1f 00     ??mxd??? e .....                 and     #$001f
fe/bff3: 85 05        n?mxd??? e .....                 sta     DPCOP_AH
fe/bff5: 68           n?mxd??? e .....                 pla
fe/bff6: 64 01        ??mxd??? e .....                 stz     DPCOP_Y
fe/bff8: 6a           ??mxd??? e .....                 ror     A
fe/bff9: 6a           ??mxd??? e .....                 ror     A
fe/bffa: 6a           ??mxd??? e .....                 ror     A
fe/bffb: 6a           ??mxd??? e .....                 ror     A
fe/bffc: 6a           ??mxd??? e .....                 ror     A
fe/bffd: 6a           ??mxd??? e .....                 ror     A
fe/bffe: 26 01        ??mxd??? e .....                 rol     DPCOP_Y
fe/c000: 6a           ??mxd??? e .....                 ror     A
fe/c001: 26 01        ??mxd??? e .....                 rol     DPCOP_Y
fe/c003: 6a           ??mxd??? e .....                 ror     A
fe/c004: 26 01        ??mxd??? e .....                 rol     DPCOP_Y
fe/c006: 6b           ??mxd??? e ...#.                 rtl

                                       ********************************************************************************
                                       * COP 41 - OPECO call low - level Econet routines                              *
                                       * Action: This call performs data transfer to and from the Econet filing       *
                                       * system. It performs several tasks depending upon the reason code in X.       *
                                       * On entry: X = reason code.                                                   *
                                       *           Other registers contain or point to arguments.                     *
                                       * On exit:  C = 0 means that the call was successful.                          *
                                       *           If C = 1 and X <> 0 then the call failed and the error code is in  *
                                       * X.                                                                           *
                                       *           If C = 1 and X = 0 then the Econet module is not present           *
                                       *           D preserved                                                        *
                                       ********************************************************************************
fe/c007: 0b           ??mxd??? e @T... COP_41          phd
fe/c008: 48           ??mxd??? e .....                 pha
fe/c009: a6 03        ??mxd??? e .....                 ldx     DPCOP_X
fe/c00b: a5 08        ??mxd??? e .....                 lda     DPCOP_DP
fe/c00d: f4 00 ac     ??mxd??? e .....                 pea     DPSYS
fe/c010: 2b           ??mxd??? e .....                 pld
fe/c011: 85 9d        ??mxd??? e .....                 sta     <DPSYS_MOD_ECONET-2 ;caller DP
fe/c013: a5 a3        ??mxd??? e .....                 lda     <DPSYS_MOD_ECONET+4
fe/c015: 05 a1        ??mxd??? e .....                 ora     <DPSYS_MOD_ECONET+2
fe/c017: 05 9f        ??mxd??? e .....                 ora     <DPSYS_MOD_ECONET
fe/c019: f0 15        ??mxd??? e .....                 beq     @noeconet
fe/c01b: 68           ??mxd?z? e .....                 pla
fe/c01c: 4b           ??mxd??? e .....                 phk
fe/c01d: 20 53 fe     ??mxd??? e .....                 jsr     _callModEconet
fe/c020: 2b           ??mxd??? e .....                 pld                       ;get back COP stack DP
fe/c021: 85 05        ??mxd??? e .....                 sta     DPCOP_AH
fe/c023: 86 03        ??mxd??? e .....                 stx     DPCOP_X
fe/c025: 84 01        ??mxd??? e .....                 sty     DPCOP_Y
fe/c027: e2 20        ??mxd??? e .....                 sep     #$20
                                                       .rwid   shortm
fe/c029: 8b           ??Mxd??? e .....                 phb
fe/c02a: 68           ??Mxd??? e .....                 pla
fe/c02b: 85 07        ??Mxd??? e .....                 sta     DPCOP_B
fe/c02d: c2 20        ??Mxd??? e .....                 rep     #$20
                                                       .rwid   longm
fe/c02f: 6b           ??mxd??? e ...#.                 rtl

fe/c030: 2b           ??mxd?Z? e ....> @noeconet       pld
fe/c031: 2b           ??mxd??? e .....                 pld
fe/c032: 2b           ??mxd??? e .....                 pld
fe/c033: 64 03        ??mxd??? e .....                 stz     DPCOP_X
fe/c035: 38           ??mxd??? e .....                 sec
fe/c036: 6b           ??mxd??C e ...#.                 rtl

                                       ********************************************************************************
                                       * COP 4A - OPNET high-level Econet routines                                    *
                                       * Action: This call performs several tasks depending upon the reason code in   *
                                       * X.                                                                           *
                                       * On entry: X = reason code.                                                   *
                                       *           Other registers contain or point to arguments.                     *
                                       * On exit:  C = 0 means that the call was successful.                          *
                                       *           If C = 1 then the call failed and the error code is in X.          *
                                       *           If C = 1 and X = 0 then the Econei module is not present.          *
                                       *           If C = 1 and X = 1 then BHA points to an error message.            *
                                       *           D preserved                                                        *
                                       ********************************************************************************
fe/c037: 0b           ??mxd??? e @T... COP_4A          phd
fe/c038: 48           ??mxd??? e .....                 pha
fe/c039: a6 03        ??mxd??? e .....                 ldx     DPCOP_X
fe/c03b: f4 00 ac     ??mxd??? e .....                 pea     DPSYS
fe/c03e: 2b           ??mxd??? e .....                 pld
fe/c03f: a5 b3        ??mxd??? e .....                 lda     <DPSYS_MOD_NET+4
fe/c041: 05 b1        ??mxd??? e .....                 ora     <DPSYS_MOD_NET+2
fe/c043: 05 af        ??mxd??? e .....                 ora     <DPSYS_MOD_NET
fe/c045: f0 15        ??mxd??? e .....                 beq     @retsec
fe/c047: 68           ??mxd?z? e .....                 pla
fe/c048: 4b           ??mxd??? e .....                 phk
fe/c049: 20 4c fe     ??mxd??? e .....                 jsr     _callModNetwork
fe/c04c: 2b           ??mxd??? e .....                 pld
fe/c04d: 85 05        ??mxd??? e .....                 sta     DPCOP_AH
fe/c04f: 86 03        ??mxd??? e .....                 stx     DPCOP_X
fe/c051: 84 01        ??mxd??? e .....                 sty     DPCOP_Y
fe/c053: e2 20        ??mxd??? e .....                 sep     #$20
                                                       .rwid   shortm
fe/c055: 8b           ??Mxd??? e .....                 phb
fe/c056: 68           ??Mxd??? e .....                 pla
fe/c057: 85 07        ??Mxd??? e .....                 sta     DPCOP_B
fe/c059: c2 20        ??Mxd??? e .....                 rep     #$20
                                                       .rwid   longm
fe/c05b: 6b           ??mxd??? e ...#.                 rtl

fe/c05c: 68           ??mxd?Z? e ....> @retsec         pla
fe/c05d: 2b           ??mxd??? e .....                 pld
fe/c05e: 64 03        ??mxd??? e .....                 stz     DPCOP_X
fe/c060: 38           ??mxd??? e .....                 sec
fe/c061: 6b           ??mxd??C e ...#.                 rtl

                                       ********************************************************************************
                                       * COP 3F - OPATR - ???                                                         *
                                       ********************************************************************************
fe/c062: a2 0e 00     ??mxd??? e @T... COP_3F          ldx     #__MMBAS
fe/c065: 22 8c ff 00  n?mxd?z? e .....                 jsl     __MM
fe/c069: b0 2c        ??mxd??? e .....                 bcs     @retSecX0
fe/c06b: a8           ??mxd??c e .....                 tay
fe/c06c: a5 08        ??mxd??c e .....                 lda     DPCOP_DP
fe/c06e: 18           ??mxd??c e .....                 clc
fe/c06f: 65 03        ??mxd??c e .....                 adc     DPCOP_X
fe/c071: aa           ??mxd??? e .....                 tax
fe/c072: 88           ??mxd??? e .....                 dey
fe/c073: 98           ??mxd??? e .....                 tya
fe/c074: 9f 00 00 00  ??mxd??? e .....                 stal    f:$000000,x
fe/c078: 8b           ??mxd??? e .....                 phb
fe/c079: 8b           ??mxd??? e .....                 phb
fe/c07a: 68           ??mxd??? e .....                 pla
fe/c07b: 9f 02 00 00  ??mxd??? e .....                 stal    f:$000002,x
fe/c07f: 62 e1 3d     ??mxd??? e .....                 per     LFEFE63_anRTL
fe/c082: 68           ??mxd??? e .....                 pla
fe/c083: 9f 03 00 00  ??mxd??? e .....                 stal    f:$000003,x
fe/c087: 4b           ??mxd??? e .....                 phk
fe/c088: 4b           ??mxd??? e .....                 phk
fe/c089: 68           ??mxd??? e .....                 pla
fe/c08a: 9f 05 00 00  ??mxd??? e .....                 stal    f:$000005,x
fe/c08e: a9 ad de     ??mxd??? e .....                 lda     #$dead
fe/c091: 9f 06 00 00  n?mxd?z? e .....                 stal    f:$000006,x
fe/c095: 18           n?mxd?z? e .....                 clc
fe/c096: 6b           n?mxd?zc e ...#.                 rtl

fe/c097: 64 03        ??mxd??C e ....> @retSecX0       stz     DPCOP_X
fe/c099: 6b           ??mxd??C e ...#.                 rtl

                                       ********************************************************************************
                                       * COP 40 - OPFTR - ??? free something see OPATR                                *
                                       ********************************************************************************
fe/c09a: a5 08        ??mxd??? e @T... COP_40          lda     DPCOP_DP
fe/c09c: 18           ??mxd??? e .....                 clc
fe/c09d: 65 03        ??mxd??c e .....                 adc     DPCOP_X
fe/c09f: aa           ??mxd??? e .....                 tax
fe/c0a0: bf 06 00 00  ??mxd??? e .....                 ldal    f:DPCOP_AH+1,x
fe/c0a4: 49 ad de     ??mxd??? e .....                 eor     #$dead
fe/c0a7: c9 01 00     ??mxd??? e .....                 cmp     #$0001
fe/c0aa: 6b           ??mxd??? e ...#.                 rtl

                                       ********************************************************************************
                                       * COP 3D - OPGSR - ???                                                         *
                                       *                                                                              *
                                       * Does an RTL                                                                  *
                                       ********************************************************************************
fe/c0ab: 6b           ??mxd??? e @T.#. COP_3D          rtl

                                       ********************************************************************************
                                       * COP 3E - OPADY - add Y to BHA                                                *
                                       * Action: BHA becomes BHA+Y. Y is zeroed.                                      *
                                       *                                                                              *
                                       * On entry: No requirements                                                    *
                                       * On exit:  BHA := BHA + Y                                                     *
                                       *           Y = 0                                                              *
                                       *           DBX preserved                                                      *
                                       ********************************************************************************
fe/c0ac: 18           ??mxd??? e @T... COP_3E          clc
fe/c0ad: 65 01        ??mxd??c e .....                 adc     DPCOP_Y
fe/c0af: 85 05        ??mxd??? e .....                 sta     DPCOP_AH
fe/c0b1: 90 06        ??mxd??? e .....                 bcc     LFEC0B9
fe/c0b3: e2 20        ??mxd??C e .....                 sep     #$20
                                                       .rwid   shortm
fe/c0b5: e6 07        ??Mxd??C e .....                 inc     DPCOP_B
fe/c0b7: c2 20        ??Mxd??C e .....                 rep     #$20
                                                       .rwid   longm
fe/c0b9: 64 01        ??mxd??? e ....> LFEC0B9         stz     DPCOP_Y
fe/c0bb: 6b           ??mxd??? e ...#.                 rtl

                                       ********************************************************************************
                                       * COP 32 - OPSUM - compute end-around-carry sum                                *
                                       *                                                                              *
                                       * Action: Gives a sum of all the bits in a block whose start is pointed to by  *
                                       * BHA and whose length in bytes is in Y.                                       *
                                       *                                                                              *
                                       * On entry: BHA points to thestartof the block to be summed.                   *
                                       *           Y = length of block in bytes.                                      *
                                       * On exit:  If C = 0 then thesum has been computed and theresult is in HA.     *
                                       *           If C = 1 then either the length was zero (Y = 0) or all the bytes  *
                                       *           in the block were zero (HA = 0).                                   *
                                       *           DXY preserved                                                      *
                                       ********************************************************************************
fe/c0bc: bb           ??mxd??? e @T... COP_32          tyx                       ;byte count into X
fe/c0bd: f0 2b        ??mxd??? e .....                 beq     @retzsec
fe/c0bf: a9 00 00     ??mxd?z? e .....                 lda     #$0000            ;sum
fe/c0c2: a8           n?mxd?Z? e .....                 tay                       ;zero offset
fe/c0c3: 18           ??mxd??? e .....                 clc
fe/c0c4: ca           ??mxd??? e ....> @lp             dex
fe/c0c5: d0 0e        ??mxd??? e .....                 bne     @nla              ;if zero here then 1 byte left
fe/c0c7: 48           ??mxd?Z? e .....                 pha
fe/c0c8: b7 05        ??mxd?Z? e .....                 lda     [DPCOP_AH],y
fe/c0ca: c8           ??mxd??? e .....                 iny
fe/c0cb: 29 ff 00     ??mxd??? e .....                 and     #$00ff
fe/c0ce: 63 01        n?mxd??? e .....                 adc     $01,S             ;add to low part of stacked A
fe/c0d0: 83 01        ??mxd??? e .....                 sta     $01,S
fe/c0d2: 68           ??mxd??? e .....                 pla                       ;pop A
fe/c0d3: 80 07        ??mxd??? e ...#.                 bra     LFEC0DC           ;and return

fe/c0d5: 77 05        ??mxd?z? e ....> @nla            adc     [DPCOP_AH],y
fe/c0d7: c8           ??mxd??? e .....                 iny
fe/c0d8: c8           ??mxd??? e .....                 iny
fe/c0d9: ca           ??mxd??? e .....                 dex
fe/c0da: d0 e8        ??mxd??? e .....                 bne     @lp
fe/c0dc: 69 00 00     ??mxd??? e ....> LFEC0DC         adc     #$0000            ;add last carry in
fe/c0df: f0 09        ??mxd??? e .....                 beq     @retzsec
fe/c0e1: aa           ??mxd?z? e .....                 tax
fe/c0e2: 57 05        ??mxd??? e .....                 eor     [DPCOP_AH],y      ;this looks to additionally check against any checksum after the block
fe/c0e4: 86 05        ??mxd??? e .....                 stx     DPCOP_AH
fe/c0e6: c9 01 00     ??mxd??? e .....                 cmp     #$0001            ;return Z for match QRY - check this
fe/c0e9: 6b           ??mxd??? e ...#.                 rtl

fe/c0ea: 64 05        ??mxd?Z? e ....> @retzsec        stz     DPCOP_AH
fe/c0ec: 38           ??mxd?Z? e .....                 sec
fe/c0ed: 6b           ??mxd?ZC e ...#.                 rtl

                                       ********************************************************************************
                                       * COP 2E - OPFPO - find pool owner                                             *
                                       *                                                                              *
                                       * Action This call attempts to find the module which owns the memory pool      *
                                       * pointed to by BHA.                                                           *
                                       *                                                                              *
                                       * On Entry: BHA points to the pool address.                                    *
                                       *           Y = 0                                                              *
                                       * On Exit:  If C = 0 then the pool owner has been found, and BHA ptnnts to an  *
                                       *           address within the owner module.                                   *
                                       *           If C = 1 then the owner was not found.                             *
                                       *           No registers preserved                                             *
                                       *                                                                              *
                                       * TODO DOCO: Further to documented API if Y non-zero on entry then BHA is      *
                                       * ignored instead Y is used as a pool handle                                   *
                                       ********************************************************************************
fe/c0ee: 0b           ??mxd??? e @T... COP_2E          phd
fe/c0ef: 5a           ??mxd??? e .....                 phy
fe/c0f0: 7a           ??mxd??? e .....                 ply
fe/c0f1: d0 09        ??mxd??? e .....                 bne     LFEC0FC           ;if Y<>0 then skip MMFND and use passed Y
fe/c0f3: a2 14 00     ??mxd?Z? e .....                 ldx     #__MMFND
fe/c0f6: 22 8c ff 00  n?mxd?z? e .....                 jsl     __MM
fe/c0fa: b0 30        ??mxd??? e .....                 bcs     @retpld
fe/c0fc: 20 da ce     ??mxd??? e ....> LFEC0FC         jsr     getHandleYinDP
fe/c0ff: b0 2b        ??mxd??? e .....                 bcs     @retpld
fe/c101: bf 08 00 00  ??mxd??c e .....                 ldal    f:$000008,x       ;QRY - TODO find out what __MMFND returns in X - undocumented!
fe/c105: 48           ??mxd??c e .....                 pha
fe/c106: a2 0e fe     ??mxd??c e .....                 ldx     #B0LST_MODULES_QRY ;get head of modules list
fe/c109: bf 00 00 00  ??mxd?z? e ....> LFEC109         ldal    f:$000000,x       ;get next module
fe/c10d: c9 0e fe     ??mxd??? e .....                 cmp     #B0LST_MODULES_QRY ;check for back round to start
fe/c110: f0 19        ??mxd??? e .....                 beq     @retpldpld        ;exit with C = 1
fe/c112: aa           ??mxd?z? e .....                 tax                       ;transfer A to X
fe/c113: c3 01        ??mxd??? e .....                 cmp     $01,S
fe/c115: d0 f2        ??mxd??? e .....                 bne     LFEC109
fe/c117: 3b           ??mxd?Z? e .....                 tsc
fe/c118: 5b           ??mxd??? e .....                 tcd
fe/c119: 8b           ??mxd??? e .....                 phb
fe/c11a: 4b           ??mxd??? e .....                 phk
fe/c11b: 20 2e f2     ??mxd??? e .....                 jsr     LFEF22E
fe/c11e: 68           ??mxd??? e .....                 pla
fe/c11f: ab           ??mxd??? e .....                 plb
fe/c120: 2b           ??mxd??? e .....                 pld
fe/c121: 85 05        ??mxd??? e .....                 sta     DPCOP_AH
fe/c123: e2 20        ??mxd??? e .....                 sep     #$20
                                                       .rwid   shortm
fe/c125: 8b           ??Mxd??? e .....                 phb
fe/c126: 68           ??Mxd??? e .....                 pla
fe/c127: 85 07        ??Mxd??? e .....                 sta     DPCOP_B
fe/c129: 18           ??Mxd??? e .....                 clc
fe/c12a: 6b           ??Mxd??c e ...#.                 rtl

                                                       .rwid   longm
fe/c12b: 2b           ??mxd?Z? e ....> @retpldpld      pld
fe/c12c: 2b           ??mxd??? e ....> @retpld         pld
fe/c12d: 6b           ??mxd??? e ...#.                 rtl

                                       ********************************************************************************
                                       * COP 2D - OPWRM - write module name                                           *
                                       *                                                                              *
                                       * Action: Given an address in BHA. this call will send the name of the module  *
                                       * which exists at that addressto the VDU drivers. If no module exists at that  *
                                       * address then the call returns with the carry bit set.                        *
                                       *                                                                              *
                                       * On entry: BHA points to somewhere within a module.                           *
                                       * On exit:  If C = 0 then the name of the module has been sent to the VDU      *
                                       * drivers.                                                                     *
                                       *           If C = 1 then the module was not found.                            *
                                       *           D preserved                                                        *
                                       ********************************************************************************
fe/c12e: 02 2c        ??mxd??? e @T... COP_2D          cop     COP_2C_OPFMA      ;find the module
fe/c130: b0 1f        ??mxd??? e .....                 bcs     @ret              ;branch if not found
fe/c132: 8b           ??mxd??c e .....                 phb
fe/c133: 48           ??mxd??c e .....                 pha
fe/c134: 3b           ??mxd??c e .....                 tsc
fe/c135: 5b           ??mxd??c e .....                 tcd
fe/c136: a0 00 00     ??mxd??c e .....                 ldy     #$0000
fe/c139: b7 01        ??mxd??? e ....> @lp             lda     [$01],y           ;get chars from pointer on stack
fe/c13b: 29 ff 00     ??mxd??? e .....                 and     #$00ff
fe/c13e: f0 0e        n?mxd??? e .....                 beq     @done
fe/c140: c9 2f 00     n?mxd?z? e .....                 cmp     #‘/’
fe/c143: f0 09        ??mxd??? e .....                 beq     @done             ;module name terminator
fe/c145: 20 93 e5     ??mxd?z? e .....                 jsr     modNameToUpper
fe/c148: eb           ??mxd??? e .....                 xba
fe/c149: 02 00        ??mxd??? e .....                 cop     COP_00_OPWRC
fe/c14b: c8           ??mxd??? e .....                 iny
fe/c14c: d0 eb        ??mxd??? e .....                 bne     @lp
fe/c14e: 68           ??mxd?Z? e ....> @done           pla
fe/c14f: ab           ??mxd??? e .....                 plb
fe/c150: 18           ??mxd??? e .....                 clc
fe/c151: 6b           ??mxd??? e ...#> @ret            rtl

                                       ********************************************************************************
                                       * COP 2C - OPFMA - find module given address within module                     *
                                       *                                                                              *
                                       * Action: Given an address in BHA, this call will reutm in BHA the address of  *
                                       * the name of the module tat exists at that address. If no module exists at    *
                                       * that address then the call returns with the carry bit set.                   *
                                       *                                                                              *
                                       * On entry: BHA points to somewhere within a module.                           *
                                       * On exit:  If C = 0 then BHA points to the module name.                       *
                                       *           If C = 1 then the module was not found.                            *
                                       *           D preserved                                                        *
                                       ********************************************************************************
fe/c152: 4b           ??mxd??? e @T... COP_2C          phk
fe/c153: 20 2b f2     ??mxd??? e .....                 jsr     brlFindModuleByAddress
fe/c156: 86 03        ??mxd??? e .....                 stx     DPCOP_X
fe/c158: b0 0a        ??mxd??? e .....                 bcs     @ret
fe/c15a: 85 05        ??mxd??c e .....                 sta     DPCOP_AH
fe/c15c: e2 20        ??mxd??c e .....                 sep     #$20
                                                       .rwid   shortm
fe/c15e: 8b           ??Mxd??c e .....                 phb
fe/c15f: 68           ??Mxd??c e .....                 pla
fe/c160: 85 07        ??Mxd??c e .....                 sta     DPCOP_B
fe/c162: c2 20        ??Mxd??c e .....                 rep     #$20
                                                       .rwid   longm
fe/c164: 6b           ??mxd??? e ...#> @ret            rtl

                                       ********************************************************************************
                                       * COP 18 - OPRLH - Read hex number                                             *
                                       *                                                                              *
                                       * Action: BHA points to a line of hex in meniory. This call translates a       *
                                       * certain number of hex digits into nibbles stored starting at the location    *
                                       * pointed to by DX. The number of nibbles required is in Y.                    *
                                       *                                                                              *
                                       * On entry: BHA points to line of hexcharacters.                               *
                                       *           DX points to location at which number is to be stored in direct    *
                                       *           page.                                                              *
                                       *           Y contains the number of nibbles required.                         *
                                       * On exit:  BHA points to the rest of the line.                                *
                                       *           If C = 0 then DX points to the Y nibbles in direct page.           *
                                       *           If C = 1 then the call failed.                                     *
                                       *           DXY preserved                                                      *
                                       ********************************************************************************
fe/c165: a5 08        ??mxd??? e @T... COP_18          lda     DPCOP_DP
fe/c167: 18           ??mxd??? e .....                 clc
fe/c168: 65 03        ??mxd??c e .....                 adc     DPCOP_X
fe/c16a: b0 37        ??mxd??? e .....                 bcs     @secrts
fe/c16c: aa           ??mxd??c e .....                 tax
fe/c16d: a5 01        ??mxd??c e .....                 lda     DPCOP_Y
fe/c16f: 1a           ??mxd??c e .....                 inc     A
fe/c170: f0 31        ??mxd??c e .....                 beq     @secrts
fe/c172: 4a           ??mxd?zc e .....                 lsr     A
fe/c173: f0 2e        n?mxd??? e .....                 beq     @secrts
fe/c175: a8           n?mxd?z? e .....                 tay
fe/c176: e2 20        ??mxd??? e .....                 sep     #$20
                                                       .rwid   shortm
fe/c178: da           ??Mxd??? e .....                 phx
fe/c179: 5a           ??Mxd??? e .....                 phy
fe/c17a: a9 00        ??Mxd??? e .....                 lda     #$00
fe/c17c: 9f 00 00 00  ??Mxd??? e ....> @zlp            stal    f:$000000,x       ;zero the result
fe/c180: e8           ??Mxd??? e .....                 inx
fe/c181: 88           ??Mxd??? e .....                 dey
fe/c182: d0 f8        ??Mxd??? e .....                 bne     @zlp
fe/c184: 7a           ??Mxd?Z? e .....                 ply
fe/c185: fa           ??Mxd??? e .....                 plx
fe/c186: c2 20        ??Mxd??? e .....                 rep     #$20
                                                       .rwid   longm
fe/c188: 20 f2 c1     ??mxd??? e .....                 jsr     scanHexBHA
fe/c18b: b0 16        ??mxd??? e .....                 bcs     @secrts
fe/c18d: 20 b4 c1     ??mxd??c e ....> LFEC18D         jsr     getCharBHAinc
fe/c190: b0 0c        ??mxd??? e .....                 bcs     @clcret
fe/c192: 20 cd c1     ??mxd??c e .....                 jsr     parseHexDigit
fe/c195: b0 07        ??mxd??? e .....                 bcs     @clcret
fe/c197: 20 01 c2     ??mxd??c e .....                 jsr     LFEC201
fe/c19a: b0 04        ??mxd??? e .....                 bcs     LFEC1A0
fe/c19c: 80 ef        ??mxd??c e ...#.                 bra     LFEC18D

fe/c19e: 18           ??mxd??C e ....> @clcret         clc
fe/c19f: 6b           ??mxd??c e ...#.                 rtl

fe/c1a0: 20 a5 c1     ??mxd??C e ....> LFEC1A0         jsr     @lp2
fe/c1a3: 38           ??mxd??? e ....> @secrts         sec
fe/c1a4: 6b           ??mxd??C e ...#.                 rtl

fe/c1a5: 20 b4 c1     ??mxd??? e ....> @lp2            jsr     getCharBHAinc
fe/c1a8: b0 09        ??mxd??? e .....                 bcs     @ret
fe/c1aa: 20 cd c1     ??mxd??c e .....                 jsr     parseHexDigit
fe/c1ad: 90 f6        ??mxd??? e .....                 bcc     @lp2
fe/c1af: 20 66 c2     ??mxd??C e .....                 jsr     decDPCOP_BHA
fe/c1b2: 18           ??mxd??? e .....                 clc
fe/c1b3: 60           ??mxd??? e ...#> @ret            rts

fe/c1b4: a7 05        ??mxd??? e ....> getCharBHAinc   lda     [DPCOP_AH]
fe/c1b6: 29 ff 00     ??mxd??? e .....                 and     #$00ff
fe/c1b9: 20 5b c2     n?mxd??? e .....                 jsr     incDPCOP_BHA
fe/c1bc: c9 20 00     ??mxd??? e .....                 cmp     #‘ ’
fe/c1bf: b0 05        ??mxd??? e .....                 bcs     @retclc
fe/c1c1: 20 66 c2     ??mxd??c e .....                 jsr     decDPCOP_BHA
fe/c1c4: 38           ??mxd??? e .....                 sec
fe/c1c5: 60           ??mxd??C e ...#.                 rts

fe/c1c6: c9 3a 00     ??mxd??C e ....> @retclc         cmp     #‘:’
fe/c1c9: 90 00        ??mxd??? e .....                 bcc     @daft             ;TODO: beautiful - I think this can go?
fe/c1cb: 18           ??mxd??? e ....> @daft           clc
fe/c1cc: 60           ??mxd??c e ...#.                 rts

fe/c1cd: c9 30 00     ??mxd??c e ....> parseHexDigit   cmp     #‘0’
fe/c1d0: 90 1e        ??mxd??? e .....                 bcc     @retsec
fe/c1d2: c9 3a 00     ??mxd??C e .....                 cmp     #‘:’
fe/c1d5: 90 13        ??mxd??? e .....                 bcc     @sk09
fe/c1d7: 29 df 00     ??mxd??C e .....                 and     #$00df
fe/c1da: c9 41 00     n?mxd??C e .....                 cmp     #‘A’
fe/c1dd: 90 11        ??mxd??? e .....                 bcc     @retsec
fe/c1df: c9 47 00     ??mxd??C e .....                 cmp     #‘G’
fe/c1e2: b0 0c        ??mxd??? e .....                 bcs     @retsec
fe/c1e4: 38           ??mxd??c e .....                 sec
fe/c1e5: e9 37 00     ??mxd??C e .....                 sbc     #$0037
fe/c1e8: 18           ??mxd??? e .....                 clc
fe/c1e9: 60           ??mxd??c e ...#.                 rts

fe/c1ea: 38           ??mxd??c e ....> @sk09           sec
fe/c1eb: e9 30 00     ??mxd??C e .....                 sbc     #‘0’
fe/c1ee: 18           ??mxd??? e .....                 clc
fe/c1ef: 60           ??mxd??c e ...#.                 rts

fe/c1f0: 38           ??mxd??? e ....> @retsec         sec
fe/c1f1: 60           ??mxd??C e ...#.                 rts

fe/c1f2: 20 b4 c1     ??mxd??? e ....> scanHexBHA      jsr     getCharBHAinc
fe/c1f5: b0 09        ??mxd??? e .....                 bcs     @retsec
fe/c1f7: 20 cd c1     ??mxd??c e .....                 jsr     parseHexDigit
fe/c1fa: b0 f6        ??mxd??? e .....                 bcs     scanHexBHA
fe/c1fc: 20 66 c2     ??mxd??c e .....                 jsr     decDPCOP_BHA
fe/c1ff: 18           ??mxd??? e .....                 clc
fe/c200: 60           ??mxd??? e ...#> @retsec         rts

fe/c201: 0a           ??mxd??c e ....> LFEC201         asl     A
fe/c202: 0a           ??mxd??? e .....                 asl     A
fe/c203: 0a           ??mxd??? e .....                 asl     A
fe/c204: 0a           ??mxd??? e .....                 asl     A
fe/c205: 0a           ??mxd??? e .....                 asl     A
fe/c206: 0a           ??mxd??? e .....                 asl     A
fe/c207: 0a           ??mxd??? e .....                 asl     A
fe/c208: 0a           ??mxd??? e .....                 asl     A
fe/c209: 0a           ??mxd??? e .....                 asl     A
fe/c20a: 0a           ??mxd??? e .....                 asl     A
fe/c20b: 0a           ??mxd??? e .....                 asl     A
fe/c20c: 0a           ??mxd??? e .....                 asl     A
fe/c20d: 0a           ??mxd??? e .....                 asl     A
fe/c20e: 20 43 c2     ??mxd??? e .....                 jsr     LFEC243
fe/c211: b0 2c        ??mxd??? e .....                 bcs     LFEC23F
fe/c213: 0a           ??mxd??c e .....                 asl     A
fe/c214: 20 43 c2     ??mxd??? e .....                 jsr     LFEC243
fe/c217: b0 26        ??mxd??? e .....                 bcs     LFEC23F
fe/c219: 0a           ??mxd??c e .....                 asl     A
fe/c21a: 20 43 c2     ??mxd??? e .....                 jsr     LFEC243
fe/c21d: b0 20        ??mxd??? e .....                 bcs     LFEC23F
fe/c21f: 0a           ??mxd??c e .....                 asl     A
fe/c220: 20 43 c2     ??mxd??? e .....                 jsr     LFEC243
fe/c223: b0 1a        ??mxd??? e .....                 bcs     LFEC23F
fe/c225: a5 01        ??mxd??c e .....                 lda     DPCOP_Y
fe/c227: 4a           ??mxd??c e .....                 lsr     A
fe/c228: 90 17        n?mxd??? e .....                 bcc     LFEC241
fe/c22a: da           n?mxd??C e .....                 phx
fe/c22b: 5a           n?mxd??C e .....                 phy
fe/c22c: e2 20        n?mxd??C e .....                 sep     #$20
                                                       .rwid   shortm
fe/c22e: e8           ??Mxd??C e ....> LFEC22E         inx
fe/c22f: 88           ??Mxd??C e .....                 dey
fe/c230: d0 fc        ??Mxd??C e .....                 bne     LFEC22E
fe/c232: ca           ??Mxd?ZC e .....                 dex
fe/c233: a9 0f        ??Mxd??C e .....                 lda     #$0f
fe/c235: df 00 00 00  n?Mxd?zC e .....                 cmpl    f:$000000,x
fe/c239: c2 20        ??Mxd??? e .....                 rep     #$20
                                                       .rwid   longm
fe/c23b: 7a           ??mxd??? e .....                 ply
fe/c23c: fa           ??mxd??? e .....                 plx
fe/c23d: b0 02        ??mxd??? e .....                 bcs     LFEC241
fe/c23f: 38           ??mxd??? e ....> LFEC23F         sec
fe/c240: 60           ??mxd??C e ...#.                 rts

fe/c241: 18           ??mxd??? e ....> LFEC241         clc
fe/c242: 60           ??mxd??c e ...#.                 rts

fe/c243: 48           ??mxd??? e ....> LFEC243         pha
fe/c244: e2 20        ??mxd??? e .....                 sep     #$20
                                                       .rwid   shortm
fe/c246: da           ??Mxd??? e .....                 phx
fe/c247: 5a           ??Mxd??? e .....                 phy
fe/c248: bf 00 00 00  ??Mxd??? e ....> LFEC248         ldal    f:$000000,x
fe/c24c: 2a           ??Mxd??? e .....                 rol     A
fe/c24d: 9f 00 00 00  ??Mxd??? e .....                 stal    f:$000000,x
fe/c251: e8           ??Mxd??? e .....                 inx
fe/c252: 88           ??Mxd??? e .....                 dey
fe/c253: d0 f3        ??Mxd??? e .....                 bne     LFEC248
fe/c255: 7a           ??Mxd?Z? e .....                 ply
fe/c256: fa           ??Mxd??? e .....                 plx
fe/c257: c2 20        ??Mxd??? e .....                 rep     #$20
                                                       .rwid   longm
fe/c259: 68           ??mxd??? e .....                 pla
fe/c25a: 60           ??mxd??? e ...#.                 rts

fe/c25b: e6 05        n?mxd??? e ....> incDPCOP_BHA    inc     DPCOP_AH
fe/c25d: d0 06        ??mxd??? e .....                 bne     @sk
fe/c25f: e2 20        ??mxd?Z? e .....                 sep     #$20
                                                       .rwid   shortm
fe/c261: e6 07        ??Mxd?Z? e .....                 inc     DPCOP_B
fe/c263: c2 20        ??Mxd??? e .....                 rep     #$20
                                                       .rwid   longm
fe/c265: 60           ??mxd??? e ...#> @sk             rts

fe/c266: 48           ??mxd??? e ....> decDPCOP_BHA    pha
fe/c267: a5 05        ??mxd??? e .....                 lda     DPCOP_AH
fe/c269: c9 01 00     ??mxd??? e .....                 cmp     #$0001
fe/c26c: c6 05        ??mxd??? e .....                 dec     DPCOP_AH
fe/c26e: b0 06        ??mxd??? e .....                 bcs     @ret
fe/c270: e2 20        ??mxd??c e .....                 sep     #$20
                                                       .rwid   shortm
fe/c272: c6 07        ??Mxd??c e .....                 dec     DPCOP_B
fe/c274: c2 20        ??Mxd??c e .....                 rep     #$20
                                                       .rwid   longm
fe/c276: 68           ??mxd??? e ....> @ret            pla
fe/c277: 60           ??mxd??? e ...#.                 rts

                                       ********************************************************************************
                                       * COP 19 - OPRLS - ?                                                           *
                                       *                                                                              *
                                       * Appears to read a string surrounded by quotes into a buffer at DPX, length Y *
                                       ********************************************************************************
fe/c278: a5 08        ??mxd??? e @T... COP_19          lda     DPCOP_DP
fe/c27a: 18           ??mxd??? e .....                 clc
fe/c27b: 65 03        ??mxd??c e .....                 adc     DPCOP_X
fe/c27d: b0 38        ??mxd??? e .....                 bcs     @retsec
fe/c27f: aa           ??mxd??c e .....                 tax
fe/c280: 20 b4 c1     ??mxd??? e ....> @scanlp         jsr     getCharBHAinc     ;skip forward looking for quotes
fe/c283: b0 32        ??mxd??? e .....                 bcs     @retsec
fe/c285: c9 22 00     ??mxd??c e .....                 cmp     #‘"’
fe/c288: d0 f6        ??mxd??? e .....                 bne     @scanlp
fe/c28a: a0 00 00     ??mxd?Z? e .....                 ldy     #$0000
fe/c28d: 20 b4 c1     ??mxd??? e ....> @lp             jsr     getCharBHAinc
fe/c290: b0 25        ??mxd??? e .....                 bcs     @retsec
fe/c292: c9 22 00     ??mxd??c e .....                 cmp     #‘"’
fe/c295: d0 0a        ??mxd??? e .....                 bne     @noq
fe/c297: 20 b4 c1     ??mxd?Z? e .....                 jsr     getCharBHAinc     ;check for ""
fe/c29a: b0 10        ??mxd??? e .....                 bcs     @zetend
fe/c29c: c9 22 00     ??mxd??c e .....                 cmp     #‘"’
fe/c29f: d0 08        ??mxd??? e .....                 bne     @decretok
fe/c2a1: 20 b9 c2     ??mxd??? e ....> @noq            jsr     @staDPY           ;store char
fe/c2a4: c8           ??mxd??? e .....                 iny
fe/c2a5: f0 10        ??mxd??? e .....                 beq     @retsec
fe/c2a7: 80 e4        ??mxd?z? e ...#.                 bra     @lp

fe/c2a9: 20 66 c2     ??mxd?z? e ....> @decretok       jsr     decDPCOP_BHA
fe/c2ac: a9 00 00     ??mxd??? e ....> @zetend         lda     #$0000
fe/c2af: 20 b9 c2     n?mxd?Z? e .....                 jsr     @staDPY
fe/c2b2: c4 01        ??mxd??? e .....                 cpy     DPCOP_Y
fe/c2b4: 84 01        ??mxd??? e .....                 sty     DPCOP_Y
fe/c2b6: 6b           ??mxd??? e ...#.                 rtl

fe/c2b7: 38           ??mxd??? e ....> @retsec         sec
fe/c2b8: 6b           ??mxd??C e ...#.                 rtl

fe/c2b9: c4 01        ??mxd??? e ....> @staDPY         cpy     DPCOP_Y
fe/c2bb: b0 0a        ??mxd??? e .....                 bcs     @ret
fe/c2bd: 0b           ??mxd??c e .....                 phd
fe/c2be: da           ??mxd??c e .....                 phx
fe/c2bf: 2b           ??mxd??c e .....                 pld
fe/c2c0: e2 20        ??mxd??c e .....                 sep     #$20
                                                       .rwid   shortm
fe/c2c2: 97 00        ??Mxd??c e .....                 sta     [$00],y
fe/c2c4: c2 20        ??Mxd??c e .....                 rep     #$20
                                                       .rwid   longm
fe/c2c6: 2b           ??mxd??c e .....                 pld
fe/c2c7: 60           ??mxd??? e ...#> @ret            rts

                                       ********************************************************************************
                                       * COP 1C - OPSCX - Save context                                                *
                                       *                                                                              *
                                       * Action: Used by the menu program (and others) to save the context of the     *
                                       * screen and the operating system variables when switching to a different      *
                                       * task. It must be used only after an OPSSC call.                              *
                                       *                                                                              *
                                       * On entry: No Requirements.                                                   *
                                       * On exit:  If C = 0 then the call succeeded and Y contains the context pool   *
                                       *           handle.                                                            *
                                       *           If C = 1 then the call failed.                                     *
                                       *           D preserved                                                        *
                                       ********************************************************************************
fe/c2c8: a2 4a 00     ??mxd??? e @T... COP_1C          ldx     #__VDU_4A
fe/c2cb: 4b           n?mxd?z? e .....                 phk
fe/c2cc: 20 38 fe     n?mxd?z? e .....                 jsr     callModVDU        ;Get VDU variables size QRY - VDU mod seems to return 000080
fe/c2cf: a2 0c 00     ??mxd??? e .....                 ldx     #$000c
fe/c2d2: 20 ba c3     n?mxd?z? e .....                 jsr     BXXaddHA
fe/c2d5: a0 02 00     ??mxd??? e .....                 ldy     #$0002
fe/c2d8: a2 0c 00     n?mxd?z? e .....                 ldx     #__MMALA
fe/c2db: 22 8c ff 00  n?mxd?z? e .....                 jsl     __MM
fe/c2df: b0 0d        ??mxd??? e .....                 bcs     LFEC2EE
fe/c2e1: 84 01        ??mxd??c e .....                 sty     DPCOP_Y
fe/c2e3: 20 7d c3     ??mxd??c e .....                 jsr     saveCTX
fe/c2e6: a2 42 00     ??mxd??? e .....                 ldx     #__VDU_42
fe/c2e9: 4b           n?mxd?z? e .....                 phk
fe/c2ea: 20 38 fe     n?mxd?z? e .....                 jsr     callModVDU
fe/c2ed: 18           ??mxd??? e .....                 clc
fe/c2ee: 6b           ??mxd??? e ...#> LFEC2EE         rtl

                                       ********************************************************************************
                                       * COP 1D - OPRCX - Restore context                                             *
                                       *                                                                              *
                                       * Action: Used by the menu program (and othets) to restore a context           *
                                       * previously saved using OPSCX. It must be used only before an OPRSC call.     *
                                       *                                                                              *
                                       * On entry: Y = context pool handle allocated by OPSCX. Must be in 16bit       *
                                       * XYmode.                                                                      *
                                       * On exit:  If C = O then the context is restored and the pool freed.          *
                                       *           If C = I then the call failed.                                     *
                                       *           D preserved                                                        *
                                       ********************************************************************************
fe/c2ef: a2 0e 00     ??mxd??? e @T... COP_1D          ldx     #__MMBAS
fe/c2f2: 22 8c ff 00  n?mxd?z? e .....                 jsl     __MM
fe/c2f6: b0 13        ??mxd??? e .....                 bcs     @ret
fe/c2f8: 20 7a c3     ??mxd??c e .....                 jsr     restoreCTX
fe/c2fb: a2 46 00     ??mxd??? e .....                 ldx     #__VDU_46
fe/c2fe: 4b           n?mxd?z? e .....                 phk
fe/c2ff: 20 38 fe     n?mxd?z? e .....                 jsr     callModVDU
fe/c302: a4 01        ??mxd??? e .....                 ldy     DPCOP_Y
fe/c304: a2 02 00     ??mxd??? e .....                 ldx     #__MMFP
fe/c307: 22 8c ff 00  n?mxd?z? e .....                 jsl     __MM
fe/c30b: 6b           ??mxd??? e ...#> @ret            rtl

                                       ********************************************************************************
                                       * COP 1E - OPSSC - save the screen                                             *
                                       *                                                                              *
                                       * Action: Used by the menu program (and others) to save the contents of the    *
                                       * screen display.                                                              *
                                       *                                                                              *
                                       * On entry: Must be in 16bit XY mode.                                          *
                                       * On exit: If C = 0 then the call succeeded and Y contains the screenpool      *
                                       * handle.                                                                      *
                                       *          If C = 1 then the call failed.                                      *
                                       *          D preserved                                                         *
                                       ********************************************************************************
fe/c30c: a2 40 00     ??mxd??? e @T... COP_1E          ldx     #__VDU_40
fe/c30f: 4b           n?mxd?z? e .....                 phk
fe/c310: 20 38 fe     n?mxd?z? e .....                 jsr     callModVDU
fe/c313: a0 02 00     ??mxd??? e .....                 ldy     #$0002
fe/c316: a2 0a 00     n?mxd?z? e .....                 ldx     #__MMASA
fe/c319: 22 8c ff 00  n?mxd?z? e .....                 jsl     __MM
fe/c31d: b0 0a        ??mxd??? e .....                 bcs     LFEC329
fe/c31f: 84 01        ??mxd??c e .....                 sty     DPCOP_Y
fe/c321: a2 44 00     ??mxd??c e .....                 ldx     #__VDU_44
fe/c324: 4b           n?mxd?zc e .....                 phk
fe/c325: 20 38 fe     n?mxd?zc e .....                 jsr     callModVDU
fe/c328: 18           ??mxd??? e .....                 clc
fe/c329: 6b           ??mxd??? e ...#> LFEC329         rtl

                                       ********************************************************************************
                                       * COP 1F - OPRSC - restore the screen                                          *
                                       *                                                                              *
                                       * Action: Used by the menu program (and others) to restore the contents of a   *
                                       * screen previously saved using OPSSC.                                         *
                                       *                                                                              *
                                       * On entry: Y = screen pool handle allocated by OPSSC.                         *
                                       * On exit:  If C = O then the screen is restored and the pool freed.           *
                                       *           If C = 1 then the call failed.                                     *
                                       *           D preserved                                                        *
                                       ********************************************************************************
fe/c32a: a2 0e 00     ??mxd??? e @T... COP_1F          ldx     #__MMBAS
fe/c32d: 22 8c ff 00  n?mxd?z? e .....                 jsl     __MM              ;check the pool handle and get the base
fe/c331: b0 10        ??mxd??? e .....                 bcs     @ret
fe/c333: a2 48 00     ??mxd??c e .....                 ldx     #__VDU_48
fe/c336: 4b           n?mxd?zc e .....                 phk
fe/c337: 20 38 fe     n?mxd?zc e .....                 jsr     callModVDU        ;copy screen back
                                       ********************************************************************************
                                       * COP 49 - OPFSC - free screen                                                 *
                                       *                                                                              *
                                       * Action: Frees a saved screen which is no longer required.                    *
                                       *                                                                              *
                                       * On entry: Y = screen pool handle allocated by OPSSC.                         *
                                       * On exit:  If C = O then the screen is freed and the pool handle freed.       *
                                       *           If C = 1 then the call failed.                                     *
                                       *           D preserved                                                        *
                                       ********************************************************************************
fe/c33a: a4 01        ??mxd??? e .T..> COP_49          ldy     DPCOP_Y
fe/c33c: a2 02 00     ??mxd??? e .....                 ldx     #__MMFP
fe/c33f: 22 8c ff 00  n?mxd?z? e .....                 jsl     __MM              ;free the pool
fe/c343: 6b           ??mxd??? e ...#> @ret            rtl

                                       ********************************************************************************
                                       * COP 5E - OPFCX free context of VDU and MOS (including fonts)                 *
                                       *                                                                              *
                                       * Action: Frees a saved context that is no longer required.                    *
                                       *                                                                              *
                                       * On entry: Y = context pool handle allocated by OPSCX.                        *
                                       * On exit:  If C = 0 then the context is freed and the pool handle freed.      *
                                       *           If C = 1 then the call failed to free the context                  *
                                       *           D preserved                                                        *
                                       ********************************************************************************
fe/c344: a2 0e 00     ??mxd??? e @T... COP_5E          ldx     #__MMBAS
fe/c347: 22 8c ff 00  n?mxd?z? e .....                 jsl     __MM
fe/c34b: b0 11        ??mxd??? e .....                 bcs     @retsec
fe/c34d: 5a           ??mxd??c e .....                 phy
fe/c34e: a2 0c 00     ??mxd??c e .....                 ldx     #$000c
fe/c351: 20 ba c3     n?mxd?zc e .....                 jsr     BXXaddHA
fe/c354: a2 52 00     ??mxd??? e .....                 ldx     #$0052
fe/c357: 4b           n?mxd?z? e .....                 phk
fe/c358: 20 38 fe     n?mxd?z? e .....                 jsr     callModVDU
fe/c35b: 7a           ??mxd??? e .....                 ply
fe/c35c: 80 dc        ??mxd??? e ...#.                 bra     COP_49

fe/c35e: 38           ??mxd??C e ....> @retsec         sec
fe/c35f: 60           ??mxd??C e ...#.                 rts

                                       ; This appears to be a set of B0 locations that are saved on a context switch
fe/c360: 13 ff                   .T... tblVarsToSaveCtx .dd2   $ff13
fe/c362: 14 ff                   .T...                 .dd2    $ff14
fe/c364: 52 a5                   .T...                 .dd2    $a552
fe/c366: 53 a5                   .T...                 .dd2    $a553
fe/c368: 51 a5                   .T...                 .dd2    $a551
fe/c36a: 71 a5                   .T...                 .dd2    $a571
fe/c36c: 72 a5                   .T...                 .dd2    $a572
fe/c36e: 73 a5                   .T...                 .dd2    $a573
fe/c370: 74 a5                   .T...                 .dd2    $a574
fe/c372: 76 a5                   .T...                 .dd2    $a576
fe/c374: 7d a5                   .T...                 .dd2    $a57d
fe/c376: 3c a5                   .T...                 .dd2    $a53c
fe/c378: 00 00                   .T...                 .dd2    $0000
fe/c37a: 18           ??mxd??c e .T..> restoreCTX      clc
fe/c37b: 80 01        ??mxd??c e ...#.                 bra     LFEC37E

fe/c37d: 38           ??mxd??c e ....> saveCTX         sec
fe/c37e: 0b           ??mxd??? e ....> LFEC37E         phd
fe/c37f: 8b           ??mxd??? e .....                 phb
fe/c380: 48           ??mxd??? e .....                 pha
fe/c381: 3b           ??mxd??? e .....                 tsc
fe/c382: 5b           ??mxd??? e .....                 tcd
fe/c383: 4b           ??mxd??? e .....                 phk
                                                       .dbank  K (auto)
fe/c384: ab           ??mxd??? e .....                 plb
fe/c385: a2 00 00     ??mxd??? e .....                 ldx     #$0000
fe/c388: 9b           n?mxd?Z? e .....                 txy
fe/c389: da           ??mxd??? e ....> @ctxReStLp      phx
fe/c38a: bd 60 c3     ??mxd??? e .....                 lda     tblVarsToSaveCtx & $ffff,x
fe/c38d: f0 1b        ??mxd??? e .....                 beq     @done
fe/c38f: aa           ??mxd?z? e .....                 tax
fe/c390: e2 20        ??mxd??? e .....                 sep     #$20
                                                       .rwid   shortm
fe/c392: 90 08        ??Mxd??? e .....                 bcc     @dores
fe/c394: bf 00 00 00  ??Mxd??C e .....                 ldal    f:$000000,x
fe/c398: 97 01        ??Mxd??C e .....                 sta     [DPCOP_Y],y
fe/c39a: 80 06        ??Mxd??C e ...#.                 bra     @sk

fe/c39c: b7 01        ??Mxd??c e .T..> @dores          lda     [DPCOP_Y],y
fe/c39e: 9f 00 00 00  ??Mxd??c e .....                 stal    f:$000000,x
fe/c3a2: c2 20        ??Mxd??? e ....> @sk             rep     #$20
                                                       .rwid   longm
fe/c3a4: c8           ??mxd??? e .....                 iny
fe/c3a5: fa           ??mxd??? e .....                 plx
fe/c3a6: e8           ??mxd??? e .....                 inx
fe/c3a7: e8           ??mxd??? e .....                 inx
fe/c3a8: 80 df        ??mxd??? e ...#.                 bra     @ctxReStLp

fe/c3aa: fa           ??mxd?Z? e ....> @done           plx
fe/c3ab: 90 07        ??mxd??? e .....                 bcc     @skres
fe/c3ad: a9 00 00     ??mxd??C e .....                 lda     #$0000
fe/c3b0: 8f 13 ff 00  n?mxd?ZC e .....                 stal    f:SYS_ESCAPE_FLAG_QRY
fe/c3b4: 68           ??mxd??? e ....> @skres          pla
fe/c3b5: ab           ??mxd??? e .....                 plb
fe/c3b6: 2b           ??mxd??? e .....                 pld
fe/c3b7: a2 0c 00     ??mxd??? e .....                 ldx     #$000c
fe/c3ba: 08           n?mxd?z? e ....> BXXaddHA        php
fe/c3bb: da           n?mxd?z? e .....                 phx
fe/c3bc: 18           n?mxd?z? e .....                 clc
fe/c3bd: 63 01        n?mxd?zc e .....                 adc     $01,S
fe/c3bf: fa           ??mxd??? e .....                 plx
fe/c3c0: 90 07        ??mxd??? e .....                 bcc     @sk
fe/c3c2: e2 20        ??mxd??C e .....                 sep     #$20
                                                       .rwid   shortm
fe/c3c4: 8b           ??Mxd??C e .....                 phb
fe/c3c5: 68           ??Mxd??C e .....                 pla
fe/c3c6: 1a           ??Mxd??C e .....                 inc     A
fe/c3c7: 48           ??Mxd??C e .....                 pha
fe/c3c8: ab           ??Mxd??C e .....                 plb
fe/c3c9: 28           ???xd??? e ....> @sk             plp
                                                       .rwid   longm
fe/c3ca: 60           n?mxd?z? e ...#.                 rts

                                       ********************************************************************************
                                       * COP 25 - OPCRC - superceded use COP_32 OPSUM                                 *
                                       ********************************************************************************
fe/c3cb: 02 0f        ??mxd??? e @T... COP_25          cop     COP_0F_OPERR
fe/c3cd: 42 61 64 20+            .T...                 .zstr   “Bad call - OPCRC has been superceded by OPSUM”
                                       ********************************************************************************
                                       * COP 4C - OPBGB get block                                                     *
                                       * Action: Reads the number of bytes specified in the control block from the    *
                                       * currently open file whose handle is in Y, to the address in memory specified *
                                       * in the control block. The bytes are read from the file starting at the       *
                                       * position given by the sequential pointer. The sequential pointer can be      *
                                       * altered using OPWSP.                                                         *
                                       *                                                                              *
                                       * On Entry: Y = handle returned by OPOPN.                                      *
                                       *           BHA points to a control block of the following form.               *
                                       *           Offset                                                             *
                                       *           +0      Start address of memory (low byte first)                   *
                                       *           +4      Length of memory to be transferred (low byte first)        *
                                       * On Exit:  If C = 0 then X = O means transfer successful.                     *
                                       *                         X = 2 means that fewer bytes were transferred than   *
                                       *                               specified in the control block, and the        *
                                       * control                                                                      *
                                       *                               block is updated to show the number of bytes   *
                                       *                               that were transferred.                         *
                                       *           If C = 1 then the transfer was unsuccessful. X = error code. BHA   *
                                       *           points to a zero terminated error message                          *
                                       ********************************************************************************
fe/c3fb: 08           ??mxd??? e .T... COP_4C          php
fe/c3fc: 0b           ??mxd??? e .....                 phd
fe/c3fd: c2 30        ??mxd??? e .....                 rep     #$30
fe/c3ff: a2 20 00     ??mxd??? e .....                 ldx     #$0020
fe/c402: da           n?mxd?z? e .....                 phx
fe/c403: 80 08        n?mxd?z? e ...#.                 bra     LFEC40D

                                       ********************************************************************************
                                       * COP 4D - OPBPB put block                                                     *
                                       * Action: Writes the number of bytes specified in the control block. from the  *
                                       * address in memory specified in the control block, to the file whose handle   *
                                       * is in Y. The bytes are written to the file starting at the position given by *
                                       * the sequential pointer. The sequential pointer can be altered using OPWSP.   *
                                       * On entry: Y = handle returned by OPOPN.                                      *
                                       *           BHA points to a control block ot the following form.               *
                                       *           Offset                                                             *
                                       *           +0 Start address of memory (low byte first)                        *
                                       *           +4 Length of memory to be transferred (low byte first)             *
                                       * On exit:  If C = 0 then transfer was successful.                             *
                                       *           If C = 1 then the transfer was unsuccessful. X = error code. BHA   *
                                       *           points to a zero terminated error message.                         *
                                       *           Y preserved                                                        *
                                       ********************************************************************************
fe/c405: 08           ??mxd??? e @T... COP_4D          php
fe/c406: 0b           ??mxd??? e .....                 phd
fe/c407: c2 30        ??mxd??? e .....                 rep     #$30
fe/c409: a2 22 00     ??mxd??? e .....                 ldx     #$0022
fe/c40c: da           n?mxd?z? e .....                 phx
fe/c40d: 5a           n?mxd?z? e ....> LFEC40D         phy
fe/c40e: 4b           n?mxd?z? e .....                 phk
fe/c40f: 20 e9 c7     n?mxd?z? e .....                 jsr     callDevHandle
fe/c412: b0 08        ??mxd??? e .....                 bcs     LFEC41C
fe/c414: 7a           ??mxd??? e ....> LFEC414         ply
fe/c415: 7a           ??mxd??? e .....                 ply
fe/c416: 7a           ??mxd??? e .....                 ply
fe/c417: 08           ??mxd??? e .....                 php
fe/c418: 7a           ??mxd??? e .....                 ply
fe/c419: 82 95 f6     ??mxd??? e ...#.                 brl     retCopXBHA

fe/c41c: 9b           ??mxd??C e ....> LFEC41C         txy
fe/c41d: d0 f5        ??mxd??C e .....                 bne     LFEC414
fe/c41f: a0 06 00     ??mxd?ZC e .....                 ldy     #$0006
fe/c422: 20 aa c6     n?mxd?zC e .....                 jsr     LFEC6AA
fe/c425: a5 07        ??mxd??? e .....                 lda     DPCOP_B
fe/c427: 05 09        ??mxd??? e .....                 ora     DPCOP_DP+1
fe/c429: f0 1a        ??mxd??? e .....                 beq     LFEC445
fe/c42b: a9 ff ff     ??mxd?z? e .....                 lda     #$ffff
fe/c42e: c6 07        n?mxd?z? e .....                 dec     DPCOP_B
fe/c430: c5 07        ??mxd??? e .....                 cmp     DPCOP_B
fe/c432: d0 02        ??mxd??? e .....                 bne     LFEC436
fe/c434: c6 09        ??mxd?Z? e .....                 dec     DPCOP_DP+1
fe/c436: a6 0d        ??mxd??? e ....> LFEC436         ldx     DPCOP_K
fe/c438: e0 20 00     ??mxd??? e .....                 cpx     #$0020
fe/c43b: d0 05        ??mxd??? e .....                 bne     LFEC442
fe/c43d: 20 4c c4     ??mxd?Z? e .....                 jsr     LFEC44C
fe/c440: 80 03        ??mxd??? e ...#.                 bra     LFEC445

fe/c442: 20 96 c4     ??mxd?z? e ....> LFEC442         jsr     LFEC496
fe/c445: 86 0d        ??mxd??? e ....> LFEC445         stx     DPCOP_K
fe/c447: fa           ??mxd??? e .....                 plx
fe/c448: 9a           ??mxd??? e .....                 txs
fe/c449: 4c bd c6     ??mxd??? e ...#.                 jmp     LFEC6BD

fe/c44c: a4 0b        ??mxd??? e ....> LFEC44C         ldy     DPCOP_PC
fe/c44e: 02 0a        ??mxd??? e .....                 cop     COP_0A_OPBGT
fe/c450: e2 30        ??mxd??? e .....                 sep     #$30
                                                       .rwid   shortm,shortx
fe/c452: 87 03        ??MXd??? e .....                 sta     [DPCOP_X]
fe/c454: c2 30        ??MXd??? e .....                 rep     #$30
                                                       .rwid   longm,longx
fe/c456: b0 1b        ??mxd??? e .....                 bcs     LFEC473
fe/c458: a9 ff ff     ??mxd??c e .....                 lda     #$ffff
fe/c45b: c6 07        n?mxd?zc e .....                 dec     DPCOP_B
fe/c45d: c5 07        ??mxd??c e .....                 cmp     DPCOP_B
fe/c45f: d0 06        ??mxd??? e .....                 bne     LFEC467
fe/c461: c6 09        ??mxd?Z? e .....                 dec     DPCOP_DP+1
fe/c463: c5 09        ??mxd??? e .....                 cmp     DPCOP_DP+1
fe/c465: f0 08        ??mxd??? e .....                 beq     LFEC46F
fe/c467: e6 03        ??mxd?z? e ....> LFEC467         inc     DPCOP_X
fe/c469: d0 e1        ??mxd??? e .....                 bne     LFEC44C
fe/c46b: e6 05        ??mxd?Z? e .....                 inc     DPCOP_AH
fe/c46d: 80 dd        ??mxd??? e ...#.                 bra     LFEC44C

fe/c46f: a2 00 00     ??mxd?Z? e ....> LFEC46F         ldx     #$0000
fe/c472: 60           n?mxd?Z? e ...#.                 rts

fe/c473: 0b           ??mxd??C e ....> LFEC473         phd
fe/c474: a5 0f        ??mxd??C e .....                 lda     $0f
fe/c476: 5b           ??mxd??C e .....                 tcd
fe/c477: a0 00 00     ??mxd??C e .....                 ldy     #$0000
fe/c47a: 38           n?mxd?ZC e .....                 sec
fe/c47b: a3 07        n?mxd?ZC e .....                 lda     $07,S
fe/c47d: f7 05        ??mxd??C e .....                 sbc     [DPCOP_AH],y
fe/c47f: a0 04 00     ??mxd??? e .....                 ldy     #$0004
fe/c482: 97 05        n?mxd?z? e .....                 sta     [DPCOP_AH],y
fe/c484: a0 02 00     n?mxd?z? e .....                 ldy     #$0002
fe/c487: a3 09        n?mxd?z? e .....                 lda     $09,S
fe/c489: f7 05        ??mxd??? e .....                 sbc     [DPCOP_AH],y
fe/c48b: a0 06 00     ??mxd??? e .....                 ldy     #$0006
fe/c48e: 97 05        n?mxd?z? e .....                 sta     [DPCOP_AH],y
fe/c490: a2 02 00     n?mxd?z? e .....                 ldx     #$0002
fe/c493: 18           n?mxd?z? e .....                 clc
fe/c494: 2b           n?mxd?zc e .....                 pld
fe/c495: 60           ??mxd??c e ...#.                 rts

fe/c496: a4 0b        ??mxd??? e ....> LFEC496         ldy     DPCOP_PC
fe/c498: a7 03        ??mxd??? e .....                 lda     [DPCOP_X]
fe/c49a: 02 0b        ??mxd??? e .....                 cop     COP_0B_OPBPT
fe/c49c: b0 18        ??mxd??? e .....                 bcs     LFEC4B6
fe/c49e: a9 ff ff     ??mxd??c e .....                 lda     #$ffff
fe/c4a1: c6 07        n?mxd?zc e .....                 dec     DPCOP_B
fe/c4a3: c5 07        ??mxd??c e .....                 cmp     DPCOP_B
fe/c4a5: d0 06        ??mxd??? e .....                 bne     LFEC4AD
fe/c4a7: c6 09        ??mxd?Z? e .....                 dec     DPCOP_DP+1
fe/c4a9: c5 09        ??mxd??? e .....                 cmp     DPCOP_DP+1
fe/c4ab: f0 08        ??mxd??? e .....                 beq     LFEC4B5
fe/c4ad: e6 03        ??mxd?z? e ....> LFEC4AD         inc     DPCOP_X
fe/c4af: d0 e5        ??mxd??? e .....                 bne     LFEC496
fe/c4b1: e6 05        ??mxd?Z? e .....                 inc     DPCOP_AH
fe/c4b3: 80 e1        ??mxd??? e ...#.                 bra     LFEC496

fe/c4b5: 18           ??mxd?Z? e ....> LFEC4B5         clc
fe/c4b6: 60           ??mxd??? e ...#> LFEC4B6         rts

                                       ********************************************************************************
                                       * COP 4E - OPLOD - load file                                                   *
                                       *                                                                              *
                                       * Action: Loads a file into memwy from the specified filing system.            *
                                       *                                                                              *
                                       * On entry: BHA points to a control block of the following form.               *
                                       *           Offset                                                             *
                                       *           +0     Pointer to name of file (low byte first)                    *
                                       *           +4     File LOAD address (low byte first)                          *
                                       *           +8     File EXEC address (low byte first)                          *
                                       *           +12    Initial memory location (low byte first)                    *
                                       *           +16    Length of memory area (low byte first)                      *
                                       *                                                                              *
                                       *           A zero length parameter will cause anylength of file to be loaded. *
                                       *                                                                              *
                                       *           The length is updated upon exit to show the number of bytes        *
                                       * actually                                                                     *
                                       *           loaded.                                                            *
                                       *           The load address and execution address are not parameters they are *
                                       *                                                                              *
                                       *           set on exit to the file's values.                                  *
                                       * On exit:  If C = 0 and X = O then the file was loaded successfully and the   *
                                       *           load and execution addresses are valid.                            *
                                       *           If C = 0 and X = 2 then the file was loaded successfully but the   *
                                       *           load and execution addressess are invalid.                         *
                                       *           If C = 1 then the load was unsuccessful, X = error code. BHA       *
                                       * points                                                                       *
                                       *           to a zero-terminated error message.                                *
                                       *           Y preserved                                                        *
                                       ********************************************************************************
fe/c4b7: 08           ??mxd??? e @T... COP_4E          php
fe/c4b8: 0b           ??mxd??? e .....                 phd
fe/c4b9: c2 30        ??mxd??? e .....                 rep     #$30
fe/c4bb: a2 24 00     ??mxd??? e .....                 ldx     #$0024
fe/c4be: da           n?mxd?z? e .....                 phx
fe/c4bf: 80 08        n?mxd?z? e ...#.                 bra     LFEC4C9

                                       ********************************************************************************
                                       * COP 4F - OPSAV - save file                                                   *
                                       *                                                                              *
                                       * Action: Saves an area of memory to the specified filing system.              *
                                       *                                                                              *
                                       * On entry: BHA points to a control block of the following form.               *
                                       *           Offset                                                             *
                                       *           +0   Pointer to name of file (low byte first)                      *
                                       *           +4   File LOAD address (low byte first)                            *
                                       *           +8   File EXEC address (low byte first)                            *
                                       *           +12  Initial memory location (low byte first)                      *
                                       *           +16  Length ot memory area (low byte first)                        *
                                       * On exit:  If C = 0 and X = 0 then the file was saved successfully and the    *
                                       *           load and execution addresses were successfully updated.            *
                                       *           If C = 0 and X = 2 then the file was saved successfully but the    *
                                       *           load and execution addresses were not successfully updated.        *
                                       *           If C = 1 then the save was unsuccessful. X = error code. BHA       *
                                       * points                                                                       *
                                       *           to zero-terminated error message.                                  *
                                       *           Y preserved.                                                       *
                                       ********************************************************************************
fe/c4c1: 08           ??mxd??? e @T... COP_4F          php
fe/c4c2: 0b           ??mxd??? e .....                 phd
fe/c4c3: c2 30        ??mxd??? e .....                 rep     #$30
fe/c4c5: a2 26 00     ??mxd??? e .....                 ldx     #$0026
fe/c4c8: da           n?mxd?z? e .....                 phx
fe/c4c9: 5a           n?mxd?z? e ....> LFEC4C9         phy
fe/c4ca: 20 a1 c7     n?mxd?z? e .....                 jsr     LFEC7A1
fe/c4cd: b0 08        ??mxd??? e .....                 bcs     LFEC4D7
fe/c4cf: 7a           ??mxd??? e ....> LFEC4CF         ply
fe/c4d0: 7a           ??mxd??? e .....                 ply
fe/c4d1: 7a           ??mxd??? e .....                 ply
fe/c4d2: 08           ??mxd??? e .....                 php
fe/c4d3: 7a           ??mxd??? e .....                 ply
fe/c4d4: 82 da f5     ??mxd??? e ...#.                 brl     retCopXBHA

fe/c4d7: 9b           ??mxd??C e ....> LFEC4D7         txy
fe/c4d8: d0 f5        ??mxd??C e .....                 bne     LFEC4CF
fe/c4da: a0 12 00     ??mxd?ZC e .....                 ldy     #$0012
fe/c4dd: 20 aa c6     n?mxd?zC e .....                 jsr     LFEC6AA
fe/c4e0: a9 ff ff     ??mxd??? e .....                 lda     #$ffff
fe/c4e3: c6 13        n?mxd?z? e .....                 dec     $13
fe/c4e5: c5 13        ??mxd??? e .....                 cmp     $13
fe/c4e7: d0 02        ??mxd??? e .....                 bne     LFEC4EB
fe/c4e9: c6 15        ??mxd?Z? e .....                 dec     $15
fe/c4eb: a6 19        ??mxd??? e ....> LFEC4EB         ldx     $19
fe/c4ed: e0 24 00     ??mxd??? e .....                 cpx     #$0024
fe/c4f0: d0 05        ??mxd??? e .....                 bne     LFEC4F7
fe/c4f2: 20 01 c5     ??mxd?Z? e .....                 jsr     LFEC501
fe/c4f5: 80 03        ??mxd??? e ...#.                 bra     LFEC4FA

fe/c4f7: 20 b1 c5     ??mxd?z? e ....> LFEC4F7         jsr     LFEC5B1
fe/c4fa: 86 19        ??mxd??? e ....> LFEC4FA         stx     $19
fe/c4fc: fa           ??mxd??? e .....                 plx
fe/c4fd: 9a           ??mxd??? e .....                 txs
fe/c4fe: 4c bd c6     ??mxd??? e ...#.                 jmp     LFEC6BD

fe/c501: a5 13        ??mxd?Z? e ....> LFEC501         lda     $13
fe/c503: 25 15        ??mxd??? e .....                 and     $15
fe/c505: c9 ff ff     ??mxd??? e .....                 cmp     #$ffff
fe/c508: d0 05        ??mxd??? e .....                 bne     LFEC50F
fe/c50a: 38           ??mxd?Z? e .....                 sec
fe/c50b: a2 00 00     ??mxd?ZC e .....                 ldx     #$0000
fe/c50e: 60           n?mxd?ZC e ...#.                 rts

fe/c50f: 0b           ??mxd?z? e ....> LFEC50F         phd
fe/c510: a5 1b        ??mxd?z? e .....                 lda     $1b
fe/c512: 5b           ??mxd??? e .....                 tcd
fe/c513: e2 30        ??mxd??? e .....                 sep     #$30
                                                       .rwid   shortm,shortx
fe/c515: a5 07        ??MXd??? e .....                 lda     DPCOP_B
fe/c517: 48           ??MXd??? e .....                 pha
fe/c518: ab           ??MXd??? e .....                 plb
fe/c519: c2 30        ??MXd??? e .....                 rep     #$30
                                                       .rwid   longm,longx
fe/c51b: a5 05        ??mxd??? e .....                 lda     DPCOP_AH
fe/c51d: 2b           ??mxd??? e .....                 pld
fe/c51e: 02 50        ??mxd??? e .....                 cop     COP_50_OPRLE
fe/c520: b0 06        ??mxd??? e .....                 bcs     LFEC528
fe/c522: f4 00 00     ??mxd??c e .....                 pea     $0000
fe/c525: a8           ??mxd??c e .....                 tay
fe/c526: 80 1b        ??mxd??c e ...#.                 bra     LFEC543

fe/c528: f4 02 00     ??mxd??C e ....> LFEC528         pea     $0002
fe/c52b: a9 ff ff     ??mxd??C e .....                 lda     #$ffff
fe/c52e: 85 19        n?mxd?zC e .....                 sta     $19
fe/c530: 80 11        n?mxd?zC e ...#.                 bra     LFEC543

fe/c532: 98                      .....                 .dd1    $98
fe/c533: 18                      .....                 .dd1    $18
fe/c534: e5                      .....                 .dd1    $e5
fe/c535: 13                      .....                 .dd1    $13
fe/c536: 8a                      .....                 .dd1    $8a
fe/c537: e5                      .....                 .dd1    $e5
fe/c538: 15                      .....                 .dd1    $15
fe/c539: 90                      .....                 .dd1    $90
fe/c53a: 08                      .....                 .dd1    $08
fe/c53b: f0                      .....                 .dd1    $f0
fe/c53c: 06                      .....                 .dd1    $06

fe/c53d: fa           ??mxd?Z? e ....> LFEC53D         plx
fe/c53e: a2 00 80     ??mxd??? e .....                 ldx     #$8000
fe/c541: 38           n?mxd?z? e .....                 sec
fe/c542: 60           n?mxd?zC e ...#.                 rts

fe/c543: a0 40 00     ??mxd??? e ....> LFEC543         ldy     #$0040
fe/c546: 20 04 c6     n?mxd?z? e .....                 jsr     LFEC604
fe/c549: 90 03        ??mxd??? e .....                 bcc     LFEC54E
fe/c54b: 82 61 00     ??mxd??C e ...#.                 brl     LFEC5AF

fe/c54e: 84 17        ??mxd??c e ....> LFEC54E         sty     $17
fe/c550: 02 0a        ??mxd??? e ....> LFEC550         cop     COP_0A_OPBGT
fe/c552: b0 1f        ??mxd??? e .....                 bcs     LFEC573
fe/c554: e2 30        ??mxd??c e .....                 sep     #$30
                                                       .rwid   shortm,shortx
fe/c556: 87 0f        ??MXd??c e .....                 sta     [$0f]
fe/c558: c2 30        ??MXd??c e .....                 rep     #$30
                                                       .rwid   longm,longx
fe/c55a: a9 ff ff     ??mxd??c e .....                 lda     #$ffff
fe/c55d: c6 13        n?mxd?zc e .....                 dec     $13
fe/c55f: c5 13        ??mxd??c e .....                 cmp     $13
fe/c561: d0 06        ??mxd??? e .....                 bne     LFEC569
fe/c563: c6 15        ??mxd?Z? e .....                 dec     $15
fe/c565: c5 15        ??mxd??? e .....                 cmp     $15
fe/c567: f0 d4        ??mxd??? e .....                 beq     LFEC53D
fe/c569: a4 17        ??mxd?z? e ....> LFEC569         ldy     $17
fe/c56b: e6 0f        ??mxd??? e .....                 inc     $0f
fe/c56d: d0 e1        ??mxd??? e .....                 bne     LFEC550
fe/c56f: e6 11        ??mxd?Z? e .....                 inc     $11
fe/c571: 80 dd        ??mxd??? e ...#.                 bra     LFEC550

fe/c573: 5a           ??mxd??C e ....> LFEC573         phy
fe/c574: 02 46        ??mxd??C e .....                 cop     COP_46_OPEND
fe/c576: 7a           ??mxd??C e .....                 ply
fe/c577: da           ??mxd??C e .....                 phx
fe/c578: 48           ??mxd??C e .....                 pha
fe/c579: 8b           ??mxd??C e .....                 phb
fe/c57a: a4 17        ??mxd??C e .....                 ldy     $17
fe/c57c: 02 45        ??mxd??C e .....                 cop     COP_45_OPCLS
fe/c57e: ab           ??mxd??C e .....                 plb
fe/c57f: 68           ??mxd??C e .....                 pla
fe/c580: fa           ??mxd??C e .....                 plx
fe/c581: b0 2c        ??mxd??C e ...#.                 bcs     LFEC5AF

fe/c583: 29 01 00     ??mxd??? e @T...                 and     #$0001
fe/c586: d0 06        n?mxd??? e .....                 bne     LFEC58E
fe/c588: 38           n?mxd?Z? e .....                 sec
fe/c589: a2 00 90     n?mxd?ZC e .....                 ldx     #$9000
fe/c58c: 80 21        n?mxd?zC e ...#.                 bra     LFEC5AF

fe/c58e: 0b           n?mxd?z? e ....> LFEC58E         phd
fe/c58f: a5 1b        n?mxd?z? e .....                 lda     $1b
fe/c591: 5b           ??mxd??? e .....                 tcd
fe/c592: a0 0c 00     ??mxd??? e .....                 ldy     #$000c
fe/c595: 38           n?mxd?z? e .....                 sec
fe/c596: a3 15        n?mxd?zC e .....                 lda     $15,S
fe/c598: f7 05        ??mxd??C e .....                 sbc     [DPCOP_AH],y
fe/c59a: a0 10 00     ??mxd??? e .....                 ldy     #$0010
fe/c59d: 97 05        n?mxd?z? e .....                 sta     [DPCOP_AH],y
fe/c59f: a0 0e 00     n?mxd?z? e .....                 ldy     #$000e
fe/c5a2: a3 17        n?mxd?z? e .....                 lda     $17,S
fe/c5a4: f7 05        ??mxd??? e .....                 sbc     [DPCOP_AH],y
fe/c5a6: a0 12 00     ??mxd??? e .....                 ldy     #$0012
fe/c5a9: 97 05        n?mxd?z? e .....                 sta     [DPCOP_AH],y
fe/c5ab: 2b           n?mxd?z? e .....                 pld
fe/c5ac: 18           ??mxd??? e .....                 clc
fe/c5ad: fa           ??mxd??c e .....                 plx
fe/c5ae: 60           ??mxd??c e ...#.                 rts

fe/c5af: 7a           ??mxd??C e ....> LFEC5AF         ply
fe/c5b0: 60           ??mxd??C e ...#.                 rts

fe/c5b1: a0 80 00     ??mxd?z? e ....> LFEC5B1         ldy     #$0080
fe/c5b4: 20 04 c6     n?mxd?z? e .....                 jsr     LFEC604
fe/c5b7: 90 03        ??mxd??? e .....                 bcc     LFEC5BC
fe/c5b9: 82 38 00     ??mxd??C e ...#.                 brl     LFEC5F4

fe/c5bc: a5 13        ??mxd??c e ....> LFEC5BC         lda     $13
fe/c5be: 25 15        ??mxd??c e .....                 and     $15
fe/c5c0: c9 ff ff     ??mxd??c e .....                 cmp     #$ffff
fe/c5c3: f0 1f        ??mxd??? e .....                 beq     LFEC5E4
fe/c5c5: 5a           ??mxd??? e ....> LFEC5C5         phy
fe/c5c6: a7 0f        ??mxd??? e .....                 lda     [$0f]
fe/c5c8: 02 0b        ??mxd??? e .....                 cop     COP_0B_OPBPT
fe/c5ca: 7a           ??mxd??? e .....                 ply
fe/c5cb: b0 2d        ??mxd??? e .....                 bcs     LFEC5FA
fe/c5cd: a9 ff ff     ??mxd??c e .....                 lda     #$ffff
fe/c5d0: c6 13        n?mxd?zc e .....                 dec     $13
fe/c5d2: c5 13        ??mxd??c e .....                 cmp     $13
fe/c5d4: d0 06        ??mxd??? e .....                 bne     LFEC5DC
fe/c5d6: c6 15        ??mxd?Z? e .....                 dec     $15
fe/c5d8: c5 15        ??mxd??? e .....                 cmp     $15
fe/c5da: f0 08        ??mxd??? e .....                 beq     LFEC5E4
fe/c5dc: e6 0f        ??mxd?z? e ....> LFEC5DC         inc     $0f
fe/c5de: d0 e5        ??mxd??? e .....                 bne     LFEC5C5
fe/c5e0: e6 11        ??mxd?Z? e .....                 inc     $11
fe/c5e2: 80 e1        ??mxd??? e ...#.                 bra     LFEC5C5

fe/c5e4: 02 45        ??mxd?Z? e ....> LFEC5E4         cop     COP_45_OPCLS
fe/c5e6: b0 0c        ??mxd?Z? e .....                 bcs     LFEC5F4
fe/c5e8: a9 03 00     ??mxd?Zc e .....                 lda     #$0003
fe/c5eb: 02 24        n?mxd?zc e .....                 cop     COP_24_OPCVD
fe/c5ed: 02 51        n?mxd?zc e .....                 cop     COP_51_OPWLE
fe/c5ef: b0 04        n?mxd?zc e ..!..                 bcs     LFEC5F5
fe/c5f1: a2 00 00     n?mxd?zc e .....                 ldx     #$0000
fe/c5f4: 60           ??mxd??? e ...#> LFEC5F4         rts

fe/c5f5: a2 02 00     ??mxd??C e @T... LFEC5F5         ldx     #$0002
fe/c5f8: 18           n?mxd?zC e .....                 clc
fe/c5f9: 60           n?mxd?zc e ...#.                 rts

fe/c5fa: da           ??mxd??C e ....> LFEC5FA         phx
fe/c5fb: 8b           ??mxd??C e .....                 phb
fe/c5fc: 48           ??mxd??C e .....                 pha
fe/c5fd: 02 45        ??mxd??C e .....                 cop     COP_45_OPCLS
fe/c5ff: 68           ??mxd??C e .....                 pla
fe/c600: ab           ??mxd??C e .....                 plb
fe/c601: fa           ??mxd??C e .....                 plx
fe/c602: 38           ??mxd??C e .....                 sec
fe/c603: 60           ??mxd??C e ...#.                 rts

fe/c604: a5 05        n?mxd?z? e ....> LFEC604         lda     DPCOP_AH
fe/c606: eb           ??mxd??? e .....                 xba
fe/c607: 48           ??mxd??? e .....                 pha
fe/c608: ab           ??mxd??? e .....                 plb
fe/c609: ab           ??mxd??? e .....                 plb
fe/c60a: a5 03        ??mxd??? e .....                 lda     DPCOP_X
fe/c60c: 02 44        ??mxd??? e .....                 cop     COP_44_OPOPN
fe/c60e: 60           ??mxd??? e ...#.                 rts

                                       ********************************************************************************
                                       * COP 50 - OPRLE - read load address, execute address, and length of file      *
                                       *                                                                              *
                                       * Action: Reads the load address, execute address, and length of a file.       *
                                       *                                                                              *
                                       * On Entry: BHA points to a contnd block of the following form.                *
                                       *           Offset                                                             *
                                       *           +0   Pointer to name of file (low byte first)                      *
                                       *           +4   File LOAD address (low byte first)                            *
                                       *           +8   File EXEC address (low byte first)                            *
                                       *                                                                              *
                                       *           The load address and execution address are not paramcters they     *
                                       *           are set on exit to the file's values.                              *
                                       * On Exit:  If C = 0 then the control block has been updated to give the load  *
                                       *           and execute addresses, and the length is in XHA (2 bytes in X,     *
                                       *           4 bytes in total).                                                 *
                                       *           If C = 1 then the call was unsuccessful, X = error code,           *
                                       *           BHA points to a zero-terminated error message.                     *
                                       *           Y preserved                                                        *
                                       ********************************************************************************
fe/c60f: a2 28 00     ??mxd??? e @T... COP_50          ldx     #$0028
fe/c612: 20 a1 c7     n?mxd?z? e .....                 jsr     LFEC7A1
fe/c615: b0 03        ??mxd??? e .....                 bcs     LFEC61A
fe/c617: 82 97 f4     ??mxd??? e ...#> LFEC617         brl     retCopXBHA

fe/c61a: 9b           ??mxd??C e ....> LFEC61A         txy
fe/c61b: d0 fa        ??mxd??C e .....                 bne     LFEC617
fe/c61d: a0 01 00     ??mxd?ZC e .....                 ldy     #$0001
fe/c620: b7 05        n?mxd?zC e .....                 lda     [DPCOP_AH],y
fe/c622: 48           ??mxd??C e .....                 pha
fe/c623: ab           ??mxd??C e .....                 plb
fe/c624: ab           ??mxd??C e .....                 plb
fe/c625: a7 05        ??mxd??C e .....                 lda     [DPCOP_AH]
fe/c627: a0 40 00     ??mxd??C e .....                 ldy     #$0040
fe/c62a: 02 44        n?mxd?zC e .....                 cop     COP_44_OPOPN
fe/c62c: 90 03        n?mxd?zC e ..!..                 bcc     LFEC631
fe/c62e: 82 80 f4     n?mxd?zC e ...#.                 brl     retCopXBHA

fe/c631: 5a           ??mxd??? e @T... LFEC631         phy
fe/c632: a9 00 00     ??mxd??? e .....                 lda     #$0000
fe/c635: a0 0a 00     n?mxd?Z? e .....                 ldy     #$000a
fe/c638: 97 05        ??mxd??? e ....> LFEC638         sta     [DPCOP_AH],y
fe/c63a: 88           ??mxd??? e .....                 dey
fe/c63b: 88           ??mxd??? e .....                 dey
fe/c63c: c0 04 00     ??mxd??? e .....                 cpy     #$0004
fe/c63f: b0 f7        ??mxd??? e .....                 bcs     LFEC638
fe/c641: 7a           ??mxd??c e .....                 ply
fe/c642: ba           ??mxd??c e .....                 tsx
fe/c643: f4 00 00     ??mxd??c e .....                 pea     $0000
fe/c646: f4 00 00     ??mxd??c e .....                 pea     $0000
fe/c649: 3b           ??mxd??c e .....                 tsc
fe/c64a: da           ??mxd??c e .....                 phx
fe/c64b: 1a           ??mxd??c e .....                 inc     A
fe/c64c: f4 00 00     ??mxd??c e .....                 pea     $0000
fe/c64f: ab           ??mxd??c e .....                 plb
fe/c650: ab           ??mxd??c e .....                 plb
fe/c651: 02 57        ??mxd??c e .....                 cop     COP_57_OPRLL
fe/c653: 90 0d        ??mxd??c e ...#.                 bcc     LFEC662

fe/c655: 4b           ??mxd??? e @T...                 phk
fe/c656: 62 02 00     ??mxd??? e .....                 per     LFEC65C-1
fe/c659: 82 55 f4     ??mxd??? e ...#.                 brl     retCopXBHA

                                                       .rwid   shortm,shortx
fe/c65c: 02 45        ??MXd??? e @T... LFEC65C         cop     COP_45_OPCLS
fe/c65e: fa           ??MXd??? e .....                 plx
fe/c65f: 9a           ??MXd??? e .....                 txs
fe/c660: 38           ??MXd??? e .....                 sec
fe/c661: 6b           ??MXd??C e ...#.                 rtl

                                                       .rwid   longm,longx
fe/c662: 02 45        ??mxd??c e ....> LFEC662         cop     COP_45_OPCLS
fe/c664: 68           ??mxd??c e .....                 pla
fe/c665: 68           ??mxd??c e .....                 pla
fe/c666: fa           ??mxd??c e .....                 plx
fe/c667: 18           ??mxd??c e .....                 clc
fe/c668: 82 46 f4     ??mxd??c e ...#.                 brl     retCopXBHA

                                       ********************************************************************************
                                       * COP 51 - OPWLE - write load address and execute address of file              *
                                       *                                                                              *
                                       * Action: Writes new load and execute addresses to a file.                     *
                                       *                                                                              *
                                       * On entry: BHA points to a control block of the following fonn.               *
                                       *           Offset                                                             *
                                       *           +0   Pointer to name of file (low byte first)                      *
                                       *           +4   File LOAD address (low byte first)                            *
                                       *           +8   File EXEC address (low byte first)                            *
                                       * On exit:  If C = 0 then the file has been updated.                           *
                                       *           If C = 1 then the update was unsuccessful. X = error code,         *
                                       *           BHA points to a zero terminated error message.                     *
                                       *           Y preserved                                                        *
                                       ********************************************************************************
fe/c66b: a2 2a 00     ??mxd??? e @T... COP_51          ldx     #$002a
fe/c66e: 80 2d        n?mxd?z? e ...#.                 bra     LFEC69D

                                       ********************************************************************************
                                       * COP 52 - OPRAT - read attributes                                             *
                                       *                                                                              *
                                       * Action: Reads the 4-byte file attributes.                                    *
                                       *                                                                              *
                                       * On entry: BHA points to a control block of the following form.               *
                                       *           Offset                                                             *
                                       *           +0   Pointer to name of file (low byte first)                      *
                                       *           +4   File attributes (low byte first)                              *
                                       *                                                                              *
                                       * The attributes have the following meanings:                                  *
                                       * low byte   bit 0     0 not readable by owner                                 *
                                       *                      1 readable by owner                                     *
                                       *            bit 1     0 not writable by owner                                 *
                                       *                      1 writable by owner                                     *
                                       *            bit 2     undefined                                               *
                                       *            bit 3     0 not locked                                            *
                                       *                      1 locked                                                *
                                       *            bit 4     0 not readable by public                                *
                                       *                      1 readable by public                                    *
                                       *            bit 5     0 not writable by public                                *
                                       *                      1 writable by public                                    *
                                       *            bit 6     undefined                                               *
                                       *            bit 7     undefined                                               *
                                       * low middle byte      days                                                    *
                                       * high middle byte                                                             *
                                       *            bits 0..3 months                                                  *
                                       *            bits 4..7 years since 1981                                        *
                                       * high byte            undefined                                               *
                                       * On exit:   If C = 0 and X = l then a file was found and the attributes were  *
                                       *            read successfully.                                                *
                                       *            If C = 0 and X = 2 then a directory was found and the attributes  *
                                       *            were read successfully.                                           *
                                       *            If C = 1 then the call was unsuccessful, X = enor code, BHA       *
                                       * points                                                                       *
                                       *            to a zero-terminated error message.                               *
                                       *            Y preserved                                                       *
                                       ********************************************************************************
fe/c670: a2 2c 00     ??mxd??? e @T... COP_52          ldx     #$002c
fe/c673: 80 28        n?mxd?z? e ...#.                 bra     LFEC69D

                                       ********************************************************************************
                                       * COP 53 - OPWAT - write file attributes                                       *
                                       *                                                                              *
                                       * Action: Writes the 4-byte file attributes                                    *
                                       *                                                                              *
                                       * For parameters see OPRAT above                                               *
                                       ********************************************************************************
fe/c675: a2 2e 00     ??mxd??? e @T... COP_53          ldx     #$002e
fe/c678: 80 23        n?mxd?z? e ...#.                 bra     LFEC69D

                                       ********************************************************************************
                                       * COP 54 - OPRSP - read sequential pointer                                     *
                                       *                                                                              *
                                       * Action: Reads the sequential pointer the position within a file at which the *
                                       * next read/write operation will occur.                                        *
                                       *                                                                              *
                                       * On entry: Y = handle                                                         *
                                       *           BHA points to a control block of the following form.               *
                                       *           Offset                                                             *
                                       *           +0   Sequence number or logical length (low byte first)            *
                                       *                                                                              *
                                       * On exit:  If C = 0 then the sequential pointer was read successfully into    *
                                       *           the control block.                                                 *
                                       *           If C = 1 then the call was unsuccessful, X = error code, BHA       *
                                       * points                                                                       *
                                       *           to a zero-terminated error message.                                *
                                       *           Y preserved                                                        *
                                       ********************************************************************************
fe/c67a: a2 30 00     ??mxd??? e @T... COP_54          ldx     #$0030
fe/c67d: 80 24        n?mxd?z? e ...#.                 bra     LFEC6A3

                                       ********************************************************************************
                                       * COP 55 - write sequential pointer                                            *
                                       *                                                                              *
                                       * Action: Writes a new value to the sequential pointer - the position within a *
                                       * file at which the next read/write operation will occur.                      *
                                       *                                                                              *
                                       * Parameters are as for COP 54 OPRSP                                           *
                                       ********************************************************************************
fe/c67f: a2 32 00     ??mxd??? e @T... COP_55          ldx     #$0032
fe/c682: 80 1f        n?mxd?z? e ...#.                 bra     LFEC6A3

                                       ********************************************************************************
                                       * COP 56 - OPRPL - read physical length                                        *
                                       *                                                                              *
                                       * Action: Reads the physical length of a file, ie the actual length stored on  *
                                       * the media.                                                                   *
                                       *                                                                              *
                                       * On entry: BHA points to a contnd block of the following form.                *
                                       *           Offset                                                             *
                                       *           +0   Pointer to name of file (low byte first)                      *
                                       *           +4   length (low byte first)                                       *
                                       * On exit:  If C = 0 then the physical length was read successfully into the   *
                                       *           control block.                                                     *
                                       *           If C = 1 then the call was unsuccessful. X = error code, BHA       *
                                       * points                                                                       *
                                       *           to a zero-teiminaied error message.                                *
                                       *           Y preserved                                                        *
                                       ********************************************************************************
fe/c684: a2 34 00     ??mxd??? e @T... COP_56          ldx     #$0034
fe/c687: 80 1a        n?mxd?z? e ...#.                 bra     LFEC6A3

                                       ********************************************************************************
                                       * COP 57 - OPRLL - read logical length                                         *
                                       * Action: Reads the logical length (extent) ot a file.                         *
                                       * On entry: Y = handle                                                         *
                                       *           BHA points to a control block of the following form.               *
                                       *           Offset                                                             *
                                       *           +0  Sequence number or length (low byte first)                     *
                                       * On exit:  If C = 0 then the logical length was read successfully into the    *
                                       *           control block.                                                     *
                                       *           If C = 1 then the call was unsuccessful, X = error code, BHA       *
                                       * points                                                                       *
                                       *           to a zero-terminated error message.                                *
                                       *           Y preserved                                                        *
                                       ********************************************************************************
fe/c689: a2 36 00     ??mxd??? e @T... COP_57          ldx     #$0036
fe/c68c: 80 15        n?mxd?z? e ...#.                 bra     LFEC6A3

                                       ********************************************************************************
                                       * COP 58 - OPWLL - write logical length                                        *
                                       *                                                                              *
                                       * Action: Writes the logical length (extent) of a file.                        *
                                       *                                                                              *
                                       * On entry: Y = handle                                                         *
                                       *           BHA points to a control block of the following form.               *
                                       *           Offset                                                             *
                                       *           +0   Sequence number or length (low byte first)                    *
                                       * On exit: If C = 0 then the logical length was written successfully.          *
                                       *          If C = 1 then the call was unsuccessful. X = error code, BHA points *
                                       *                                                                              *
                                       *          to a zero-tenninated error message.                                 *
                                       *          Y preserved                                                         *
                                       ********************************************************************************
fe/c68e: a2 38 00     ??mxd??? e @T... COP_58          ldx     #$0038
fe/c691: 80 10        n?mxd?z? e ...#.                 bra     LFEC6A3

                                       ********************************************************************************
                                       * COP 50 - OPRCH - read catalogue header and information                       *
                                       *                                                                              *
                                       * Action: Given the pathname, which may contain wildcards, this call will give *
                                       * the full directory name and information about that directory.                *
                                       *                                                                              *
                                       * On entry: BHA points to a control block of the following form.               *
                                       *           Offset                                                             *
                                       *           +0   Pointer to name of directory (low byte first)                 *
                                       *           +4   Pointer to 49 byte long buffer area (low byte first)          *
                                       *                                                                              *
                                       * On exit:  If C = 0, the 49 byte buffer area specified in the control block   *
                                       *           returns with the following information.                            *
                                       *           BHA undefined                                                      *
                                       *           Buffer contents after call:                                        *
                                       *           Offset                                                             *
                                       *           +0      0 = owner. &FF = public                                    *
                                       *           +1      Cycle number                                               *
                                       *           +2      Boot option                                                *
                                       *           +3..12  Directory name (without wildcards), left-justified padded  *
                                       *                   with spaces                                                *
                                       *           13..28  CSD disc name, same format (used to be last)               *
                                       *           29..38  CSD name, same format                                      *
                                       *           39..48  LIB name, same format                                      *
                                       *                                                                              *
                                       *           If C = 1 then directory not found, X = error code, BHA points to   *
                                       *           zero-terminated error message.                                     *
                                       *           Y preserved                                                        *
                                       *                                                                              *
                                       ********************************************************************************
fe/c693: a2 3a 00     ??mxd??? e @T... COP_59          ldx     #$003a
fe/c696: 80 05        n?mxd?z? e ...#.                 bra     LFEC69D

                                       ********************************************************************************
                                       * COP 5A - OPRFN - Read file (object) names from directory                     *
                                       *                                                                              *
                                       * Action: Given the pathname, which may contain wildcards, this call will read *
                                       * the number and names of entries in the specified directory. The information  *
                                       * is put in an area of memory whose start address is supplied. Each name is    *
                                       * terminated by rero (&00).                                                    *
                                       *                                                                              *
                                       * On entry: BHA points to a control block of the following form.               *
                                       *           Offset                                                             *
                                       *           +0   Pointer to name of directory (low byte first)                 *
                                       *           +4   Pointer to start of memory area (low byte first)              *
                                       *           +8   Type of info wanted                                           *
                                       *           +10  Number of names                                               *
                                       *           +12  Filing system work space (16 bytes)                           *
                                       *           (Initially the whole area should be zero)                          *
                                       *                                                                              *
                                       *           The type of info values are:                                       *
                                       *           0 for name only (maximum 16 bytes per name) ,                      *
                                       *           1 for short information (maximum 20 bytes per entry)               *
                                       *           2 for full information (maximum 80 bytes per entry)                *
                                       *                                                                              *
                                       *           The actual content of these results is filing system dependent     *
                                       *           The number of names is a parameter which can be set so the call    *
                                       *           will read up to that number of entries. If there are any remaining *
                                       *                                                                              *
                                       *           then the call can be used again, without disturbing the control    *
                                       *           block, to carry on from where it left off. For the first call      *
                                       *           however, the workspace should be zeroed.                           *
                                       * On exit:  If C = 0 then X = the number of names read, and the names and      *
                                       *           info are in memory separated by zeros.                             *
                                       *           If C = 1 then directory not found, X = error code, BHA points to   *
                                       *           zero-terminated error message.                                     *
                                       *           Y preserved                                                        *
                                       ********************************************************************************
fe/c698: a2 3c 00     ??mxd??? e @T... COP_5A          ldx     #$003c
fe/c69b: 80 00        n?mxd?z? e ...#.                 bra     LFEC69D

fe/c69d: 20 a1 c7     n?mxd?z? e ....> LFEC69D         jsr     LFEC7A1
fe/c6a0: 82 0e f4     ??mxd??? e ...#.                 brl     retCopXBHA

fe/c6a3: 4b           n?mxd?z? e ....> LFEC6A3         phk
fe/c6a4: 20 e9 c7     n?mxd?z? e .....                 jsr     callDevHandle
fe/c6a7: 82 07 f4     ??mxd??? e ...#.                 brl     retCopXBHA

fe/c6aa: 68           n?mxd?zC e ....> LFEC6AA         pla
fe/c6ab: 85 03        ??mxd??C e .....                 sta     DPCOP_X
fe/c6ad: ba           ??mxd??C e .....                 tsx
fe/c6ae: b7 05        ??mxd??C e ....> LFEC6AE         lda     [DPCOP_AH],y
fe/c6b0: 48           ??mxd??C e .....                 pha
fe/c6b1: 88           ??mxd??C e .....                 dey
fe/c6b2: 88           ??mxd??C e .....                 dey
fe/c6b3: 10 f9        ??mxd??C e .....                 bpl     LFEC6AE
fe/c6b5: da           N?mxd??C e .....                 phx
fe/c6b6: ba           N?mxd??C e .....                 tsx
fe/c6b7: a5 03        ??mxd??C e .....                 lda     DPCOP_X
fe/c6b9: 48           ??mxd??C e .....                 pha
fe/c6ba: 8a           ??mxd??C e .....                 txa
fe/c6bb: 5b           ??mxd??C e .....                 tcd
fe/c6bc: 60           ??mxd??C e ...#.                 rts

fe/c6bd: 7a           ??mxd??? e ....> LFEC6BD         ply
fe/c6be: fa           ??mxd??? e .....                 plx
fe/c6bf: 2b           ??mxd??? e .....                 pld
fe/c6c0: 86 03        ??mxd??? e .....                 stx     DPCOP_X
fe/c6c2: 85 05        ??mxd??? e .....                 sta     DPCOP_AH
fe/c6c4: e2 30        ??mxd??? e .....                 sep     #$30
                                                       .rwid   shortm,shortx
fe/c6c6: 8b           ??MXd??? e .....                 phb
fe/c6c7: 68           ??MXd??? e .....                 pla
fe/c6c8: 85 07        ??MXd??? e .....                 sta     DPCOP_B
fe/c6ca: b0 03        ??MXd??? e .....                 bcs     LFEC6CF
fe/c6cc: 28           ??MXd??c e .....                 plp
fe/c6cd: 18           ??MX???? e .....                 clc
fe/c6ce: 6b           ??MX???c e ...#.                 rtl

fe/c6cf: 28           ??MXd??C e ....> LFEC6CF         plp
fe/c6d0: 38           ??MX???? e .....                 sec
fe/c6d1: 6b           ??MX???C e ...#.                 rtl

                                       ********************************************************************************
                                       * COP 5C - OPREN - rename an object                                            *
                                       *                                                                              *
                                       * Action: Will attempt to rename an object (file or directory).                *
                                       *                                                                              *
                                       * On entry: BHA points to a control block of the following form.               *
                                       *           Offset                                                             *
                                       *           +0   Pointer to old filename (low byte first)                      *
                                       *           +4   Pointer to new filename (low byte first)                      *
                                       * On exit:  If C = 0 then the object has been renamed.                         *
                                       *           If C = I then object not found or not renamed. X = error code, BHA *
                                       *                                                                              *
                                       *           points to zero terminated error message.                           *
                                       *           Y preserved                                                        *
                                       ********************************************************************************
                                                       .rwid   longm,longx
fe/c6d2: 0b           ??mxd??? e @T... COP_5C          phd
fe/c6d3: 0b           ??mxd??? e .....                 phd
fe/c6d4: 0b           ??mxd??? e .....                 phd
fe/c6d5: 0b           ??mxd??? e .....                 phd
fe/c6d6: 0b           ??mxd??? e .....                 phd
fe/c6d7: ba           ??mxd??? e .....                 tsx
fe/c6d8: da           ??mxd??? e .....                 phx
fe/c6d9: 2b           ??mxd??? e .....                 pld
fe/c6da: 4b           ??mxd??? e .....                 phk
fe/c6db: 20 d8 f7     ??mxd??? e .....                 jsr     LFEF7D8
fe/c6de: 4b           ??mxd??? e .....                 phk
fe/c6df: 20 28 f8     ??mxd??? e .....                 jsr     LFEF828
fe/c6e2: b0 42        ??mxd??? e .....                 bcs     @badfilename
fe/c6e4: 48           ??mxd??c e .....                 pha
fe/c6e5: 98           ??mxd??c e .....                 tya
fe/c6e6: 29 20 00     ??mxd??c e .....                 and     #$0020
fe/c6e9: f0 3a        n?mxd??c e .....                 beq     @plaerrBadFilename
fe/c6eb: 68           n?mxd?zc e .....                 pla
fe/c6ec: 85 01        ??mxd??c e .....                 sta     DPCOP_Y
fe/c6ee: 8b           ??mxd??c e .....                 phb
fe/c6ef: 8b           ??mxd??c e .....                 phb
fe/c6f0: 7a           ??mxd??c e .....                 ply
fe/c6f1: 84 03        ??mxd??c e .....                 sty     DPCOP_X
fe/c6f3: 86 05        ??mxd??c e .....                 stx     DPCOP_AH
fe/c6f5: 4b           ??mxd??c e .....                 phk
fe/c6f6: 20 04 f8     ??mxd??c e .....                 jsr     LFEF804
fe/c6f9: 4b           ??mxd??? e .....                 phk
fe/c6fa: 20 28 f8     ??mxd??? e .....                 jsr     LFEF828
fe/c6fd: b0 27        ??mxd??? e .....                 bcs     @badfilename
fe/c6ff: 50 02        ??mxd??c e .....                 bvc     LFEC703
fe/c701: a6 05        ?Vmxd??c e .....                 ldx     DPCOP_AH
fe/c703: 48           ??mxd??c e ....> LFEC703         pha
fe/c704: 98           ??mxd??c e .....                 tya
fe/c705: 29 20 00     ??mxd??c e .....                 and     #$0020
fe/c708: f0 1b        n?mxd??c e .....                 beq     @plaerrBadFilename
fe/c70a: 68           n?mxd?zc e .....                 pla
fe/c70b: e4 05        ??mxd??c e .....                 cpx     DPCOP_AH
fe/c70d: d0 17        ??mxd??? e .....                 bne     @badfilename
fe/c70f: 85 05        ??mxd?Z? e .....                 sta     DPCOP_AH
fe/c711: 8b           ??mxd?Z? e .....                 phb
fe/c712: 8b           ??mxd?Z? e .....                 phb
fe/c713: 68           ??mxd?Z? e .....                 pla
fe/c714: 85 07        ??mxd??? e .....                 sta     DPCOP_B
fe/c716: a9 01 00     ??mxd??? e .....                 lda     #$0001
fe/c719: 02 24        n?mxd?z? e .....                 cop     COP_24_OPCVD
fe/c71b: 9b           n?mxd?z? e .....                 txy
fe/c71c: a2 40 00     ??mxd??? e .....                 ldx     #$0040
fe/c71f: 4b           n?mxd?z? e .....                 phk
fe/c720: 20 0b c8     n?mxd?z? e .....                 jsr     LFEC80B
fe/c723: 80 14        ??mxd??? e ...#.                 bra     LFEC739

fe/c725: 68           n?mxd?Zc e ....> @plaerrBadFilename pla
fe/c726: 02 26        ??mxd??? e ....> @badfilename    cop     COP_26_OPBHA
fe/c728: 42 61 64 20+            .T...                 .zstr   “Bad filename”
fe/c735: a2 01 00     ??mxd??? e .....                 ldx     #$0001
fe/c738: 38           n?mxd?z? e .....                 sec
fe/c739: 2b           ??mxd??? e ....> LFEC739         pld
fe/c73a: 2b           ??mxd??? e .....                 pld
fe/c73b: 2b           ??mxd??? e .....                 pld
fe/c73c: 2b           ??mxd??? e .....                 pld
fe/c73d: 2b           ??mxd??? e .....                 pld
fe/c73e: 82 70 f3     ??mxd??? e ...#.                 brl     retCopXBHA

                                       ********************************************************************************
                                       * COP 5B - OPDEL - delete anamed object                                        *
                                       *                                                                              *
                                       * Action: This call will attempt to delete a named object (ie a file or a      *
                                       * directory) from a directory.                                                 *
                                       *                                                                              *
                                       * On entry: BHA points to the object name.                                     *
                                       * On exit: If C = 0 then the object was deleted.                               *
                                       *          If C = 1 then object not found or not deleted, X = error code.      *
                                       *          BHA points to zero terminated error message.                        *
                                       *          Y preserved                                                         *
                                       ********************************************************************************
fe/c741: 4b           ??mxd??? e @T... COP_5B          phk
fe/c742: 20 d8 f7     ??mxd??? e .....                 jsr     LFEF7D8
fe/c745: 4b           ??mxd??? e .....                 phk
fe/c746: 20 28 f8     ??mxd??? e .....                 jsr     LFEF828
fe/c749: b0 13        ??mxd??? e .....                 bcs     LFEC75E
fe/c74b: 48           ??mxd??c e .....                 pha
fe/c74c: 98           ??mxd??c e .....                 tya
fe/c74d: 29 20 00     ??mxd??c e .....                 and     #$0020
fe/c750: f0 0b        n?mxd??c e .....                 beq     LFEC75D
fe/c752: 68           n?mxd?zc e .....                 pla
fe/c753: 9b           ??mxd??c e .....                 txy
fe/c754: a2 3e 00     ??mxd??c e .....                 ldx     #$003e
fe/c757: 4b           n?mxd?zc e .....                 phk
fe/c758: 20 0b c8     n?mxd?zc e .....                 jsr     LFEC80B
fe/c75b: 80 04        ??mxd??? e ...#.                 bra     LFEC761

fe/c75d: 68           n?mxd?Zc e ....> LFEC75D         pla
fe/c75e: 20 87 c8     ??mxd??? e ....> LFEC75E         jsr     cop26BadNameX1
fe/c761: 82 4d f3     ??mxd??? e ...#> LFEC761         brl     retCopXBHA

fe/c764: 4b           ??mxd??? e ....> LFEC764         phk
fe/c765: 20 d8 f7     ??mxd??? e .....                 jsr     LFEF7D8
fe/c768: 4b           ??mxd??? e .....                 phk
fe/c769: 20 28 f8     ??mxd??? e .....                 jsr     LFEF828
fe/c76c: 90 12        ??mxd??? e .....                 bcc     LFEC780
fe/c76e: 02 26        ??mxd??C e .....                 cop     COP_26_OPBHA
fe/c770: 42 61 64 20+            .T...                 .zstr   “Bad prefix”
fe/c77b: a2 01 00     ??mxd??C e .....                 ldx     #$0001
fe/c77e: 38           n?mxd?zC e .....                 sec
fe/c77f: 60           n?mxd?zC e ...#.                 rts

fe/c780: 9b           ??mxd??c e ....> LFEC780         txy
fe/c781: a2 42 00     ??mxd??c e .....                 ldx     #$0042
fe/c784: 4b           n?mxd?zc e .....                 phk
fe/c785: 20 0b c8     n?mxd?zc e .....                 jsr     LFEC80B
fe/c788: 90 16        ??mxd??? e .....                 bcc     LFEC7A0
fe/c78a: 48           ??mxd??C e .....                 pha
fe/c78b: 8a           ??mxd??C e .....                 txa
fe/c78c: 4a           ??mxd??C e .....                 lsr     A
fe/c78d: 68           n?mxd??? e .....                 pla
fe/c78e: b0 10        ??mxd??? e .....                 bcs     LFEC7A0
fe/c790: e8           ??mxd??c e .....                 inx
fe/c791: 02 26        ??mxd??c e .....                 cop     COP_26_OPBHA
fe/c793: 42 61 64 20+            .T...                 .zstr   “Bad command”
fe/c79f: 38           ??mxd??c e .....                 sec
fe/c7a0: 60           ??mxd??? e ...#> LFEC7A0         rts

fe/c7a1: a0 01 00     n?mxd?z? e ....> LFEC7A1         ldy     #$0001
fe/c7a4: b7 05        n?mxd?z? e .....                 lda     [DPCOP_AH],y
fe/c7a6: 48           ??mxd??? e .....                 pha
fe/c7a7: ab           ??mxd??? e .....                 plb
fe/c7a8: ab           ??mxd??? e .....                 plb
fe/c7a9: a0 00 00     ??mxd??? e .....                 ldy     #$0000
fe/c7ac: b7 05        n?mxd?Z? e .....                 lda     [DPCOP_AH],y
fe/c7ae: 8b           ??mxd??? e .....                 phb
fe/c7af: 8b           ??mxd??? e .....                 phb
fe/c7b0: 48           ??mxd??? e .....                 pha
fe/c7b1: da           ??mxd??? e .....                 phx
fe/c7b2: 20 e4 c7     ??mxd??? e .....                 jsr     LFEC7E4
fe/c7b5: 9b           ??mxd??? e .....                 txy
fe/c7b6: fa           ??mxd??? e .....                 plx
fe/c7b7: b0 26        ??mxd??? e .....                 bcs     LFEC7DF
fe/c7b9: 5a           ??mxd??c e .....                 phy
fe/c7ba: a0 00 00     ??mxd??c e .....                 ldy     #$0000
fe/c7bd: 97 05        n?mxd?Zc e .....                 sta     [DPCOP_AH],y
fe/c7bf: a0 02 00     n?mxd?Zc e .....                 ldy     #$0002
fe/c7c2: 8b           n?mxd?zc e .....                 phb
fe/c7c3: 8b           n?mxd?zc e .....                 phb
fe/c7c4: 68           n?mxd?zc e .....                 pla
fe/c7c5: 97 05        ??mxd??c e .....                 sta     [DPCOP_AH],y
fe/c7c7: 7a           ??mxd??c e .....                 ply
fe/c7c8: d4 06        ??mxd??c e .....                 pei     (DPCOP_AH+1)
fe/c7ca: ab           ??mxd??c e .....                 plb
fe/c7cb: ab           ??mxd??c e .....                 plb
fe/c7cc: a5 05        ??mxd??c e .....                 lda     DPCOP_AH
fe/c7ce: 4b           ??mxd??c e .....                 phk
fe/c7cf: 20 0b c8     ??mxd??c e .....                 jsr     LFEC80B
fe/c7d2: a8           ??mxd??? e .....                 tay
fe/c7d3: 68           ??mxd??? e .....                 pla
fe/c7d4: 87 05        ??mxd??? e .....                 sta     [DPCOP_AH]
fe/c7d6: 68           ??mxd??? e .....                 pla
fe/c7d7: 5a           ??mxd??? e .....                 phy
fe/c7d8: a0 02 00     ??mxd??? e .....                 ldy     #$0002
fe/c7db: 97 05        n?mxd?z? e .....                 sta     [DPCOP_AH],y
fe/c7dd: 68           n?mxd?z? e .....                 pla
fe/c7de: 60           ??mxd??? e ...#.                 rts

fe/c7df: 68           ??mxd??C e ....> LFEC7DF         pla
fe/c7e0: 68           ??mxd??C e .....                 pla
fe/c7e1: 82 a3 00     ??mxd??C e ...#.                 brl     cop26BadNameX1

fe/c7e4: 4b           ??mxd??? e ....> LFEC7E4         phk
fe/c7e5: 20 28 f8     ??mxd??? e .....                 jsr     LFEF828
fe/c7e8: 60           ??mxd??? e ...#.                 rts

fe/c7e9: 20 28 c8     ??mxd??? e ....> callDevHandle   jsr     LFEC828
fe/c7ec: b0 1c        ??mxd??? e .....                 bcs     LFEC80A
fe/c7ee: 0b           ??mxd??c e .....                 phd
fe/c7ef: 8b           ??mxd??c e .....                 phb
fe/c7f0: 8b           ??mxd??c e .....                 phb
fe/c7f1: 48           ??mxd??c e .....                 pha
fe/c7f2: 4b           ??mxd??c e .....                 phk
fe/c7f3: 62 10 00     ??mxd??c e .....                 per     LFEC806
fe/c7f6: f4 00 00     ??mxd??c e .....                 pea     $0000
fe/c7f9: ab           ??mxd??c e .....                 plb
fe/c7fa: b9 03 00     ??mxd??c e .....                 lda     $0003,y
fe/c7fd: 3a           ??mxd??c e .....                 dec     A
fe/c7fe: 48           ??mxd??c e .....                 pha
fe/c7ff: a3 09        ??mxd??c e .....                 lda     $09,S
fe/c801: 48           ??mxd??c e .....                 pha
fe/c802: ab           ??mxd??c e .....                 plb
fe/c803: ab           ??mxd??c e .....                 plb
fe/c804: a3 07        ??mxd??c e .....                 lda     $07,S
fe/c806: 6b           ??mxd??c e ...#. LFEC806         rtl

fe/c807: 2b                      .....                 .dd1    $2b
fe/c808: 2b                      .....                 .dd1    $2b
fe/c809: 2b                      .....                 .dd1    $2b

fe/c80a: 6b           ??mxd??C e ...#> LFEC80A         rtl

fe/c80b: 0b           ??mxd??? e ....> LFEC80B         phd
fe/c80c: 8b           ??mxd??? e .....                 phb
fe/c80d: 8b           ??mxd??? e .....                 phb
fe/c80e: 48           ??mxd??? e .....                 pha
fe/c80f: 4b           ??mxd??? e .....                 phk
fe/c810: 62 10 00     ??mxd??? e .....                 per     LFEC823
fe/c813: f4 00 00     ??mxd??? e .....                 pea     $0000
fe/c816: ab           ??mxd??? e .....                 plb
fe/c817: 88           ??mxd??? e .....                 dey
fe/c818: 5a           ??mxd??? e .....                 phy
fe/c819: a3 09        ??mxd??? e .....                 lda     $09,S
fe/c81b: 48           ??mxd??? e .....                 pha
fe/c81c: ab           ??mxd??? e .....                 plb
fe/c81d: ab           ??mxd??? e .....                 plb
fe/c81e: a3 07        ??mxd??? e .....                 lda     $07,S
fe/c820: a0 00 00     ??mxd??? e .....                 ldy     #$0000
fe/c823: 6b           n?mxd?Z? e ...#. LFEC823         rtl

fe/c824: 2b                      .....                 .dd1    $2b
fe/c825: 2b                      .....                 .dd1    $2b
fe/c826: 2b                      .....                 .dd1    $2b
fe/c827: 6b                      .....                 .dd1    $6b

fe/c828: 48           ??mxd??? e ....> LFEC828         pha
fe/c829: da           ??mxd??? e .....                 phx
fe/c82a: c0 00 01     ??mxd??? e .....                 cpy     #$0100
fe/c82d: 90 13        ??mxd??? e .....                 bcc     LFEC842
fe/c82f: bb           ??mxd??C e .....                 tyx
fe/c830: bf 0b 00 00  ??mxd??C e .....                 ldal    f:DPCOP_PC,x
fe/c834: 29 ff 00     ??mxd??C e .....                 and     #$00ff
fe/c837: 49 10 00     n?mxd??C e .....                 eor     #$0010
fe/c83a: c9 01 00     ??mxd??C e .....                 cmp     #$0001
fe/c83d: b0 03        ??mxd??? e .....                 bcs     LFEC842
fe/c83f: fa           ??mxd??c e .....                 plx
fe/c840: 68           ??mxd??c e .....                 pla
fe/c841: 60           ??mxd??c e ...#.                 rts

fe/c842: fa           ??mxd??? e ....> LFEC842         plx
fe/c843: fa           ??mxd??? e .....                 plx
fe/c844: 02 26        ??mxd??? e .....                 cop     COP_26_OPBHA
fe/c846: 4e 6f 74 20+            .T...                 .zstr   “Not a handle”
fe/c853: a2 01 00     ??mxd??? e .....                 ldx     #$0001
fe/c856: 38           n?mxd?z? e .....                 sec
fe/c857: 60           n?mxd?zC e ...#.                 rts

fe/c858: 48           ??mxd??? e @T...                 pha
fe/c859: eb           ??mxd??? e .....                 xba
fe/c85a: 62 02 00     ??mxd??? e .....                 per     LFEC860-1
fe/c85d: 82 0a 00     ??mxd??? e ...#.                 brl     LFEC86A

fe/c860: a3 01        ??mxd??? e @T... LFEC860         lda     $01,S
fe/c862: 62 02 00     ??mxd??? e .....                 per     LFEC868-1
fe/c865: 82 02 00     ??mxd??? e ...#.                 brl     LFEC86A

fe/c868: 68           ??mxd??? e @T... LFEC868         pla
fe/c869: 60           ??mxd??? e ...#.                 rts

fe/c86a: 29 ff 00     ??mxd??? e ....> LFEC86A         and     #$00ff
fe/c86d: 48           n?mxd??? e .....                 pha
fe/c86e: 4a           n?mxd??? e .....                 lsr     A
fe/c86f: 4a           n?mxd??? e .....                 lsr     A
fe/c870: 4a           n?mxd??? e .....                 lsr     A
fe/c871: 4a           n?mxd??? e .....                 lsr     A
fe/c872: 62 02 00     n?mxd??? e .....                 per     LFEC878-1
fe/c875: 82 01 00     n?mxd??? e ...#.                 brl     LFEC879

fe/c878: 68           ??mxd??? e @T... LFEC878         pla
fe/c879: 29 0f 00     ??mxd??? e ....> LFEC879         and     #$000f
fe/c87c: f8           n?mxd??? e .....                 sed
fe/c87d: c9 0a 00     n?mxD??? e .....                 cmp     #$000a
fe/c880: 69 30 00     ??mxD??? e .....                 adc     #$0030
fe/c883: d8           ??mxD??? e .....                 cld
fe/c884: 02 00        ??mxd??? e .....                 cop     COP_00_OPWRC
fe/c886: 60           ??mxd??? e ...#.                 rts

fe/c887: 02 26        ??mxd??? e ....> cop26BadNameX1  cop     COP_26_OPBHA
fe/c889: 42 61 64 20+            .T...                 .zstr   “Bad name”
fe/c892: 80 1c        ??mxd??? e ...#.                 bra     retX1

fe/c894: 02 26        ??mxd??C e .T..> cop26BadModuleX1 cop    COP_26_OPBHA
fe/c896: 42 61 64 20+            .T...                 .zstr   “Bad module”
fe/c8a1: 80 0d        ??mxd??C e ...#.                 bra     retX1

fe/c8a3: 02 26        ??mxd??C e .T..> cop26BadHandleX1 cop    COP_26_OPBHA
fe/c8a5: 42 61 64 20+            .T...                 .zstr   “Bad handle”
fe/c8b0: a2 01 00     ??mxd??? e ....> retX1           ldx     #$0001
fe/c8b3: 38           n?mxd?z? e .....                 sec
fe/c8b4: 60           n?mxd?zC e ...#.                 rts

                                       ********************************************************************************
                                       * COP 3C - OPDTD - QRY                                                         *
                                       ********************************************************************************
fe/c8b5: a6 03        ??mxd??? e @T... COP_3C          ldx     DPCOP_X
fe/c8b7: 0b           ??mxd??? e .....                 phd
fe/c8b8: d4 08        ??mxd??? e .....                 pei     (DPCOP_DP)
fe/c8ba: 2b           ??mxd??? e .....                 pld
fe/c8bb: 62 02 00     ??mxd??? e .....                 per     LFEC8C1-1
fe/c8be: 82 10 00     ??mxd??? e ...#.                 brl     LFEC8D1

fe/c8c1: 2b           ??mxd??? e @T... LFEC8C1         pld
fe/c8c2: 85 05        ??mxd??? e .....                 sta     DPCOP_AH
fe/c8c4: 86 03        ??mxd??? e .....                 stx     DPCOP_X
fe/c8c6: 84 01        ??mxd??? e .....                 sty     DPCOP_Y
fe/c8c8: e2 30        ??mxd??? e .....                 sep     #$30
                                                       .rwid   shortm,shortx
fe/c8ca: 8b           ??MXd??? e .....                 phb
fe/c8cb: 68           ??MXd??? e .....                 pla
fe/c8cc: 85 07        ??MXd??? e .....                 sta     DPCOP_B
fe/c8ce: c2 30        ??MXd??? e .....                 rep     #$30
                                                       .rwid   longm,longx
fe/c8d0: 6b           ??mxd??? e ...#.                 rtl

fe/c8d1: 08           ??mxd??? e ....> LFEC8D1         php
fe/c8d2: e2 30        ??mxd??? e .....                 sep     #$30
                                                       .rwid   shortm,shortx
fe/c8d4: e0 00        ??MXd??? e .....                 cpx     #$00
fe/c8d6: d0 0c        ??MXd??? e .....                 bne     LFEC8E4
fe/c8d8: 85 88        ??MXd?Z? e .....                 sta     $88
fe/c8da: 38           ??MXd?Z? e .....                 sec
fe/c8db: 66 01        ??MXd?ZC e .....                 ror     DPCOP_Y
fe/c8dd: 64 02        N?MXd?z? e .....                 stz     DPCOP_Y+1
fe/c8df: 64 00        N?MXd?z? e .....                 stz     $00
fe/c8e1: 82 e7 01     N?MXd?z? e ...#.                 brl     LFECACB

fe/c8e4: e0 02        ??MXd?z? e ....> LFEC8E4         cpx     #$02
fe/c8e6: f0 1b        ??MXd??? e .....                 beq     LFEC903
fe/c8e8: e0 04        ??MXd?z? e .....                 cpx     #$04
fe/c8ea: d0 0b        ??MXd??? e .....                 bne     LFEC8F7
fe/c8ec: 62 02 00     ??MXd?Z? e .....                 per     LFEC8EF+2
fe/c8ef: 82 80 02     ??MXd?Z? e ...#. LFEC8EF         brl     LFECB72

fe/c8f2: b0                      .....                 .dd1    $b0
fe/c8f3: 23                      .....                 .dd1    $23
fe/c8f4: 82                      .....                 .dd1    $82
fe/c8f5: d4                      .....                 .dd1    $d4
fe/c8f6: 01                      .....                 .dd1    $01

fe/c8f7: e0 06        ??MXd?z? e ....> LFEC8F7         cpx     #$06
fe/c8f9: d0 1c        ??MXd??? e .....                 bne     LFEC917
fe/c8fb: 62 02 00     ??MXd?Z? e .....                 per     LFEC8FE+2
fe/c8fe: 82 83 02     ??MXd?Z? e ...#. LFEC8FE         brl     LFECB84

fe/c901: 80                      .....                 .dd1    $80
fe/c902: ef                      .....                 .dd1    $ef

fe/c903: 85 03        ??MXd?Z? e ....> LFEC903         sta     DPCOP_X
fe/c905: eb           ??MXd?Z? e .....                 xba
fe/c906: 85 04        ??MXd??? e .....                 sta     DPCOP_X+1
fe/c908: 8b           ??MXd??? e .....                 phb
fe/c909: 68           ??MXd??? e .....                 pla
fe/c90a: 85 05        ??MXd??? e .....                 sta     DPCOP_AH
fe/c90c: 98           ??MXd??? e .....                 tya
fe/c90d: a6 00        ??MXd??? e .....                 ldx     $00
fe/c90f: 10 09        ??MXd??? e .....                 bpl     LFEC91A
fe/c911: c9 20        N?MXd??? e ....> LFEC911         cmp     #$20
fe/c913: b0 02        ??MXd??? e .....                 bcs     LFEC917
fe/c915: 64 00        ??MXd??c e .....                 stz     $00
fe/c917: 28           ????d??? e ....> LFEC917         plp
                                                       .rwid   longm,longx
fe/c918: 38           ??mxd??? e .....                 sec
fe/c919: 60           ??mxd??C e ...#.                 rts

                                                       .rwid   shortm,shortx
fe/c91a: 95 10        n?MXd??? e ....> LFEC91A         sta     $10,x
fe/c91c: e0 01        n?MXd??? e .....                 cpx     #$01
fe/c91e: 90 55        ??MXd??? e .....                 bcc     LFEC975
fe/c920: d0 37        ??MXd??C e .....                 bne     LFEC959
fe/c922: c2 10        ??MXd?ZC e .....                 rep     #$10
                                                       .rwid   longx
fe/c924: a0 00 00     ??Mxd?ZC e .....                 ldy     #$0000
fe/c927: e2 20        ???xd??? e ....> LFEC927         sep     #$20
fe/c929: b7 03        ??Mxd??? e .....                 lda     [DPCOP_X],y
fe/c92b: f0 56        ??Mxd??? e .....                 beq     LFEC983
fe/c92d: c5 10        ??Mxd?z? e .....                 cmp     $10
fe/c92f: f0 0a        ??Mxd??? e .....                 beq     LFEC93B
fe/c931: c2 30        ??Mxd?z? e .....                 rep     #$30
                                                       .rwid   longm
fe/c933: 98           ??mxd?z? e .....                 tya
fe/c934: 18           ??mxd??? e .....                 clc
fe/c935: 69 0a 00     ??mxd??c e .....                 adc     #$000a
fe/c938: a8           ??mxd??? e .....                 tay
fe/c939: 80 ec        ??mxd??? e ...#.                 bra     LFEC927

                                                       .rwid   shortm
fe/c93b: a2 00 00     ??Mxd?Z? e ....> LFEC93B         ldx     #$0000
fe/c93e: c8           ??Mxd??? e ....> LFEC93E         iny
fe/c93f: b7 03        ??Mxd??? e .....                 lda     [DPCOP_X],y
fe/c941: 95 07        ??Mxd??? e .....                 sta     DPCOP_B,x
fe/c943: e8           ??Mxd??? e .....                 inx
fe/c944: e0 09 00     ??Mxd??? e .....                 cpx     #$0009
fe/c947: 90 f5        ??Mxd??? e .....                 bcc     LFEC93E
fe/c949: e2 30        ??Mxd??C e .....                 sep     #$30
                                                       .rwid   shortx
fe/c94b: a5 88        ??MXd??C e .....                 lda     $88
fe/c94d: f0 0a        ??MXd??C e .....                 beq     LFEC959
fe/c94f: a5 07        ??MXd?zC e .....                 lda     DPCOP_B
fe/c951: c9 86        ??MXd??C e .....                 cmp     #$86
fe/c953: f0 04        ??MXd??? e .....                 beq     LFEC959
fe/c955: c9 87        ??MXd?z? e .....                 cmp     #$87
fe/c957: d0 2a        ??MXd??? e .....                 bne     LFEC983
fe/c959: a6 00        ??MXd??? e ....> LFEC959         ldx     $00
fe/c95b: b5 10        ??MXd??? e .....                 lda     $10,x
fe/c95d: 24 07        ??MXd??? e .....                 bit     DPCOP_B
fe/c95f: 30 14        ??MXd??? e .....                 bmi     LFEC975
fe/c961: c9 3f        n?MXd??? e .....                 cmp     #$3f
fe/c963: f0 25        ??MXd??? e .....                 beq     LFEC98A
fe/c965: c9 25        ??MXd?z? e .....                 cmp     #$25
fe/c967: f0 21        ??MXd??? e .....                 beq     LFEC98A
fe/c969: c9 21        ??MXd?z? e .....                 cmp     #$21
fe/c96b: f0 1d        ??MXd??? e .....                 beq     LFEC98A
fe/c96d: c9 5b        ??MXd?z? e .....                 cmp     #$5b
fe/c96f: b0 04        ??MXd??? e .....                 bcs     LFEC975
fe/c971: c9 40        ??MXd??c e .....                 cmp     #$40
fe/c973: b0 15        ??MXd??? e .....                 bcs     LFEC98A
fe/c975: c9 20        ??MXd??? e ....> LFEC975         cmp     #$20
fe/c977: 90 13        ??MXd??? e .....                 bcc     LFEC98C
fe/c979: e6 00        ??MXd??C e .....                 inc     $00
fe/c97b: a5 00        ??MXd??C e .....                 lda     $00
fe/c97d: c9 20        ??MXd??C e .....                 cmp     #$20
fe/c97f: b5 10        ??MXd??? e .....                 lda     $10,x
fe/c981: 90 63        ??MXd??? e .....                 bcc     LFEC9E6
fe/c983: e2 30        ??M?d??? e ....> LFEC983         sep     #$30
fe/c985: 38           ??MXd??? e .....                 sec
fe/c986: 66 00        ??MXd??C e .....                 ror     $00
fe/c988: 80 87        N?MXd?z? e ...#.                 bra     LFEC911

fe/c98a: 85 10        ??MXd??? e ....> LFEC98A         sta     $10
fe/c98c: a9 00        ??MXd??? e ....> LFEC98C         lda     #$00
fe/c98e: 69 00        n?MXd?Z? e .....                 adc     #$00
fe/c990: 85 00        ??MXd??? e .....                 sta     $00
fe/c992: 74 10        ??MXd??? e .....                 stz     $10,x
fe/c994: 8a           ??MXd??? e .....                 txa
fe/c995: f0 4f        ??MXd??? e .....                 beq     LFEC9E6
fe/c997: 64 02        ??MXd?z? e .....                 stz     DPCOP_Y+1
fe/c999: a5 07        ??MXd?z? e .....                 lda     DPCOP_B
fe/c99b: c9 00        ??MXd??? e .....                 cmp     #$00
fe/c99d: d0 03        ??MXd??? e .....                 bne     LFEC9A2
fe/c99f: 82 25 01     ??MXd?Z? e ...#.                 brl     LFECAC7

fe/c9a2: c9 01        ??MXd?z? e ....> LFEC9A2         cmp     #$01
fe/c9a4: d0 03        ??MXd??? e .....                 bne     LFEC9A9
fe/c9a6: 82 ce 00     ??MXd?Z? e ...#.                 brl     LFECA77

fe/c9a9: c9 02        ??MXd?z? e ....> LFEC9A9         cmp     #$02
fe/c9ab: f0 64        ??MXd??? e .....                 beq     LFECA11
fe/c9ad: c9 83        ??MXd?z? e .....                 cmp     #$83
fe/c9af: f0 38        ??MXd??? e .....                 beq     LFEC9E9
fe/c9b1: c9 90        ??MXd?z? e .....                 cmp     #$90
fe/c9b3: d0 03        ??MXd??? e .....                 bne     LFEC9B8
fe/c9b5: 82 16 01     ??MXd?Z? e ...#.                 brl     LFECACE

fe/c9b8: c9 85        ??MXd?z? e ....> LFEC9B8         cmp     #$85
fe/c9ba: d0 03        ??MXd??? e .....                 bne     LFEC9BF
fe/c9bc: 82 a4 00     ??MXd?Z? e ...#.                 brl     LFECA63

fe/c9bf: c9 86        ??MXd?z? e ....> LFEC9BF         cmp     #$86
fe/c9c1: d0 03        ??MXd??? e .....                 bne     LFEC9C6
fe/c9c3: 82 68 01     ??MXd?Z? e ...#.                 brl     LFECB2E

fe/c9c6: c9 87        ??MXd?z? e ....> LFEC9C6         cmp     #$87
fe/c9c8: d0 03        ??MXd??? e .....                 bne     LFEC9CD
fe/c9ca: 82 65 01     ??MXd?Z? e ...#.                 brl     LFECB32

fe/c9cd: 02 0f        ??MXd?z? e ....> LFEC9CD         cop     COP_0F_OPERR
fe/c9cf: 42 61 64 20+            .T...                 .zstr   “Bad DTD parameter type”
fe/c9e6: 82 2e ff     ????d??? e ...#> LFEC9E6         brl     LFEC917

fe/c9e9: c2 30        ??MXd?Z? e ....> LFEC9E9         rep     #$30
                                                       .rwid   longm,longx
fe/c9eb: 62 02 00     ??mxd?Z? e .....                 per     LFEC9F1-1
fe/c9ee: 82 ff 00     ??mxd?Z? e ...#.                 brl     LFECAF0

fe/c9f1: a2 80 00     ??mxd??? e @T... LFEC9F1         ldx     #$0080
fe/c9f4: a0 06 00     n?mxd?z? e .....                 ldy     #$0006
fe/c9f7: 02 18        n?mxd?z? e .....                 cop     COP_18_OPRLH
fe/c9f9: b0 eb        n?mxd?z? e .....                 bcs     LFEC9E6
fe/c9fb: a6 0e        n?mxd?zc e .....                 ldx     $0e
fe/c9fd: f0 08        ??mxd??c e .....                 beq     LFECA07
fe/c9ff: a5 81        ??mxd?zc e .....                 lda     $81
fe/ca01: 95 01        ??mxd??c e .....                 sta     DPCOP_Y,x
fe/ca03: a5 80        ??mxd??c e .....                 lda     $80
fe/ca05: 95 00        ??mxd??c e .....                 sta     $00,x
fe/ca07: a5 81        ??mxd??c e ....> LFECA07         lda     $81
fe/ca09: 48           ??mxd??c e .....                 pha
fe/ca0a: ab           ??mxd??c e .....                 plb
fe/ca0b: ab           ??mxd??c e .....                 plb
fe/ca0c: a5 80        ??mxd??c e .....                 lda     $80
fe/ca0e: 82 b6 00     ??mxd??c e ...#.                 brl     LFECAC7

                                                       .rwid   shortm,shortx
fe/ca11: c2 30        ??MXd?Z? e ....> LFECA11         rep     #$30
                                                       .rwid   longm,longx
fe/ca13: 64 80        ??mxd?Z? e .....                 stz     $80
fe/ca15: a2 01 00     ??mxd?Z? e .....                 ldx     #$0001
fe/ca18: 86 82        n?mxd?z? e .....                 stx     $82
fe/ca1a: b5 10        ??mxd??? e ....> LFECA1A         lda     $10,x
fe/ca1c: 29 ff 00     ??mxd??? e .....                 and     #$00ff
fe/ca1f: e8           n?mxd??? e .....                 inx
fe/ca20: c9 20 00     ??mxd??? e .....                 cmp     #$0020
fe/ca23: f0 f5        ??mxd??? e .....                 beq     LFECA1A
fe/ca25: ca           ??mxd?z? e .....                 dex
fe/ca26: b5 10        ??mxd??? e ....> LFECA26         lda     $10,x
fe/ca28: 29 ff 00     ??mxd??? e .....                 and     #$00ff
fe/ca2b: f0 28        n?mxd??? e .....                 beq     LFECA55
fe/ca2d: 38           n?mxd?z? e .....                 sec
fe/ca2e: e9 30 00     n?mxd?zC e .....                 sbc     #$0030
fe/ca31: c9 0a 00     ??mxd??? e .....                 cmp     #$000a
fe/ca34: b0 b0        ??mxd??? e .....                 bcs     LFEC9E6
fe/ca36: a4 80        ??mxd??c e .....                 ldy     $80
fe/ca38: c0 99 19     ??mxd??c e .....                 cpy     #$1999
fe/ca3b: 90 07        ??mxd??? e .....                 bcc     LFECA44
fe/ca3d: d0 a7        ??mxd??C e .....                 bne     LFEC9E6
fe/ca3f: c9 06 00     ??mxd?ZC e .....                 cmp     #$0006
fe/ca42: b0 a2        ??mxd??? e .....                 bcs     LFEC9E6
fe/ca44: 48           ??mxd??c e ....> LFECA44         pha
fe/ca45: 98           ??mxd??c e .....                 tya
fe/ca46: 0a           ??mxd??c e .....                 asl     A
fe/ca47: 0a           ??mxd??? e .....                 asl     A
fe/ca48: 65 80        ??mxd??? e .....                 adc     $80
fe/ca4a: 0a           ??mxd??? e .....                 asl     A
fe/ca4b: 63 01        ??mxd??? e .....                 adc     $01,S
fe/ca4d: 85 80        ??mxd??? e .....                 sta     $80
fe/ca4f: 68           ??mxd??? e .....                 pla
fe/ca50: e8           ??mxd??? e .....                 inx
fe/ca51: 64 82        ??mxd??? e .....                 stz     $82
fe/ca53: 80 d1        ??mxd??? e ...#.                 bra     LFECA26

fe/ca55: a5 82        n?mxd?Z? e ....> LFECA55         lda     $82
fe/ca57: d0 8d        ??mxd??? e .....                 bne     LFEC9E6
fe/ca59: a5 80        ??mxd?Z? e .....                 lda     $80
fe/ca5b: a6 0e        ??mxd??? e .....                 ldx     $0e
fe/ca5d: f0 02        ??mxd??? e .....                 beq     LFECA61
fe/ca5f: 95 00        ??mxd?z? e .....                 sta     $00,x
fe/ca61: 80 64        ??mxd??? e ...#> LFECA61         bra     LFECAC7

                                                       .rwid   shortm,shortx
fe/ca63: c2 30        ??MXd?Z? e ....> LFECA63         rep     #$30
                                                       .rwid   longm,longx
fe/ca65: b8           ??mxd?Z? e .....                 clv
fe/ca66: 62 02 00     ?vmxd?Z? e .....                 per     LFECA6C-1
fe/ca69: 82 90 00     ?vmxd?Z? e ...#.                 brl     LFECAFC

                                                       .rwid   shortm,shortx
fe/ca6c: b0 09        ??MXd??? e @T... LFECA6C         bcs     LFECA77
fe/ca6e: 62 02 00     ??MXd??c e .....                 per     LFECA74-1
fe/ca71: 82 1f 01     ??MXd??c e ...#.                 brl     LFECB93

fe/ca74: 82 a0 fe     ??MXd??? e @T.#. LFECA74         brl     LFEC917

fe/ca77: e2 30        ??MXd??? e ....> LFECA77         sep     #$30
fe/ca79: 18           ??MXd??? e .....                 clc
fe/ca7a: a5 03        ??MXd??c e .....                 lda     DPCOP_X
fe/ca7c: 65 0a        ??MXd??c e .....                 adc     DPCOP_P
fe/ca7e: 85 80        ??MXd??? e .....                 sta     $80
fe/ca80: a5 04        ??MXd??? e .....                 lda     DPCOP_X+1
fe/ca82: 65 0b        ??MXd??? e .....                 adc     DPCOP_PC
fe/ca84: 85 81        ??MXd??? e .....                 sta     $81
fe/ca86: a5 05        ??MXd??? e .....                 lda     DPCOP_AH
fe/ca88: 85 82        ??MXd??? e .....                 sta     $82
fe/ca8a: a7 80        ??MXd??? e .....                 lda     [$80]
fe/ca8c: a8           ??MXd??? e .....                 tay
fe/ca8d: e6 80        ??MXd??? e .....                 inc     $80
fe/ca8f: d0 06        ??MXd??? e .....                 bne     LFECA97
fe/ca91: e6 81        ??MXd?Z? e .....                 inc     $81
fe/ca93: d0 02        ??MXd??? e .....                 bne     LFECA97
fe/ca95: e6 82        ??MXd?Z? e .....                 inc     $82
fe/ca97: 0b           ??MXd??? e ....> LFECA97         phd
fe/ca98: 18           ??MXd??? e .....                 clc
fe/ca99: 68           ??MXd??c e .....                 pla
fe/ca9a: 69 11        ??MXd??c e .....                 adc     #$11
fe/ca9c: 85 84        ??MXd??? e .....                 sta     $84
fe/ca9e: 68           ??MXd??? e .....                 pla
fe/ca9f: 69 00        ??MXd??? e .....                 adc     #$00
fe/caa1: 85 85        ??MXd??? e .....                 sta     $85
fe/caa3: 64 86        ??MXd??? e .....                 stz     $86
fe/caa5: a2 80        ??MXd??? e .....                 ldx     #$80
fe/caa7: 02 36        N?MXd?z? e .....                 cop     COP_36_OPNLU
fe/caa9: 90 03        N?MXd?z? e .....                 bcc     LFECAAE
fe/caab: 82 38 ff     N?MXd?zC e ...#.                 brl     LFEC9E6

fe/caae: a5 07        N?MXd?zc e ....> LFECAAE         lda     DPCOP_B
fe/cab0: c9 85        ??MXd??c e .....                 cmp     #$85
fe/cab2: d0 08        ??MXd??? e .....                 bne     LFECABC
fe/cab4: a5 11        ??MXd?Z? e .....                 lda     $11
fe/cab6: 62 02 00     ??MXd??? e .....                 per     LFECABC-1
fe/cab9: 82 c8 00     ??MXd??? e ...#.                 brl     LFECB84

fe/cabc: 98           ??MXd?z? e ....> LFECABC         tya
fe/cabd: c2 10        ??MXd??? e .....                 rep     #$10
                                                       .rwid   longx
fe/cabf: a6 0e        ??Mxd??? e .....                 ldx     $0e
fe/cac1: f0 02        ??Mxd??? e .....                 beq     LFECAC5
fe/cac3: 95 00        ??Mxd?z? e .....                 sta     $00,x
fe/cac5: e2 10        ??Mxd??? e ....> LFECAC5         sep     #$10
                                                       .rwid   shortx
fe/cac7: c2 30        ????d??? e ....> LFECAC7         rep     #$30
                                                       .rwid   longm,longx
fe/cac9: a6 08        ??mxd??? e .....                 ldx     DPCOP_DP
                                                       .rwid   shortm,shortx
fe/cacb: 28           ????d??? e ....> LFECACB         plp
fe/cacc: 18           ???????? e .....                 clc
fe/cacd: 60           ???????c e ...#.                 rts

fe/cace: e2 30        ??MXd?Z? e ....> LFECACE         sep     #$30
fe/cad0: c2 10        ??MXd?Z? e .....                 rep     #$10
                                                       .rwid   longx
fe/cad2: a4 0e        ??Mxd?Z? e .....                 ldy     $0e
fe/cad4: f0 10        ??Mxd??? e .....                 beq     LFECAE6
fe/cad6: a2 01 00     ??Mxd?z? e .....                 ldx     #$0001
fe/cad9: b5 10        ??Mxd?z? e ....> LFECAD9         lda     $10,x
fe/cadb: da           ??Mxd??? e .....                 phx
fe/cadc: bb           ??Mxd??? e .....                 tyx
fe/cadd: 95 00        ??Mxd??? e .....                 sta     $00,x
fe/cadf: fa           ??Mxd??? e .....                 plx
fe/cae0: e8           ??Mxd??? e .....                 inx
fe/cae1: c8           ??Mxd??? e .....                 iny
fe/cae2: c9 00        ??Mxd??? e .....                 cmp     #$00
fe/cae4: d0 f3        ??Mxd??? e .....                 bne     LFECAD9
fe/cae6: c2 30        ??Mxd?Z? e ....> LFECAE6         rep     #$30
                                                       .rwid   longm
fe/cae8: 62 02 00     ??mxd?Z? e .....                 per     LFECAEB+2
fe/caeb: 82 02 00     ??mxd?Z? e ...#. LFECAEB         brl     LFECAF0

fe/caee: 80                      .....                 .dd1    $80
fe/caef: d7                      .....                 .dd1    $d7

fe/caf0: f4 00 00     ??mxd?Z? e ....> LFECAF0         pea     $0000
fe/caf3: ab           ??mxd?Z? e .....                 plb
fe/caf4: ab           ??mxd??? e .....                 plb
fe/caf5: 0b           ??mxd??? e .....                 phd
fe/caf6: 68           ??mxd??? e .....                 pla
fe/caf7: 18           ??mxd??? e .....                 clc
fe/caf8: 69 11 00     ??mxd??c e .....                 adc     #$0011
fe/cafb: 60           ??mxd??? e ...#.                 rts

fe/cafc: e2 30        ??mxd??? e ....> LFECAFC         sep     #$30
                                                       .rwid   shortm,shortx
fe/cafe: a0 00        ??MXd??? e .....                 ldy     #$00
fe/cb00: b7 03        ??MXd??? e ....> LFECB00         lda     [DPCOP_X],y
fe/cb02: 38           ??MXd??? e .....                 sec
fe/cb03: f0 1b        ??MXd??C e .....                 beq     LFECB20
fe/cb05: 5a           ??MXd?zC e .....                 phy
fe/cb06: c5 11        ??MXd?zC e .....                 cmp     $11
fe/cb08: d0 19        ??MXd??? e .....                 bne     LFECB23
fe/cb0a: 70 0d        ??MXd?Z? e .....                 bvs     LFECB19
fe/cb0c: 08           ?vMXd?Z? e .....                 php
fe/cb0d: 98           ?vMXd?Z? e .....                 tya
fe/cb0e: 18           ?vMXd??? e .....                 clc
fe/cb0f: 69 08        ?vMXd??c e .....                 adc     #$08
fe/cb11: a8           ??MXd??? e .....                 tay
fe/cb12: 28           ??MXd??? e .....                 plp
fe/cb13: c2 30        ?vMXd?Z? e .....                 rep     #$30
                                                       .rwid   longm,longx
fe/cb15: b7 03        ?vmxd?Z? e .....                 lda     [DPCOP_X],y
fe/cb17: f0 0a        ?vmxd??? e .....                 beq     LFECB23
                                                       .rwid   shortm,shortx
fe/cb19: e2 10        ????d??? e ....> LFECB19         sep     #$10
fe/cb1b: 7a           ???Xd??? e .....                 ply
fe/cb1c: c2 30        ???Xd??? e .....                 rep     #$30
                                                       .rwid   longm,longx
fe/cb1e: aa           ??mxd??? e .....                 tax
fe/cb1f: 18           ??mxd??? e .....                 clc
                                                       .rwid   shortm,shortx
fe/cb20: c2 30        ????d??? e ....> LFECB20         rep     #$30
                                                       .rwid   longm,longx
fe/cb22: 60           ??mxd??? e ...#.                 rts

                                                       .rwid   shortm,shortx
fe/cb23: e2 30        ????d??? e ....> LFECB23         sep     #$30
fe/cb25: 68           ??MXd??? e .....                 pla
fe/cb26: 08           ??MXd??? e .....                 php
fe/cb27: 18           ??MXd??? e .....                 clc
fe/cb28: 69 0a        ??MXd??c e .....                 adc     #$0a
fe/cb2a: 28           ??MXd??? e .....                 plp
fe/cb2b: a8           ?vMXd??? e .....                 tay
fe/cb2c: 80 d2        ?vMXd??? e ...#.                 bra     LFECB00

fe/cb2e: a9 06        ??MXd?Z? e ....> LFECB2E         lda     #$06
fe/cb30: 80 02        n?MXd?z? e ...#.                 bra     LFECB34

fe/cb32: a9 04        ??MXd?Z? e ....> LFECB32         lda     #$04
fe/cb34: 85 06        n?MXd?z? e ....> LFECB34         sta     DPCOP_AH+1
fe/cb36: e2 40        n?MXd?z? e .....                 sep     #$40
fe/cb38: c2 30        nVMXd?z? e .....                 rep     #$30
                                                       .rwid   longm,longx
fe/cb3a: 62 02 00     nVmxd?z? e .....                 per     LFECB40-1
fe/cb3d: 82 bc ff     nVmxd?z? e ...#.                 brl     LFECAFC

                                                       .rwid   shortm,shortx
fe/cb40: e2 30        ??MXd??? e @T... LFECB40         sep     #$30
fe/cb42: b0 2b        ??MXd??? e .....                 bcs     LFECB6F
fe/cb44: b7 03        ??MXd??c e .....                 lda     [DPCOP_X],y
fe/cb46: 62 02 00     ??MXd??c e .....                 per     LFECB4C-1
fe/cb49: 82 38 00     ??MXd??c e ...#.                 brl     LFECB84

fe/cb4c: 98           ??MXd??? e @T... LFECB4C         tya
fe/cb4d: 18           ??MXd??? e .....                 clc
fe/cb4e: 65 06        ??MXd??c e .....                 adc     DPCOP_AH+1
fe/cb50: a8           ??MXd??? e .....                 tay
fe/cb51: c2 30        ??MXd??? e .....                 rep     #$30
                                                       .rwid   longm,longx
fe/cb53: b7 03        ??mxd??? e .....                 lda     [DPCOP_X],y
fe/cb55: 18           ??mxd??? e .....                 clc
fe/cb56: 65 03        ??mxd??c e .....                 adc     DPCOP_X
fe/cb58: 85 80        ??mxd??? e .....                 sta     $80
fe/cb5a: e2 30        ??mxd??? e .....                 sep     #$30
                                                       .rwid   shortm,shortx
fe/cb5c: a5 05        ??MXd??? e .....                 lda     DPCOP_AH
fe/cb5e: 85 82        ??MXd??? e .....                 sta     $82
fe/cb60: a0 00        ??MXd??? e .....                 ldy     #$00
fe/cb62: b7 80        ??MXd??? e ....> LFECB62         lda     [$80],y
fe/cb64: f0 09        ??MXd??? e .....                 beq     LFECB6F
fe/cb66: 62 02 00     ??MXd?z? e .....                 per     LFECB6C-1
fe/cb69: 82 18 00     ??MXd?z? e ...#.                 brl     LFECB84

fe/cb6c: c8           ??MXd??? e @T... LFECB6C         iny
fe/cb6d: 80 f3        ??MXd??? e ...#.                 bra     LFECB62

fe/cb6f: 82 a5 fd     ??MXd??? e ...#> LFECB6F         brl     LFEC917

fe/cb72: a9 00        ??MXd?Z? e ....> LFECB72         lda     #$00
fe/cb74: a6 01        n?MXd?Z? e .....                 ldx     DPCOP_Y
fe/cb76: 38           ??MXd??? e .....                 sec
fe/cb77: 30 0a        ??MXd??C e .....                 bmi     LFECB83
fe/cb79: e6 01        n?MXd??C e .....                 inc     DPCOP_Y
fe/cb7b: b5 30        ??MXd??C e .....                 lda     $30,x
fe/cb7d: d0 03        ??MXd??C e .....                 bne     LFECB82
fe/cb7f: 38           ??MXd?ZC e .....                 sec
fe/cb80: 66 01        ??MXd?ZC e .....                 ror     DPCOP_Y
fe/cb82: 18           ??MXd?z? e ....> LFECB82         clc
fe/cb83: 60           ??MXd??? e ...#> LFECB83         rts

fe/cb84: 64 01        ??MXd??? e ....> LFECB84         stz     DPCOP_Y
fe/cb86: a6 02        ??MXd??? e .....                 ldx     DPCOP_Y+1
fe/cb88: e0 4f        ??MXd??? e .....                 cpx     #$4f
fe/cb8a: b0 06        ??MXd??? e .....                 bcs     LFECB92
fe/cb8c: 95 30        ??MXd??c e .....                 sta     $30,x
fe/cb8e: 74 31        ??MXd??c e .....                 stz     COP_31_OPMIQ,x
fe/cb90: e6 02        ??MXd??c e .....                 inc     DPCOP_Y+1
fe/cb92: 60           ??MXd??? e ...#> LFECB92         rts

fe/cb93: e2 20        ??MXd??c e .T..> LFECB93         sep     #$20
fe/cb95: b7 03        ??MXd??c e .....                 lda     [DPCOP_X],y
fe/cb97: 85 30        ??MXd??c e .....                 sta     $30
fe/cb99: c2 30        ??MXd??c e .....                 rep     #$30
                                                       .rwid   longm,longx
fe/cb9b: 5a           ??mxd??c e .....                 phy
fe/cb9c: 98           ??mxd??c e .....                 tya
fe/cb9d: 18           ??mxd??c e .....                 clc
fe/cb9e: 69 01 00     ??mxd??c e .....                 adc     #$0001
fe/cba1: a8           ??mxd??? e .....                 tay
fe/cba2: e2 20        ??mxd??? e .....                 sep     #$20
                                                       .rwid   shortm
fe/cba4: b7 03        ??Mxd??? e .....                 lda     [DPCOP_X],y
fe/cba6: c2 30        ??Mxd??? e .....                 rep     #$30
                                                       .rwid   longm
fe/cba8: 7a           ??mxd??? e .....                 ply
fe/cba9: c9 01 00     ??mxd??? e .....                 cmp     #$0001
fe/cbac: f0 16        ??mxd??? e .....                 beq     LFECBC4
fe/cbae: c9 02 00     ??mxd?z? e .....                 cmp     #$0002
fe/cbb1: f0 54        ??mxd??? e .....                 beq     LFECC07
fe/cbb3: c9 83 00     ??mxd?z? e .....                 cmp     #$0083
fe/cbb6: d0 03        ??mxd??? e .....                 bne     LFECBBB
fe/cbb8: 82 8f 00     ??mxd?Z? e ...#.                 brl     LFECC4A

fe/cbbb: c9 90 00     ??mxd?z? e ....> LFECBBB         cmp     #$0090
fe/cbbe: d0 03        ??mxd??? e .....                 bne     LFECBC3
fe/cbc0: 82 d5 00     ??mxd?Z? e ...#.                 brl     LFECC98

fe/cbc3: 60           ??mxd?z? e ...#> LFECBC3         rts

fe/cbc4: e2 20        ??mxd?Z? e ....> LFECBC4         sep     #$20
                                                       .rwid   shortm
fe/cbc6: a5 05        ??Mxd?Z? e .....                 lda     DPCOP_AH
fe/cbc8: 85 82        ??Mxd??? e .....                 sta     $82
fe/cbca: c2 30        ??Mxd??? e .....                 rep     #$30
                                                       .rwid   longm
fe/cbcc: 98           ??mxd??? e .....                 tya
fe/cbcd: 18           ??mxd??? e .....                 clc
fe/cbce: 69 04 00     ??mxd??c e .....                 adc     #$0004
fe/cbd1: a8           ??mxd??? e .....                 tay
fe/cbd2: b7 03        ??mxd??? e .....                 lda     [DPCOP_X],y
fe/cbd4: 18           ??mxd??? e .....                 clc
fe/cbd5: 65 03        ??mxd??c e .....                 adc     DPCOP_X
fe/cbd7: 85 80        ??mxd??? e .....                 sta     $80
fe/cbd9: a0 00 00     ??mxd??? e .....                 ldy     #$0000
fe/cbdc: e2 20        n?mxd?Z? e .....                 sep     #$20
                                                       .rwid   shortm
fe/cbde: b5 00        n?Mxd?Z? e .....                 lda     $00,x
fe/cbe0: e2 30        ??Mxd??? e .....                 sep     #$30
                                                       .rwid   shortx
fe/cbe2: aa           ??MXd??? e .....                 tax
fe/cbe3: b7 80        ??MXd??? e ....> LFECBE3         lda     [$80],y
fe/cbe5: f0 09        ??MXd??? e .....                 beq     LFECBF0
fe/cbe7: c8           ??MXd?z? e .....                 iny
fe/cbe8: c7 80        ??MXd??? e .....                 cmp     [$80]
fe/cbea: d0 f7        ??MXd??? e .....                 bne     LFECBE3
fe/cbec: ca           ??MXd?Z? e .....                 dex
fe/cbed: ca           ??MXd??? e .....                 dex
fe/cbee: 10 f3        ??MXd??? e .....                 bpl     LFECBE3
fe/cbf0: a2 01        ??MXd??? e ....> LFECBF0         ldx     #$01
fe/cbf2: b7 80        ??MXd??? e ....> LFECBF2         lda     [$80],y
fe/cbf4: 95 30        ??MXd??? e .....                 sta     $30,x
fe/cbf6: f0 08        ??MXd??? e .....                 beq     LFECC00
fe/cbf8: c7 80        ??MXd?z? e .....                 cmp     [$80]
fe/cbfa: f0 04        ??MXd??? e .....                 beq     LFECC00
fe/cbfc: e8           ??MXd?z? e .....                 inx
fe/cbfd: c8           ??MXd??? e .....                 iny
fe/cbfe: 80 f2        ??MXd??? e ...#.                 bra     LFECBF2

fe/cc00: 74 30        ??MXd??? e ....> LFECC00         stz     $30,x
fe/cc02: 64 01        ??MXd??? e .....                 stz     DPCOP_Y
fe/cc04: c2 30        ??MXd??? e .....                 rep     #$30
                                                       .rwid   longm,longx
fe/cc06: 60           ??mxd??? e ...#.                 rts

fe/cc07: e2 20        ??mxd?Z? e ....> LFECC07         sep     #$20
                                                       .rwid   shortm
fe/cc09: a9 01        ??Mxd?Z? e .....                 lda     #$01
fe/cc0b: 85 01        n?Mxd?z? e .....                 sta     DPCOP_Y
fe/cc0d: c2 30        n?Mxd?z? e .....                 rep     #$30
                                                       .rwid   longm
fe/cc0f: b5 00        n?mxd?z? e .....                 lda     $00,x
fe/cc11: 62 9b 00     ??mxd??? e .....                 per     LFECCAF
fe/cc14: 4b           ??mxd??? e .....                 phk
                                                       .dbank  K (auto)
fe/cc15: ab           ??mxd??? e .....                 plb
fe/cc16: a0 08 00     ??mxd??? e .....                 ldy     #$0008
fe/cc19: a2 ff 00     n?mxd??? e ....> LFECC19         ldx     #$00ff
fe/cc1c: 38           n?mxd?z? e .....                 sec
fe/cc1d: e8           ??mxd??C e ....> LFECC1D         inx
fe/cc1e: f3 01        ??mxd??C e .....                 sbc     ($01,S),y
fe/cc20: b0 fb        ??mxd??? e .....                 bcs     LFECC1D
fe/cc22: 73 01        ??mxd??c e .....                 adc     ($01,S),y
fe/cc24: 48           ??mxd??? e .....                 pha
fe/cc25: e2 30        ??mxd??? e .....                 sep     #$30
                                                       .rwid   shortm,shortx
fe/cc27: 8a           ??MXd??? e .....                 txa
fe/cc28: a6 01        ??MXd??? e .....                 ldx     DPCOP_Y
fe/cc2a: c9 00        ??MXd??? e .....                 cmp     #$00
fe/cc2c: d0 08        ??MXd??? e .....                 bne     LFECC36
fe/cc2e: e0 01        ??MXd?Z? e .....                 cpx     #$01
fe/cc30: d0 04        ??MXd??? e .....                 bne     LFECC36
fe/cc32: c0 00        ??MXd?Z? e .....                 cpy     #$00
fe/cc34: d0 06        ??MXd??? e .....                 bne     LFECC3C
fe/cc36: 09 30        ??MXd??? e ....> LFECC36         ora     #$30
fe/cc38: 95 30        ??MXd?z? e .....                 sta     $30,x
fe/cc3a: e6 01        ??MXd?z? e .....                 inc     DPCOP_Y
fe/cc3c: c2 30        ??MXd??? e ....> LFECC3C         rep     #$30
                                                       .rwid   longm,longx
fe/cc3e: 68           ??mxd??? e .....                 pla
fe/cc3f: 88           ??mxd??? e .....                 dey
fe/cc40: 88           ??mxd??? e .....                 dey
fe/cc41: 10 d6        ??mxd??? e .....                 bpl     LFECC19
fe/cc43: 68           N?mxd??? e .....                 pla
fe/cc44: e2 30        ??mxd??? e .....                 sep     #$30
                                                       .rwid   shortm,shortx
fe/cc46: a6 01        ??MXd??? e .....                 ldx     DPCOP_Y
fe/cc48: 80 b6        ??MXd??? e ...#.                 bra     LFECC00

                                                       .rwid   longm,longx
fe/cc4a: e2 30        ??mxd?Z? e ....> LFECC4A         sep     #$30
                                                       .rwid   shortm,shortx
fe/cc4c: a9 01        ??MXd?Z? e .....                 lda     #$01
fe/cc4e: 85 01        n?MXd?z? e .....                 sta     DPCOP_Y
fe/cc50: b5 02        n?MXd?z? e .....                 lda     DPCOP_Y+1,x
fe/cc52: 62 02 00     ??MXd??? e .....                 per     LFECC58-1
fe/cc55: 82 1d 00     ??MXd??? e ...#.                 brl     LFECC75

fe/cc58: b5 01        ??MXd??? e @T... LFECC58         lda     DPCOP_Y,x
fe/cc5a: 62 02 00     ??MXd??? e .....                 per     LFECC60-1
fe/cc5d: 82 15 00     ??MXd??? e ...#.                 brl     LFECC75

fe/cc60: b5 00        ??MXd??? e @T... LFECC60         lda     $00,x
fe/cc62: 62 02 00     ??MXd??? e .....                 per     LFECC68-1
fe/cc65: 82 0d 00     ??MXd??? e ...#.                 brl     LFECC75

fe/cc68: a6 01        ??MXd??? e @T... LFECC68         ldx     DPCOP_Y
fe/cc6a: e0 01        ??MXd??? e .....                 cpx     #$01
fe/cc6c: d0 05        ??MXd??? e .....                 bne     LFECC73
fe/cc6e: a9 30        ??MXd?Z? e .....                 lda     #$30
fe/cc70: 95 30        n?MXd?z? e .....                 sta     $30,x
fe/cc72: e8           n?MXd?z? e .....                 inx
fe/cc73: 80 8b        ??MXd??? e ...#> LFECC73         bra     LFECC00

fe/cc75: 48           ??MXd??? e ....> LFECC75         pha
fe/cc76: 4a           ??MXd??? e .....                 lsr     A
fe/cc77: 4a           n?MXd??? e .....                 lsr     A
fe/cc78: 4a           n?MXd??? e .....                 lsr     A
fe/cc79: 4a           n?MXd??? e .....                 lsr     A
fe/cc7a: 62 02 00     n?MXd??? e .....                 per     LFECC80-1
fe/cc7d: 82 01 00     n?MXd??? e ...#.                 brl     LFECC81

fe/cc80: 68           ??MXd??? e @T... LFECC80         pla
fe/cc81: da           ??MXd??? e ....> LFECC81         phx
fe/cc82: a6 01        ??MXd??? e .....                 ldx     DPCOP_Y
fe/cc84: 29 0f        ??MXd??? e .....                 and     #$0f
fe/cc86: d0 04        n?MXd??? e .....                 bne     LFECC8C
fe/cc88: e0 01        n?MXd?Z? e .....                 cpx     #$01
fe/cc8a: f0 0a        ??MXd??? e .....                 beq     LFECC96
fe/cc8c: f8           ??MXd?z? e ....> LFECC8C         sed
fe/cc8d: c9 0a        ??MXD?z? e .....                 cmp     #$0a
fe/cc8f: 69 30        ??MXD??? e .....                 adc     #$30
fe/cc91: d8           ??MXD??? e .....                 cld
fe/cc92: 95 30        ??MXd??? e .....                 sta     $30,x
fe/cc94: e6 01        ??MXd??? e .....                 inc     DPCOP_Y
fe/cc96: fa           ??MXd??? e ....> LFECC96         plx
fe/cc97: 60           ??MXd??? e ...#.                 rts

                                                       .rwid   longm,longx
fe/cc98: e2 20        ??mxd?Z? e ....> LFECC98         sep     #$20
                                                       .rwid   shortm
fe/cc9a: a0 01 00     ??Mxd?Z? e .....                 ldy     #$0001
fe/cc9d: b5 00        ??Mxd?z? e ....> LFECC9D         lda     $00,x
fe/cc9f: da           ??Mxd??? e .....                 phx
fe/cca0: bb           ??Mxd??? e .....                 tyx
fe/cca1: 95 30        ??Mxd??? e .....                 sta     $30,x
fe/cca3: fa           ??Mxd??? e .....                 plx
fe/cca4: e8           ??Mxd??? e .....                 inx
fe/cca5: c8           ??Mxd??? e .....                 iny
fe/cca6: c9 00        ??Mxd??? e .....                 cmp     #$00
fe/cca8: d0 f3        ??Mxd??? e .....                 bne     LFECC9D
fe/ccaa: 64 01        ??Mxd?Z? e .....                 stz     DPCOP_Y
fe/ccac: c2 30        ??Mxd?Z? e .....                 rep     #$30
                                                       .rwid   longm
fe/ccae: 60           ??mxd?Z? e ...#.                 rts

fe/ccaf: 01                      ..... LFECCAF         .dd1    $01
fe/ccb0: 00                      .....                 .dd1    $00
fe/ccb1: 0a                      .....                 .dd1    $0a
fe/ccb2: 00                      .....                 .dd1    $00
fe/ccb3: 64                      .....                 .dd1    $64
fe/ccb4: 00                      .....                 .dd1    $00
fe/ccb5: e8                      .....                 .dd1    $e8
fe/ccb6: 03                      .....                 .dd1    $03
fe/ccb7: 10                      .....                 .dd1    $10
fe/ccb8: 27                      .....                 .dd1    $27
fe/ccb9: 6b                      .....                 .dd1    $6b
fe/ccba: f4                      .....                 .dd1    $f4
fe/ccbb: 00                      .....                 .dd1    $00
fe/ccbc: 00                      .....                 .dd1    $00
fe/ccbd: ab                      .....                 .dd1    $ab
fe/ccbe: ab                      .....                 .dd1    $ab
fe/ccbf: 8f                      .....                 .dd1    $8f
fe/ccc0: 0d                      .....                 .dd1    $0d
fe/ccc1: 00                      .....                 .dd1    $00
fe/ccc2: 42                      .....                 .dd1    $42
fe/ccc3: a0                      .....                 .dd1    $a0
fe/ccc4: f3                      .....                 .dd1    $f3
fe/ccc5: 20                      .....                 .dd1    $20
fe/ccc6: 2e                      .....                 .dd1    $2e
fe/ccc7: e2                      .....                 .dd1    $e2
fe/ccc8: 18                      .....                 .dd1    $18
fe/ccc9: 6b                      .....                 .dd1    $6b
fe/ccca: f4                      .....                 .dd1    $f4
fe/cccb: 00                      .....                 .dd1    $00
fe/cccc: 00                      .....                 .dd1    $00
fe/cccd: ab                      .....                 .dd1    $ab
fe/ccce: ab                      .....                 .dd1    $ab
fe/cccf: a2                      .....                 .dd1    $a2
fe/ccd0: 12                      .....                 .dd1    $12
fe/ccd1: 4b                      .....                 .dd1    $4b
fe/ccd2: 20                      .....                 .dd1    $20
fe/ccd3: 38                      .....                 .dd1    $38
fe/ccd4: fe                      .....                 .dd1    $fe
fe/ccd5: ad                      .....                 .dd1    $ad
fe/ccd6: 51                      .....                 .dd1    $51
fe/ccd7: a5                      .....                 .dd1    $a5
fe/ccd8: f0                      .....                 .dd1    $f0
fe/ccd9: 1f                      .....                 .dd1    $1f
fe/ccda: ce                      .....                 .dd1    $ce
fe/ccdb: 51                      .....                 .dd1    $51
fe/ccdc: a5                      .....                 .dd1    $a5
fe/ccdd: d0                      .....                 .dd1    $d0
fe/ccde: 1a                      .....                 .dd1    $1a
fe/ccdf: ae                      .....                 .dd1    $ae
fe/cce0: 52                      .....                 .dd1    $52
fe/cce1: a5                      .....                 .dd1    $a5
fe/cce2: ad                      .....                 .dd1    $ad
fe/cce3: 48                      .....                 .dd1    $48
fe/cce4: a5                      .....                 .dd1    $a5
fe/cce5: f0                      .....                 .dd1    $f0
fe/cce6: 03                      .....                 .dd1    $03
fe/cce7: ae                      .....                 .dd1    $ae
fe/cce8: 53                      .....                 .dd1    $53
fe/cce9: a5                      .....                 .dd1    $a5
fe/ccea: 49                      .....                 .dd1    $49
fe/cceb: 07                      .....                 .dd1    $07
fe/ccec: 8d                      .....                 .dd1    $8d
fe/cced: 48                      .....                 .dd1    $48
fe/ccee: a5                      .....                 .dd1    $a5
fe/ccef: 8e                      .....                 .dd1    $8e
fe/ccf0: 51                      .....                 .dd1    $51
fe/ccf1: a5                      .....                 .dd1    $a5
fe/ccf2: a8                      .....                 .dd1    $a8
fe/ccf3: a2                      .....                 .dd1    $a2
fe/ccf4: 14                      .....                 .dd1    $14
fe/ccf5: 4b                      .....                 .dd1    $4b
fe/ccf6: 20                      .....                 .dd1    $20
fe/ccf7: 38                      .....                 .dd1    $38
fe/ccf8: fe                      .....                 .dd1    $fe
fe/ccf9: ce                      .....                 .dd1    $ce
fe/ccfa: 40                      .....                 .dd1    $40
fe/ccfb: a5                      .....                 .dd1    $a5
fe/ccfc: a9                      .....                 .dd1    $a9
fe/ccfd: 10                      .....                 .dd1    $10
fe/ccfe: 80                      .....                 .dd1    $80
fe/ccff: 07                      .....                 .dd1    $07
fe/cd00: f4                      .....                 .dd1    $f4
fe/cd01: 00                      .....                 .dd1    $00
fe/cd02: 00                      .....                 .dd1    $00
fe/cd03: ab                      .....                 .dd1    $ab
fe/cd04: ab                      .....                 .dd1    $ab
fe/cd05: a9                      .....                 .dd1    $a9
fe/cd06: 20                      .....                 .dd1    $20
fe/cd07: 8f                      .....                 .dd1    $8f
fe/cd08: 05                      .....                 .dd1    $05
fe/cd09: fe                      .....                 .dd1    $fe
fe/cd0a: 45                      .....                 .dd1    $45
fe/cd0b: ad                      .....                 .dd1    $ad
fe/cd0c: 83                      .....                 .dd1    $83
fe/cd0d: a5                      .....                 .dd1    $a5
fe/cd0e: aa                      .....                 .dd1    $aa
fe/cd0f: 49                      .....                 .dd1    $49
fe/cd10: 0f                      .....                 .dd1    $0f
fe/cd11: 48                      .....                 .dd1    $48
fe/cd12: a8                      .....                 .dd1    $a8
fe/cd13: 38                      .....                 .dd1    $38
fe/cd14: bd                      .....                 .dd1    $bd
fe/cd15: 90                      .....                 .dd1    $90
fe/cd16: a5                      .....                 .dd1    $a5
fe/cd17: 69                      .....                 .dd1    $69
fe/cd18: 00                      .....                 .dd1    $00
fe/cd19: 99                      .....                 .dd1    $99
fe/cd1a: 90                      .....                 .dd1    $90
fe/cd1b: a5                      .....                 .dd1    $a5
fe/cd1c: ca                      .....                 .dd1    $ca
fe/cd1d: f0                      .....                 .dd1    $f0
fe/cd1e: 03                      .....                 .dd1    $03
fe/cd1f: 88                      .....                 .dd1    $88
fe/cd20: d0                      .....                 .dd1    $d0
fe/cd21: f2                      .....                 .dd1    $f2
fe/cd22: 68                      .....                 .dd1    $68
fe/cd23: 8d                      .....                 .dd1    $8d
fe/cd24: 83                      .....                 .dd1    $83
fe/cd25: a5                      .....                 .dd1    $a5
fe/cd26: a2                      .....                 .dd1    $a2
fe/cd27: 05                      .....                 .dd1    $05
fe/cd28: fe                      .....                 .dd1    $fe
fe/cd29: 9a                      .....                 .dd1    $9a
fe/cd2a: a5                      .....                 .dd1    $a5
fe/cd2b: d0                      .....                 .dd1    $d0
fe/cd2c: 08                      .....                 .dd1    $08
fe/cd2d: ca                      .....                 .dd1    $ca
fe/cd2e: d0                      .....                 .dd1    $d0
fe/cd2f: f8                      .....                 .dd1    $f8
fe/cd30: a0                      .....                 .dd1    $a0
fe/cd31: 05                      .....                 .dd1    $05
fe/cd32: 20                      .....                 .dd1    $20
fe/cd33: 73                      .....                 .dd1    $73
fe/cd34: e5                      .....                 .dd1    $e5
fe/cd35: ad                      .....                 .dd1    $ad
fe/cd36: b0                      .....                 .dd1    $b0
fe/cd37: a5                      .....                 .dd1    $a5
fe/cd38: d0                      .....                 .dd1    $d0
fe/cd39: 08                      .....                 .dd1    $08
fe/cd3a: ad                      .....                 .dd1    $ad
fe/cd3b: b1                      .....                 .dd1    $b1
fe/cd3c: a5                      .....                 .dd1    $a5
fe/cd3d: f0                      .....                 .dd1    $f0
fe/cd3e: 06                      .....                 .dd1    $06
fe/cd3f: ce                      .....                 .dd1    $ce
fe/cd40: b1                      .....                 .dd1    $b1
fe/cd41: a5                      .....                 .dd1    $a5
fe/cd42: ce                      .....                 .dd1    $ce
fe/cd43: b0                      .....                 .dd1    $b0
fe/cd44: a5                      .....                 .dd1    $a5
fe/cd45: 2c                      .....                 .dd1    $2c
fe/cd46: 78                      .....                 .dd1    $78
fe/cd47: a5                      .....                 .dd1    $a5
fe/cd48: 10                      .....                 .dd1    $10
fe/cd49: 0b                      .....                 .dd1    $0b
fe/cd4a: ee                      .....                 .dd1    $ee
fe/cd4b: 78                      .....                 .dd1    $78
fe/cd4c: a5                      .....                 .dd1    $a5
fe/cd4d: 58                      .....                 .dd1    $58
fe/cd4e: 20                      .....                 .dd1    $20
fe/cd4f: 49                      .....                 .dd1    $49
fe/cd50: eb                      .....                 .dd1    $eb
fe/cd51: 78                      .....                 .dd1    $78
fe/cd52: ce                      .....                 .dd1    $ce
fe/cd53: 78                      .....                 .dd1    $78
fe/cd54: a5                      .....                 .dd1    $a5
fe/cd55: 24                      .....                 .dd1    $24
fe/cd56: d3                      .....                 .dd1    $d3
fe/cd57: 30                      .....                 .dd1    $30
fe/cd58: 08                      .....                 .dd1    $08
fe/cd59: a5                      .....                 .dd1    $a5
fe/cd5a: d5                      .....                 .dd1    $d5
fe/cd5b: e6                      .....                 .dd1    $e6
fe/cd5c: d5                      .....                 .dd1    $d5
fe/cd5d: c9                      .....                 .dd1    $c9
fe/cd5e: 80                      .....                 .dd1    $80
fe/cd5f: b0                      .....                 .dd1    $b0
fe/cd60: 1b                      .....                 .dd1    $1b
fe/cd61: ad                      .....                 .dd1    $ad
fe/cd62: 42                      .....                 .dd1    $42
fe/cd63: a5                      .....                 .dd1    $a5
fe/cd64: f0                      .....                 .dd1    $f0
fe/cd65: 0c                      .....                 .dd1    $0c
fe/cd66: ee                      .....                 .dd1    $ee
fe/cd67: 42                      .....                 .dd1    $42
fe/cd68: a5                      .....                 .dd1    $a5
fe/cd69: a2                      .....                 .dd1    $a2
fe/cd6a: 0c                      .....                 .dd1    $0c
fe/cd6b: 22                      .....                 .dd1    $22
fe/cd6c: ac                      .....                 .dd1    $ac
fe/cd6d: ff                      .....                 .dd1    $ff
fe/cd6e: 00                      .....                 .dd1    $00
fe/cd6f: ce                      .....                 .dd1    $ce
fe/cd70: 42                      .....                 .dd1    $42
fe/cd71: a5                      .....                 .dd1    $a5
fe/cd72: 2c                      .....                 .dd1    $2c
fe/cd73: c6                      .....                 .dd1    $c6
fe/cd74: a5                      .....                 .dd1    $a5
fe/cd75: 30                      .....                 .dd1    $30
fe/cd76: 03                      .....                 .dd1    $03
fe/cd77: 4c                      .....                 .dd1    $4c
fe/cd78: 12                      .....                 .dd1    $12
fe/cd79: df                      .....                 .dd1    $df
fe/cd7a: 18                      .....                 .dd1    $18
fe/cd7b: 6b                      .....                 .dd1    $6b
fe/cd7c: a5                      .....                 .dd1    $a5
fe/cd7d: d5                      .....                 .dd1    $d5
fe/cd7e: c9                      .....                 .dd1    $c9
fe/cd7f: 82                      .....                 .dd1    $82
fe/cd80: f0                      .....                 .dd1    $f0
fe/cd81: 06                      .....                 .dd1    $06
fe/cd82: c9                      .....                 .dd1    $c9
fe/cd83: 83                      .....                 .dd1    $83
fe/cd84: f0                      .....                 .dd1    $f0
fe/cd85: 0e                      .....                 .dd1    $0e
fe/cd86: 80                      .....                 .dd1    $80
fe/cd87: ea                      .....                 .dd1    $ea
fe/cd88: af                      .....                 .dd1    $af
fe/cd89: 00                      .....                 .dd1    $00
fe/cd8a: 00                      .....                 .dd1    $00
fe/cd8b: 42                      .....                 .dd1    $42
fe/cd8c: 29                      .....                 .dd1    $29
fe/cd8d: df                      .....                 .dd1    $df
fe/cd8e: 8f                      .....                 .dd1    $8f
fe/cd8f: 00                      .....                 .dd1    $00
fe/cd90: 00                      .....                 .dd1    $00
fe/cd91: 42                      .....                 .dd1    $42
fe/cd92: 80                      .....                 .dd1    $80
fe/cd93: f2                      .....                 .dd1    $f2
fe/cd94: 64                      .....                 .dd1    $64
fe/cd95: d4                      .....                 .dd1    $d4
fe/cd96: 64                      .....                 .dd1    $64
fe/cd97: d5                      .....                 .dd1    $d5
fe/cd98: af                      .....                 .dd1    $af
fe/cd99: 0d                      .....                 .dd1    $0d
fe/cd9a: 00                      .....                 .dd1    $00
fe/cd9b: 42                      .....                 .dd1    $42
fe/cd9c: 29                      .....                 .dd1    $29
fe/cd9d: 08                      .....                 .dd1    $08
fe/cd9e: d0                      .....                 .dd1    $d0
fe/cd9f: 02                      .....                 .dd1    $02
fe/cda0: c6                      .....                 .dd1    $c6
fe/cda1: d4                      .....                 .dd1    $d4
fe/cda2: af                      .....                 .dd1    $af
fe/cda3: 00                      .....                 .dd1    $00
fe/cda4: 00                      .....                 .dd1    $00
fe/cda5: 42                      .....                 .dd1    $42
fe/cda6: 09                      .....                 .dd1    $09
fe/cda7: 20                      .....                 .dd1    $20
fe/cda8: 8f                      .....                 .dd1    $8f
fe/cda9: 00                      .....                 .dd1    $00
fe/cdaa: 00                      .....                 .dd1    $00
fe/cdab: 42                      .....                 .dd1    $42
fe/cdac: a9                      .....                 .dd1    $a9
fe/cdad: 08                      .....                 .dd1    $08
fe/cdae: 8f                      .....                 .dd1    $8f
fe/cdaf: 0d                      .....                 .dd1    $0d
fe/cdb0: 00                      .....                 .dd1    $00
fe/cdb1: 42                      .....                 .dd1    $42
fe/cdb2: 82                      .....                 .dd1    $82
fe/cdb3: ac                      .....                 .dd1    $ac
fe/cdb4: ff                      .....                 .dd1    $ff

                                                       .rwid   shortm,shortx
fe/cdb5: 08           ??MXdI?? e ....> LFECDB5         php
fe/cdb6: c2 30        ??MXdI?? e .....                 rep     #$30
                                                       .rwid   longm,longx
fe/cdb8: a9 00 00     ??mxdI?? e .....                 lda     #$0000
fe/cdbb: 8f 00 fe 00  n?mxdIZ? e .....                 stal    f:B0LST_FREE_BLOCKS
fe/cdbf: a9 00 fe     n?mxdIZ? e .....                 lda     #$fe00
fe/cdc2: 8f 02 fe 00  n?mxdIz? e .....                 stal    f:B0LSTEND_FREE_BLOCKS
fe/cdc6: a9 00 e0     n?mxdIz? e .....                 lda     #$e000
fe/cdc9: 48           ??mxdI?? e ....> LFECDC9         pha
fe/cdca: aa           ??mxdI?? e .....                 tax
fe/cdcb: 20 da cd     ??mxdI?? e .....                 jsr     returnXToFreeList
fe/cdce: 68           ??mxdI?? e .....                 pla
fe/cdcf: 18           ??mxdI?? e .....                 clc
fe/cdd0: 69 0c 00     ??mxdI?c e .....                 adc     #$000c
fe/cdd3: c9 f5 fc     ??mxdI?? e .....                 cmp     #$fcf5
fe/cdd6: 90 f1        ??mxdI?? e .....                 bcc     LFECDC9
fe/cdd8: 28           ??mxdI?C e .....                 plp
                                                       .rwid   shortm,shortx
fe/cdd9: 60           ??MXdI?? e ...#.                 rts

                                       ; QRY Appears to return the block pointed to X to the free list
                                       ; 
                                       ; On Entry:
                                       ;    X   is a pointer to a handle block
                                                       .rwid   longm,longx
fe/cdda: 5a           ??mxd??? e ....> returnXToFreeList phy
fe/cddb: 08           ??mxd??? e .....                 php
fe/cddc: 78           ??mxd??? e .....                 sei
fe/cddd: c2 30        ??mxdI?? e .....                 rep     #$30
fe/cddf: 9b           ??mxdI?? e .....                 txy                       ;Y=X
fe/cde0: a9 00 00     ??mxdI?? e .....                 lda     #$0000
fe/cde3: 9f 00 00 00  n?mxdIZ? e .....                 stal    f:$000000,x       ;clear X->[0]
fe/cde7: e2 20        n?mxdIZ? e .....                 sep     #$20
                                                       .rwid   shortm
fe/cde9: 9f 0b 00 00  n?MxdIZ? e .....                 stal    f:$00000b,x       ;clear X->[b]
fe/cded: c2 20        n?MxdIZ? e .....                 rep     #$20
                                                       .rwid   longm
fe/cdef: af 02 fe 00  n?mxdIZ? e .....                 ldal    f:B0LSTEND_FREE_BLOCKS
fe/cdf3: aa           ??mxdI?? e .....                 tax                       ;X = ($FE02)
fe/cdf4: 98           ??mxdI?? e .....                 tya                       ;A=org X
fe/cdf5: 9f 00 00 00  ??mxdI?? e .....                 stal    f:$000000,x
fe/cdf9: 8f 02 fe 00  ??mxdI?? e .....                 stal    f:B0LSTEND_FREE_BLOCKS
fe/cdfd: 28           ??mxdI?? e .....                 plp
fe/cdfe: 7a           ??mxdI?? e .....                 ply
fe/cdff: 18           ??mxdI?? e .....                 clc
fe/ce00: 60           ??mxdI?c e ...#.                 rts

                                       ; Appears to allocate a block from the free list
                                       ; 
                                       ; On entry A contains the type - QRY
fe/ce01: 08           n?mxd?z? e ....> obtainFreeBlock php
fe/ce02: 78           n?mxd?z? e .....                 sei
fe/ce03: c2 30        n?mxdIz? e .....                 rep     #$30
fe/ce05: aa           n?mxdIz? e .....                 tax
fe/ce06: af 00 fe 00  ??mxdI?? e .....                 ldal    f:B0LST_FREE_BLOCKS
fe/ce0a: d0 03        ??mxdI?? e .....                 bne     @ok
fe/ce0c: 28           ??mxdIZ? e .....                 plp
fe/ce0d: 38           n?mxdIz? e .....                 sec
fe/ce0e: 60           n?mxdIzC e ...#.                 rts

fe/ce0f: da           ??mxdIz? e ....> @ok             phx
fe/ce10: aa           ??mxdIz? e .....                 tax
fe/ce11: cf 02 fe 00  ??mxdI?? e .....                 cmpl    f:B0LSTEND_FREE_BLOCKS
fe/ce15: d0 07        ??mxdI?? e .....                 bne     @sk
                                       ; if this was the last block then clear the last block pointer - point the last
                                       ; block pointer at the front pointer this will cause the next "free" to
                                       ; magically update both list pointers
fe/ce17: a9 00 fe     ??mxdIZ? e .....                 lda     #B0LST_FREE_BLOCKS
fe/ce1a: 8f 02 fe 00  n?mxdIz? e .....                 stal    f:B0LSTEND_FREE_BLOCKS
fe/ce1e: bf 00 00 00  ??mxdIz? e ....> @sk             ldal    f:$000000,x       ;get the blocks next pointer
fe/ce22: 8f 00 fe 00  ??mxdI?? e .....                 stal    f:B0LST_FREE_BLOCKS ;store as the front pointer (will be 0 if last block)
fe/ce26: a9 ff ff     ??mxdI?? e .....                 lda     #$ffff            ;blank out the block
fe/ce29: 9f 0a 00 00  n?mxdIz? e .....                 stal    f:$00000a,x
fe/ce2d: 9f 08 00 00  n?mxdIz? e .....                 stal    f:$000008,x
fe/ce31: 9f 06 00 00  n?mxdIz? e .....                 stal    f:$000006,x
fe/ce35: 9f 04 00 00  n?mxdIz? e .....                 stal    f:$000004,x
fe/ce39: 9f 02 00 00  n?mxdIz? e .....                 stal    f:$000002,x
fe/ce3d: 9f 00 00 00  n?mxdIz? e .....                 stal    f:$000000,x
fe/ce41: 68           n?mxdIz? e .....                 pla
fe/ce42: e2 20        ??mxdI?? e .....                 sep     #$20
                                                       .rwid   shortm
fe/ce44: 9f 0b 00 00  ??MxdI?? e .....                 stal    f:HND_off_B_type,x ;set the type byte
fe/ce48: c2 20        ??MxdI?? e .....                 rep     #$20
                                                       .rwid   longm
fe/ce4a: 8a           ??mxdI?? e .....                 txa
fe/ce4b: 28           ??mxdI?? e .....                 plp
fe/ce4c: 18           n?mxdIzC e .....                 clc
fe/ce4d: 60           n?mxdIzc e ...#.                 rts

fe/ce4e: af 00 fe 00  ??mxd??? e ....> LFECE4E         ldal    f:B0LST_FREE_BLOCKS
fe/ce52: f0 15        ??mxd??? e .....                 beq     LFECE69
fe/ce54: a0 00 00     ??mxd?z? e .....                 ldy     #$0000
fe/ce57: c8           ??mxd??? e ....> LFECE57         iny
fe/ce58: f0 19        ??mxd??? e .....                 beq     memFreeListError
fe/ce5a: aa           ??mxd?z? e .....                 tax
fe/ce5b: bf 00 00 00  ??mxd??? e .....                 ldal    f:$000000,x
fe/ce5f: d0 f6        ??mxd??? e .....                 bne     LFECE57
fe/ce61: 8a           ??mxd?Z? e .....                 txa
fe/ce62: cf 02 fe 00  ??mxd??? e .....                 cmpl    f:B0LSTEND_FREE_BLOCKS
fe/ce66: d0 0b        ??mxd??? e .....                 bne     memFreeListError
fe/ce68: 60           ??mxd?Z? e ...#.                 rts

fe/ce69: af 02 fe 00  ??mxd?Z? e ....> LFECE69         ldal    f:B0LSTEND_FREE_BLOCKS
fe/ce6d: c9 00 fe     ??mxd??? e .....                 cmp     #$fe00
fe/ce70: d0 01        ??mxd??? e .....                 bne     memFreeListError
fe/ce72: 60           ??mxd?Z? e ...#.                 rts

fe/ce73: 02 0f        ??mxd??? e ....> memFreeListError cop    COP_0F_OPERR
fe/ce75: 4d 65 6d 6f+            .T...                 .zstr   “Memory error: list of free blocks corrupted”
fe/cea1: 0b           ??mxd??? e ....> allocHandleQRY  phd
fe/cea2: 48           ??mxd??? e .....                 pha
fe/cea3: f4 00 ff     ??mxd??? e .....                 pea     EXSYS
fe/cea6: 2b           ??mxd??? e .....                 pld
fe/cea7: a0 00 00     ??mxd??? e .....                 ldy     #$0000
fe/ceaa: b7 02        n?mxd?Z? e .....                 lda     [<EXSYS_HANDLEBLOCK_LONGPTR],y ;getHandleBlockSize
fe/ceac: 29 fe ff     ??mxd??? e .....                 and     #$fffe
fe/ceaf: f0 10        n?mxd??? e .....                 beq     @retsec
fe/ceb1: a8           n?mxd?z? e .....                 tay
fe/ceb2: 88           ??mxd??? e ....> @lp             dey
fe/ceb3: 88           ??mxd??? e .....                 dey
fe/ceb4: f0 0b        ??mxd??? e .....                 beq     @retsec
fe/ceb6: b7 02        ??mxd?z? e .....                 lda     [$02],y
fe/ceb8: d0 f8        ??mxd??? e .....                 bne     @lp
fe/ceba: 8a           ??mxd?Z? e .....                 txa
fe/cebb: 97 02        ??mxd??? e .....                 sta     [$02],y
fe/cebd: 68           ??mxd??? e .....                 pla
fe/cebe: 2b           ??mxd??? e .....                 pld
fe/cebf: 18           ??mxd??? e .....                 clc
fe/cec0: 60           ??mxd??c e ...#.                 rts

fe/cec1: 68           ??mxd?Z? e ....> @retsec         pla
fe/cec2: 2b           ??mxd??? e .....                 pld
fe/cec3: 38           ??mxd??? e .....                 sec
fe/cec4: 60           ??mxd??C e ...#.                 rts

fe/cec5: 20 da ce     ??mxd??? e ....> LFECEC5         jsr     getHandleYinDP
fe/cec8: 48           ??mxd??? e .....                 pha
fe/cec9: b0 0d        ??mxd??? e .....                 bcs     @sk
fe/cecb: bf 0b 00 00  ??mxd??c e .....                 ldal    f:$00000b,x
fe/cecf: 29 ff 00     ??mxd??c e .....                 and     #$00ff
fe/ced2: 49 02 00     n?mxd??c e .....                 eor     #$0002
fe/ced5: c9 01 00     ??mxd??c e .....                 cmp     #$0001
fe/ced8: 68           ??mxd??? e ....> @sk             pla
fe/ced9: 60           ??mxd??? e ...#.                 rts

                                       ; Given a handle in Y returns the [Handle Block]. For odd numbered handles (well
                                       ; known handles) the block is returned for valid handles. For even numbered
                                       ; handles, searches the [Handle Allocation Table].
                                       ; 
                                       ; On Entry:
                                       ;    Y   Contains a handle
                                       ; 
                                       ; On Exit:
                                       ;    C=0 Found
                                       ;    DP  the address of the handle block
                                       ; or C=1 Failed - no such handle allocated
                                       ; 
                                       ; TODO: corrupts X unnecessarily, lots of tax etc that is unnecessary
fe/ceda: 0b           ??mxd??? e ....> getHandleYinDP  phd
fe/cedb: 48           ??mxd??? e .....                 pha
fe/cedc: 98           ??mxd??? e .....                 tya
fe/cedd: f0 31        ??mxd??? e .....                 beq     @retsec
fe/cedf: 89 01 00     ??mxd?z? e .....                 bit     #$0001
fe/cee2: d0 10        ??mxd??? e .....                 bne     @wellknownhandle
fe/cee4: f4 00 ff     ??mxd?Z? e .....                 pea     EXSYS
fe/cee7: 2b           ??mxd?Z? e .....                 pld
fe/cee8: b7 02        ??mxd??? e .....                 lda     [$02],y
fe/ceea: aa           ??mxd??? e ....> @ok             tax
fe/ceeb: f0 23        ??mxd??? e .....                 beq     @retsec
fe/ceed: e0 ff ff     ??mxd?z? e .....                 cpx     #$ffff
fe/cef0: f0 1e        ??mxd??? e .....                 beq     @retsec
fe/cef2: d0 18        ??mxd?z? e ...#.                 bne     @retclc

fe/cef4: bb           ??mxd?z? e ....> @wellknownhandle tyx
fe/cef5: e0 0a 00     ??mxd??? e .....                 cpx     #$000a
fe/cef8: b0 16        ??mxd??? e .....                 bcs     @retsec
fe/cefa: 8b           ??mxd??c e .....                 phb
fe/cefb: 4b           ??mxd??c e .....                 phk
                                                       .dbank  K (auto)
fe/cefc: ab           ??mxd??c e .....                 plb
fe/cefd: bd 13 cf     ??mxd??c e .....                 lda     0+(tblWellKnownHandlePointers & $ffff)-1,x
fe/cf00: ab           ??mxd??c e .....                 plb
fe/cf01: 49 00 00     ??mxd??c e .....                 eor     #$0000
fe/cf04: f0 0a        ??mxd??c e .....                 beq     @retsec
fe/cf06: 48           ??mxd?zc e .....                 pha
fe/cf07: 2b           ??mxd?zc e .....                 pld
fe/cf08: a5 00        ??mxd??c e .....                 lda     $00
fe/cf0a: 80 de        ??mxd??c e ...#.                 bra     @ok

fe/cf0c: 68           ??mxd?z? e ....> @retclc         pla
fe/cf0d: 2b           ??mxd??? e .....                 pld
fe/cf0e: 18           ??mxd??? e .....                 clc
fe/cf0f: 60           ??mxd??c e ...#.                 rts

fe/cf10: 68           ??mxd??? e ....> @retsec         pla
fe/cf11: 2b           ??mxd??? e .....                 pld
fe/cf12: 38           ??mxd??? e .....                 sec
fe/cf13: 60           ??mxd??C e ...#.                 rts

fe/cf14: 04 fe                   ..... tblWellKnownHandlePointers .dd2 $fe04     ;HDMMM
fe/cf16: 00 00                   .....                 .dd2    $0000             ;HDMM0 - QRY
fe/cf18: 08 fe                   .....                 .dd2    $fe08             ;HDMMC
fe/cf1a: 0a fe                   .....                 .dd2    $fe0a             ;HDMMW
fe/cf1c: 0c fe                   .....                 .dd2    $fe0c             ;HDMMV

                                       ; The [Handle Allocation Table] pointed to by long pointer at $FF02 is searched
                                       ; for this entry and its entry is zeroed if found
                                       ; 
                                       ; On entry:
                                       ;    X    contains a handle block pointer
                                       ; 
                                       ; On exit:
                                       ;    C=0  indicates block found
                                       ;    Y    contains the index of the entry (handle ? QRY?)
                                       ;    X,D  preserved
                                       ; or C=1  the pointer was not found
                                       ;    Y    contains the index of the last entry (entries are allocated descending
                                       ;         so the first in address order)
                                       ; 
                                       ; TODO: why not use the find method below!
fe/cf1e: da           ??mxd??? e ....> freeHandlePointerX phx
fe/cf1f: f4 00 ff     ??mxd??? e .....                 pea     EXSYS
fe/cf22: 2b           ??mxd??? e .....                 pld
fe/cf23: a0 00 00     ??mxd??? e .....                 ldy     #$0000
fe/cf26: b7 02        n?mxd?Z? e .....                 lda     [$02],y           ;get pointer to end of handle block + 2
fe/cf28: a8           ??mxd??? e .....                 tay
fe/cf29: 88           ??mxd??? e .....                 dey
fe/cf2a: 88           ??mxd??? e .....                 dey
fe/cf2b: b7 02        ??mxd??? e ....> @lp             lda     [$02],y
fe/cf2d: c3 01        ??mxd??? e .....                 cmp     $01,S             ;compare to passed in X
fe/cf2f: f0 07        ??mxd??? e .....                 beq     @fnd
fe/cf31: 88           ??mxd?z? e .....                 dey
fe/cf32: 88           ??mxd??? e .....                 dey                       ;move backwards through handle list
fe/cf33: d0 f6        ??mxd??? e .....                 bne     @lp
fe/cf35: fa           ??mxd?Z? e .....                 plx
fe/cf36: 38           ??mxd??? e .....                 sec
fe/cf37: 60           ??mxd??C e ...#.                 rts

fe/cf38: a9 00 00     ??mxd?Z? e ....> @fnd            lda     #$0000
fe/cf3b: 97 02        n?mxd?Z? e .....                 sta     [$02],y           ;zero out the entry and return clc
fe/cf3d: fa           n?mxd?Z? e .....                 plx
fe/cf3e: 18           ??mxd??? e .....                 clc
fe/cf3f: 60           ??mxd??c e ...#.                 rts

                                       ; The [Handle Allocation Table] pointed to by long pointer at $FF02 is searched
                                       ; for an entry that contains X
                                       ; 
                                       ; On entry:
                                       ;    X    contains a handle block pointer
                                       ; 
                                       ; On exit:
                                       ;    C=0  indicates block found
                                       ;    Y    contains the index of the entry (handle)
                                       ; or C=1  the pointer was not found
                                       ;    Y    contains the index of the last entry (entries are allocated descending
                                       ;         so the first in address order)
                                       ; 
                                       ;    X    preserved
                                       ;    D,A  corrupted   
fe/cf40: f4 00 ff     ??mxd??? e ....> findHandleByAddr pea    EXSYS
fe/cf43: 2b           ??mxd??? e .....                 pld
fe/cf44: a0 00 00     ??mxd??? e .....                 ldy     #$0000
fe/cf47: b7 02        n?mxd?Z? e .....                 lda     [$02],y
fe/cf49: a8           ??mxd??? e .....                 tay
fe/cf4a: 88           ??mxd??? e .....                 dey
fe/cf4b: 88           ??mxd??? e .....                 dey
fe/cf4c: 8a           ??mxd??? e .....                 txa
fe/cf4d: d7 02        ??mxd??? e ....> @retsec         cmp     [$02],y
fe/cf4f: f0 06        ??mxd??? e .....                 beq     @retclc
fe/cf51: 88           ??mxd?z? e .....                 dey
fe/cf52: 88           ??mxd??? e .....                 dey
fe/cf53: d0 f8        ??mxd??? e .....                 bne     @retsec
fe/cf55: 38           ??mxd?Z? e .....                 sec
fe/cf56: 60           ??mxd?ZC e ...#.                 rts

fe/cf57: 18           ??mxd?Z? e ....> @retclc         clc
fe/cf58: 60           ??mxd?Zc e ...#.                 rts

                                                       .rwid   shortm,shortx
fe/cf59: 08           ??MXdI?? e ....> LFECF59         php
fe/cf5a: 8b           ??MXdI?? e .....                 phb
fe/cf5b: c2 30        ??MXdI?? e .....                 rep     #$30
                                                       .rwid   longm,longx
fe/cf5d: f4 00 00     ??mxdI?? e .....                 pea     $0000
fe/cf60: ab           ??mxdI?? e .....                 plb
                                                       .dbank  $00
fe/cf61: ab           ??mxdI?? e .....                 plb
fe/cf62: a9 00 00     ??mxdI?? e .....                 lda     #$0000
fe/cf65: 8d 11 ff     n?mxdIZ? e .....                 sta     EXSYS_CUR_COROUTINE+1
fe/cf68: 8d 13 ff     n?mxdIZ? e .....                 sta     SYS_ESCAPE_FLAG_QRY
fe/cf6b: a9 10 00     n?mxdIZ? e .....                 lda     #$0010
fe/cf6e: 8f 20 fe 00  n?mxdIz? e .....                 stal    f:$00fe20
fe/cf72: a9 20 fe     n?mxdIz? e .....                 lda     #$fe20
fe/cf75: 20 9d cf     n?mxdIz? e .....                 jsr     LFECF9D
fe/cf78: 20 7f cf     ??mxdI?? e .....                 jsr     LFECF7F
fe/cf7b: ab           ??mxdI?? e .....                 plb
fe/cf7c: 28           ??mxdI?? e .....                 plp
                                                       .rwid   shortm,shortx
fe/cf7d: 18           ??MXdI?? e .....                 clc
fe/cf7e: 60           ??MXdI?c e ...#.                 rts

                                                       .rwid   longm,longx
fe/cf7f: 8b           ??mxdI?? e ....> LFECF7F         phb
fe/cf80: 0b           ??mxdI?? e .....                 phd
fe/cf81: f4 00 ff     ??mxdI?? e .....                 pea     $ff00
fe/cf84: 2b           ??mxdI?? e .....                 pld
fe/cf85: a9 08 00     ??mxdI?? e .....                 lda     #$0008
fe/cf88: 85 05        n?mxdIz? e .....                 sta     DPCOP_AH
fe/cf8a: f4 00 00     n?mxdIz? e .....                 pea     $0000
fe/cf8d: ab           n?mxdIz? e .....                 plb
                                                       .dbank  $00
fe/cf8e: ab           ??mxdI?? e .....                 plb
fe/cf8f: 64 03        ??mxdI?? e .....                 stz     DPCOP_X
fe/cf91: a9 05 ff     ??mxdI?? e .....                 lda     #$ff05
fe/cf94: 85 02        n?mxdIz? e .....                 sta     DPCOP_Y+1
fe/cf96: 20 9d cf     n?mxdIz? e .....                 jsr     LFECF9D
fe/cf99: 2b           ??mxdI?? e .....                 pld
fe/cf9a: ab           ??mxdI?? e .....                 plb
fe/cf9b: 18           ??mxdI?? e .....                 clc
fe/cf9c: 60           ??mxdI?c e ...#.                 rts

fe/cf9d: 08           n?mxdIz? e ....> LFECF9D         php
fe/cf9e: c2 30        n?mxdIz? e .....                 rep     #$30
fe/cfa0: 48           n?mxdIz? e .....                 pha
fe/cfa1: a0 00 00     n?mxdIz? e .....                 ldy     #$0000
fe/cfa4: b3 01        n?mxdIZ? e .....                 lda     ($01,S),y
fe/cfa6: a8           ??mxdI?? e .....                 tay
fe/cfa7: e2 20        ??mxdI?? e .....                 sep     #$20
                                                       .rwid   shortm
fe/cfa9: a9 00        ??MxdI?? e .....                 lda     #$00
fe/cfab: 88           ??MxdI?? e ....> LFECFAB         dey
fe/cfac: c0 02 00     ??MxdI?? e .....                 cpy     #$0002
fe/cfaf: 90 04        ??MxdI?? e .....                 bcc     LFECFB5
fe/cfb1: 93 01        ??MxdI?C e .....                 sta     ($01,S),y
fe/cfb3: 80 f6        ??MxdI?C e ...#.                 bra     LFECFAB

fe/cfb5: c2 20        ??MxdI?c e ....> LFECFB5         rep     #$20
                                                       .rwid   longm
fe/cfb7: 68           ??mxdI?c e .....                 pla
fe/cfb8: 28           ??mxdI?c e .....                 plp
fe/cfb9: 18           n?mxdIzc e .....                 clc
fe/cfba: 60           n?mxdIzc e ...#.                 rts

                                       ********************************************************************************
                                       * ST - SYSTEM?                                                                 *
                                       *                                                                              *
                                       * This well known entry is called as 00/FF88                                   *
                                       ********************************************************************************
                                                       .rwid   shortm,shortx
fe/cfbb: 08           ????d??? e @T... default__ST     php
fe/cfbc: c2 30        ????d??? e .....                 rep     #$30
                                                       .rwid   longm,longx
fe/cfbe: e0 22 00     ??mxd??? e .....                 cpx     #$0022
fe/cfc1: b0 14        ??mxd??? e .....                 bcs     @resec
fe/cfc3: 0b           ??mxd??c e .....                 phd
fe/cfc4: 8b           ??mxd??c e .....                 phb
fe/cfc5: 4b           ??mxd??c e .....                 phk
                                                       .dbank  K (auto)
fe/cfc6: ab           ??mxd??c e .....                 plb
fe/cfc7: f4 00 ac     ??mxd??c e .....                 pea     DPSYS
fe/cfca: 2b           ??mxd??c e .....                 pld
fe/cfcb: e2 30        ??mxd??c e .....                 sep     #$30
                                                       .rwid   shortm,shortx
fe/cfcd: fc da cf     ??MXd??c e .....                 jsr     (tbl__ST_dispatch,x)
fe/cfd0: ab           ??MXd??? e .....                 plb
fe/cfd1: 2b           ??MXd??? e .....                 pld
fe/cfd2: b0 03        ??MXd??? e .....                 bcs     @resec
fe/cfd4: 28           ??MXd??c e .....                 plp
fe/cfd5: 18           ????d??? e .....                 clc
fe/cfd6: 6b           ????d??c e ...#.                 rtl

fe/cfd7: 28           ????d??C e ....> @resec          plp
fe/cfd8: 38           ????d??? e .....                 sec
fe/cfd9: 6b           ????d??C e ...#.                 rtl

fe/cfda: 25 b6                   ..... tbl__ST_dispatch .dd2   __ST_0 & $ffff    ;ST 0 - return string "SYSTEM"
fe/cfdc: 96 d1                   .....                 .dd2    __ST_2 & $ffff    ;ST 2 - return B0 FF80 table vector after re-indexing
fe/cfde: bf d1                   .....                 .dd2    __ST_4 & $ffff    ;ST 4 - update B0 FF80 table vector after re-indexing
fe/cfe0: f6 d1                   .....                 .dd2    __ST_6 & $ffff    ;ST 6 - return B0 FE80 table vector after re-indexing
fe/cfe2: 18 d2                   .....                 .dd2    __ST_8 & $ffff    ;ST 8 - update B0 FE80 table vector after re-indexing
fe/cfe4: fc cf                   .....                 .dd2    __ST_A & $ffff    ;ST A - GSINIT with Carry clear - i.e. Space or CR terminates unquoted
fe/cfe6: ff cf                   .....                 .dd2    __ST_C & $ffff    ;ST C - GSINIT with Carry set - i.e. only CR terminates unquoted
fe/cfe8: 51 d0                   .....                 .dd2    __ST_E & $ffff    ;ST E - gsread update flags from H
fe/cfea: 37 d1                   .....                 .dd2    syserrUseCoroutines & $ffff ;ST 10 - bad call
fe/cfec: 52 d1                   .....                 .dd2    syserrUseCoroutines2 & $ffff ;ST 12 - bad call
fe/cfee: 7a d1                   .....                 .dd2    doSTSBK & $ffff   ;ST 14 - look something up in a table pointed to by 00FF0D,0
fe/cff0: 84 d1                   .....                 .dd2    doSTTBK & $ffff   ;ST 16 - look something up in a table pointed to by 00FF0D,Y
fe/cff2: 63 d2                   .....                 .dd2    __ST_18 & $ffff
fe/cff4: 6d d1                   .....                 .dd2    TFED16D & $ffff
fe/cff6: f0 d0                   .....                 .dd2    __ST_1C & $ffff
fe/cff8: 19 d1                   .....                 .dd2    TFED119 & $ffff
fe/cffa: 08 d1                   .....                 .dd2    TFED108 & $ffff

                                       ********************************************************************************
                                       * ST A - GSINIT CC                                                             *
                                       *                                                                              *
                                       * Initialise a GSREAD string, space or CR will terminate an unquoted string    *
                                       ********************************************************************************
fe/cffc: 18           ??MXd??? e @T... __ST_A          clc
fe/cffd: 80 01        ??MXd??c e ...#.                 bra     _ST_AC_int

                                       ********************************************************************************
                                       * ST C - GSINIT CC                                                             *
                                       *                                                                              *
                                       * Initialise a GSREAD string, space or CR will terminate an unquoted string    *
                                       ********************************************************************************
fe/cfff: 38           ??MXd??? e @T... __ST_C          sec
fe/d000: 85 ed        ??MXd??? e ....> _ST_AC_int      sta     <DPSYS_GSREAD_ptr
fe/d002: eb           ??MXd??? e .....                 xba
fe/d003: 85 ee        ??MXd??? e .....                 sta     <DPSYS_GSREAD_ptr+1
fe/d005: a3 03        ??MXd??? e .....                 lda     $03,S
fe/d007: 85 ef        ??MXd??? e .....                 sta     <DPSYS_GSREAD_ptr+2
fe/d009: 66 dd        ??MXd??? e .....                 ror     <DPSYS_GSREAD_flags ;DD gets loaded with top bit set if entered via OP C
fe/d00b: 20 23 d0     ??MXd??? e .....                 jsr     __ST_skipSpaces
fe/d00e: c8           ??MXd??? e .....                 iny
fe/d00f: c9 22        ??MXd??? e .....                 cmp     #$22
fe/d011: f0 02        ??MXd??? e .....                 beq     @notq
fe/d013: 88           ??MXd?z? e .....                 dey                       ;if first char is not " then back up one
fe/d014: 18           ??MXd??? e .....                 clc
fe/d015: 66 dd        ??MXd??? e ....> @notq           ror     <DPSYS_GSREAD_flags
fe/d017: 48           ??MXd??? e .....                 pha
fe/d018: a5 dd        ??MXd??? e .....                 lda     <DPSYS_GSREAD_flags
fe/d01a: eb           ??MXd??? e .....                 xba
fe/d01b: 68           ??MXd??? e .....                 pla
fe/d01c: c9 0d        ??MXd??? e .....                 cmp     #$0d
fe/d01e: f0 01        ??MXd??? e .....                 beq     @ret
fe/d020: 18           ??MXd?z? e .....                 clc
fe/d021: 60           ??MXd??? e ...#> @ret            rts

fe/d022: c8           ??MXd?Z? e ....> @lp             iny
fe/d023: b7 ed        ??MXd??? e ....> __ST_skipSpaces lda     [<DPSYS_GSREAD_ptr],y
fe/d025: c9 20        ??MXd??? e .....                 cmp     #$20
fe/d027: f0 f9        ??MXd??? e .....                 beq     @lp
fe/d029: c9 0d        ??MXd?z? e .....                 cmp     #$0d
fe/d02b: 60           ??MXd??? e ...#.                 rts

fe/d02c: b7 ed        ??MXd??? e ....> gsread_dec_digit lda    [$ed],y
fe/d02e: c9 3a        ??MXd??? e .....                 cmp     #‘:’
fe/d030: b0 07        ??MXd??? e .....                 bcs     gsread_clc_ret
fe/d032: c9 30        ??MXd??c e .....                 cmp     #$30
fe/d034: 90 03        ??MXd??? e .....                 bcc     gsread_clc_ret
fe/d036: 29 0f        ??MXd??C e .....                 and     #$0f
fe/d038: 60           n?MXd??C e ...#.                 rts

fe/d039: 18           ??MXd??? e ....> gsread_clc_ret  clc
fe/d03a: 60           ??MXd??c e ...#.                 rts

fe/d03b: c8           ??MXd?Z? e ....> gsread_iny_hex_digit iny
fe/d03c: 20 2c d0     ??MXd??? e ....> gsread_hex_digit jsr    gsread_dec_digit
fe/d03f: b0 0e        ??MXd??? e .....                 bcs     @inyret
fe/d041: 29 df        ??MXd??c e .....                 and     #$df
fe/d043: c9 47        ??MXd??c e .....                 cmp     #‘G’
fe/d045: b0 f2        ??MXd??? e .....                 bcs     gsread_clc_ret
fe/d047: c9 41        ??MXd??c e .....                 cmp     #‘A’
fe/d049: 90 ee        ??MXd??? e .....                 bcc     gsread_clc_ret
fe/d04b: 08           ??MXd??C e .....                 php
fe/d04c: e9 37        ??MXd??C e .....                 sbc     #$37
fe/d04e: 28           ??MXd??? e .....                 plp
fe/d04f: c8           ??MXd??C e ....> @inyret         iny
fe/d050: 60           ??MXd??C e ...#.                 rts

                                       ********************************************************************************
                                       * __ST E - do a GSREAD                                                         *
                                       *                                                                              *
                                       * QRY - looks to update the flags from passed in H                             *
                                       ********************************************************************************
fe/d051: eb           ??MXd??? e @T... __ST_E          xba
fe/d052: 29 fe        ??MXd??? e .....                 and     #$fe
fe/d054: 85 dd        ??MXd??? e .....                 sta     <DPSYS_GSREAD_flags
fe/d056: b7 ed        ??MXd??? e ....> gsread_read     lda     [<DPSYS_GSREAD_ptr],y
fe/d058: f0 04        ??MXd??? e .....                 beq     LFED05E
fe/d05a: c9 0d        ??MXd?z? e .....                 cmp     #$0d
fe/d05c: d0 06        ??MXd??? e .....                 bne     LFED064
fe/d05e: 24 dd        ??MXd?Z? e ....> LFED05E         bit     <DPSYS_GSREAD_flags
fe/d060: 30 26        ??MXd??? e .....                 bmi     brkBadString
fe/d062: 10 1b        n?MXd??? e ...#.                 bpl     LFED07F

fe/d064: c9 20        ??MXd?z? e ....> LFED064         cmp     #$20
fe/d066: 90 20        ??MXd??? e .....                 bcc     brkBadString
fe/d068: d0 06        ??MXd??C e .....                 bne     LFED070
fe/d06a: 24 dd        ??MXd?ZC e .....                 bit     <DPSYS_GSREAD_flags
fe/d06c: 30 73        ??MXd??C e .....                 bmi     LFED0E1
fe/d06e: 50 0f        n?MXd??C e .....                 bvc     LFED07F
fe/d070: c9 22        ??MXd??C e ....> LFED070         cmp     #$22
fe/d072: d0 21        ??MXd??? e .....                 bne     LFED095
fe/d074: 24 dd        ??MXd?Z? e .....                 bit     <DPSYS_GSREAD_flags
fe/d076: 10 69        ??MXd??? e .....                 bpl     LFED0E1
fe/d078: c8           N?MXd??? e .....                 iny
fe/d079: b7 ed        ??MXd??? e .....                 lda     [<DPSYS_GSREAD_ptr],y
fe/d07b: c9 22        ??MXd??? e .....                 cmp     #$22
fe/d07d: f0 62        ??MXd??? e .....                 beq     LFED0E1
fe/d07f: 20 23 d0     ??MXd??? e ....> LFED07F         jsr     __ST_skipSpaces
fe/d082: 38           ??MXd??? e .....                 sec
fe/d083: eb           ??MXd??C e .....                 xba
fe/d084: a5 dd        ??MXd??C e .....                 lda     <DPSYS_GSREAD_ptr-16
fe/d086: eb           ??MXd??C e .....                 xba
fe/d087: 60           ??MXd??C e ...#.                 rts

fe/d088: 00 fd        ??MXd??? e ...#> brkBadString    brk     $fd

fe/d08a: 42 61 64 20+            .....                 .zstr   “Bad string”

fe/d095: c9 7c        ??MXd?z? e ....> LFED095         cmp     #‘|’
fe/d097: d0 48        ??MXd??? e .....                 bne     LFED0E1
fe/d099: c8           ??MXd?Z? e .....                 iny
fe/d09a: b7 ed        ??MXd??? e .....                 lda     [<DPSYS_GSREAD_ptr],y
fe/d09c: c9 7c        ??MXd??? e .....                 cmp     #‘|’
fe/d09e: f0 41        ??MXd??? e .....                 beq     LFED0E1
fe/d0a0: c9 22        ??MXd?z? e .....                 cmp     #‘"’
fe/d0a2: f0 3d        ??MXd??? e .....                 beq     LFED0E1
fe/d0a4: c9 26        ??MXd?z? e .....                 cmp     #‘&’
fe/d0a6: d0 16        ??MXd??? e .....                 bne     LFED0BE
fe/d0a8: 20 3b d0     ??MXd?Z? e .....                 jsr     gsread_iny_hex_digit
fe/d0ab: 90 db        ??MXd??? e .....                 bcc     brkBadString
fe/d0ad: 0a           ??MXd??C e .....                 asl     A
fe/d0ae: 0a           ??MXd??? e .....                 asl     A
fe/d0af: 0a           ??MXd??? e .....                 asl     A
fe/d0b0: 0a           ??MXd??? e .....                 asl     A
fe/d0b1: 48           ??MXd??? e .....                 pha
fe/d0b2: 20 3c d0     ??MXd??? e .....                 jsr     gsread_hex_digit
fe/d0b5: 90 d1        ??MXd??? e .....                 bcc     brkBadString
fe/d0b7: 03 01        ??MXd??C e .....                 ora     $01,S
fe/d0b9: 83 01        ??MXd??C e .....                 sta     $01,S
fe/d0bb: 68           ??MXd??C e .....                 pla
fe/d0bc: 80 2c        ??MXd??C e ...#.                 bra     LFED0EA

fe/d0be: c9 21        ??MXd?z? e ....> LFED0BE         cmp     #‘!’
fe/d0c0: d0 09        ??MXd??? e .....                 bne     LFED0CB
fe/d0c2: c8           ??MXd?Z? e .....                 iny
fe/d0c3: a5 dd        ??MXd??? e .....                 lda     <DPSYS_GSREAD_flags
fe/d0c5: 09 01        ??MXd??? e .....                 ora     #$01
fe/d0c7: 85 dd        ??MXd?z? e .....                 sta     <DPSYS_GSREAD_flags
fe/d0c9: 80 8b        ??MXd?z? e ...#.                 bra     gsread_read

fe/d0cb: c9 20        ??MXd?z? e ....> LFED0CB         cmp     #‘ ’
fe/d0cd: 90 b9        ??MXd??? e .....                 bcc     brkBadString
fe/d0cf: c9 3f        ??MXd??C e .....                 cmp     #‘?’
fe/d0d1: f0 0c        ??MXd??? e .....                 beq     LFED0DF
fe/d0d3: da           ??MXd?z? e .....                 phx
fe/d0d4: a2 14        ??MXd?z? e .....                 ldx     #$14
fe/d0d6: 22 ac ff 00  n?MXd?z? e .....                 jsl     __KB
fe/d0da: fa           ??MXd??? e .....                 plx
fe/d0db: e2 40        ??MXd??? e .....                 sep     #$40
fe/d0dd: 80 03        ?VMXd??? e ...#.                 bra     LFED0E2

fe/d0df: a9 7f        ??MXd?Z? e ....> LFED0DF         lda     #$7f
fe/d0e1: b8           ??MXd??? e ....> LFED0E1         clv
fe/d0e2: c8           ??MXd??? e ....> LFED0E2         iny
fe/d0e3: 2a           ??MXd??? e .....                 rol     A
fe/d0e4: 48           ??MXd??? e .....                 pha
fe/d0e5: a5 dd        ??MXd??? e .....                 lda     $dd
fe/d0e7: 6a           ??MXd??? e .....                 ror     A
fe/d0e8: 68           ??MXd??? e .....                 pla
fe/d0e9: 6a           ??MXd??? e .....                 ror     A
fe/d0ea: eb           ??MXd??? e ....> LFED0EA         xba
fe/d0eb: a5 dd        ??MXd??? e .....                 lda     $dd
fe/d0ed: eb           ??MXd??? e .....                 xba
fe/d0ee: 18           ??MXd??? e .....                 clc
fe/d0ef: 60           ??MXd??c e ...#.                 rts

                                       ********************************************************************************
                                       * __ST 1C - add Y to GSREAD pointer                                            *
                                       *                                                                              *
                                       * returns updated pointer in BHA but doesn't update stored pointer             *
                                       ********************************************************************************
fe/d0f0: 18           ??MXd??? e @T... __ST_1C         clc
fe/d0f1: 98           ??MXd??c e .....                 tya
fe/d0f2: 65 ed        ??MXd??c e .....                 adc     <DPSYS_GSREAD_ptr
fe/d0f4: eb           ??MXd??? e .....                 xba
fe/d0f5: a4 ef        ??MXd??? e .....                 ldy     <DPSYS_GSREAD_ptr+2
fe/d0f7: a6 ee        ??MXd??? e .....                 ldx     <DPSYS_GSREAD_ptr+1
fe/d0f9: 90 04        ??MXd??? e .....                 bcc     @skinc
fe/d0fb: e8           ??MXd??C e .....                 inx
fe/d0fc: d0 01        ??MXd??C e .....                 bne     @skinc
fe/d0fe: c8           ??MXd?ZC e .....                 iny
fe/d0ff: 98           ??MXd??? e ....> @skinc          tya
fe/d100: 83 03        ??MXd??? e .....                 sta     $03,S
fe/d102: 8a           ??MXd??? e .....                 txa
fe/d103: eb           ??MXd??? e .....                 xba
fe/d104: 18           ??MXd??? e .....                 clc
fe/d105: a0 00        ??MXd??c e .....                 ldy     #$00
fe/d107: 60           n?MXd?Zc e ...#.                 rts

fe/d108: af 0f ff 00  ??MXd??? e @T... TFED108         ldal    f:EXSYS_0D_BRKADDR_SAVE+2
fe/d10c: 83 03        ??MXd??? e .....                 sta     $03,S
fe/d10e: af 0e ff 00  ??MXd??? e .....                 ldal    f:EXSYS_0D_BRKADDR_SAVE+1
fe/d112: eb           ??MXd??? e .....                 xba
fe/d113: af 0d ff 00  ??MXd??? e .....                 ldal    f:EXSYS_0D_BRKADDR_SAVE
fe/d117: 18           ??MXd??? e .....                 clc
fe/d118: 60           ??MXd??c e ...#.                 rts

fe/d119: a2 20        ??MXd??? e @T... TFED119         ldx     #$20
fe/d11b: 22 88 ff 00  n?MXd?z? e .....                 jsl     __ST
fe/d11f: 02 2d        ??MXd??? e .....                 cop     COP_2D_OPWRM
fe/d121: 90 0e        ??MXd??? e .....                 bcc     LFED131
fe/d123: a0 00        ??MXd??C e .....                 ldy     #$00
fe/d125: 02 2e        n?MXd?ZC e .....                 cop     COP_2E_OPFPO
fe/d127: b0 04        n?MXd?ZC e ...#.                 bcs     LFED12D

fe/d129: 02 2d        ??MXd??? e @T...                 cop     COP_2D_OPWRM
fe/d12b: 90 04        ??MXd??? e .....                 bcc     LFED131
fe/d12d: 02 01        ??MXd??C e ....> LFED12D         cop     COP_01_OPWRS
fe/d12f: 3f 00                   .T...                 .zstr   “?”
fe/d131: 02 01        ??MXd??? e ....> LFED131         cop     COP_01_OPWRS
fe/d133: 3a 20 00                .T...                 .zstr   “: ”
fe/d136: 60           ??MXd??? e ...#.                 rts

fe/d137: 02 0f        ??MXd??? e @T... syserrUseCoroutines cop COP_0F_OPERR
fe/d139: 75 73 65 20+            .T...                 .zstr   “use coroutines not STSEN”
fe/d152: 02 0f        ??MXd??? e ..... syserrUseCoroutines2 cop COP_0F_OPERR
fe/d154: 75 73 65 20+            .T...                 .zstr   “use coroutines not STREN”
fe/d16d: f4 00 ff     ??MXd??? e ..... TFED16D         pea     EXSYS
fe/d170: 2b           ??MXd??? e .....                 pld
fe/d171: c2 20        ??MXd??? e .....                 rep     #$20
                                                       .rwid   longm
fe/d173: c6 0d        ??mXd??? e .....                 dec     <EXSYS_0D_BRKADDR_SAVE
fe/d175: dc 0d ff     ??mXd??? e ...#.                 jml     [EXSYS_0D_BRKADDR_SAVE]

fe/d178: 38                      .....                 .dd1    $38
fe/d179: 60                      .....                 .dd1    $60

                                       ********************************************************************************
                                       * STSBK Read the BRK signature                                                 *
                                       *                                                                              *
                                       * Action: This call returns the error number associated with the last BRK      *
                                       * executed.                                                                    *
                                       *                                                                              *
                                       * On Entry:                                                                    *
                                       *    X   STSBK                                                                 *
                                       * Exit:                                                                        *
                                       *    A   Error number of the last error                                        *
                                       *    HY  State to be used in subsequent calls                                  *
                                       *    BD  Preserved                                                             *
                                       *                                                                              *
                                       * Note that HY must be preserved between the STSBK call and subsequent calls   *
                                       * to STTBK                                                                     *
                                       ********************************************************************************
                                                       .rwid   shortm
fe/d17a: e2 10        ??MXd??? e @T... doSTSBK         sep     #$10
fe/d17c: a0 00        ??MXd??? e .....                 ldy     #$00
fe/d17e: 20 84 d1     n?MXd?Z? e .....                 jsr     doSTTBK
fe/d181: a0 01        ??MXd??? e .....                 ldy     #$01
fe/d183: 60           n?MXd?z? e ...#.                 rts

                                       ********************************************************************************
                                       * __ST 16 - STTBK - Read BRK message                                           *
                                       *                                                                              *
                                       * Action: This call reiurns the next character in the error message associated *
                                       * with the last BRK executed.                                                  *
                                       *                                                                              *
                                       * Entry:                                                                       *
                                       *    HY  State returned by lastSTSBK or STTBK                                  *
                                       *    X   STTBK                                                                 *
                                       * Exit:                                                                        *
                                       *    B,D Preserved                                                             *
                                       *    C=0 Then next byte was read                                               *
                                       *    A   Next byte in BRK message text                                         *
                                       *    HY  State for next STTBK                                                  *
                                       * or C=1 Last character has been read                                          *
                                       ********************************************************************************
fe/d184: e2 10        n?MXd?Z? e .T..> doSTTBK         sep     #$10
fe/d186: f4 00 ff     n?MXd?Z? e .....                 pea     EXSYS
fe/d189: 2b           n?MXd?Z? e .....                 pld
fe/d18a: b7 0d        ??MXd??? e .....                 lda     [<EXSYS_0D_BRKADDR_SAVE],y
fe/d18c: f0 06        ??MXd??? e .....                 beq     @sec
fe/d18e: c8           ??MXd?z? e .....                 iny
fe/d18f: f0 02        ??MXd??? e .....                 beq     @deysec
fe/d191: 18           ??MXd?z? e .....                 clc
fe/d192: 60           ??MXd?zc e ...#.                 rts

fe/d193: 88           ??MXd?Z? e ....> @deysec         dey
fe/d194: 38           ??MXd??? e ....> @sec            sec
fe/d195: 60           ??MXd??C e ...#.                 rts

                                       ********************************************************************************
                                       * __ST op 2                                                                    *
                                       *                                                                              *
                                       * Looks up from 00FF01 table a value and returns in BHA (QRY)                  *
                                       ********************************************************************************
fe/d196: 08           ??MXd??? e @T... __ST_2          php
fe/d197: 78           ??MXd??? e .....                 sei
fe/d198: c0 eb        ??MXdI?? e .....                 cpy     #$eb
fe/d19a: 90 57        ??MXdI?? e .....                 bcc     __ST_plpretsec    ;if Y < EB then exit fail
fe/d19c: b9 63 d1     ??MXdI?C e .....                 lda     0+(tbl__ST_2_indices & $ffff)-235,y
fe/d19f: f0 52        ??MXdI?C e .....                 beq     __ST_plpretsec
fe/d1a1: aa           ??MXdIzC e .....                 tax
fe/d1a2: f4 00 00     ??MXdI?C e .....                 pea     $0000
                                                       .dbank  $00
fe/d1a5: ab           ??MXdI?C e .....                 plb
fe/d1a6: ab           ??MXdI?C e .....                 plb
fe/d1a7: bf 01 ff 00  ??MXdI?C e .....                 ldal    f:tblB0JumpTableFF80_QRY-127,x
fe/d1ab: 48           ??MXdI?C e .....                 pha
fe/d1ac: bf 02 ff 00  ??MXdI?C e .....                 ldal    f:tblB0JumpTableFF80_QRY-126,x
fe/d1b0: 48           ??MXdI?C e .....                 pha
fe/d1b1: bf 03 ff 00  ??MXdI?C e .....                 ldal    f:tblB0JumpTableFF80_QRY-125,x
fe/d1b5: 48           ??MXdI?C e .....                 pha
fe/d1b6: 68           ??MXdI?C e ....> __ST_retstackedBHA_clc pla
fe/d1b7: 83 06        ??MXdI?C e .....                 sta     $06,S
fe/d1b9: 68           ??MXdI?C e .....                 pla
fe/d1ba: eb           ??MXdI?C e .....                 xba
fe/d1bb: 68           ??MXdI?C e .....                 pla
fe/d1bc: 28           ??MXdI?C e .....                 plp
fe/d1bd: 18           ??MXd??? e .....                 clc
fe/d1be: 60           ??MXd??c e ...#.                 rts

                                       ********************************************************************************
                                       * __ST op 4                                                                    *
                                       *                                                                              *
                                       * updates from BHA 00FF01 table value and returns old in BHA (QRY)             *
                                       ********************************************************************************
fe/d1bf: 08           ??MXd??? e @T... __ST_4          php
fe/d1c0: 78           ??MXd??? e .....                 sei
fe/d1c1: c0 eb        ??MXdI?? e .....                 cpy     #$eb
fe/d1c3: 90 2e        ??MXdI?? e .....                 bcc     __ST_plpretsec
fe/d1c5: aa           ??MXdI?C e .....                 tax
fe/d1c6: b9 63 d1     ??MXdI?C e .....                 lda     0+(tbl__ST_2_indices & $ffff)-235,y
fe/d1c9: f0 28        ??MXdI?C e .....                 beq     __ST_plpretsec
fe/d1cb: f4 00 00     ??MXdIzC e .....                 pea     $0000
fe/d1ce: ab           ??MXdIzC e .....                 plb
fe/d1cf: ab           ??MXdI?C e .....                 plb
fe/d1d0: 9b           ??MXdI?C e .....                 txy
fe/d1d1: aa           ??MXdI?C e .....                 tax
fe/d1d2: bf 01 ff 00  ??MXdI?C e .....                 ldal    f:tblB0JumpTableFF80_QRY-127,x
fe/d1d6: 48           ??MXdI?C e .....                 pha
fe/d1d7: bf 02 ff 00  ??MXdI?C e .....                 ldal    f:tblB0JumpTableFF80_QRY-126,x
fe/d1db: 48           ??MXdI?C e .....                 pha
fe/d1dc: bf 03 ff 00  ??MXdI?C e .....                 ldal    f:tblB0JumpTableFF80_QRY-125,x
fe/d1e0: 48           ??MXdI?C e .....                 pha
fe/d1e1: 98           ??MXdI?C e .....                 tya
fe/d1e2: 9f 01 ff 00  ??MXdI?C e .....                 stal    f:tblB0JumpTableFF80_QRY-127,x
fe/d1e6: eb           ??MXdI?C e .....                 xba
fe/d1e7: 9f 02 ff 00  ??MXdI?C e .....                 stal    f:tblB0JumpTableFF80_QRY-126,x
fe/d1eb: a3 07        ??MXdI?C e .....                 lda     $07,S
fe/d1ed: 9f 03 ff 00  ??MXdI?C e .....                 stal    f:tblB0JumpTableFF80_QRY-125,x
fe/d1f1: 80 c3        ??MXdI?C e ...#.                 bra     __ST_retstackedBHA_clc

fe/d1f3: 28           ??MXdI?? e ....> __ST_plpretsec  plp
fe/d1f4: 38           ??MXd??? e .....                 sec
fe/d1f5: 60           ??MXd??C e ...#.                 rts

                                       ********************************************************************************
                                       * __ST op 6                                                                    *
                                       *                                                                              *
                                       * Looks up from 00FE01 table a value and returns in BHA (QRY)                  *
                                       ********************************************************************************
fe/d1f6: 08           ??MXd??? e @T... __ST_6          php
fe/d1f7: 78           ??MXd??? e .....                 sei
fe/d1f8: c0 eb        ??MXdI?? e .....                 cpy     #$eb
fe/d1fa: 90 f7        ??MXdI?? e .....                 bcc     __ST_plpretsec
fe/d1fc: b9 63 d1     ??MXdI?C e .....                 lda     0+(tbl__ST_2_indices & $ffff)-235,y
fe/d1ff: f0 f2        ??MXdI?C e .....                 beq     __ST_plpretsec
fe/d201: aa           ??MXdIzC e .....                 tax
fe/d202: f4 00 00     ??MXdI?C e .....                 pea     $0000
fe/d205: ab           ??MXdI?C e .....                 plb
fe/d206: ab           ??MXdI?C e .....                 plb
fe/d207: bf 01 fe 00  ??MXdI?C e .....                 ldal    f:tblB0JumpTableFE80_QRY-127,x
fe/d20b: 48           ??MXdI?C e .....                 pha
fe/d20c: bf 02 fe 00  ??MXdI?C e .....                 ldal    f:tblB0JumpTableFE80_QRY-126,x
fe/d210: 48           ??MXdI?C e .....                 pha
fe/d211: bf 03 fe 00  ??MXdI?C e .....                 ldal    f:tblB0JumpTableFE80_QRY-125,x
fe/d215: 48           ??MXdI?C e .....                 pha
fe/d216: 80 9e        ??MXdI?C e ...#> bra__ST_retstackedBHA_clc bra __ST_retstackedBHA_clc

                                       ********************************************************************************
                                       * __ST op 8                                                                    *
                                       *                                                                              *
                                       * updates from BHA 00FE01 table value and returns old in BHA (QRY)             *
                                       ********************************************************************************
fe/d218: 08           ??MXd??? e @T... __ST_8          php
fe/d219: e2 30        ??MXd??? e .....                 sep     #$30
fe/d21b: 78           ??MXd??? e .....                 sei
fe/d21c: c0 eb        ??MXdI?? e .....                 cpy     #$eb
fe/d21e: 90 d3        ??MXdI?? e .....                 bcc     __ST_plpretsec
fe/d220: aa           ??MXdI?C e .....                 tax
fe/d221: b9 63 d1     ??MXdI?C e .....                 lda     0+(tbl__ST_2_indices & $ffff)-235,y
fe/d224: f0 cd        ??MXdI?C e .....                 beq     __ST_plpretsec
fe/d226: f4 00 00     ??MXdIzC e .....                 pea     $0000
fe/d229: ab           ??MXdIzC e .....                 plb
fe/d22a: ab           ??MXdI?C e .....                 plb
fe/d22b: 9b           ??MXdI?C e .....                 txy
fe/d22c: aa           ??MXdI?C e .....                 tax
fe/d22d: bf 01 fe 00  ??MXdI?C e .....                 ldal    f:tblB0JumpTableFE80_QRY-127,x
fe/d231: 48           ??MXdI?C e .....                 pha
fe/d232: bf 02 fe 00  ??MXdI?C e .....                 ldal    f:tblB0JumpTableFE80_QRY-126,x
fe/d236: 48           ??MXdI?C e .....                 pha
fe/d237: bf 03 fe 00  ??MXdI?C e .....                 ldal    f:tblB0JumpTableFE80_QRY-125,x
fe/d23b: 48           ??MXdI?C e .....                 pha
fe/d23c: 98           ??MXdI?C e .....                 tya
fe/d23d: 9f 01 fe 00  ??MXdI?C e .....                 stal    f:tblB0JumpTableFE80_QRY-127,x
fe/d241: eb           ??MXdI?C e .....                 xba
fe/d242: 9f 02 fe 00  ??MXdI?C e .....                 stal    f:tblB0JumpTableFE80_QRY-126,x
fe/d246: a3 07        ??MXdI?C e .....                 lda     $07,S
fe/d248: 9f 03 fe 00  ??MXdI?C e .....                 stal    f:tblB0JumpTableFE80_QRY-125,x
fe/d24c: 80 c8        ??MXdI?C e ...#.                 bra     bra__ST_retstackedBHA_clc

                                       ; This looks to point at a set of offsets into tables in the system area at
                                       ; 00FE00
fe/d24e: 00                      .T... tbl__ST_2_indices .dd1  $00
fe/d24f: b0                      .T...                 .dd1    $b0
fe/d250: ac                      .T...                 .dd1    $ac
fe/d251: a8                      .T...                 .dd1    $a8
fe/d252: a4                      .T...                 .dd1    $a4
fe/d253: a0                      .T...                 .dd1    $a0
fe/d254: 9c                      .T...                 .dd1    $9c
fe/d255: 98                      .T...                 .dd1    $98
fe/d256: 94                      .T...                 .dd1    $94
fe/d257: e4                      .T...                 .dd1    $e4
fe/d258: e8                      .T...                 .dd1    $e8
fe/d259: ec                      .T...                 .dd1    $ec
fe/d25a: f0                      .T...                 .dd1    $f0
fe/d25b: f8                      .T...                 .dd1    $f8
fe/d25c: f4                      .T...                 .dd1    $f4
fe/d25d: fc                      .T...                 .dd1    $fc
fe/d25e: 90                      .T...                 .dd1    $90
fe/d25f: 8c                      .T...                 .dd1    $8c
fe/d260: 88                      .T...                 .dd1    $88
fe/d261: 84                      .T...                 .dd1    $84
fe/d262: 00                      .T...                 .dd1    $00
fe/d263: 08           ??MXd??? e @T... __ST_18         php
fe/d264: 78           ??MXd??? e .....                 sei
fe/d265: c2 30        ??MXdI?? e .....                 rep     #$30
                                                       .rwid   longm,longx
fe/d267: c0 eb 00     ??mxdI?? e .....                 cpy     #$00eb
fe/d26a: 90 16        ??mxdI?? e .....                 bcc     @retsec
fe/d26c: aa           ??mxdI?C e .....                 tax
fe/d26d: b9 63 d1     ??mxdI?C e .....                 lda     0+(tbl__ST_2_indices & $ffff)-235,y
fe/d270: 29 ff 00     ??mxdI?C e .....                 and     #$00ff
fe/d273: f0 0d        n?mxdI?C e .....                 beq     @retsec
fe/d275: 18           n?mxdIzC e .....                 clc
fe/d276: 69 00 fe     n?mxdIzc e .....                 adc     #$fe00
fe/d279: aa           ??mxdI?? e .....                 tax
fe/d27a: a3 05        ??mxdI?? e .....                 lda     $05,S
fe/d27c: 20 b3 b3     ??mxdI?? e .....                 jsr     LFEB3B3
fe/d27f: 28           ??mxdI?? e .....                 plp
                                                       .rwid   shortm,shortx
fe/d280: 18           ??MXd??? e .....                 clc
fe/d281: 60           ??MXd??c e ...#.                 rts

                                                       .rwid   longm,longx
fe/d282: 28           ??mxdI?? e ....> @retsec         plp
                                                       .rwid   shortm,shortx
fe/d283: 38           ??MXd??? e .....                 sec
fe/d284: 60           ??MXd??C e ...#.                 rts

                                       ********************************************************************************
                                       * MM - Memory management entry point                                           *
                                       ********************************************************************************
fe/d285: 08           ????d??? e @T... default__MM     php
fe/d286: c2 30        ????d??? e .....                 rep     #$30
                                                       .rwid   longm,longx
fe/d288: e0 1c 00     ??mxd??? e .....                 cpx     #$001c
fe/d28b: b0 0c        ??mxd??? e .....                 bcs     @resetc
fe/d28d: 0b           ??mxd??c e .....                 phd
fe/d28e: 8b           ??mxd??c e .....                 phb
fe/d28f: fc 9c d2     ??mxd??c e .....                 jsr     (tblMMdispatch,x)
fe/d292: ab           ??mxd??? e .....                 plb
fe/d293: 2b           ??mxd??? e .....                 pld
fe/d294: b0 03        ??mxd??? e .....                 bcs     @resetc
fe/d296: 28           ??mxd??c e .....                 plp
                                                       .rwid   shortm,shortx
fe/d297: 18           ????d??? e .....                 clc
fe/d298: 6b           ????d??c e ...#.                 rtl

                                                       .rwid   longm,longx
fe/d299: 28           ??mxd??C e ....> @resetc         plp
                                                       .rwid   shortm,shortx
fe/d29a: 38           ????d??? e .....                 sec
fe/d29b: 6b           ????d??C e ...#.                 rtl

fe/d29c: 25 b6                   ..... tblMMdispatch   .dd2    __ST_0 & $ffff    ;0 - __MMNXT - return string "SYSTEM"?
fe/d29e: bc d4                   .....                 .dd2    doMMINIT & $ffff  ;2 - __MMINIT - initialise memory management routines
fe/d2a0: 16 d4                   .....                 .dd2    doMMBP & $ffff    ;4 - __MMBP - ???
fe/d2a2: 48 d4                   .....                 .dd2    doMMASD & $ffff   ;6 - __MMASD - allocate small descending area
fe/d2a4: eb d3                   .....                 .dd2    doMMALD & $ffff   ;8 - __MMALD - allocate large descending
fe/d2a6: 4b d4                   .....                 .dd2    doMMASA & $ffff   ;A - __MMASA - allocate a small ascending
fe/d2a8: ee d3                   .....                 .dd2    doMMALA & $ffff   ;C - __MMALA - allocate large asending
fe/d2aa: dc d6                   .....                 .dd2    doMMBAS & $ffff   ;E - __MMBAS - get base of pool
fe/d2ac: f3 d6                   .....                 .dd2    doMMLEN & $ffff   ;10 - __MMLEN - return pool length
fe/d2ae: 1b d7                   .....                 .dd2    doMMTOP & $ffff   ;12 - __MMTOP - return top of pool
fe/d2b0: 32 d7                   .....                 .dd2    doMMFND & $ffff   ;14 - __MMFND - find a pool by address
fe/d2b2: 7e d7                   .....                 .dd2    doMMCHK & $ffff   ;16 - __MMCHK - check integrity of memory system
fe/d2b4: 12 d9                   .....                 .dd2    doMMAZB & $ffff   ;18 - __MMAZB - Allocate Bank 0
fe/d2b6: 44 d9                   .....                 .dd2    doMMMRG & $ffff   ;1A - __MMMRG - merge two pools

fe/d2b8: 08           ??MXdI?? e ....> LFED2B8         php
fe/d2b9: 0b           ??MXdI?? e .....                 phd
fe/d2ba: 8b           ??MXdI?? e .....                 phb
fe/d2bb: c2 30        ??MXdI?? e .....                 rep     #$30
                                                       .rwid   longm,longx
fe/d2bd: 20 ff d2     ??mxdI?? e .....                 jsr     LFED2FF
fe/d2c0: b0 38        ??mxdI?? e .....                 bcs     LFED2FA
fe/d2c2: 20 24 d3     ??mxdI?c e .....                 jsr     LFED324
fe/d2c5: b0 33        ??mxdI?? e .....                 bcs     LFED2FA
fe/d2c7: 20 36 d3     ??mxdI?c e .....                 jsr     LFED336
fe/d2ca: b0 2e        ??mxdI?? e .....                 bcs     LFED2FA
fe/d2cc: a9 00 20     ??mxdI?c e .....                 lda     #$2000
fe/d2cf: a2 18 00     n?mxdIzc e .....                 ldx     #$0018
fe/d2d2: 22 8c ff 00  n?mxdIzc e .....                 jsl     __MM
fe/d2d6: b0 22        ??mxdI?? e .....                 bcs     LFED2FA
fe/d2d8: a2 0e 00     ??mxdI?c e .....                 ldx     #$000e
fe/d2db: 22 8c ff 00  n?mxdIzc e .....                 jsl     __MM
fe/d2df: a9 00 a5     ??mxdI?? e .....                 lda     #$a500
fe/d2e2: f4 00 09     n?mxdIz? e .....                 pea     $0900
fe/d2e5: 2b           n?mxdIz? e .....                 pld
fe/d2e6: a0 01 00     ??mxdI?? e .....                 ldy     #$0001
fe/d2e9: a2 04 00     n?mxdIz? e .....                 ldx     #$0004
fe/d2ec: 22 8c ff 00  n?mxdIz? e .....                 jsl     __MM
fe/d2f0: b0 08        ??mxdI?? e .....                 bcs     LFED2FA
fe/d2f2: 20 7f cf     ??mxdI?c e .....                 jsr     LFECF7F
fe/d2f5: ab           ??mxdI?? e .....                 plb
fe/d2f6: 2b           ??mxdI?? e .....                 pld
fe/d2f7: 28           ??mxdI?? e .....                 plp
                                                       .rwid   shortm,shortx
fe/d2f8: 18           ??MXdI?? e .....                 clc
fe/d2f9: 60           ??MXdI?c e ...#.                 rts

                                                       .rwid   longm,longx
fe/d2fa: ab           ??mxdI?C e ....> LFED2FA         plb
fe/d2fb: 2b           ??mxdI?C e .....                 pld
fe/d2fc: 28           ??mxdI?C e .....                 plp
                                                       .rwid   shortm,shortx
fe/d2fd: 38           ??MXdI?? e .....                 sec
fe/d2fe: 60           ??MXdI?C e ...#.                 rts

                                                       .rwid   longm,longx
fe/d2ff: a9 02 00     ??mxdI?? e ....> LFED2FF         lda     #HND_type_2_CBMEM
fe/d302: 20 01 ce     n?mxdIz? e .....                 jsr     obtainFreeBlock
fe/d305: b0 1c        ??mxdI?? e .....                 bcs     LFED323
fe/d307: aa           ??mxdI?c e .....                 tax
fe/d308: 20 d7 d6     ??mxdI?c e .....                 jsr     LFED6D7
fe/d30b: 8a           ??mxdI?? e .....                 txa
fe/d30c: 20 d2 d6     ??mxdI?? e .....                 jsr     LFED6D2
fe/d30f: a9 00 00     ??mxdI?? e .....                 lda     #$0000
fe/d312: 9f 04 00 00  n?mxdIZ? e .....                 stal    f:DPCOP_X+1,x
fe/d316: a9 ff ff     n?mxdIZ? e .....                 lda     #$ffff
fe/d319: 9f 06 00 00  n?mxdIz? e .....                 stal    f:DPCOP_AH+1,x
fe/d31d: 8a           n?mxdIz? e .....                 txa
fe/d31e: 8f 0a fe 00  ??mxdI?? e .....                 stal    f:$00fe0a
fe/d322: 18           ??mxdI?? e .....                 clc
fe/d323: 60           ??mxdI?? e ...#> LFED323         rts

fe/d324: af 0a fe 00  ??mxdI?c e ....> LFED324         ldal    f:$00fe0a
fe/d328: aa           ??mxdI?c e .....                 tax
fe/d329: 20 74 d3     ??mxdI?c e .....                 jsr     LFED374
fe/d32c: 20 de d5     ??mxdI?? e .....                 jsr     LFED5DE
fe/d32f: 8a           ??mxdI?? e .....                 txa
fe/d330: 8f 04 fe 00  ??mxdI?? e .....                 stal    f:$00fe04
fe/d334: 18           ??mxdI?? e .....                 clc
fe/d335: 60           ??mxdI?c e ...#.                 rts

fe/d336: f4 00 46     ??mxdI?c e ....> LFED336         pea     $4600
fe/d339: ab           ??mxdI?c e .....                 plb
fe/d33a: ab           ??mxdI?c e .....                 plb
fe/d33b: a9 00 00     ??mxdI?c e .....                 lda     #$0000
fe/d33e: f4 00 80     n?mxdIZc e .....                 pea     $8000
fe/d341: 2b           n?mxdIZc e .....                 pld
fe/d342: a0 07 00     ??mxdI?c e .....                 ldy     #$0007
fe/d345: a2 04 00     n?mxdIzc e .....                 ldx     #$0004
fe/d348: 22 8c ff 00  n?mxdIzc e .....                 jsl     __MM
fe/d34c: 20 c5 ce     ??mxdI?? e .....                 jsr     LFECEC5
fe/d34f: 8a           ??mxdI?? e .....                 txa
fe/d350: 8f 08 fe 00  ??mxdI?? e .....                 stal    f:$00fe08
fe/d354: 60           ??mxdI?? e ...#.                 rts

                                       ********************************************************************************
                                       * TODO: check - the following block looks like it may be dead code?            *
                                       ********************************************************************************
fe/d355: f4 00 45     ??mxd??? e @T...                 pea     HW_VIDEO_BASE >> 8 ;TODO: shift!
fe/d358: ab           ??mxd??? e .....                 plb
fe/d359: ab           ??mxd??? e .....                 plb
fe/d35a: a9 00 00     ??mxd??? e .....                 lda     #HW_VIDEO_BASE & $ffff
fe/d35d: f4 00 80     n?mxd?Z? e .....                 pea     HW_EXTIO >> 8
fe/d360: 2b           n?mxd?Z? e .....                 pld
fe/d361: a0 07 00     ??mxd??? e .....                 ldy     #HDMMW
fe/d364: a2 04 00     n?mxd?z? e .....                 ldx     #__MMBP
fe/d367: 22 8c ff 00  n?mxd?z? e .....                 jsl     __MM
fe/d36b: 20 c5 ce     ??mxd??? e .....                 jsr     LFECEC5
fe/d36e: 8a           ??mxd??? e .....                 txa
fe/d36f: 8f 0c fe 00  ??mxd??? e .....                 stal    f:DP_HANDLE_VIDEO_QRY
fe/d373: 60           ??mxd??? e ...#.                 rts

fe/d374: 08           ??mxdI?c e ....> LFED374         php
fe/d375: 0b           ??mxdI?c e .....                 phd
fe/d376: 78           ??mxdI?c e .....                 sei
fe/d377: 0b           ??mxdI?c e .....                 phd
fe/d378: 0b           ??mxdI?c e .....                 phd
fe/d379: 0b           ??mxdI?c e .....                 phd
fe/d37a: 3b           ??mxdI?c e .....                 tsc
fe/d37b: 5b           ??mxdI?c e .....                 tcd
fe/d37c: 1a           ??mxdI?c e .....                 inc     A
fe/d37d: 85 03        ??mxdI?c e .....                 sta     DPCOP_X
fe/d37f: a9 09 00     ??mxdI?c e .....                 lda     #$0009
fe/d382: 85 05        n?mxdIzc e .....                 sta     DPCOP_AH
fe/d384: c6 05        ??mxdI?c e ....> LFED384         dec     DPCOP_AH
fe/d386: f0 26        ??mxdI?c e .....                 beq     LFED3AE
fe/d388: 20 b5 d3     ??mxdIzc e .....                 jsr     LFED3B5
fe/d38b: 90 f7        ??mxdI?? e .....                 bcc     LFED384
fe/d38d: a5 05        ??mxdI?C e .....                 lda     DPCOP_AH
fe/d38f: 1a           ??mxdI?C e .....                 inc     A
fe/d390: 48           ??mxdI?C e .....                 pha
fe/d391: c6 05        ??mxdI?C e ....> LFED391         dec     DPCOP_AH
fe/d393: f0 07        ??mxdI?C e .....                 beq     LFED39C
fe/d395: 20 b5 d3     ??mxdIzC e .....                 jsr     LFED3B5
fe/d398: b0 f7        ??mxdI?? e .....                 bcs     LFED391
fe/d39a: c6 05        ??mxdI?c e .....                 dec     DPCOP_AH
fe/d39c: e6 05        ??mxdI?? e ....> LFED39C         inc     DPCOP_AH
fe/d39e: a5 05        ??mxdI?? e .....                 lda     DPCOP_AH
fe/d3a0: eb           ??mxdI?? e .....                 xba
fe/d3a1: a8           ??mxdI?? e .....                 tay
fe/d3a2: 68           ??mxdI?? e .....                 pla
fe/d3a3: 38           ??mxdI?? e .....                 sec
fe/d3a4: e5 05        ??mxdI?C e .....                 sbc     DPCOP_AH
fe/d3a6: eb           ??mxdI?? e .....                 xba
fe/d3a7: 2b           ??mxdI?? e .....                 pld
fe/d3a8: 2b           ??mxdI?? e .....                 pld
fe/d3a9: 2b           ??mxdI?? e .....                 pld
fe/d3aa: 2b           ??mxdI?? e .....                 pld
fe/d3ab: 28           ??mxdI?? e .....                 plp
fe/d3ac: 18           ??mxdI?c e .....                 clc
fe/d3ad: 60           ??mxdI?c e ...#.                 rts

fe/d3ae: 2b           ??mxdIZc e ....> LFED3AE         pld
fe/d3af: 2b           ??mxdI?c e .....                 pld
fe/d3b0: 2b           ??mxdI?c e .....                 pld
fe/d3b1: 2b           ??mxdI?c e .....                 pld
fe/d3b2: 28           ??mxdI?c e .....                 plp
fe/d3b3: 38           ??mxdI?c e .....                 sec
fe/d3b4: 60           ??mxdI?C e ...#.                 rts

fe/d3b5: a7 03        ??mxdIz? e ....> LFED3B5         lda     [DPCOP_X]
fe/d3b7: 48           ??mxdI?? e .....                 pha
fe/d3b8: 49 ff ff     ??mxdI?? e .....                 eor     #$ffff
fe/d3bb: 87 03        ??mxdI?? e .....                 sta     [DPCOP_X]
fe/d3bd: 47 03        ??mxdI?? e .....                 eor     [DPCOP_X]
fe/d3bf: d0 27        ??mxdI?? e .....                 bne     LFED3E8
fe/d3c1: c6 05        ??mxdIZ? e .....                 dec     DPCOP_AH
fe/d3c3: a7 03        ??mxdI?? e .....                 lda     [DPCOP_X]
fe/d3c5: 48           ??mxdI?? e .....                 pha
fe/d3c6: 49 ff ff     ??mxdI?? e .....                 eor     #$ffff
fe/d3c9: 87 03        ??mxdI?? e .....                 sta     [DPCOP_X]
fe/d3cb: 47 03        ??mxdI?? e .....                 eor     [DPCOP_X]
fe/d3cd: 08           ??mxdI?? e .....                 php
fe/d3ce: e6 05        ??mxdI?? e .....                 inc     DPCOP_AH
fe/d3d0: 28           ??mxdI?? e .....                 plp
fe/d3d1: d0 14        ??mxdI?? e .....                 bne     LFED3E7
fe/d3d3: 68           ??mxdIZ? e .....                 pla
fe/d3d4: 48           ??mxdI?? e .....                 pha
fe/d3d5: 87 03        ??mxdI?? e .....                 sta     [DPCOP_X]
fe/d3d7: c6 05        ??mxdI?? e .....                 dec     DPCOP_AH
fe/d3d9: 47 03        ??mxdI?? e .....                 eor     [DPCOP_X]
fe/d3db: c9 ff ff     ??mxdI?? e .....                 cmp     #$ffff
fe/d3de: 68           ??mxdI?? e .....                 pla
fe/d3df: 87 03        ??mxdI?? e .....                 sta     [DPCOP_X]
fe/d3e1: e6 05        ??mxdI?? e .....                 inc     DPCOP_AH
fe/d3e3: 68           ??mxdI?? e .....                 pla
fe/d3e4: 87 03        ??mxdI?? e .....                 sta     [DPCOP_X]
fe/d3e6: 60           ??mxdI?? e ...#.                 rts

fe/d3e7: 68           ??mxdIz? e ....> LFED3E7         pla
fe/d3e8: 68           ??mxdI?? e ....> LFED3E8         pla
fe/d3e9: 18           ??mxdI?? e .....                 clc
fe/d3ea: 60           ??mxdI?c e ...#.                 rts

                                       ********************************************************************************
                                       * __MM 8 - MMALD - allocate large descending                                   *
                                       *                                                                              *
                                       * This call allocates a region of memory from a specified pool. The region is  *
                                       * taken from the upper region of the pool.                                     *
                                       *                                                                              *
                                       * Entry:                                                                       *
                                       *    Y    Handle of memory pool                                                *
                                       *    BHA  Number of bytes to allocate                                          *
                                       *    X    MMALD                                                                *
                                       * Exit:                                                                        *
                                       *    C=0  Pool allocated successfully                                          *
                                       *    Y    Handle of newly allocated pool                                       *
                                       *    BHA  Base address of newly allocated pod                                  *
                                       * or C=1 Failed to allocate new pool                                           *
                                       *    B,D Preserved                                                             *
                                       ********************************************************************************
fe/d3eb: b8           ??mxd??? e @T... doMMALD         clv
fe/d3ec: 80 02        ?vmxd??? e ...#.                 bra     mmAllocLarge

                                       ********************************************************************************
                                       * __MM A - MMALA - allocate large ascending                                    *
                                       *                                                                              *
                                       * This call allocates a region of memory from a specified pool. The region is  *
                                       * taken from the lower region of the pool.                                     *
                                       *                                                                              *
                                       * Entry:                                                                       *
                                       *    Y    Handle of memory pool                                                *
                                       *    BHA  Number of bytes to allocate                                          *
                                       *    X    MMALA                                                                *
                                       * Exit:                                                                        *
                                       *    C=0  Pool allocated successfully                                          *
                                       *    Y    Handle of newly allocated pool                                       *
                                       *    BHA  Base address of newly allocated pod                                  *
                                       * or C=1 Failed to allocate new pool                                           *
                                       *    B,D Preserved                                                             *
                                       ********************************************************************************
fe/d3ee: e2 40        ??mxd??? e @T... doMMALA         sep     #$40
fe/d3f0: 08           ??mxd??? e ....> mmAllocLarge    php
fe/d3f1: 18           ??mxd??? e .....                 clc
fe/d3f2: 69 ff 00     ??mxd??c e .....                 adc     #$00ff
fe/d3f5: 90 0a        ??mxd??? e .....                 bcc     @bankinc
fe/d3f7: 48           ??mxd??C e .....                 pha
fe/d3f8: e2 20        ??mxd??C e .....                 sep     #$20
                                                       .rwid   shortm
fe/d3fa: 3b           ??Mxd??C e .....                 tsc
fe/d3fb: 5b           ??Mxd??C e .....                 tcd
fe/d3fc: e6 06        ??Mxd??C e .....                 inc     DPCOP_AH+1
fe/d3fe: c2 20        ??Mxd??C e .....                 rep     #$20
                                                       .rwid   longm
fe/d400: 68           ??mxd??C e .....                 pla
fe/d401: 29 00 ff     ??mxd??? e ....> @bankinc        and     #$ff00            ;BHA now contains a size rounded up to pages
fe/d404: 28           n?mxd??? e .....                 plp
fe/d405: 48           ?vmxd??? e .....                 pha
fe/d406: af 04 fe 00  ?vmxd??? e .....                 ldal    f:$00fe04
fe/d40a: aa           ?vmxd??? e .....                 tax
fe/d40b: a3 05        ?vmxd??? e .....                 lda     $05,S
fe/d40d: 29 ff 00     ?vmxd??? e .....                 and     #$00ff
fe/d410: 03 01        nvmxd??? e .....                 ora     $01,S
fe/d412: eb           ?vmxd??? e .....                 xba
fe/d413: 2b           ?vmxd??? e .....                 pld
fe/d414: 80 49        ?vmxd??? e ...#.                 bra     LFED45F

                                       ********************************************************************************
                                       * __MM 4 - MMBP - ????                                                         *
                                       ********************************************************************************
fe/d416: 20 c5 ce     ??mxd??? e @T... doMMBP          jsr     LFECEC5
fe/d419: b0 25        ??mxd??? e .....                 bcs     LFED440
fe/d41b: 29 00 ff     ??mxd??c e .....                 and     #$ff00
fe/d41e: 48           n?mxd??c e .....                 pha
fe/d41f: a3 05        n?mxd??c e .....                 lda     $05,S
fe/d421: 29 ff 00     ??mxd??c e .....                 and     #$00ff
fe/d424: d0 0f        n?mxd??c e .....                 bne     LFED435
fe/d426: da           n?mxd?Zc e .....                 phx
fe/d427: af 04 fe 00  n?mxd?Zc e .....                 ldal    f:$00fe04
fe/d42b: aa           ??mxd??c e .....                 tax
fe/d42c: bf 07 00 00  ??mxd??c e .....                 ldal    f:DPCOP_B,x
fe/d430: 3a           ??mxd??c e .....                 dec     A
fe/d431: 29 ff 00     ??mxd??c e .....                 and     #$00ff
fe/d434: fa           n?mxd??c e .....                 plx
fe/d435: 03 01        ??mxd??c e ....> LFED435         ora     $01,S
fe/d437: eb           ??mxd??c e .....                 xba
fe/d438: 83 01        ??mxd??c e .....                 sta     $01,S
fe/d43a: 7a           ??mxd??c e .....                 ply
fe/d43b: 7b           ??mxd??c e .....                 tdc
fe/d43c: 18           ??mxd??c e .....                 clc
fe/d43d: 69 ff 00     ??mxd??c e .....                 adc     #$00ff
fe/d440: b0 23        ??mxd??? e ....> LFED440         bcs     LFED465
fe/d442: 29 00 ff     ??mxd??c e .....                 and     #$ff00
fe/d445: eb           n?mxd??c e .....                 xba
fe/d446: 80 2b        ??mxd??c e ...#.                 bra     LFED473

                                       ********************************************************************************
                                       * __MM 6 - MMASD - Allocate small descending                                   *
                                       *                                                                              *
                                       * This call allocates a region of memory from a specified pool. The region is  *
                                       * taken from the top of the pool, and must be less than 64K bytes long.        *
                                       * Moreover, the routine will only succeed if the pool would not cross a bank   *
                                       * boundary                                                                     *
                                       *                                                                              *
                                       * Entry:                                                                       *
                                       *    Y    Handle of memory pool                                                *
                                       *    HA   Number of bytes to allttcate                                         *
                                       *    X    MMASD                                                                *
                                       * Exit                                                                         *
                                       *    C=0  Pool allocated successfully                                          *
                                       *    Y    Handle of newly allocated pool                                       *
                                       *    BHA  Base address of newly allocated pool                                 *
                                       * or C=1  Failed to allocate new pool                                          *
                                       *    B,D  Preserved                                                            *
                                       ********************************************************************************
fe/d448: b8           ??mxd??? e @T... doMMASD         clv
fe/d449: 80 02        ?vmxd??? e ...#.                 bra     mmAllocSmall

                                       ********************************************************************************
                                       * __MM A - MMASA - Allocate small                                              *
                                       *                                                                              *
                                       * This call allocates a region of memory from a specified pool. The region is  *
                                       * taken from the lower area of the pool, and must be less than 64K bytes long. *
                                       * Moreover, the routine will only succeed if the pool would not cross a bank   *
                                       * boundary                                                                     *
                                       *                                                                              *
                                       * Entry:                                                                       *
                                       *    Y    Handle of memory pool                                                *
                                       *    HA   Number of bytes to allttcate                                         *
                                       *    X    MMASA                                                                *
                                       * Exit                                                                         *
                                       *    C=0  Pool allocated successfully                                          *
                                       *    Y    Handle of newly allocated pool                                       *
                                       *    BHA  Base address of newly allocated pool                                 *
                                       * or C=1  Failed to allocate new pool                                          *
                                       *    B,D  Preserved                                                            *
                                       ********************************************************************************
fe/d44b: e2 40        ??mxd??? e @T... doMMASA         sep     #$40
fe/d44d: 08           ??mxd??? e ....> mmAllocSmall    php
fe/d44e: 18           ??mxd??? e .....                 clc
fe/d44f: 69 ff 00     ??mxd??c e .....                 adc     #$00ff
fe/d452: 29 00 ff     ??mxd??? e .....                 and     #$ff00
fe/d455: 28           n?mxd??? e .....                 plp
fe/d456: 89 ff 00     ?vmxd??? e .....                 bit     #$00ff
fe/d459: d0 5f        ?vmxd??? e .....                 bne     LFED4BA
fe/d45b: eb           ?vmxd?Z? e .....                 xba
fe/d45c: 18           ?vmxd??? e .....                 clc
fe/d45d: 80 01        ?vmxd??c e ...#.                 bra     LFED460

fe/d45f: 38           ?vmxd??? e ....> LFED45F         sec
fe/d460: 08           ?vmxd??? e ....> LFED460         php
fe/d461: 20 c5 ce     ?vmxd??? e .....                 jsr     LFECEC5
fe/d464: ab           ??mxd??? e .....                 plb
fe/d465: b0 53        ??mxd??? e ....> LFED465         bcs     LFED4BA
fe/d467: 48           ??mxd??c e .....                 pha
fe/d468: da           ??mxd??c e .....                 phx
fe/d469: 20 10 d5     ??mxd??c e .....                 jsr     LFED510
fe/d46c: 50 01        ??mxd??? e .....                 bvc     LFED46F
fe/d46e: 9b           ?Vmxd??? e .....                 txy
fe/d46f: fa           ??mxd??? e ....> LFED46F         plx
fe/d470: 68           ??mxd??? e .....                 pla
fe/d471: b0 47        ??mxd??? e .....                 bcs     LFED4BA
fe/d473: 20 de d5     ??mxd??c e ....> LFED473         jsr     LFED5DE
fe/d476: b0 42        ??mxd??? e .....                 bcs     LFED4BA
fe/d478: 20 e7 d6     ??mxd??c e .....                 jsr     LFED6E7
fe/d47b: 20 a1 ce     ??mxd??? e .....                 jsr     allocHandleQRY
fe/d47e: b0 37        ??mxd??? e .....                 bcs     LFED4B7
fe/d480: 8b           ??mxd??c e ....> LFED480         phb
fe/d481: 48           ??mxd??c e .....                 pha
fe/d482: da           ??mxd??c e .....                 phx
fe/d483: e2 20        ??mxd??c e .....                 sep     #$20
                                                       .rwid   shortm
fe/d485: a3 0e        ??Mxd??c e .....                 lda     $0e,S
fe/d487: 48           ??Mxd??c e .....                 pha
fe/d488: ab           ??Mxd??c e .....                 plb
fe/d489: c2 20        ??Mxd??c e .....                 rep     #$20
                                                       .rwid   longm
fe/d48b: a3 0c        ??mxd??c e .....                 lda     $0c,S
fe/d48d: 02 2c        ??mxd??c e .....                 cop     COP_2C_OPFMA
fe/d48f: 90 13        ??mxd??c e ...#.                 bcc     LFED4A4

fe/d491: 5a           ??mxd??? e @T...                 phy
fe/d492: a2 14 00     ??mxd??? e .....                 ldx     #__MMFND
fe/d495: 22 8c ff 00  n?mxd?z? e .....                 jsl     __MM
fe/d499: 7a           ??mxd??? e .....                 ply
fe/d49a: a9 00 00     ??mxd??? e .....                 lda     #$0000
fe/d49d: b0 06        n?mxd?Z? e .....                 bcs     LFED4A5
fe/d49f: bf 08 00 00  n?mxd?Zc e .....                 ldal    f:$000008,x
fe/d4a3: aa           ??mxd??c e .....                 tax
fe/d4a4: 8a           ??mxd??c e ....> LFED4A4         txa
fe/d4a5: fa           ??mxd??? e ....> LFED4A5         plx
fe/d4a6: 9f 08 00 00  ??mxd??? e .....                 stal    f:$000008,x
fe/d4aa: 68           ??mxd??? e .....                 pla
fe/d4ab: ab           ??mxd??? e .....                 plb
fe/d4ac: 18           ??mxd??? e .....                 clc
fe/d4ad: 5b           ??mxd??? e ....> LFED4AD         tcd
fe/d4ae: e2 20        ??mxd??? e .....                 sep     #$20
                                                       .rwid   shortm
fe/d4b0: 8b           ??Mxd??? e .....                 phb
fe/d4b1: 68           ??Mxd??? e .....                 pla
fe/d4b2: 83 03        ??Mxd??? e .....                 sta     $03,S
fe/d4b4: 7b           ??Mxd??? e .....                 tdc
fe/d4b5: 18           ??Mxd??? e .....                 clc
fe/d4b6: 60           ??Mxd??c e ...#.                 rts

                                                       .rwid   longm
fe/d4b7: 20 d6 d4     ??mxd??C e ....> LFED4B7         jsr     LFED4D6
fe/d4ba: 38           ??mxd??? e ....> LFED4BA         sec
fe/d4bb: 60           ??mxd??C e ...#.                 rts

                                       ********************************************************************************
                                       * __MM 2 - MMINIT - initialise MM routines                                     *
                                       ********************************************************************************
fe/d4bc: 20 c5 ce     ??mxd??? e @T... doMMINIT        jsr     LFECEC5
fe/d4bf: b0 13        ??mxd??? e .....                 bcs     LFED4D4
fe/d4c1: da           ??mxd??c e .....                 phx
fe/d4c2: fa           ??mxd??? e ....> LFED4C2         plx
fe/d4c3: 20 c5 d6     ??mxd??? e .....                 jsr     LFED6C5
fe/d4c6: b0 0e        ??mxd??? e .....                 bcs     LFED4D6
fe/d4c8: da           ??mxd??c e .....                 phx
fe/d4c9: aa           ??mxd??c e ....> LFED4C9         tax
fe/d4ca: 20 c5 d6     ??mxd??c e .....                 jsr     LFED6C5
fe/d4cd: 90 fa        ??mxd??? e .....                 bcc     LFED4C9
fe/d4cf: 20 d6 d4     ??mxd??C e .....                 jsr     LFED4D6
fe/d4d2: 80 ee        ??mxd??? e ...#.                 bra     LFED4C2

fe/d4d4: 38           ??mxd??C e ....> LFED4D4         sec
fe/d4d5: 60           ??mxd??C e ...#.                 rts

fe/d4d6: 20 c5 d6     ??mxd??C e ....> LFED4D6         jsr     LFED6C5
fe/d4d9: 90 30        ??mxd??? e .....                 bcc     LFED50B
fe/d4db: 20 1e cf     ??mxd??C e .....                 jsr     freeHandlePointerX
fe/d4de: da           ??mxd??? e .....                 phx
fe/d4df: 20 b5 d6     ??mxd??? e .....                 jsr     LFED6B5
fe/d4e2: 48           ??mxd??? e .....                 pha
fe/d4e3: 20 b5 d6     ??mxd??? e ....> LFED4E3         jsr     LFED6B5
fe/d4e6: aa           ??mxd??? e .....                 tax
fe/d4e7: 90 fa        ??mxd??? e .....                 bcc     LFED4E3
fe/d4e9: aa           ??mxd??C e .....                 tax
fe/d4ea: 20 c5 d6     ??mxd??C e .....                 jsr     LFED6C5
fe/d4ed: c3 03        ??mxd??? e .....                 cmp     $03,S
fe/d4ef: d0 06        ??mxd??? e .....                 bne     LFED4F7
fe/d4f1: 68           ??mxd?Z? e .....                 pla
fe/d4f2: 20 d7 d6     ??mxd??? e .....                 jsr     LFED6D7
fe/d4f5: 80 0c        ??mxd??? e ...#.                 bra     LFED503

fe/d4f7: aa           ??mxd?z? e ....> LFED4F7         tax
fe/d4f8: 20 b5 d6     ??mxd??? e .....                 jsr     LFED6B5
fe/d4fb: c3 03        ??mxd??? e .....                 cmp     $03,S
fe/d4fd: d0 f8        ??mxd??? e .....                 bne     LFED4F7
fe/d4ff: 68           ??mxd?Z? e .....                 pla
fe/d500: 20 d2 d6     ??mxd??? e .....                 jsr     LFED6D2
fe/d503: fa           ??mxd??? e ....> LFED503         plx
fe/d504: 20 da cd     ??mxd??? e .....                 jsr     returnXToFreeList
fe/d507: 20 7e d7     ??mxd??? e .....                 jsr     doMMCHK
fe/d50a: 60           ??mxd??? e ...#.                 rts

fe/d50b: 38           ??mxd??c e ....> LFED50B         sec
fe/d50c: 20 7e d7     ??mxd??C e .....                 jsr     doMMCHK
fe/d50f: 60           ??mxd??? e ...#.                 rts

fe/d510: 08           ??mxd??c e ....> LFED510         php
fe/d511: a0 00 00     ??mxd??c e .....                 ldy     #$0000
fe/d514: 5a           n?mxd?Zc e .....                 phy
fe/d515: a0 ff ff     n?mxd?Zc e .....                 ldy     #$ffff
fe/d518: 5a           n?mxd?zc e .....                 phy
fe/d519: 5a           n?mxd?zc e .....                 phy
fe/d51a: 48           n?mxd?zc e .....                 pha
fe/d51b: da           n?mxd?zc e .....                 phx
fe/d51c: bf 04 00 00  n?mxd?zc e .....                 ldal    f:DPCOP_X+1,x
fe/d520: a8           ??mxd??c e .....                 tay
fe/d521: 20 c5 d6     ??mxd??c e .....                 jsr     LFED6C5
fe/d524: b0 17        ??mxd??? e .....                 bcs     LFED53D
fe/d526: aa           ??mxd??c e ....> LFED526         tax
fe/d527: bf 04 00 00  ??mxd??c e .....                 ldal    f:DPCOP_X+1,x
fe/d52b: 20 93 d5     ??mxd??c e .....                 jsr     LFED593
fe/d52e: bf 06 00 00  ??mxd??? e .....                 ldal    f:DPCOP_AH+1,x
fe/d532: a8           ??mxd??? e .....                 tay
fe/d533: 20 b5 d6     ??mxd??? e .....                 jsr     LFED6B5
fe/d536: 90 ee        ??mxd??? e .....                 bcc     LFED526
fe/d538: c3 01        ??mxd??C e .....                 cmp     $01,S
fe/d53a: d0 1e        ??mxd??? e .....                 bne     syserrNextPoolXPollANotParD
fe/d53c: aa           ??mxd?Z? e .....                 tax
fe/d53d: fa           ??mxd??? e ....> LFED53D         plx
fe/d53e: da           ??mxd??? e .....                 phx
fe/d53f: bf 06 00 00  ??mxd??? e .....                 ldal    f:DPCOP_AH+1,x
fe/d543: 20 93 d5     ??mxd??? e .....                 jsr     LFED593
fe/d546: a3 09        ??mxd??? e .....                 lda     $09,S
fe/d548: c3 03        ??mxd??? e .....                 cmp     $03,S
fe/d54a: fa           ??mxd??? e .....                 plx
fe/d54b: 68           ??mxd??? e .....                 pla
fe/d54c: d0 01        ??mxd??? e .....                 bne     LFED54F
fe/d54e: 18           ??mxd?Z? e .....                 clc
fe/d54f: 7a           ??mxd??? e ....> LFED54F         ply
fe/d550: fa           ??mxd??? e .....                 plx
fe/d551: 68           ??mxd??? e .....                 pla
fe/d552: b0 03        ??mxd??? e .....                 bcs     LFED557
fe/d554: 28           ??mxd??c e .....                 plp
fe/d555: 38           ??mxd??c e .....                 sec
fe/d556: 60           ??mxd??C e ...#.                 rts

fe/d557: 28           ??mxd??C e ....> LFED557         plp
fe/d558: 18           ??mxd??c e .....                 clc
fe/d559: 60           ??mxd??c e ...#.                 rts

fe/d55a: 2b           ??mxd?z? e ....> syserrNextPoolXPollANotParD pld           ;TODO: pointless ?
fe/d55b: 02 0f        ??mxd??? e .....                 cop     COP_0F_OPERR
fe/d55d: 4d 65 6d 6f+            .T...                 .zstr   “Memory SCAN error: NEXT POOL X IS POOL A NOT PARENT D”
fe/d593: 48           ??mxd??? e ....> LFED593         pha
fe/d594: 5a           ??mxd??? e .....                 phy
fe/d595: 8b           ??mxd??? e .....                 phb
fe/d596: 28           ??mxd??? e .....                 plp
fe/d597: b0 1b        ??mx???? e .....                 bcs     LFED5B4
fe/d599: 7a           ??mx???? e ....> LFED599         ply
fe/d59a: 5a           ??mx???? e .....                 phy
fe/d59b: a3 01        ??mx???? e .....                 lda     $01,S
fe/d59d: 43 03        ??mx???? e .....                 eor     $03,S
fe/d59f: f0 18        ??mx???? e .....                 beq     LFED5B9
fe/d5a1: 29 00 ff     ??mx??z? e .....                 and     #$ff00
fe/d5a4: f0 0e        n?mx???? e .....                 beq     LFED5B4
fe/d5a6: 68           n?mx??z? e .....                 pla
fe/d5a7: 18           ??mx???? e .....                 clc
fe/d5a8: 69 00 01     ??mx???c e .....                 adc     #$0100
fe/d5ab: 29 00 ff     ??mx???? e .....                 and     #$ff00
fe/d5ae: 48           n?mx???? e .....                 pha
fe/d5af: 20 bc d5     n?mx???? e .....                 jsr     LFED5BC
fe/d5b2: 80 e5        ??mx???? e ...#.                 bra     LFED599

fe/d5b4: a3 03        ??mx???? e ....> LFED5B4         lda     $03,S
fe/d5b6: 20 bc d5     ??mx???? e .....                 jsr     LFED5BC
fe/d5b9: 68           ??mx???? e ....> LFED5B9         pla
fe/d5ba: 68           ??mx???? e .....                 pla
fe/d5bb: 60           ??mx???? e ...#.                 rts

fe/d5bc: 38           ??mx???? e ....> LFED5BC         sec
fe/d5bd: 5a           ??mx???C e .....                 phy
fe/d5be: e3 01        ??mx???C e .....                 sbc     $01,S
fe/d5c0: 7a           ??mx???? e .....                 ply
fe/d5c1: c3 11        ??mx???? e .....                 cmp     $11,S
fe/d5c3: 90 02        ??mx???? e .....                 bcc     LFED5C7
fe/d5c5: 83 11        ??mx???C e .....                 sta     $11,S
fe/d5c7: c3 0b        ??mx???? e ....> LFED5C7         cmp     $0b,S
fe/d5c9: 90 12        ??mx???? e .....                 bcc     LFED5DD
fe/d5cb: 18           ??mx???C e .....                 clc
fe/d5cc: 5a           ??mx???c e .....                 phy
fe/d5cd: 63 01        ??mx???c e .....                 adc     $01,S
fe/d5cf: 7a           ??mx???? e .....                 ply
fe/d5d0: 38           ??mx???? e .....                 sec
fe/d5d1: e3 0b        ??mx???C e .....                 sbc     $0b,S
fe/d5d3: 83 0d        ??mx???? e .....                 sta     $0d,S
fe/d5d5: a3 0f        ??mx???? e .....                 lda     $0f,S
fe/d5d7: 1a           ??mx???? e .....                 inc     A
fe/d5d8: d0 03        ??mx???? e .....                 bne     LFED5DD
fe/d5da: 98           ??mx??Z? e .....                 tya
fe/d5db: 83 0f        ??mx???? e .....                 sta     $0f,S
fe/d5dd: 60           ??mx???? e ...#> LFED5DD         rts

fe/d5de: 49 00 00     ??mxd??? e ....> LFED5DE         eor     #$0000
fe/d5e1: d0 03        ??mxd??? e .....                 bne     LFED5E6
fe/d5e3: 82 82 00     ??mxd?Z? e ...#.                 brl     LFED668

fe/d5e6: 48           ??mxd?z? e ....> LFED5E6         pha
fe/d5e7: da           ??mxd?z? e .....                 phx
fe/d5e8: 5a           ??mxd?z? e .....                 phy
fe/d5e9: bf 04 00 00  ??mxd?z? e .....                 ldal    f:DPCOP_X+1,x
fe/d5ed: c3 01        ??mxd??? e .....                 cmp     $01,S
fe/d5ef: f0 02        ??mxd??? e .....                 beq     LFED5F3
fe/d5f1: b0 72        ??mxd?z? e .....                 bcs     LFED665
fe/d5f3: 68           ??mxd??? e ....> LFED5F3         pla
fe/d5f4: 48           ??mxd??? e .....                 pha
fe/d5f5: 18           ??mxd??? e .....                 clc
fe/d5f6: 63 05        ??mxd??c e .....                 adc     $05,S
fe/d5f8: b0 6b        ??mxd??? e .....                 bcs     LFED665
fe/d5fa: df 06 00 00  ??mxd??c e .....                 cmpl    f:DPCOP_AH+1,x
fe/d5fe: f0 02        ??mxd??? e .....                 beq     LFED602
fe/d600: b0 63        ??mxd?z? e .....                 bcs     LFED665
fe/d602: 9b           ??mxd??? e ....> LFED602         txy
fe/d603: 20 c5 d6     ??mxd??? e .....                 jsr     LFED6C5
fe/d606: b0 31        ??mxd??? e .....                 bcs     LFED639
fe/d608: 80 0d        ??mxd??c e ...#.                 bra     LFED617

fe/d60a: 9b           ??mxd??c e ....> LFED60A         txy
fe/d60b: 20 b5 d6     ??mxd??c e .....                 jsr     LFED6B5
fe/d60e: 90 07        ??mxd??? e .....                 bcc     LFED617
fe/d610: c3 03        ??mxd??C e .....                 cmp     $03,S
fe/d612: d0 59        ??mxd??? e .....                 bne     sysErrorNextXisPoolANotParD
fe/d614: aa           ??mxd?Z? e .....                 tax
fe/d615: 80 15        ??mxd??? e ...#.                 bra     LFED62C

fe/d617: aa           ??mxd??c e ....> LFED617         tax
fe/d618: bf 04 00 00  ??mxd??c e .....                 ldal    f:DPCOP_X+1,x
fe/d61c: c3 01        ??mxd??c e .....                 cmp     $01,S
fe/d61e: 90 ea        ??mxd??? e .....                 bcc     LFED60A
fe/d620: 38           ??mxd??C e .....                 sec
fe/d621: e3 05        ??mxd??C e .....                 sbc     $05,S
fe/d623: c3 01        ??mxd??? e .....                 cmp     $01,S
fe/d625: 90 3e        ??mxd??? e .....                 bcc     LFED665
fe/d627: 98           ??mxd??C e .....                 tya
fe/d628: c3 03        ??mxd??C e .....                 cmp     $03,S
fe/d62a: f0 0d        ??mxd??? e .....                 beq     LFED639
fe/d62c: da           ??mxd??? e ....> LFED62C         phx
fe/d62d: bb           ??mxd??? e .....                 tyx
fe/d62e: bf 06 00 00  ??mxd??? e .....                 ldal    f:DPCOP_AH+1,x
fe/d632: fa           ??mxd??? e .....                 plx
fe/d633: c3 01        ??mxd??? e .....                 cmp     $01,S
fe/d635: f0 02        ??mxd??? e .....                 beq     LFED639
fe/d637: b0 2c        ??mxd?z? e .....                 bcs     LFED665
fe/d639: da           ??mxd??? e ....> LFED639         phx
fe/d63a: 5a           ??mxd??? e .....                 phy
fe/d63b: a9 02 00     ??mxd??? e .....                 lda     #HND_type_2_CBMEM
fe/d63e: 20 01 ce     n?mxd?z? e .....                 jsr     obtainFreeBlock
fe/d641: 7a           ??mxd??? e .....                 ply
fe/d642: 68           ??mxd??? e .....                 pla
fe/d643: b0 20        ??mxd??? e .....                 bcs     LFED665
fe/d645: 20 d2 d6     ??mxd??c e .....                 jsr     LFED6D2
fe/d648: 68           ??mxd??? e .....                 pla
fe/d649: 48           ??mxd??? e .....                 pha
fe/d64a: 9f 04 00 00  ??mxd??? e .....                 stal    f:DPCOP_X+1,x
fe/d64e: 18           ??mxd??? e .....                 clc
fe/d64f: 63 05        ??mxd??c e .....                 adc     $05,S
fe/d651: 9f 06 00 00  ??mxd??? e .....                 stal    f:DPCOP_AH+1,x
fe/d655: 8a           ??mxd??? e .....                 txa
fe/d656: 20 d7 d6     ??mxd??? e .....                 jsr     LFED6D7
fe/d659: 98           ??mxd??? e .....                 tya
fe/d65a: c3 03        ??mxd??? e .....                 cmp     $03,S
fe/d65c: f0 49        ??mxd??? e .....                 beq     LFED6A7
fe/d65e: 8a           ??mxd?z? e .....                 txa
fe/d65f: bb           ??mxd??? e .....                 tyx
fe/d660: 20 d2 d6     ??mxd??? e .....                 jsr     LFED6D2
fe/d663: 80 47        ??mxd??? e ...#.                 bra     LFED6AC

fe/d665: 7a           ??mxd??? e ....> LFED665         ply
fe/d666: fa           ??mxd??? e .....                 plx
fe/d667: 68           ??mxd??? e .....                 pla
fe/d668: 38           ??mxd??? e ....> LFED668         sec
fe/d669: 20 7e d7     ??mxd??C e .....                 jsr     doMMCHK
fe/d66c: 60           ??mxd??? e ...#.                 rts

fe/d66d: 2b           ??mxd?z? e ....> sysErrorNextXisPoolANotParD pld           ;TODO: pointless before syserr
fe/d66e: 02 0f        ??mxd??? e .....                 cop     COP_0F_OPERR
fe/d670: 4d 65 6d 6f+            .T...                 .zstr   “Memory ALLOC error: NEXT POOL X IS POOL A NOT PARENT D”
fe/d6a7: 8a           ??mxd??? e ....> LFED6A7         txa
fe/d6a8: bb           ??mxd??? e .....                 tyx
fe/d6a9: 20 d7 d6     ??mxd??? e .....                 jsr     LFED6D7
fe/d6ac: fa           ??mxd??? e ....> LFED6AC         plx
fe/d6ad: fa           ??mxd??? e .....                 plx
fe/d6ae: fa           ??mxd??? e .....                 plx
fe/d6af: aa           ??mxd??? e .....                 tax
fe/d6b0: 18           ??mxd??? e .....                 clc
fe/d6b1: 20 7e d7     ??mxd??c e .....                 jsr     doMMCHK
fe/d6b4: 60           ??mxd??? e ...#.                 rts

fe/d6b5: 0b           ??mxd??? e ....> LFED6B5         phd
fe/d6b6: bf 00 00 00  ??mxd??? e .....                 ldal    f:$000000,x
fe/d6ba: 48           ??mxd??? e .....                 pha
fe/d6bb: 2b           ??mxd??? e .....                 pld
fe/d6bc: bf 04 00 00  ??mxd??? e .....                 ldal    f:DPCOP_X+1,x
fe/d6c0: c5 04        ??mxd??? e .....                 cmp     DPCOP_X+1
fe/d6c2: 7b           ??mxd??? e .....                 tdc
fe/d6c3: 2b           ??mxd??? e .....                 pld
fe/d6c4: 60           ??mxd??? e ...#.                 rts

fe/d6c5: 8a           ??mxd??? e ....> LFED6C5         txa
fe/d6c6: df 02 00 00  ??mxd??? e .....                 cmpl    f:DPCOP_Y+1,x
fe/d6ca: f0 05        ??mxd??? e .....                 beq     LFED6D1
fe/d6cc: bf 02 00 00  ??mxd?z? e .....                 ldal    f:DPCOP_Y+1,x
fe/d6d0: 18           ??mxd??? e .....                 clc
fe/d6d1: 60           ??mxd??? e ...#> LFED6D1         rts

fe/d6d2: 9f 00 00 00  ??mxd??? e ....> LFED6D2         stal    f:$000000,x
fe/d6d6: 60           ??mxd??? e ...#.                 rts

fe/d6d7: 9f 02 00 00  ??mxd??? e ....> LFED6D7         stal    f:DPCOP_Y+1,x
fe/d6db: 60           ??mxd??? e ...#.                 rts

                                       ********************************************************************************
                                       * __MM E - MMBAS - Return pool base                                            *
                                       * This call returns the base address of a given memory pool.                   *
                                       * Entry: Y Handle of memory pool X MMBAS                                       *
                                       * Exit:                                                                        *
                                       *    D,Y Preserved                                                             *
                                       *    C=0 Success                                                               *
                                       *    BHA Base address of memory pool                                           *
                                       * or C=1 The handle was not a valid one                                        *
                                       ********************************************************************************
fe/d6dc: 20 c5 ce     ??mxd??? e @T... doMMBAS         jsr     LFECEC5
fe/d6df: b0 11        ??mxd??? e .....                 bcs     LFED6F2
fe/d6e1: 20 e7 d6     ??mxd??c e .....                 jsr     LFED6E7
fe/d6e4: 82 c6 fd     ??mxd??? e ...#.                 brl     LFED4AD

fe/d6e7: bf 04 00 00  ??mxd??c e ....> LFED6E7         ldal    f:DPCOP_X+1,x
fe/d6eb: 48           ??mxd??c e .....                 pha
fe/d6ec: ab           ??mxd??c e .....                 plb
fe/d6ed: ab           ??mxd??c e .....                 plb
fe/d6ee: eb           ??mxd??c e .....                 xba
fe/d6ef: 29 00 ff     ??mxd??c e .....                 and     #$ff00
fe/d6f2: 60           ??mxd??? e ...#> LFED6F2         rts

                                       ********************************************************************************
                                       * __MM 10 - MMLEN - Return pool length                                         *
                                       *                                                                              *
                                       * This call returns the longth in bytes of a given memory pool.                *
                                       *                                                                              *
                                       * Entry:                                                                       *
                                       *    Y    Handle of memory pool                                                *
                                       *    X    MMLEN                                                                *
                                       * Exit:                                                                        *
                                       *    D,Y  Preserved                                                            *
                                       *    C=0  Success                                                              *
                                       *    BHA  Length of memory pool                                                *
                                       * or C=1  The handle was not a valid one                                       *
                                       ********************************************************************************
fe/d6f3: 20 c5 ce     ??mxd??? e @T... doMMLEN         jsr     LFECEC5
fe/d6f6: b0 22        ??mxd??? e .....                 bcs     LFED71A
fe/d6f8: 20 fe d6     ??mxd??c e .....                 jsr     LFED6FE
fe/d6fb: 82 af fd     ??mxd??? e ...#.                 brl     LFED4AD

fe/d6fe: 20 e7 d6     ??mxd??c e ....> LFED6FE         jsr     LFED6E7
fe/d701: b0 17        ??mxd??? e .....                 bcs     LFED71A
fe/d703: 8b           ??mxd??c e .....                 phb
fe/d704: 48           ??mxd??c e .....                 pha
fe/d705: 20 26 d7     ??mxd??c e .....                 jsr     LFED726
fe/d708: 38           ??mxd??? e .....                 sec
fe/d709: e3 01        ??mxd??C e .....                 sbc     $01,S
fe/d70b: 83 01        ??mxd??? e .....                 sta     $01,S
fe/d70d: e2 20        ??mxd??? e .....                 sep     #$20
                                                       .rwid   shortm
fe/d70f: 8b           ??Mxd??? e .....                 phb
fe/d710: 68           ??Mxd??? e .....                 pla
fe/d711: e3 03        ??Mxd??? e .....                 sbc     $03,S
fe/d713: 83 03        ??Mxd??? e .....                 sta     $03,S
fe/d715: c2 20        ??Mxd??? e .....                 rep     #$20
                                                       .rwid   longm
fe/d717: 68           ??mxd??? e .....                 pla
fe/d718: ab           ??mxd??? e .....                 plb
fe/d719: 18           ??mxd??? e .....                 clc
fe/d71a: 60           ??mxd??? e ...#> LFED71A         rts

                                       ********************************************************************************
                                       * __MM 12 - MMTOP - Return pool top                                            *
                                       *                                                                              *
                                       * This routine returns the address of the byte after the last byte of the pool *
                                       * whose handle is given in Y. That is, if the last available byte in a pool is *
                                       * at address &0231FF, the address returned in BHA will be &023200.             *
                                       *                                                                              *
                                       * Entry:                                                                       *
                                       *    Y    Handle of memory pool                                                *
                                       *    X    MMTOP                                                                *
                                       * Exit:                                                                        *
                                       *    D,Y  Preserved                                                            *
                                       *    C=0  Success                                                              *
                                       *    BHA  Top address of pool                                                  *
                                       * or C=1  The handle was not a valid one.                                      *
                                       ********************************************************************************
fe/d71b: 20 c5 ce     ??mxd??? e @T... doMMTOP         jsr     LFECEC5
fe/d71e: b0 11        ??mxd??? e .....                 bcs     LFED731
fe/d720: 20 26 d7     ??mxd??c e .....                 jsr     LFED726
fe/d723: 82 87 fd     ??mxd??? e ...#.                 brl     LFED4AD

fe/d726: bf 06 00 00  ??mxd??c e ....> LFED726         ldal    f:DPCOP_AH+1,x
fe/d72a: 48           ??mxd??c e .....                 pha
fe/d72b: ab           ??mxd??c e .....                 plb
fe/d72c: ab           ??mxd??c e .....                 plb
fe/d72d: eb           ??mxd??c e .....                 xba
fe/d72e: 29 00 ff     ??mxd??c e .....                 and     #$ff00
fe/d731: 60           ??mxd??? e ...#> LFED731         rts

                                       ********************************************************************************
                                       * __MM 14 - MMFND - Find a memory pool by address                              *
                                       *                                                                              *
                                       * This routine takes an address and returns the handle of a pool containing    *
                                       * that address if possible. Note that if the address is within a large pool,   *
                                       * the handle will only be returned if that pool contains no sub-pools.         *
                                       *                                                                              *
                                       * Entry:                                                                       *
                                       *    BHA  Memory address within pool                                           *
                                       *    X    MMFND                                                                *
                                       *    Y    HDMMT (2), the task pool handle                                      *
                                       * Exit:                                                                        *
                                       *    D    Preserved                                                            *
                                       *    C=0  A pool containing the address exists                                 *
                                       *    Y    Handle of pool                                                       *
                                       * or C=1  No pool found                                                        *
                                       *                                                                              *
                                       * TODO: does something else in Y search sub-pools?                             *
                                       ********************************************************************************
fe/d732: 20 7e d7     ??mxd??? e @T... doMMFND         jsr     doMMCHK
fe/d735: 8b           ??mxd??? e .....                 phb
fe/d736: 48           ??mxd??? e .....                 pha
fe/d737: 8b           ??mxd??? e .....                 phb
fe/d738: ab           ??mxd??? e .....                 plb
fe/d739: d0 11        ??mxd??? e .....                 bne     LFED74C
fe/d73b: af 04 fe 00  ??mxd?Z? e .....                 ldal    f:$00fe04
fe/d73f: aa           ??mxd??? e .....                 tax
fe/d740: bf 06 00 00  ??mxd??? e .....                 ldal    f:DPCOP_AH+1,x
fe/d744: 38           ??mxd??? e .....                 sec
fe/d745: e9 00 01     ??mxd??C e .....                 sbc     #$0100
fe/d748: 03 02        ??mxd??? e .....                 ora     $02,S
fe/d74a: 83 02        ??mxd??? e .....                 sta     $02,S
fe/d74c: ab           ??mxd??? e ....> LFED74C         plb
fe/d74d: a0 07 00     ??mxd??? e .....                 ldy     #$0007
fe/d750: 20 c5 ce     n?mxd?z? e .....                 jsr     LFECEC5
fe/d753: b0 13        ??mxd??? e .....                 bcs     LFED768
fe/d755: 20 c5 d6     ??mxd??c e .....                 jsr     LFED6C5
fe/d758: aa           ??mxd??? e ....> LFED758         tax
fe/d759: bf 06 00 00  ??mxd??? e .....                 ldal    f:DPCOP_AH+1,x
fe/d75d: c3 01        ??mxd??? e .....                 cmp     $01,S
fe/d75f: f0 02        ??mxd??? e .....                 beq     LFED763
fe/d761: b0 08        ??mxd?z? e .....                 bcs     LFED76B
fe/d763: 20 b5 d6     ??mxd??? e ....> LFED763         jsr     LFED6B5
fe/d766: 90 f0        ??mxd??? e .....                 bcc     LFED758
fe/d768: 68           ??mxd??C e ....> LFED768         pla
fe/d769: 38           ??mxd??C e .....                 sec
fe/d76a: 60           ??mxd??C e ...#.                 rts

fe/d76b: bf 04 00 00  ??mxd?zC e ....> LFED76B         ldal    f:DPCOP_X+1,x
fe/d76f: c3 01        ??mxd??C e .....                 cmp     $01,S
fe/d771: f0 02        ??mxd??? e .....                 beq     LFED775
fe/d773: b0 f3        ??mxd?z? e .....                 bcs     LFED768
fe/d775: 20 c5 d6     ??mxd??? e ....> LFED775         jsr     LFED6C5
fe/d778: 90 de        ??mxd??? e .....                 bcc     LFED758
fe/d77a: 68           ??mxd??C e .....                 pla
fe/d77b: 4c 40 cf     ??mxd??C e ...#.                 jmp     findHandleByAddr

                                       ********************************************************************************
                                       * __MM 16 - MMCHK - Check the integrity of the MM system                       *
                                       *                                                                              *
                                       * This call is a system-level routine to check that the data structures        *
                                       * maintained by the memory managment software is self-consistent. If the       *
                                       * system is OK, the routine returns, otherwise an OPERR is executed.           *
                                       *                                                                              *
                                       * Entry:                                                                       *
                                       *    X     MMCHK                                                               *
                                       * Exit:                                                                        *
                                       *    D,B   Preserved                                                           *
                                       *    A,X,Y Preserved                                                           *
                                       ********************************************************************************
fe/d77e: 08           ??mxd??? e ....> doMMCHK         php
fe/d77f: 0b           ??mxd??? e .....                 phd
fe/d780: 8b           ??mxd??? e .....                 phb
fe/d781: 48           ??mxd??? e .....                 pha
fe/d782: da           ??mxd??? e .....                 phx
fe/d783: 5a           ??mxd??? e .....                 phy
fe/d784: 20 4e ce     ??mxd??? e .....                 jsr     LFECE4E
fe/d787: f4 00 00     ??mxd??? e .....                 pea     $0000
fe/d78a: ab           ??mxd??? e .....                 plb
fe/d78b: ab           ??mxd??? e .....                 plb
fe/d78c: af 0a fe 00  ??mxd??? e .....                 ldal    f:$00fe0a
fe/d790: 5b           ??mxd??? e .....                 tcd
fe/d791: aa           ??mxd??? e .....                 tax
fe/d792: 20 c5 d6     ??mxd??? e .....                 jsr     LFED6C5
fe/d795: b0 0a        ??mxd??? e .....                 bcs     syserrNoSubPools
fe/d797: 20 d4 d7     ??mxd??c e .....                 jsr     LFED7D4
fe/d79a: 7a           ??mxd??? e .....                 ply
fe/d79b: fa           ??mxd??? e .....                 plx
fe/d79c: 68           ??mxd??? e .....                 pla
fe/d79d: ab           ??mxd??? e .....                 plb
fe/d79e: 2b           ??mxd??? e .....                 pld
fe/d79f: 28           ??mxd??? e .....                 plp
fe/d7a0: 60           ??mxd??? e ...#.                 rts

fe/d7a1: 02 0f        ??mxd??C e ....> syserrNoSubPools cop    COP_0F_OPERR
fe/d7a3: 4d 65 6d 6f+            .T...                 .zstr   “Memory error: WHOLE MACHINE POOL HAS NO SUBPOOLS”
fe/d7d4: 20 72 d8     ??mxd??? e ....> LFED7D4         jsr     LFED872
fe/d7d7: 20 c5 d6     ??mxd??? e .....                 jsr     LFED6C5
fe/d7da: b0 0a        ??mxd??? e .....                 bcs     LFED7E6
fe/d7dc: 0b           ??mxd??c e .....                 phd
fe/d7dd: da           ??mxd??c e .....                 phx
fe/d7de: da           ??mxd??c e .....                 phx
fe/d7df: 2b           ??mxd??c e .....                 pld
fe/d7e0: aa           ??mxd??c e .....                 tax
fe/d7e1: 20 d4 d7     ??mxd??c e .....                 jsr     LFED7D4
fe/d7e4: fa           ??mxd??? e .....                 plx
fe/d7e5: 2b           ??mxd??? e .....                 pld
fe/d7e6: 9b           ??mxd??? e ....> LFED7E6         txy
fe/d7e7: 20 b5 d6     ??mxd??? e .....                 jsr     LFED6B5
fe/d7ea: b0 11        ??mxd??? e .....                 bcs     LFED7FD
fe/d7ec: aa           ??mxd??c e .....                 tax
fe/d7ed: bf 04 00 00  ??mxd??c e .....                 ldal    f:DPCOP_X+1,x
fe/d7f1: f4 00 00     ??mxd??c e .....                 pea     $0000
fe/d7f4: ab           ??mxd??c e .....                 plb
fe/d7f5: ab           ??mxd??c e .....                 plb
fe/d7f6: d9 06 00     ??mxd??c e .....                 cmp     DPCOP_AH+1,y
fe/d7f9: 90 0e        ??mxd??? e .....                 bcc     syserrBasePoolLtEndPrev
fe/d7fb: 80 d7        ??mxd??C e ...#.                 bra     LFED7D4

fe/d7fd: 0b           ??mxd??C e ....> LFED7FD         phd
fe/d7fe: 43 01        ??mxd??C e .....                 eor     $01,S
fe/d800: c9 01 00     ??mxd??C e .....                 cmp     #$0001
fe/d803: 43 01        ??mxd??? e .....                 eor     $01,S
fe/d805: 2b           ??mxd??? e .....                 pld
fe/d806: b0 37        ??mxd??? e .....                 bcs     syserrNextPoolXisANotParD
fe/d808: 60           ??mxd??c e ...#.                 rts

fe/d809: 02 0f        ??mxd??c e ....> syserrBasePoolLtEndPrev cop COP_0F_OPERR
fe/d80b: 4d 65 6d 6f+            .T...                 .zstr   “Memory error: BASE POOL X < END OF PRECEDING POOL Y”
fe/d83f: 02 0f        ??mxd??? e ....> syserrNextPoolXisANotParD cop COP_0F_OPERR
fe/d841: 4d 65 6d 6f+            .T...                 .zstr   “Memory error: NEXT POOL X IS POOL A NOT PARENT D”
fe/d872: bf 04 00 00  ??mxd??? e ....> LFED872         ldal    f:DPCOP_X+1,x
fe/d876: df 06 00 00  ??mxd??? e .....                 cmpl    f:DPCOP_AH+1,x
fe/d87a: f0 6d        ??mxd??? e .....                 beq     syserrPoolBaseGtEnd
fe/d87c: b0 6b        ??mxd?z? e .....                 bcs     syserrPoolBaseGtEnd
fe/d87e: a5 04        ??mxd?zc e .....                 lda     DPCOP_X+1
fe/d880: df 04 00 00  ??mxd??c e .....                 cmpl    f:DPCOP_X+1,x
fe/d884: f0 02        ??mxd??? e .....                 beq     LFED888
fe/d886: b0 0b        ??mxd?z? e .....                 bcs     syserrMemBaseLtParent
fe/d888: bf 06 00 00  ??mxd??? e ....> LFED888         ldal    f:DPCOP_AH+1,x
fe/d88c: c5 06        ??mxd??? e .....                 cmp     DPCOP_AH+1
fe/d88e: f0 02        ??mxd??? e .....                 beq     LFED892
fe/d890: b0 2d        ??mxd?z? e .....                 bcs     syserrPoolEndgtEndParent
fe/d892: 60           ??mxd??? e ...#> LFED892         rts

fe/d893: 02 0f        ??mxd?zC e ....> syserrMemBaseLtParent cop COP_0F_OPERR
fe/d895: 4d 65 6d 6f+            .T...                 .zstr   “Memory error: BASE POOL X < BASE PARENT D”
fe/d8bf: 02 0f        ??mxd?zC e .T..> syserrPoolEndgtEndParent cop COP_0F_OPERR
fe/d8c1: 4d 65 6d 6f+            .T...                 .zstr   “Memory error: END POOL X > END PARENT D”
fe/d8e9: 02 0f        ??mxd??? e .T..> syserrPoolBaseGtEnd cop COP_0F_OPERR
fe/d8eb: 4d 65 6d 6f+            .T...                 .zstr   “Memory error: BASE POOL X > END POOL X”
                                       ********************************************************************************
                                       * __MM 18 - MMAZB - Allocate a bank zero area                                  *
                                       *                                                                              *
                                       * This call allocates memory from bank zero, in a way similar to MMASD. Note   *
                                       * that this call should be used only when it is essential that the memory      *
                                       * allocated is in bank zero, eg to store an interrupt routine.                 *
                                       *                                                                              *
                                       * Bank zero is a relatively precious resource on the 65816 and should not be   *
                                       * over used if many tasks are to be supported.                                 *
                                       * Entry:                                                                       *
                                       *    HA   Number of bytes to allocate                                          *
                                       *    X    MMAZB                                                                *
                                       * Exit:                                                                        *
                                       *    C=0  Pool allocated successfully                                          *
                                       *    BHA  Base address of newly allocated pool                                 *
                                       *    Y    Handle of new direct page pool                                       *
                                       * or C=1  Failed to allocate new pool                                          *
                                       *    B,D  Preserved                                                            *
                                       *                                                                              *
                                       * QRY HDMMM - is this a special bank 0 pool that we can allocate from?         *
                                       ********************************************************************************
fe/d912: a0 01 00     ??mxd??? e ..... doMMAZB         ldy     #HDMMM
fe/d915: a2 06 00     n?mxd?z? e .....                 ldx     #__MMASD
fe/d918: 22 8c ff 00  n?mxd?z? e .....                 jsl     __MM
fe/d91c: b0 24        ??mxd??? e .....                 bcs     @retsec
fe/d91e: da           ??mxd??c e .....                 phx
fe/d91f: 48           ??mxd??c e .....                 pha
fe/d920: 8b           ??mxd??c e .....                 phb
                                       ; stack
                                       ; 
                                       ; +4 X  - not documented whether MMASD corrupts this
                                       ; +2 HA - alloc'd B0 pointer
                                       ; +1 B  - alloc'd bank
fe/d921: af 04 fe 00  ??mxd??c e .....                 ldal    f:$00fe04
fe/d925: aa           ??mxd??c e .....                 tax
fe/d926: e2 20        ??mxd??c e .....                 sep     #$20
                                                       .rwid   shortm
fe/d928: bf 07 00 00  ??Mxd??c e .....                 ldal    f:$000007,x
fe/d92c: 3a           ??Mxd??c e .....                 dec     A
fe/d92d: 43 01        ??Mxd??c e .....                 eor     $01,S
fe/d92f: c9 01        ??Mxd??c e .....                 cmp     #$01
fe/d931: c2 20        ??Mxd??? e .....                 rep     #$20
                                                       .rwid   longm
fe/d933: ab           ??mxd??? e .....                 plb
fe/d934: 68           ??mxd??? e .....                 pla
fe/d935: fa           ??mxd??? e .....                 plx
fe/d936: b0 03        ??mxd??? e .....                 bcs     @fpretsec
fe/d938: 82 45 fb     ??mxd??c e ...#.                 brl     LFED480

fe/d93b: a2 02 00     ??mxd??C e ....> @fpretsec       ldx     #__MMFP           ;free the handle
fe/d93e: 22 8c ff 00  n?mxd?zC e .....                 jsl     __MM
fe/d942: 38           ??mxd??? e ....> @retsec         sec
fe/d943: 60           ??mxd??C e ...#.                 rts

                                       ********************************************************************************
                                       * __MM 1A - MMMRG - merge two pools                                            *
                                       *                                                                              *
                                       * MMMRG - Merge two memory pools into one                                      *
                                       *                                                                              *
                                       * This call combines two existing contiguous pools of memory into a single,    *
                                       * larger one. The pools must not overlap, ie the call may not be used to merge *
                                       * a pool with one of its sub-pools.                                            *
                                       *                                                                              *
                                       * Entry:                                                                       *
                                       *    Y    Handle of pool 1                                                     *
                                       *    HA   Handle of pool 2                                                     *
                                       *    X    MMMRG                                                                *
                                       * Exit:                                                                        *
                                       *    C=0  The pools were merged successfully                                   *
                                       *    Y    Handle of composite pool                                             *
                                       * or C=1  The pools could not be merged                                        *
                                       *    B,D  Preserved                                                            *
                                       *                                                                              *
                                       * Note that the handle of the composite pool may be different from both of the *
                                       * source handles                                                               *
                                       ********************************************************************************
fe/d944: 48           ??mxd??? e @T... doMMMRG         pha
fe/d945: 5a           ??mxd??? e .....                 phy
fe/d946: 48           ??mxd??? e .....                 pha
fe/d947: 20 c5 ce     ??mxd??? e .....                 jsr     LFECEC5
fe/d94a: 90 03        ??mxd??? e .....                 bcc     LFED94F
fe/d94c: 82 94 00     ??mxd??C e ...#.                 brl     LFED9E3

fe/d94f: 7a           ??mxd??c e ....> LFED94F         ply
fe/d950: da           ??mxd??c e .....                 phx
fe/d951: 20 c5 ce     ??mxd??c e .....                 jsr     LFECEC5
fe/d954: 90 03        ??mxd??? e .....                 bcc     LFED959
fe/d956: 82 8a 00     ??mxd??C e ...#.                 brl     LFED9E3

fe/d959: 2b           ??mxd??c e ....> LFED959         pld
fe/d95a: a5 04        ??mxd??c e .....                 lda     DPCOP_X+1
fe/d95c: df 04 00 00  ??mxd??c e .....                 cmpl    f:DPCOP_X+1,x
fe/d960: b0 04        ??mxd??? e .....                 bcs     LFED966
fe/d962: 0b           ??mxd??c e .....                 phd
fe/d963: 8a           ??mxd??c e .....                 txa
fe/d964: 5b           ??mxd??c e .....                 tcd
fe/d965: fa           ??mxd??c e .....                 plx
fe/d966: 20 b5 d6     ??mxd??? e ....> LFED966         jsr     LFED6B5
fe/d969: b0 79        ??mxd??? e .....                 bcs     LFED9E4
fe/d96b: 0b           ??mxd??c e .....                 phd
fe/d96c: 43 01        ??mxd??c e .....                 eor     $01,S
fe/d96e: c9 01 00     ??mxd??c e .....                 cmp     #$0001
fe/d971: 2b           ??mxd??? e .....                 pld
fe/d972: b0 70        ??mxd??? e .....                 bcs     LFED9E4
fe/d974: bf 06 00 00  ??mxd??c e .....                 ldal    f:DPCOP_AH+1,x
fe/d978: c5 04        ??mxd??c e .....                 cmp     DPCOP_X+1
fe/d97a: d0 68        ??mxd??? e .....                 bne     LFED9E4
fe/d97c: a5 06        ??mxd?Z? e .....                 lda     DPCOP_AH+1
fe/d97e: 9f 06 00 00  ??mxd??? e .....                 stal    f:DPCOP_AH+1,x
fe/d982: 9b           ??mxd??? e .....                 txy
fe/d983: 7b           ??mxd??? e .....                 tdc
fe/d984: aa           ??mxd??? e .....                 tax
fe/d985: 20 b5 d6     ??mxd??? e .....                 jsr     LFED6B5
fe/d988: bb           ??mxd??? e .....                 tyx
fe/d989: 20 d2 d6     ??mxd??? e .....                 jsr     LFED6D2
fe/d98c: 7b           ??mxd??? e .....                 tdc
fe/d98d: aa           ??mxd??? e .....                 tax
fe/d98e: 20 c5 d6     ??mxd??? e .....                 jsr     LFED6C5
fe/d991: b0 21        ??mxd??? e .....                 bcs     LFED9B4
fe/d993: 48           ??mxd??c e .....                 pha
fe/d994: aa           ??mxd??c e ....> LFED994         tax
fe/d995: 20 b5 d6     ??mxd??c e .....                 jsr     LFED6B5
fe/d998: 90 fa        ??mxd??? e .....                 bcc     LFED994
fe/d99a: 98           ??mxd??C e .....                 tya
fe/d99b: 20 d2 d6     ??mxd??C e .....                 jsr     LFED6D2
fe/d99e: bb           ??mxd??? e .....                 tyx
fe/d99f: 20 c5 d6     ??mxd??? e .....                 jsr     LFED6C5
fe/d9a2: b0 0c        ??mxd??? e .....                 bcs     LFED9B0
fe/d9a4: aa           ??mxd??c e ....> LFED9A4         tax
fe/d9a5: 20 b5 d6     ??mxd??c e .....                 jsr     LFED6B5
fe/d9a8: 90 fa        ??mxd??? e .....                 bcc     LFED9A4
fe/d9aa: 68           ??mxd??C e .....                 pla
fe/d9ab: 20 d2 d6     ??mxd??C e .....                 jsr     LFED6D2
fe/d9ae: 80 04        ??mxd??? e ...#.                 bra     LFED9B4

fe/d9b0: 68           ??mxd??C e ....> LFED9B0         pla
fe/d9b1: 20 d7 d6     ??mxd??C e .....                 jsr     LFED6D7
fe/d9b4: 7a           ??mxd??? e ....> LFED9B4         ply
fe/d9b5: 20 c5 ce     ??mxd??? e .....                 jsr     LFECEC5
fe/d9b8: b0 3e        ??mxd??? e .....                 bcs     syserrUnexpectedMMRG
fe/d9ba: 8a           ??mxd??c e .....                 txa
fe/d9bb: 0b           ??mxd??c e .....                 phd
fe/d9bc: 43 01        ??mxd??c e .....                 eor     $01,S
fe/d9be: c9 01 00     ??mxd??c e .....                 cmp     #$0001
fe/d9c1: 2b           ??mxd??? e .....                 pld
fe/d9c2: b0 06        ??mxd??? e .....                 bcs     LFED9CA
fe/d9c4: 20 e8 d9     ??mxd??c e .....                 jsr     LFED9E8
fe/d9c7: 7a           ??mxd??? e .....                 ply
fe/d9c8: 80 07        ??mxd??? e ...#.                 bra     LFED9D1

fe/d9ca: 98           ??mxd??C e ....> LFED9CA         tya
fe/d9cb: 7a           ??mxd??C e .....                 ply
fe/d9cc: 48           ??mxd??C e .....                 pha
fe/d9cd: 20 e8 d9     ??mxd??C e .....                 jsr     LFED9E8
fe/d9d0: 7a           ??mxd??? e .....                 ply
fe/d9d1: 20 c5 ce     ??mxd??? e ....> LFED9D1         jsr     LFECEC5
fe/d9d4: b0 22        ??mxd??? e .....                 bcs     syserrUnexpectedMMRG
fe/d9d6: 20 1e cf     ??mxd??c e .....                 jsr     freeHandlePointerX
fe/d9d9: b0 1d        ??mxd??? e .....                 bcs     syserrUnexpectedMMRG
fe/d9db: 20 a1 ce     ??mxd??c e .....                 jsr     allocHandleQRY
fe/d9de: b0 18        ??mxd??? e .....                 bcs     syserrUnexpectedMMRG
fe/d9e0: 82 9d fa     ??mxd??c e ...#.                 brl     LFED480

fe/d9e3: 68           ??mxd??C e ....> LFED9E3         pla
fe/d9e4: 7a           ??mxd??? e ....> LFED9E4         ply
fe/d9e5: 68           ??mxd??? e .....                 pla
fe/d9e6: 38           ??mxd??? e .....                 sec
fe/d9e7: 60           ??mxd??C e ...#.                 rts

fe/d9e8: 20 c5 ce     ??mxd??? e ....> LFED9E8         jsr     LFECEC5
fe/d9eb: b0 0b        ??mxd??? e .....                 bcs     syserrUnexpectedMMRG
fe/d9ed: 20 1e cf     ??mxd??c e .....                 jsr     freeHandlePointerX
fe/d9f0: b0 06        ??mxd??? e .....                 bcs     syserrUnexpectedMMRG
fe/d9f2: 20 da cd     ??mxd??c e .....                 jsr     returnXToFreeList
fe/d9f5: b0 01        ??mxd??? e .....                 bcs     syserrUnexpectedMMRG
fe/d9f7: 60           ??mxd??c e ...#.                 rts

fe/d9f8: 02 0f        ??mxd??C e ....> syserrUnexpectedMMRG cop COP_0F_OPERR
fe/d9fa: 55 6e 65 78+            .T...                 .zstr   “Unexpected error: MMMRG”
                                       ********************************************************************************
                                       * CO - CoRoutine entry point                                                   *
                                       ********************************************************************************
                                                       .rwid   shortm,shortx
fe/da12: 08           ????d??C e ..... default__CO     php
fe/da13: c2 30        ????d??C e .....                 rep     #$30
                                                       .rwid   longm,longx
fe/da15: e0 1e 00     ??mxd??C e .....                 cpx     #$001e
fe/da18: b0 0c        ??mxd??? e .....                 bcs     LFEDA26
fe/da1a: 0b           ??mxd??c e .....                 phd
fe/da1b: 8b           ??mxd??c e .....                 phb
fe/da1c: fc 29 da     ??mxd??c e .....                 jsr     (tblCoServDispatch,x)
fe/da1f: ab           ??mxd??? e .....                 plb
fe/da20: 2b           ??mxd??? e .....                 pld
fe/da21: b0 03        ??mxd??? e .....                 bcs     LFEDA26
fe/da23: 28           ??mxd??c e .....                 plp
                                                       .rwid   shortm,shortx
fe/da24: 18           ????d??C e .....                 clc
fe/da25: 6b           ????d??c e ...#.                 rtl

                                                       .rwid   longm,longx
fe/da26: 28           ??mxd??C e ....> LFEDA26         plp
                                                       .rwid   shortm,shortx
fe/da27: 38           ????d??C e .....                 sec
fe/da28: 6b           ????d??C e ...#.                 rtl

fe/da29: 25 b6                   ..... tblCoServDispatch .dd2  __ST_0 & $ffff
fe/da2b: 4f da                   .....                 .dd2    doCOCRE & $ffff   ;COPAR - 2 - initialize QRY
fe/da2d: c4 da                   .....                 .dd2    doCOENV & $ffff   ;COENV - 4 - set coroutine environment
fe/da2f: 37 db                   .....                 .dd2    doCODEL & $ffff   ;CODEL - 6 - delete coroutine
fe/da31: a5 db                   .....                 .dd2    doCODES & $ffff   ;CODES - 8 - destroy coroutine
fe/da33: d6 dc                   .....                 .dd2    doCOREN & $ffff   ;COREN - A - restore current coroutine's environment
fe/da35: 06 db                   .....                 .dd2    doCOBRK & $ffff   ;COBRK - C  - Set coroutine BRK handler
fe/da37: e1 da                   .....                 .dd2    doCOCBH & $ffff   ;COCBH - E - cancel break handler
fe/da39: 80 dd                   .....                 .dd2    doCORTB & $ffff   ;CORTB - 10 - ???
fe/da3b: 11 dc                   .....                 .dd2    doCOIAM & $ffff   ;COIAM - 12 - Return current handle
fe/da3d: ae db                   .....                 .dd2    doCONAME & $ffff  ;CONAME - 14 - ???
fe/da3f: b3 db                   .....                 .dd2    doCOINIT & $ffff  ;COINIT - 16 - initialise language
fe/da41: b8 db                   .....                 .dd2    doCOKILL & $ffff  ;COKILL - 18 - kill language
fe/da43: a9 db                   .....                 .dd2    doCOHELP & $ffff  ;COHELP - 1A - language help
fe/da45: 47 da                   .....                 .dd2    doCoMOD & $ffff   ;COMOD - 1C - ???

                                       ********************************************************************************
                                       * __CO 1C - COMOD - ???                                                        *
                                       *                                                                              *
                                       * Given an address in a module make a coroutine from the module's entry point  *
                                       *                                                                              *
                                       * Entry:                                                                       *
                                       *    BHA  contains an address somewhere within a module                        *
                                       *                                                                              *
                                       * QRY Looks to do OPRMI then drops through to COCRE                            *
                                       ********************************************************************************
                                                       .rwid   longm,longx
fe/da47: a2 00 00     ??mxd??? e @T... doCoMOD         ldx     #$0000
fe/da4a: 9b           n?mxd?Z? e .....                 txy
fe/da4b: 02 34        ??mxd??? e .....                 cop     COP_34_OPRMI      ;get entry address
fe/da4d: b0 73        ??mxd??? e .....                 bcs     @retsec
                                       ********************************************************************************
                                       * __CO 02 - COCRE - Create a coroutine                                         *
                                       *                                                                              *
                                       * This sets up the initial execution address of a new coroutine and declares   *
                                       * its stack size.                                                              *
                                       * Entry:                                                                       *
                                       *    BHA Entry address of coroutine                                            *
                                       *    D   Desired size of coroutine's stack                                     *
                                       *    X   COCRE                                                                 *
                                       * Exit:                                                                        *
                                       *    C=0 Coroutine created successfully                                        *
                                       *    Y   Handle to be used in subsequent calls                                 *
                                       * or C=1 Coroutine could not be created                                        *
                                       *                                                                              *
                                       * Notes: The stack size must be a non-zero multiple of 256 bytes - &200 is a   *
                                       * good size                                                                    *
                                       ********************************************************************************
fe/da4f: 0b           ??mxd??c e .T... doCOCRE         phd
fe/da50: 8b           ??mxd??c e .....                 phb
fe/da51: 48           ??mxd??c e .....                 pha
fe/da52: 7b           ??mxd??c e .....                 tdc
fe/da53: a2 18 00     ??mxd??c e .....                 ldx     #__MMAZB          ;allocate the stack
fe/da56: 22 8c ff 00  n?mxd?zc e .....                 jsl     __MM
fe/da5a: b0 63        ??mxd??? e .....                 bcs     @retsecpop        ;stack alloc failed
fe/da5c: a9 06 00     ??mxd??c e .....                 lda     #HND_type_6_CBCO
fe/da5f: 20 01 ce     n?mxd?zc e .....                 jsr     obtainFreeBlock   ;alloc a coroutine block??? QRY
fe/da62: b0 54        ??mxd??? e .....                 bcs     @freestackretsec
fe/da64: da           ??mxd??c e .....                 phx
fe/da65: 2b           ??mxd??c e .....                 pld
fe/da66: 84 06        ??mxd??c e .....                 sty     CO_off_DP         ;stash handle in DP slot QRY
fe/da68: 64 02        ??mxd??c e .....                 stz     CO_off_Parent
fe/da6a: 64 04        ??mxd??c e .....                 stz     CO_off_flags
fe/da6c: da           ??mxd??c e .....                 phx                       ;stack X - pointer to coroutine block
                                       ; stack contents
                                       ; +6    D on entry (stack size)
                                       ; +3    BHA address of coroutine start
                                       ; +1    B0 pointer to corouting block
fe/da6d: a2 12 00     ??mxd??c e .....                 ldx     #__MMTOP          ;get top of stack
fe/da70: 22 8c ff 00  n?mxd?zc e .....                 jsl     __MM
fe/da74: 38           ??mxd??? e .....                 sec                       ;assume in B0 (alloc'd with MMAZB)
fe/da75: e9 04 00     ??mxd??C e .....                 sbc     #$0004            ;subtract 4 to point at 3rd last byte
fe/da78: aa           ??mxd??? e .....                 tax                       ;put that in X
fe/da79: a3 03        ??mxd??? e .....                 lda     $03,S             ;get BHA on entry
fe/da7b: 9f 00 00 00  ??mxd??? e .....                 stal    f:$000000,x
fe/da7f: a3 05        ??mxd??? e .....                 lda     $05,S
fe/da81: 29 ff 00     ??mxd??? e .....                 and     #$00ff
fe/da84: 9f 02 00 00  n?mxd??? e .....                 stal    f:$000002,x       ;store bank - TODO: this looks like it may be a bug - it stores a 0 outside our pool!
fe/da88: 8a           n?mxd??? e .....                 txa                       ;put X in A
fe/da89: 3a           ??mxd??? e .....                 dec     A                 ;decrement so it's suitable as a stack pointer
fe/da8a: fa           ??mxd??? e .....                 plx                       ;X = block addr
fe/da8b: 7a           ??mxd??? e .....                 ply                       ;Y = HA on entry
fe/da8c: ab           ??mxd??? e .....                 plb                       ;B = B on entry
                                       ; stack is now
                                       ; +1 is D on entry
fe/da8d: da           ??mxd??? e .....                 phx                       ;block addr
fe/da8e: da           ??mxd??? e .....                 phx                       ;block addr
fe/da8f: 2b           ??mxd??? e .....                 pld
fe/da90: 0b           ??mxd??? e .....                 phd                       ;into D
                                       ; stack is now
                                       ; +5  D on entry
                                       ; +3  block addr
                                       ; +1  block addr
fe/da91: ba           ??mxd??? e .....                 tsx                       ;X=caller's stack
fe/da92: 1b           ??mxd??? e .....                 tcs                       ;set S = coroutine stack
                                       ; coroutine stack is now
                                       ; +1      BHA of coroutine start addr
fe/da93: 0b           ??mxd??? e .....                 phd
fe/da94: 8b           ??mxd??? e .....                 phb
fe/da95: 88           ??mxd??? e .....                 dey
fe/da96: 5a           ??mxd??? e .....                 phy
fe/da97: 08           ??mxd??? e .....                 php
                                       ; coroutine stack is now
                                       ; 
                                       ; +7   BHA on entry
                                       ; +5   D block address
                                       ; +4   B on entry
                                       ; +2   HA-1 on entry
                                       ; +1   current flags
fe/da98: 3b           ??mxd??? e .....                 tsc                       ;coroutine stack pointer into A
fe/da99: 9a           ??mxd??? e .....                 txs                       ;back to caller's stack
fe/da9a: fa           ??mxd??? e .....                 plx                       ;X = block pointer
fe/da9b: 9f 00 00 00  ??mxd??? e .....                 stal    f:CO_off_stack,x  ;store coroutine start stack
fe/da9f: 20 a1 ce     ??mxd??? e .....                 jsr     allocHandleQRY
fe/daa2: b0 0b        ??mxd??? e .....                 bcs     @nohandles
fe/daa4: a9 00 00     ??mxd??c e .....                 lda     #$0000
fe/daa7: 9f 06 00 00  n?mxd?Zc e .....                 stal    f:CO_off_DP,x     ;zero the DP handle (used to stash stack handle)
fe/daab: 68           n?mxd?Zc e .....                 pla
fe/daac: 2b           ??mxd??c e .....                 pld
fe/daad: 18           ??mxd??c e .....                 clc
fe/daae: 60           ??mxd??c e ...#.                 rts

fe/daaf: bf 06 00 00  ??mxd??C e ....> @nohandles      ldal    f:CO_off_DP,x     ;get the handle for the stack we stashed earlier
fe/dab3: 48           ??mxd??C e .....                 pha                       ;push it
fe/dab4: 20 da cd     ??mxd??C e .....                 jsr     returnXToFreeList ;free the block QRY?
fe/dab7: 7a           ??mxd??? e .....                 ply                       ;get back stack handle
fe/dab8: a2 02 00     ??mxd??? e ....> @freestackretsec ldx    #__MMFP
fe/dabb: 22 8c ff 00  n?mxd?z? e .....                 jsl     __MM
fe/dabf: 68           ??mxd??? e ....> @retsecpop      pla
fe/dac0: ab           ??mxd??? e .....                 plb
fe/dac1: 2b           ??mxd??? e .....                 pld
fe/dac2: 38           ??mxd??? e ....> @retsec         sec
fe/dac3: 60           ??mxd??C e ...#.                 rts

                                       ********************************************************************************
                                       * COENV - Set a coroutine's environment                                        *
                                       * This specifies the direct page to be used whenever a coroutine is entered.   *
                                       * If the coroutine is to use any shared direct page workspace (as distinct     *
                                       * from direct page workspace allocated by itself, this should be called        *
                                       * immediately after a coroutine is created, or at least before it is called    *
                                       * for the first time.                                                          *
                                       *                                                                              *
                                       * Entry:                                                                       *
                                       *    Y    Handle                                                               *
                                       *    D    Direct page to be used by coroutine                                  *
                                       *    X    COENV                                                                *
                                       * Exit:                                                                        *
                                       *    C=0  Environment set correctly                                            *
                                       * or C=1  Environment could not be set                                         *
                                       *                                                                              *
                                       * TODO: Documentation - Y can be 0 in which case this sets for the current     *
                                       * coroutine                                                                    *
                                       ********************************************************************************
fe/dac4: 0b           ??mxd??? e @T... doCOENV         phd
fe/dac5: f4 00 ff     ??mxd??? e .....                 pea     EXSYS
fe/dac8: 2b           ??mxd??? e .....                 pld
fe/dac9: a5 10        ??mxd??? e .....                 lda     <EXSYS_CUR_COROUTINE ;if no handle default to one at offset $10 in table
fe/dacb: c0 00 00     ??mxd??? e .....                 cpy     #$0000
fe/dace: f0 02        ??mxd??? e .....                 beq     @yeq0
fe/dad0: b7 02        ??mxd?z? e .....                 lda     [<EXSYS_HANDLEBLOCK_LONGPTR],y ;coroutine handle's address from the handleblock
fe/dad2: 5b           ??mxd??? e ....> @yeq0           tcd                       ;put it in DP
fe/dad3: a3 01        ??mxd??? e .....                 lda     $01,S             ;get pushed DP parameter
fe/dad5: 85 06        ??mxd??? e .....                 sta     CO_off_DP         ;store in the block DP offset
fe/dad7: a5 04        ??mxd??? e .....                 lda     CO_off_flags
fe/dad9: 09 40 00     ??mxd??? e .....                 ora     #COFLAG_HASDP
fe/dadc: 85 04        ??mxd?z? e .....                 sta     CO_off_flags      ;set flag to indicate we want DP setting on subsequent continues
fe/dade: 2b           ??mxd?z? e .....                 pld
fe/dadf: 18           ??mxd??? e .....                 clc
fe/dae0: 60           ??mxd??c e ...#.                 rts

                                       ********************************************************************************
                                       * __CO E - COCBH - Cancel break haniUer Tor Ibis coroutine                     *
                                       *                                                                              *
                                       * This call resets the break handler for the current coroutine to a 'no        *
                                       * handler' state (as when the coroutine is created). If a BRK occurs in a      *
                                       * routine with no BRK handler, the operating system will attempt to use its    *
                                       * parent's handler. This carries on up the hierarchy until a valid BRK handler *
                                       * is found or the top level is reached. In the latter case, an OPERR COP       *
                                       * instruction is executed.                                                     *
                                       *                                                                              *
                                       * Entry:                                                                       *
                                       *    X   COCBH                                                                 *
                                       * Exit:                                                                        *
                                       *    B,D Preserved                                                             *
                                       *    C=0 Break handler was cancelled                                           *
                                       *    BHA Address of old break handler                                          *
                                       * or C=1 There was no break handler to cancel                                  *
                                       ********************************************************************************
fe/dae1: af 10 ff 00  ??mxd??? e @T... doCOCBH         ldal    f:EXSYS_CUR_COROUTINE
fe/dae5: 5b           ??mxd??? e .....                 tcd
fe/dae6: a9 20 00     ??mxd??? e .....                 lda     #COFLAG_hasBRKhandler
fe/dae9: 14 04        n?mxd?z? e .....                 trb     CO_off_flags
fe/daeb: f0 17        n?mxd??? e .....                 beq     LFEDB04
fe/daed: a6 08        n?mxd?z? e .....                 ldx     CO_off_8_BRKBLOCK
fe/daef: e2 20        ??mxd??? e .....                 sep     #$20
                                                       .rwid   shortm
fe/daf1: bf 02 00 00  ??Mxd??? e .....                 ldal    f:$000002,x
fe/daf5: 83 03        ??Mxd??? e .....                 sta     $03,S             ;get K of old break handler
fe/daf7: c2 20        ??Mxd??? e .....                 rep     #$20
                                                       .rwid   longm
fe/daf9: bf 00 00 00  ??mxd??? e .....                 ldal    f:$000000,x       ;get HA of old break handler
fe/dafd: 48           ??mxd??? e .....                 pha
fe/dafe: 20 da cd     ??mxd??? e .....                 jsr     returnXToFreeList
fe/db01: 68           ??mxd??? e .....                 pla
fe/db02: 18           ??mxd??? e .....                 clc
fe/db03: 60           ??mxd??c e ...#.                 rts

fe/db04: 38           n?mxd?Z? e ....> LFEDB04         sec
fe/db05: 60           n?mxd?ZC e ...#.                 rts

                                       ********************************************************************************
                                       * __CO C - COBRK - Set the coroutine break handler address                     *
                                       *                                                                              *
                                       * This routine sets the address of the routine to be called when a BRK is      *
                                       * encountered within the current coroutine.                                    *
                                       *                                                                              *
                                       * Entry:                                                                       *
                                       *    BHA BRK handler address X COBRK                                           *
                                       * Exit:                                                                        *
                                       *    C=0 Address was set OK                                                    *
                                       * or C=1 Address could not be set                                              *
                                       ********************************************************************************
fe/db06: 48           ??mxd??? e @T... doCOBRK         pha
fe/db07: f4 00 ff     ??mxd??? e .....                 pea     EXSYS
fe/db0a: 2b           ??mxd??? e .....                 pld
fe/db0b: d4 10        ??mxd??? e .....                 pei     (<EXSYS_CUR_COROUTINE)
fe/db0d: 2b           ??mxd??? e .....                 pld
fe/db0e: a5 04        ??mxd??? e .....                 lda     CO_off_flags
fe/db10: 29 20 00     ??mxd??? e .....                 and     #COFLAG_hasBRKhandler
fe/db13: f0 04        n?mxd??? e .....                 beq     LFEDB19
fe/db15: a6 08        n?mxd?z? e .....                 ldx     CO_off_8_BRKBLOCK
fe/db17: 80 11        ??mxd??? e ...#.                 bra     LFEDB2A

fe/db19: a9 08 00     n?mxd?Z? e ....> LFEDB19         lda     #HND_type_8_CBCO2
fe/db1c: 20 01 ce     n?mxd?z? e .....                 jsr     obtainFreeBlock
fe/db1f: b0 14        ??mxd??? e .....                 bcs     LFEDB35
fe/db21: a5 04        ??mxd??c e .....                 lda     CO_off_flags
fe/db23: 09 20 00     ??mxd??c e .....                 ora     #COFLAG_hasBRKhandler
fe/db26: 85 04        ??mxd?zc e .....                 sta     CO_off_flags
fe/db28: 86 08        ??mxd?zc e .....                 stx     CO_off_8_BRKBLOCK
fe/db2a: 8a           ??mxd??? e ....> LFEDB2A         txa
fe/db2b: 5b           ??mxd??? e .....                 tcd
                                       ; this is the block pointed to by 8 - not sure what goes in it!
fe/db2c: a3 04        ??mxd??? e .....                 lda     $04,S
fe/db2e: 85 01        ??mxd??? e .....                 sta     $01
fe/db30: 68           ??mxd??? e .....                 pla
fe/db31: 85 00        ??mxd??? e .....                 sta     $00
fe/db33: 18           ??mxd??? e .....                 clc
fe/db34: 60           ??mxd??c e ...#.                 rts

fe/db35: 68           ??mxd??C e ....> LFEDB35         pla
fe/db36: 60           ??mxd??C e ...#.                 rts

                                       ********************************************************************************
                                       * __CO 6 - CODEL- Delete a coroutine                                           *
                                       *                                                                              *
                                       * This deletes an existing coroutine.                                          *
                                       *                                                                              *
                                       * Entry:                                                                       *
                                       *    Y    Handle                                                               *
                                       *    X    CODEL                                                                *
                                       * Exit:                                                                        *
                                       *    B,D  Preserved                                                            *
                                       *    C=0 Coroutine was deleted                                                 *
                                       * or C=l Coroutine was not deleted                                             *
                                       ********************************************************************************
fe/db37: c2 70        ??mxd??? e @T... doCODEL         rep     #$70              ; clear V 
fe/db39: 8b           ??mxd??? e ....> coDes2          phb
fe/db3a: 0b           ??mxd??? e .....                 phd
fe/db3b: f4 00 ff     ??mxd??? e .....                 pea     MM_HANDLE_TAB
fe/db3e: 2b           ??mxd??? e .....                 pld
fe/db3f: b7 02        ??mxd??? e .....                 lda     [$02],y           ;get coroutine block from hanbdle
fe/db41: 48           ??mxd??? e .....                 pha
fe/db42: 2b           ??mxd??? e .....                 pld                       ;coroutine block into D
fe/db43: 70 0f        ??mxd??? e .....                 bvs     LFEDB54           ;if V set skip parent check
fe/db45: 38           ?vmxd??? e .....                 sec
fe/db46: a5 0b        ?vmxd??C e .....                 lda     $0b
fe/db48: 29 ff 00     ?vmxd??C e .....                 and     #$00ff
fe/db4b: 49 06 00     nvmxd??C e .....                 eor     #$0006
fe/db4e: d0 52        ?vmxd??C e .....                 bne     @ret
fe/db50: a5 02        ?vmxd?ZC e .....                 lda     $02
fe/db52: d0 4e        ?vmxd??C e .....                 bne     @ret
fe/db54: 0b           ??mxd??? e ....> LFEDB54         phd
fe/db55: a5 00        ??mxd??? e .....                 lda     $00
fe/db57: f4 00 00     ??mxd??? e .....                 pea     $0000
fe/db5a: ab           ??mxd??? e .....                 plb
fe/db5b: ab           ??mxd??? e .....                 plb
fe/db5c: a2 14 00     ??mxd??? e .....                 ldx     #__MMFND
fe/db5f: 22 8c ff 00  n?mxd?z? e .....                 jsl     __MM
fe/db63: 90 03        ??mxd??? e .....                 bcc     @ok
fe/db65: 82 80 01     ??mxd??C e ...#.                 brl     syserrCoRoutineError

fe/db68: 5a           ??mxd??c e ....> @ok             phy
fe/db69: a2 12 00     ??mxd??c e .....                 ldx     #__MMTOP
fe/db6c: 22 8c ff 00  n?mxd?zc e .....                 jsl     __MM
fe/db70: 38           ??mxd??? e .....                 sec
fe/db71: e9 04 00     ??mxd??C e .....                 sbc     #$0004
fe/db74: aa           ??mxd??? e .....                 tax
fe/db75: ca           ??mxd??? e .....                 dex
fe/db76: ca           ??mxd??? e .....                 dex
fe/db77: bf 00 00 00  ??mxd??? e .....                 ldal    f:$000000,x
fe/db7b: c3 03        ??mxd??? e .....                 cmp     $03,S
fe/db7d: f0 03        ??mxd??? e .....                 beq     LFEDB82
fe/db7f: 82 66 01     ??mxd?z? e ...#.                 brl     syserrCoRoutineError

fe/db82: 7a           ??mxd?Z? e ....> LFEDB82         ply
fe/db83: a2 02 00     ??mxd??? e .....                 ldx     #__MMFP
fe/db86: 22 8c ff 00  n?mxd?z? e .....                 jsl     __MM
fe/db8a: fa           ??mxd??? e .....                 plx
fe/db8b: 20 1e cf     ??mxd??? e .....                 jsr     freeHandlePointerX
fe/db8e: 8a           ??mxd??? e .....                 txa
fe/db8f: 5b           ??mxd??? e .....                 tcd
fe/db90: d4 08        ??mxd??? e .....                 pei     (DPCOP_DP)
fe/db92: d4 03        ??mxd??? e .....                 pei     (DPCOP_X)
fe/db94: 20 da cd     ??mxd??? e .....                 jsr     returnXToFreeList
fe/db97: 68           ??mxd??? e .....                 pla
fe/db98: fa           ??mxd??? e .....                 plx
fe/db99: 89 00 20     ??mxd??? e .....                 bit     #$2000
fe/db9c: f0 03        ??mxd??? e .....                 beq     @clcret
fe/db9e: 20 da cd     ??mxd?z? e .....                 jsr     returnXToFreeList
fe/dba1: 18           ??mxd??? e ....> @clcret         clc
fe/dba2: 2b           ??mxd??? e ....> @ret            pld
fe/dba3: ab           ??mxd??? e .....                 plb
fe/dba4: 60           ??mxd??? e ...#.                 rts

                                       ********************************************************************************
                                       * __CO 8 - CODES - Destroy coroutine                                           *
                                       *                                                                              *
                                       * This acts as CODEL, but does not check that the routine to be deleted has a  *
                                       * parent. The useof this call is to delete a routine in which a BRK (error     *
                                       * condition) has occurred, and which has no BRK handler of its own.            *
                                       *                                                                              *
                                       * Entry:                                                                       *
                                       *    Y    Handle                                                               *
                                       *    X    CODES                                                                *
                                       * Exit:                                                                        *
                                       *    B,D  Preserved                                                            *
                                       *    C=0  Coroutine was deleted                                                *
                                       * or C=1  Coroutine could not be deleted                                       *
                                       ********************************************************************************
fe/dba5: e2 40        ??mxd??? e @T... doCODES         sep     #$40
fe/dba7: 80 90        ?Vmxd??? e ...#.                 bra     coDes2

                                       ********************************************************************************
                                       * __CO 1A - COHELP - Language help                                             *
                                       *                                                                              *
                                       * These calls relate to the language entry point reason codes. The CO reason   *
                                       * codes call a given coroutine at its entry point as if it were a language,    *
                                       * with the appropriate reason code in X. The entry is called as a subroutine,  *
                                       * not a coroutine, so is expected to return with an RTL.                       *
                                       *                                                                              *
                                       * COHELP calls the coroutine with X=6                                          *
                                       *                                                                              *
                                       * Entry:                                                                       *
                                       *    Y    Handleof coroutine to be catted                                      *
                                       *    BHA  Arguments                                                            *
                                       * Exit:      B,D Preserved                                                     *
                                       *    BHA,X,Y Results from language entry                                       *
                                       ********************************************************************************
fe/dba9: a2 06 00     ??mxd??? e @T... doCOHELP        ldx     #$0006
fe/dbac: 80 0d        n?mxd?z? e ...#.                 bra     coLangFn

                                       ********************************************************************************
                                       * __CO 14 - CONAME - ???                                                       *
                                       *                                                                              *
                                       * These calls relate to the language entry point reason codes. The CO reason   *
                                       * codes call a given coroutine at its entry point as if it were a language,    *
                                       * with the appropriate reason code in X. The entry is called as a subroutine,  *
                                       * not a coroutine, so is expected to return with an RTL.                       *
                                       *                                                                              *
                                       * COHELP calls the coroutine with X=0                                          *
                                       *                                                                              *
                                       * Entry:                                                                       *
                                       *    Y    Handleof coroutine to be catted                                      *
                                       *    BHA  Arguments                                                            *
                                       * Exit:      B,D Preserved                                                     *
                                       *    BHA,X,Y Results from language entry                                       *
                                       ********************************************************************************
fe/dbae: a2 00 00     ??mxd??? e @T... doCONAME        ldx     #$0000
fe/dbb1: 80 08        n?mxd?Z? e ...#.                 bra     coLangFn

                                       ********************************************************************************
                                       * __CO 16 - COINIT - initialise language                                       *
                                       *                                                                              *
                                       * These calls relate to the language entry point reason codes. The CO reason   *
                                       * codes call a given coroutine at its entry point as if it were a language,    *
                                       * with the appropriate reason code in X. The entry is called as a subroutine,  *
                                       * not a coroutine, so is expected to return with an RTL.                       *
                                       *                                                                              *
                                       * COINIT calls the coroutine with X=2                                          *
                                       *                                                                              *
                                       * Entry:                                                                       *
                                       *    Y    Handleof coroutine to be catted                                      *
                                       *    BHA  Arguments                                                            *
                                       * Exit:      B,D Preserved                                                     *
                                       *    BHA,X,Y Results from language entry                                       *
                                       ********************************************************************************
fe/dbb3: a2 02 00     ??mxd??? e @T... doCOINIT        ldx     #$0002
fe/dbb6: 80 03        n?mxd?z? e ...#.                 bra     coLangFn

                                       ********************************************************************************
                                       * __CO 18 - COKILL - kill a language                                           *
                                       *                                                                              *
                                       * These calls relate to the language entry point reason codes. The CO reason   *
                                       * codes call a given coroutine at its entry point as if it were a language,    *
                                       * with the appropriate reason code in X. The entry is called as a subroutine,  *
                                       * not a coroutine, so is expected to return with an RTL.                       *
                                       *                                                                              *
                                       * COKILL calls the coroutine with X=4                                          *
                                       *                                                                              *
                                       * Entry:                                                                       *
                                       *    Y    Handleof coroutine to be catted                                      *
                                       *    BHA  Arguments                                                            *
                                       * Exit:      B,D Preserved                                                     *
                                       *    BHA,X,Y Results from language entry                                       *
                                       ********************************************************************************
fe/dbb8: a2 04 00     ??mxd??? e @T... doCOKILL        ldx     #$0004
fe/dbbb: 4b           n?mxd??? e ....> coLangFn        phk
fe/dbbc: 62 50 00     n?mxd??? e .....                 per     LFEDC0F
fe/dbbf: 4b           n?mxd??? e .....                 phk
fe/dbc0: 0b           n?mxd??? e .....                 phd
fe/dbc1: 08           n?mxd??? e .....                 php
fe/dbc2: 8b           n?mxd??? e .....                 phb
fe/dbc3: 48           n?mxd??? e .....                 pha
fe/dbc4: da           n?mxd??? e .....                 phx
fe/dbc5: f4 00 ff     n?mxd??? e .....                 pea     $ff00
fe/dbc8: 2b           n?mxd??? e .....                 pld
fe/dbc9: b7 02        ??mxd??? e .....                 lda     [DPCOP_Y+1],y
fe/dbcb: 48           ??mxd??? e .....                 pha
fe/dbcc: 2b           ??mxd??? e .....                 pld
fe/dbcd: d4 06        ??mxd??? e .....                 pei     (DPCOP_AH+1)
fe/dbcf: a5 00        ??mxd??? e .....                 lda     $00
fe/dbd1: 0b           ??mxd??? e .....                 phd
fe/dbd2: f4 00 00     ??mxd??? e .....                 pea     $0000
fe/dbd5: ab           ??mxd??? e .....                 plb
fe/dbd6: ab           ??mxd??? e .....                 plb
fe/dbd7: a2 14 00     ??mxd??? e .....                 ldx     #$0014
fe/dbda: 22 8c ff 00  n?mxd?z? e .....                 jsl     __MM
fe/dbde: 90 03        ??mxd??? e .....                 bcc     LFEDBE3
fe/dbe0: 82 05 01     ??mxd??C e ...#.                 brl     syserrCoRoutineError

fe/dbe3: a2 12 00     ??mxd??c e ....> LFEDBE3         ldx     #$0012
fe/dbe6: 22 8c ff 00  n?mxd?zc e .....                 jsl     __MM
fe/dbea: 38           ??mxd??? e .....                 sec
fe/dbeb: e9 04 00     ??mxd??C e .....                 sbc     #$0004
fe/dbee: aa           ??mxd??? e .....                 tax
fe/dbef: ca           ??mxd??? e .....                 dex
fe/dbf0: ca           ??mxd??? e .....                 dex
fe/dbf1: 68           ??mxd??? e .....                 pla
fe/dbf2: df 00 00 00  ??mxd??? e .....                 cmpl    f:$000000,x
fe/dbf6: f0 03        ??mxd??? e .....                 beq     LFEDBFB
fe/dbf8: 82 ed 00     ??mxd?z? e ...#.                 brl     syserrCoRoutineError

fe/dbfb: e2 20        ??mxd?Z? e ....> LFEDBFB         sep     #$20
                                                       .rwid   shortm
fe/dbfd: bf 04 00 00  ??Mxd?Z? e .....                 ldal    f:DPCOP_X+1,x
fe/dc01: 83 0b        ??Mxd??? e .....                 sta     $0b,S
fe/dc03: c2 20        ??Mxd??? e .....                 rep     #$20
                                                       .rwid   longm
fe/dc05: bf 02 00 00  ??mxd??? e .....                 ldal    f:DPCOP_Y+1,x
fe/dc09: 83 09        ??mxd??? e .....                 sta     $09,S
fe/dc0b: 2b           ??mxd??? e .....                 pld
fe/dc0c: fa           ??mxd??? e .....                 plx
fe/dc0d: 68           ??mxd??? e .....                 pla
fe/dc0e: ab           ??mxd??? e .....                 plb
fe/dc0f: 40           ??mxd??? e ...#. LFEDC0F         rti

fe/dc10: 60                      .....                 .dd1    $60

                                       ********************************************************************************
                                       * 12 - COIAM - Return handle                                                   *
                                       *                                                                              *
                                       * This call returns the handle of the current coroutine, ie the coroutine from *
                                       * which the call to COIAM is made.                                             *
                                       *                                                                              *
                                       * Entry:                                                                       *
                                       *    X    COIAM                                                                *
                                       * Exit:                                                                        *
                                       *    B,D  Preserved                                                            *
                                       *    C=0  The handle was found                                                 *
                                       *    Y    The current coroutine's handle                                       *
                                       *    C=l  No handle could be found for the caller                              *
                                       ********************************************************************************
fe/dc11: f4 00 ff     ??mxd??? e @T... doCOIAM         pea     EXSYS
fe/dc14: 2b           ??mxd??? e .....                 pld
fe/dc15: d4 10        ??mxd??? e .....                 pei     (<EXSYS_CUR_COROUTINE)
fe/dc17: fa           ??mxd??? e .....                 plx
fe/dc18: 4c 40 cf     ??mxd??? e ...#.                 jmp     findHandleByAddr

                                       ********************************************************************************
                                       * CRS - co-routine call sibling QRY                                            *
                                       ********************************************************************************
                                                       .rwid   shortm,shortx
fe/dc1b: 08           ???????? e @T... default__CRS    php
fe/dc1c: c2 30        ???????? e .....                 rep     #$30
                                                       .rwid   longm,longx
fe/dc1e: 8f 05 ff 00  ??mx???? e .....                 stal    f:EXSYS_CO_A_SAVE
fe/dc22: 3b           ??mx???? e .....                 tsc
fe/dc23: 0b           ??mx???? e .....                 phd
fe/dc24: f4 00 ff     ??mx???? e .....                 pea     $ff00
fe/dc27: 2b           ??mx???? e .....                 pld
fe/dc28: 87 10        ??mx???? e .....                 sta     [$10]
fe/dc2a: b7 02        ??mx???? e .....                 lda     [DPCOP_Y+1],y
fe/dc2c: d4 10        ??mx???? e .....                 pei     ($10)
fe/dc2e: 2b           ??mx???? e .....                 pld
fe/dc2f: a4 02        ??mx???? e .....                 ldy     DPCOP_Y+1
fe/dc31: 64 02        ??mx???? e .....                 stz     DPCOP_Y+1
fe/dc33: 80 26        ??mx???? e ...#.                 bra     LFEDC5B

                                                       .rwid   shortm,shortx
fe/dc35: c2 30        n?MXdIzc e ....> LFEDC35         rep     #$30
                                                       .rwid   longm,longx
fe/dc37: 8f 05 ff 00  n?mxdIzc e .....                 stal    f:EXSYS_CO_A_SAVE
fe/dc3b: 3b           n?mxdIzc e .....                 tsc
fe/dc3c: 48           ??mxdI?c e .....                 pha
fe/dc3d: f4 00 ff     ??mxdI?c e .....                 pea     $ff00
fe/dc40: 2b           ??mxdI?c e .....                 pld
fe/dc41: b7 02        ??mxdI?c e .....                 lda     [DPCOP_Y+1],y
fe/dc43: a0 00 00     ??mxdI?c e .....                 ldy     #$0000
fe/dc46: 80 13        n?mxdIZc e ...#.                 bra     LFEDC5B

                                       ********************************************************************************
                                       * CCO - Call a Co-routine                                                      *
                                       *                                                                              *
                                       * This is used to call a coroutine from its creator (parent). On the first     *
                                       * call the entry address given in the COCRE call is used. Subsequently, the    *
                                       * address after the last CWT executed by the routine is used                   *
                                       *                                                                              *
                                       * Entry:                                                                       *
                                       *    Y       Handle of child                                                   *
                                       *    BHA,X,C Arguments to child coroutine                                      *
                                       * Exit:                                                                        *
                                       *    BHA,X,C Results from child coroutine                                      *
                                       *    B,D     Preserved                                                         *
                                       *                                                                              *
                                       * Note: C is the C flag.                                                       *
                                       ********************************************************************************
                                                       .rwid   shortm,shortx
fe/dc48: 08           ????d??? e @T... default__CCO    php
fe/dc49: 0b           ????d??? e .....                 phd
fe/dc4a: c2 30        ????d??? e .....                 rep     #$30
                                                       .rwid   longm,longx
fe/dc4c: 8f 05 ff 00  ??mxd??? e .....                 stal    f:EXSYS_CO_A_SAVE ;we need to preserve A not on the stack as the stack will get switched
fe/dc50: f4 00 ff     ??mxd??? e .....                 pea     EXSYS
fe/dc53: 2b           ??mxd??? e .....                 pld
fe/dc54: 3b           ??mxd??? e .....                 tsc
fe/dc55: 87 10        ??mxd??? e .....                 sta     [<EXSYS_CUR_COROUTINE] ;store current stack at offset 0 in our block
fe/dc57: b7 02        ??mxd??? e .....                 lda     [<EXSYS_HANDLEBLOCK_LONGPTR],y
fe/dc59: a4 10        ??mxd??? e .....                 ldy     <EXSYS_CUR_COROUTINE
fe/dc5b: 5b           ??mx???? e ....> LFEDC5B         tcd
fe/dc5c: 8f 10 ff 00  ??mx???? e .....                 stal    f:EXSYS_CUR_COROUTINE
fe/dc60: a5 0b        ??mx???? e .....                 lda     $0b
fe/dc62: 29 ff 00     ??mx???? e .....                 and     #$00ff
fe/dc65: 49 06 00     n?mx???? e .....                 eor     #$0006
fe/dc68: f0 1b        ??mx???? e .....                 beq     LFEDC85
fe/dc6a: 00 00        ??mx??z? e ...#.                 brk     $00

fe/dc6c: 49 6e 76 61+            .....                 .zstr   “Invalid coroutine handle”

fe/dc85: a5 02        ??mx??Z? e ....> LFEDC85         lda     CO_off_Parent
fe/dc87: f0 03        ??mx???? e .....                 beq     LFEDC8C
fe/dc89: 82 5c 00     ??mx??z? e ...#.                 brl     syserrCoRoutineError

fe/dc8c: 84 02        ??mx??Z? e ....> LFEDC8C         sty     CO_off_Parent     ;set ourselves as the parent
fe/dc8e: a3 01        ??mx??Z? e .....                 lda     $01,S             ;get parent DP
fe/dc90: 24 03        ??mx???? e .....                 bit     CO_off_flags-1    ;check for $40 in low byte of flags (has DP)
fe/dc92: 50 02        ??mx???? e .....                 bvc     @nodp
fe/dc94: a5 06        ?Vmx???? e .....                 lda     CO_off_DP         ;get stored DP for child
fe/dc96: 85 06        ??mx???? e ....> @nodp           sta     CO_off_DP         ;store in child DP
fe/dc98: 48           ??mx???? e .....                 pha                       ;save DP - again - TODO: there looks to be a lot of unnecessary stuff here
fe/dc99: f4 00 ff     ??mx???? e .....                 pea     EXSYS
fe/dc9c: 2b           ??mx???? e .....                 pld
fe/dc9d: a7 10        ??mx???? e .....                 lda     [<EXSYS_CUR_COROUTINE] ;get stack from offset 0 in block
fe/dc9f: 2b           ??mx???? e .....                 pld                       ;set up call DP
fe/dca0: 1b           ??mx???? e .....                 tcs                       ;the rtl below will now return to the address that was last stacked by the child coroutine
fe/dca1: af 05 ff 00  ??mx???? e .....                 ldal    f:EXSYS_CO_A_SAVE ;get back A as passed in 
fe/dca5: b0 03        ??mx???? e ....> plpRetCy        bcs     @plpRetSec
fe/dca7: 28           ??mx???c e .....                 plp
fe/dca8: 18           ??mx???? e .....                 clc
fe/dca9: 6b           ??mx???c e ...#.                 rtl

fe/dcaa: 28           ??mx???C e ....> @plpRetSec      plp
fe/dcab: 38           ??mx???? e .....                 sec
fe/dcac: 6b           ??mx???C e ...#.                 rtl

                                       ********************************************************************************
                                       * CWT - coroutine wait / suspend                                               *
                                       *                                                                              *
                                       * Suspends current co-routine and return to parent                             *
                                       ********************************************************************************
                                                       .rwid   shortm,shortx
fe/dcad: 08           ???????? e @T... default__CWT    php
fe/dcae: c2 30        ???????? e .....                 rep     #$30
                                                       .rwid   longm,longx
fe/dcb0: 8f 05 ff 00  ??mx???? e .....                 stal    f:EXSYS_CO_A_SAVE ;save AH - we're about to swap out stack so we can't stack it
fe/dcb4: af 10 ff 00  ??mx???? e .....                 ldal    f:EXSYS_CUR_COROUTINE ;get pointer to this coroutine's block
fe/dcb8: 5b           ??mx???? e .....                 tcd                       ;in DP
fe/dcb9: 3b           ??mx???? e .....                 tsc
fe/dcba: 85 00        ??mx???? e .....                 sta     CO_off_stack      ;store stack at offset 0
fe/dcbc: a5 02        ??mx???? e .....                 lda     CO_off_Parent
fe/dcbe: d0 03        ??mx???? e .....                 bne     LFEDCC3
fe/dcc0: 82 25 00     ??mx??Z? e ...#.                 brl     syserrCoRoutineError ;flag error - cannot call CWT when no parent?!?

fe/dcc3: 8f 10 ff 00  ??mx??z? e ....> LFEDCC3         stal    f:EXSYS_CUR_COROUTINE ;make parent the current coroutine
fe/dcc7: d4 02        ??mx??z? e .....                 pei     (DPCOP_Y+1)       ;push the address of the parent block on the stack
fe/dcc9: 64 02        ??mx??z? e .....                 stz     DPCOP_Y+1         ;clear current co routine's parent
fe/dccb: 2b           ??mx??z? e .....                 pld                       ;DP to point at parent block
fe/dccc: a5 00        ??mx???? e .....                 lda     $00               ;load the parent's stack pointer
fe/dcce: 1b           ??mx???? e .....                 tcs                       ;and switch to that stack
fe/dccf: af 05 ff 00  ??mx???? e .....                 ldal    f:EXSYS_CO_A_SAVE ;return AH from coroutine
fe/dcd3: 2b           ??mx???? e .....                 pld                       ;pull D - the DP of the parent coroutine
fe/dcd4: 80 cf        ??mx???? e ...#.                 bra     plpRetCy          ;continue coroutine

                                       ********************************************************************************
                                       * COREN - Restore current coroutine's environment                              *
                                       *                                                                              *
                                       * This call may be used to restore D to the value set by a previous call to    *
                                       * COENV. It is useful as many of the OS calls corrupt D.                       *
                                       *                                                                              *
                                       * Entry:                                                                       *
                                       *    X    COREN                                                                *
                                       * Exit:                                                                        *
                                       *    D    Value set in previous call to COENV                                  *
                                       *                                                                              *
                                       * TODO: Documentation also seems to restore B which is _NOT_ set up by COENV!  *
                                       ********************************************************************************
fe/dcd6: af 10 ff 00  ??mxd??? e @T... doCOREN         ldal    f:EXSYS_CUR_COROUTINE
fe/dcda: 5b           ??mxd??? e .....                 tcd
fe/dcdb: e2 20        ??mxd??? e .....                 sep     #$20
                                                       .rwid   shortm
fe/dcdd: a5 05        ??Mxd??? e .....                 lda     CO_off_B
fe/dcdf: 83 03        ??Mxd??? e .....                 sta     $03,S
fe/dce1: c2 20        ??Mxd??? e .....                 rep     #$20
                                                       .rwid   longm
fe/dce3: a5 06        ??mxd??? e .....                 lda     CO_off_DP
fe/dce5: 83 04        ??mxd??? e .....                 sta     $04,S
fe/dce7: 60           ??mxd??? e ...#.                 rts

fe/dce8: 02 0f        ??mx???? e ....> syserrCoRoutineError cop COP_0F_OPERR
fe/dcea: 43 6f 72 6f+            .T...                 .zstr   “Coroutine error”
fe/dcfa: 7b           ??mx???? e ....> coHandleBRK     tdc
fe/dcfb: a8           ??mx???? e .....                 tay
fe/dcfc: af 10 ff 00  ??mx???? e .....                 ldal    f:EXSYS_CUR_COROUTINE
fe/dd00: aa           ??mx???? e .....                 tax
fe/dd01: 5b           ??mx???? e ....> @lp_par         tcd
fe/dd02: a9 20 00     ??mx???? e .....                 lda     #COFLAG_hasBRKhandler
fe/dd05: 24 04        n?mx??z? e .....                 bit     CO_off_flags
fe/dd07: d0 53        ??mx???? e .....                 bne     coCallBrkHandler  ;there's a break handler set - call it
fe/dd09: a5 02        ??mx??Z? e .....                 lda     CO_off_Parent
fe/dd0b: d0 f4        ??mx???? e .....                 bne     @lp_par           ;check parent's for break handler
                                       ; If we get this no ancestor has a break handler set so call the system one and
                                       ; hang up the machine
fe/dd0d: 02 2d        ??mx??Z? e .....                 cop     COP_2D_OPWRM      ;write module name to VDU
fe/dd0f: 90 04        ??mx??Z? e .....                 bcc     LFEDD15
fe/dd11: 02 01        ??mx??ZC e .....                 cop     COP_01_OPWRS      ;write "?"
fe/dd13: 3f 00                   .T...                 .zstr   “?”
fe/dd15: 02 01        ??mx??Z? e ....> LFEDD15         cop     COP_01_OPWRS
fe/dd17: 3a 20 00                .T...                 .zstr   “: ”
fe/dd1a: a2 14 00     ??mx??Z? e .....                 ldx     #__STSBK
fe/dd1d: 22 88 ff 00  n?mx??z? e .....                 jsl     __ST
fe/dd21: a2 16 00     ??mx???? e ....> LFEDD21         ldx     #__STTBK
fe/dd24: 22 88 ff 00  n?mx??z? e .....                 jsl     __ST
fe/dd28: b0 04        ??mx???? e .....                 bcs     sysErrBRKbutNoHandler
fe/dd2a: 02 00        ??mx???c e .....                 cop     COP_00_OPWRC
fe/dd2c: 80 f3        ??mx???c e ...#.                 bra     LFEDD21

fe/dd2e: 02 01        ??mx???C e ....> sysErrBRKbutNoHandler cop COP_01_OPWRS
fe/dd30: 2a 2a 2a 20+            .T...                 .zstr   “*** BRK but no handler:”
fe/dd48: 98           ??mx???C e .....                 tya
fe/dd49: 5b           ??mx???C e .....                 tcd
fe/dd4a: a2 0d 00     ??mx???C e .....                 ldx     #$000d
fe/dd4d: 20 98 bd     n?mx??zC e .....                 jsr     @dumpregs
fe/dd50: 02 01        ??mx???? e .....                 cop     COP_01_OPWRS
fe/dd52: 20 2a 2a 2a+            .T...                 .zstr   “ ***”,$0d,$0a
fe/dd59: 02 0f        ??mx???? e .....                 cop     COP_0F_OPERR
fe/dd5b: 00                      .T...                 .zstr   “”
fe/dd5c: 7b           ??mx???? e ....> coCallBrkHandler tdc
fe/dd5d: cf 10 ff 00  ??mx???? e .....                 cmpl    f:EXSYS_CUR_COROUTINE
fe/dd61: f0 03        ??mx???? e .....                 beq     LFEDD66
fe/dd63: a5 00        ??mx??z? e .....                 lda     CO_off_stack      ;switch current level's stack in
fe/dd65: 1b           ??mx???? e .....                 tcs
fe/dd66: 7b           ??mx???? e ....> LFEDD66         tdc
fe/dd67: 8f 10 ff 00  ??mx???? e .....                 stal    f:EXSYS_CUR_COROUTINE ;set this coroutine as current
fe/dd6b: 8b           ??mx???? e .....                 phb
fe/dd6c: 0b           ??mx???? e .....                 phd
fe/dd6d: 58           ??mx???? e .....                 cli
fe/dd6e: 08           ??mx?i?? e .....                 php                       ;push flags for RTI with interrupts (re)enabled
fe/dd6f: 0b           ??mx?i?? e .....                 phd
fe/dd70: d4 08        ??mx?i?? e .....                 pei     (CO_off_8_BRKBLOCK) ;QRY - dunno what's at offset 8 here
fe/dd72: 2b           ??mx?i?? e .....                 pld
fe/dd73: a5 01        ??mx?i?? e .....                 lda     $01
fe/dd75: 83 05        ??mx?i?? e .....                 sta     $05,S
fe/dd77: a5 00        ??mx?i?? e .....                 lda     $00
fe/dd79: 83 04        ??mx?i?? e .....                 sta     $04,S
fe/dd7b: 2b           ??mx?i?? e .....                 pld
fe/dd7c: d4 06        ??mx?i?? e .....                 pei     ($06)
fe/dd7e: 2b           ??mx?i?? e .....                 pld
fe/dd7f: 40           ??mx?i?? e ...#.                 rti

                                       ********************************************************************************
                                       * __CO 10 - CORTB - ???                                                        *
                                       *                                                                              *
                                       * Does nothing                                                                 *
                                       ********************************************************************************
fe/dd80: c2 30        ??mxd??? e @T... doCORTB         rep     #$30
fe/dd82: 60           ??mxd??? e ...#.                 rts

                                                       .rwid   shortm,shortx
fe/dd83: 08           ??MXd??C e ....> getCurCorParent php
fe/dd84: 0b           ??MXd??C e .....                 phd
fe/dd85: c2 30        ??MXd??C e .....                 rep     #$30
                                                       .rwid   longm,longx
fe/dd87: f4 00 ff     ??mxd??C e .....                 pea     EXSYS
fe/dd8a: 2b           ??mxd??C e .....                 pld
fe/dd8b: d4 10        ??mxd??C e .....                 pei     (<EXSYS_CUR_COROUTINE)
fe/dd8d: 2b           ??mxd??C e .....                 pld
fe/dd8e: a6 02        ??mxd??C e .....                 ldx     CO_off_Parent
fe/dd90: f0 04        ??mxd??C e .....                 beq     @retsec
fe/dd92: 2b           ??mxd?zC e .....                 pld
fe/dd93: 28           ??mxd??C e .....                 plp
                                                       .rwid   shortm,shortx
fe/dd94: 18           ??MXd??C e .....                 clc
fe/dd95: 60           ??MXd??c e ...#.                 rts

                                                       .rwid   longm,longx
fe/dd96: 2b           ??mxd?ZC e ....> @retsec         pld
fe/dd97: 28           ??mxd??C e .....                 plp
                                                       .rwid   shortm,shortx
fe/dd98: 38           ??MXd??C e .....                 sec
fe/dd99: 60           ??MXd??C e ...#.                 rts

fe/dd9a: 6b           ??MXd??? e @T.#.                 rtl

fe/dd9b: 29                      .....                 .dd1    $29
fe/dd9c: 43                      .....                 .dd1    $43
fe/dd9d: 28                      .....                 .dd1    $28
fe/dd9e: 00                      .....                 .dd1    $00

                                                       .rwid   longm,longx
fe/dd9f: 08           ??mxd??? e ....> defaultCLIV     php
fe/dda0: e2 20        ??mxd??? e .....                 sep     #$20
                                                       .rwid   shortm
fe/dda2: c2 10        ??Mxd??? e .....                 rep     #$10
fe/dda4: 85 ed        ??Mxd??? e .....                 sta     <DPSYS_GSREAD_ptr
fe/dda6: eb           ??Mxd??? e .....                 xba
fe/dda7: 85 ee        ??Mxd??? e .....                 sta     <DPSYS_GSREAD_ptr+1
fe/dda9: a0 00 00     ??Mxd??? e .....                 ldy     #$0000
fe/ddac: b1 ed        ??Mxd??? e ....> LFEDDAC         lda     (<DPSYS_GSREAD_ptr),y
fe/ddae: c9 0d        ??Mxd??? e .....                 cmp     #$0d
fe/ddb0: f0 19        ??Mxd??? e .....                 beq     LFEDDCB
fe/ddb2: c8           ??Mxd?z? e .....                 iny
fe/ddb3: d0 f7        ??Mxd??? e .....                 bne     LFEDDAC
fe/ddb5: 02 26        ??Mxd?Z? e .....                 cop     COP_26_OPBHA
fe/ddb7: 4c 69 6e 65+            .T...                 .zstr   “Line too long”
fe/ddc5: a2 01 00     ??Mxd?Z? e .....                 ldx     #$0001
fe/ddc8: 28           n?Mxd?z? e .....                 plp
                                                       .rwid   longm
fe/ddc9: 38           ??mxd??? e .....                 sec
fe/ddca: 60           ??mxd??C e ...#.                 rts

                                                       .rwid   shortm
fe/ddcb: a0 ff ff     ??Mxd?Z? e ....> LFEDDCB         ldy     #$ffff
fe/ddce: c8           ??Mxd??? e ....> LFEDDCE         iny
fe/ddcf: b1 ed        ??Mxd??? e .....                 lda     (<DPSYS_GSREAD_ptr),y
fe/ddd1: c9 20        ??Mxd??? e .....                 cmp     #‘ ’
fe/ddd3: f0 f9        ??Mxd??? e .....                 beq     LFEDDCE
fe/ddd5: c9 2a        ??Mxd?z? e .....                 cmp     #‘*’
fe/ddd7: f0 f5        ??Mxd??? e .....                 beq     LFEDDCE
fe/ddd9: c9 0d        ??Mxd?z? e .....                 cmp     #$0d
fe/dddb: f0 1a        ??Mxd??? e .....                 beq     LFEDDF7
fe/dddd: c9 7c        ??Mxd?z? e .....                 cmp     #‘|’
fe/dddf: f0 16        ??Mxd??? e .....                 beq     LFEDDF7
fe/dde1: c9 2f        ??Mxd?z? e .....                 cmp     #‘/’
fe/dde3: f0 1a        ??Mxd??? e .....                 beq     LFEDDFF
fe/dde5: c9 2e        ??Mxd?z? e .....                 cmp     #‘.’
fe/dde7: f0 15        ??Mxd??? e .....                 beq     LFEDDFE
fe/dde9: 20 0b de     ??Mxd?z? e .....                 jsr     LFEDE0B
fe/ddec: 4b           ??Mxd??? e .....                 phk
fe/dded: 20 72 f3     ??Mxd??? e .....                 jsr     LFEF372
fe/ddf0: 90 05        ??Mxd??? e .....                 bcc     LFEDDF7
fe/ddf2: 70 06        ??Mxd??C e .....                 bvs     LFEDDFA
fe/ddf4: 28           ?vMxd??C e .....                 plp
                                                       .rwid   longm
fe/ddf5: 38           ??mxd??? e .....                 sec
fe/ddf6: 60           ??mxd??C e ...#.                 rts

                                                       .rwid   shortm
fe/ddf7: 28           ??Mxd??? e ....> LFEDDF7         plp
                                                       .rwid   longm
fe/ddf8: 18           ??mxd??? e .....                 clc
fe/ddf9: 60           ??mxd??c e ...#.                 rts

                                                       .rwid   shortm
fe/ddfa: 28           ??Mxd??C e ....> LFEDDFA         plp
                                                       .rwid   longm
fe/ddfb: 82 66 e9     ??mxd??? e ...#.                 brl     LFEC764

                                                       .rwid   shortm
fe/ddfe: 18           ??Mxd?Z? e ....> LFEDDFE         clc
fe/ddff: 08           ??Mxd?Z? e ....> LFEDDFF         php
fe/de00: c8           ??Mxd?Z? e .....                 iny
fe/de01: 20 0b de     ??Mxd??? e .....                 jsr     LFEDE0B
fe/de04: 28           ??Mxd??? e .....                 plp
fe/de05: b0 f3        ??Mxd?Z? e .....                 bcs     LFEDDFA
fe/de07: 28           ??Mxd?Zc e .....                 plp
fe/de08: 82 7d 1b     ??Mxd?Z? e ...#.                 brl     starCAT

fe/de0b: 18           ??Mxd??? e ....> LFEDE0B         clc
fe/de0c: 98           ??Mxd??c e .....                 tya
fe/de0d: 65 ed        ??Mxd??c e .....                 adc     $ed
fe/de0f: eb           ??Mxd??? e .....                 xba
fe/de10: a5 ee        ??Mxd??? e .....                 lda     $ee
fe/de12: 69 00        ??Mxd??? e .....                 adc     #$00
fe/de14: eb           ??Mxd??? e .....                 xba
fe/de15: 60           ??Mxd??? e ...#.                 rts

                                       ********************************************************************************
                                       * OSBYTE 7F - Check for EOF                                                    *
                                       ********************************************************************************
                                                       .rwid   shortx
fe/de16: 9b           ??MXd??? e @T... OSBYTE_7F       txy
fe/de17: 4b           ??MXd??? e .....                 phk
fe/de18: 20 d4 f5     ??MXd??? e .....                 jsr     CheckEOF
fe/de1b: a2 00        ??MXd??? e .....                 ldx     #$00
fe/de1d: 90 01        n?MXd?Z? e .....                 bcc     @ret
fe/de1f: ca           n?MXd?ZC e .....                 dex
fe/de20: 60           ??MXd??? e ...#> @ret            rts

fe/de21: a4 d9        ??MXd?Z? e ....> LFEDE21         ldy     $d9
fe/de23: 20 67 de     ??MXd??? e ....> LFEDE23         jsr     LFEDE67
fe/de26: c9 20        ??MXd??? e .....                 cmp     #$20
fe/de28: f0 f7        ??MXd??? e .....                 beq     LFEDE21
fe/de2a: c9 0d        ??MXd?z? e ....> LFEDE2A         cmp     #$0d
fe/de2c: 60           ??MXd??? e ...#.                 rts

fe/de2d: 90 f4        N?MXd?z? e ....> LFEDE2D         bcc     LFEDE23
fe/de2f: 20 23 de     ??MXd??? e ....> LFEDE2F         jsr     LFEDE23
fe/de32: c9 2c        ??MXd??? e .....                 cmp     #$2c
fe/de34: d0 f4        ??MXd??? e .....                 bne     LFEDE2A
fe/de36: a4 d9        ??MXd?Z? e .....                 ldy     $d9
fe/de38: 60           ??MXd??? e ...#.                 rts

fe/de39: 20 23 de     ??MXd??? e ....> LFEDE39         jsr     LFEDE23
fe/de3c: 20 76 de     ??MXd??? e .....                 jsr     LFEDE76
fe/de3f: 90 46        ??MXd??? e .....                 bcc     LFEDE87
fe/de41: 85 e1        ??MXd??? e ....> LFEDE41         sta     $e1
fe/de43: 20 74 de     ??MXd??? e .....                 jsr     LFEDE74
fe/de46: 90 19        ??MXd??? e .....                 bcc     LFEDE61
fe/de48: aa           ??MXd??C e .....                 tax
fe/de49: a5 e1        ??MXd??C e .....                 lda     $e1
fe/de4b: 0a           ??MXd??C e .....                 asl     A
fe/de4c: b0 39        ??MXd??? e .....                 bcs     LFEDE87
fe/de4e: 0a           ??MXd??c e .....                 asl     A
fe/de4f: b0 36        ??MXd??? e .....                 bcs     LFEDE87
fe/de51: 65 e1        ??MXd??c e .....                 adc     $e1
fe/de53: b0 32        ??MXd??? e .....                 bcs     LFEDE87
fe/de55: 0a           ??MXd??c e .....                 asl     A
fe/de56: b0 2f        ??MXd??? e .....                 bcs     LFEDE87
fe/de58: 85 e1        ??MXd??c e .....                 sta     $e1
fe/de5a: 8a           ??MXd??c e .....                 txa
fe/de5b: 65 e1        ??MXd??c e .....                 adc     $e1
fe/de5d: b0 28        ??MXd??? e .....                 bcs     LFEDE87
fe/de5f: 90 e0        ??MXd??c e ...#.                 bcc     LFEDE41

fe/de61: a6 e1        ??MXd??c e ....> LFEDE61         ldx     $e1
fe/de63: c9 0d        ??MXd??c e .....                 cmp     #$0d
fe/de65: 38           ??MXd??? e .....                 sec
fe/de66: 60           ??MXd??C e ...#.                 rts

fe/de67: da           ??MXd??? e ....> LFEDE67         phx
fe/de68: 5a           ??MXd??? e .....                 phy
fe/de69: a2 0e        ??MXd??? e .....                 ldx     #$0e
fe/de6b: 22 88 ff 00  n?MXd?z? e .....                 jsl     __ST
fe/de6f: 84 d9        ??MXd??? e .....                 sty     $d9
fe/de71: 7a           ??MXd??? e .....                 ply
fe/de72: fa           ??MXd??? e .....                 plx
fe/de73: 60           ??MXd??? e ...#.                 rts

fe/de74: a4 d9        ??MXd??? e ....> LFEDE74         ldy     $d9
fe/de76: 20 67 de     ??MXd??? e ....> LFEDE76         jsr     LFEDE67
fe/de79: c9 3a        ??MXd??? e .....                 cmp     #$3a
fe/de7b: b0 0a        ??MXd??? e .....                 bcs     LFEDE87
fe/de7d: c9 30        ??MXd??c e .....                 cmp     #$30
fe/de7f: 90 06        ??MXd??? e .....                 bcc     LFEDE87
fe/de81: 29 0f        ??MXd??C e .....                 and     #$0f
fe/de83: 60           n?MXd??C e ...#.                 rts

fe/de84: 20 2f de     ??MXd??? e ....> LFEDE84         jsr     LFEDE2F
fe/de87: 18           ??MXd??? e ....> LFEDE87         clc
fe/de88: 60           ??MXd??c e ...#.                 rts

fe/de89: a4                      .....                 .dd1    $a4
fe/de8a: d9                      .....                 .dd1    $d9

fe/de8b: 20 76 de     ??MXd??? e ....> LFEDE8B         jsr     LFEDE76
fe/de8e: b0 0e        ??MXd??? e .....                 bcs     LFEDE9E
fe/de90: 29 df        ??MXd??c e .....                 and     #$df
fe/de92: c9 47        ??MXd??c e .....                 cmp     #$47
fe/de94: b0 ee        ??MXd??? e .....                 bcs     LFEDE84
fe/de96: c9 41        ??MXd??c e .....                 cmp     #$41
fe/de98: 90 ea        ??MXd??? e .....                 bcc     LFEDE84
fe/de9a: 08           ??MXd??C e .....                 php
fe/de9b: e9 37        ??MXd??C e .....                 sbc     #$37
fe/de9d: 28           ??MXd??? e .....                 plp
fe/de9e: a4 d9        ??MXd??C e ....> LFEDE9E         ldy     $d9
fe/dea0: 60           ??MXd??C e ...#.                 rts

fe/dea1: a4                      .....                 .dd1    $a4
fe/dea2: d9                      .....                 .dd1    $d9
fe/dea3: 20                      .....                 .dd1    $20
fe/dea4: 67                      .....                 .dd1    $67
fe/dea5: de                      .....                 .dd1    $de
fe/dea6: c9                      .....                 .dd1    $c9
fe/dea7: 20                      .....                 .dd1    $20
fe/dea8: f0                      .....                 .dd1    $f0
fe/dea9: f7                      .....                 .dd1    $f7
fe/deaa: c9                      .....                 .dd1    $c9
fe/deab: 0d                      .....                 .dd1    $0d
fe/deac: 60                      .....                 .dd1    $60
fe/dead: 90                      .....                 .dd1    $90
fe/deae: f4                      .....                 .dd1    $f4
fe/deaf: 20                      .....                 .dd1    $20
fe/deb0: a3                      .....                 .dd1    $a3
fe/deb1: de                      .....                 .dd1    $de
fe/deb2: c9                      .....                 .dd1    $c9
fe/deb3: 2c                      .....                 .dd1    $2c
fe/deb4: d0                      .....                 .dd1    $d0
fe/deb5: f4                      .....                 .dd1    $f4
fe/deb6: a4                      .....                 .dd1    $a4
fe/deb7: d9                      .....                 .dd1    $d9
fe/deb8: 60                      .....                 .dd1    $60

fe/deb9: e2 20        ??MXd??? e @T... starRESET       sep     #$20
fe/debb: a9 08        ??MXd??? e .....                 lda     #$08
fe/debd: 8f 02 00 42  n?MXd?z? e .....                 stal    VIA_DDRB
fe/dec1: a9 00        n?MXd?z? e .....                 lda     #$00
fe/dec3: 8f 00 00 42  n?MXd?Z? e .....                 stal    VIA_ORB
fe/dec7: 80 fe        n?MXd?Z? e ...#> @here           bra     @here

                                       ********************************************************************************
                                       * OSBYTE 9D - Fast BPUT                                                        *
                                       *                                                                              *
                                       * QRY - QRY - QRY this doesn't look right                                      *
                                       ********************************************************************************
fe/dec9: 0b           ??MXd??? e @T... OSBYTE_9D       phd
fe/deca: 08           ??MXd??? e .....                 php
fe/decb: c2 30        ??MXd??? e .....                 rep     #$30
                                                       .rwid   longm,longx
fe/decd: e0 10 00     ??mxd??? e .....                 cpx     #$0010
fe/ded0: b0 2a        ??mxd??? e .....                 bcs     LFEDEFC
fe/ded2: a0 00 00     ??mxd??c e .....                 ldy     #$0000
fe/ded5: da           n?mxd?Zc e .....                 phx
fe/ded6: 2b           n?mxd?Zc e .....                 pld
fe/ded7: f0 11        ??mxd??c e .....                 beq     LFEDEEA
fe/ded9: a9 0a 00     ??mxd??c e ....> LFEDED9         lda     #HND_type_A_CBLCB
fe/dedc: 20 01 ce     n?mxd?zc e .....                 jsr     obtainFreeBlock
fe/dedf: b0 09        ??mxd??? e .....                 bcs     LFEDEEA
fe/dee1: da           ??mxd??c e .....                 phx
fe/dee2: c8           ??mxd??c e .....                 iny
fe/dee3: 98           ??mxd??c e .....                 tya
fe/dee4: 0b           ??mxd??c e .....                 phd
fe/dee5: c3 01        ??mxd??c e .....                 cmp     $01,S
fe/dee7: 2b           ??mxd??? e .....                 pld
fe/dee8: 90 ef        ??mxd??? e .....                 bcc     LFEDED9
fe/deea: a9 0a 00     ??mxd??? e ....> LFEDEEA         lda     #$000a
fe/deed: 20 01 ce     n?mxd?z? e .....                 jsr     obtainFreeBlock
fe/def0: 90 f8        ??mxd??? e .....                 bcc     LFEDEEA
fe/def2: 98           ??mxd??C e .....                 tya
fe/def3: f0 07        ??mxd??C e .....                 beq     LFEDEFC
fe/def5: fa           ??mxd?z? e ....> LFEDEF5         plx
fe/def6: 20 da cd     ??mxd??? e .....                 jsr     returnXToFreeList
fe/def9: 88           ??mxd??? e .....                 dey
fe/defa: d0 f9        ??mxd??? e .....                 bne     LFEDEF5
fe/defc: 28           ??mxd??? e ....> LFEDEFC         plp
                                                       .rwid   shortm,shortx
fe/defd: 2b           ??MXd??? e .....                 pld
fe/defe: 60           ??MXd??? e ...#.                 rts

fe/deff: 60           ??MXd??? e @T.#. TFEDEFF         rts

fe/df00: 60           ??MXd??? e @T.#. OSBYTE_7B_null  rts

fe/df01: d0 28        ??MXd??? e @T... OSBYTE_F        bne     OSB_FlushInputBuffer
fe/df03: a2 08        ??MXd?Z? e ..... FlushAllBuffers ldx     #$08
fe/df05: 58           n?MXd??? e ....> @lp             cli
fe/df06: 78           n?MXdi?? e .....                 sei
fe/df07: 20 0d df     n?MXdI?? e .....                 jsr     OSBYTE_15
fe/df0a: ca           ??MXdI?? e .....                 dex
fe/df0b: 10 f8        ??MXdI?? e .....                 bpl     @lp
fe/df0d: e0 09        ??MXdI?? e .T..> OSBYTE_15       cpx     #$09
fe/df0f: 90 22        ??MXdI?? e .....                 bcc     OSB_FlushBufferX
fe/df11: 60           ??MXdI?C e ...#.                 rts

fe/df12: a9                      .....                 .dd1    $a9
fe/df13: 00                      .....                 .dd1    $00
fe/df14: a2                      .....                 .dd1    $a2
fe/df15: 03                      .....                 .dd1    $03
fe/df16: ac                      .....                 .dd1    $ac
fe/df17: 85                      .....                 .dd1    $85
fe/df18: a5                      .....                 .dd1    $a5
fe/df19: 18                      .....                 .dd1    $18
fe/df1a: 6b                      .....                 .dd1    $6b
fe/df1b: 20                      .....                 .dd1    $20
fe/df1c: 66                      .....                 .dd1    $66
fe/df1d: e3                      .....                 .dd1    $e3
fe/df1e: eb                      .....                 .dd1    $eb
fe/df1f: 4b                      .....                 .dd1    $4b
fe/df20: ad                      .....                 .dd1    $ad
fe/df21: 23                      .....                 .dd1    $23
fe/df22: a5                      .....                 .dd1    $a5
fe/df23: 48                      .....                 .dd1    $48
fe/df24: ad                      .....                 .dd1    $ad
fe/df25: 22                      .....                 .dd1    $22
fe/df26: a5                      .....                 .dd1    $a5
fe/df27: 48                      .....                 .dd1    $48
fe/df28: eb                      .....                 .dd1    $eb
fe/df29: 08                      .....                 .dd1    $08
fe/df2a: 40                      .....                 .dd1    $40

fe/df2b: f4 00 00     ??MXd?z? e ....> OSB_FlushInputBuffer pea $0000
fe/df2e: ab           ??MXd?z? e .....                 plb
                                                       .dbank  $00
fe/df2f: ab           ??MXd??? e .....                 plb
fe/df30: ae 41 a5     ??MXd??? e .....                 ldx     SYSVAR_41_input_stream ;Get current input stream
fe/df33: 18           ??MXd??? e ....> OSB_FlushBufferX clc
fe/df34: 8b           ??MXd??? e ....> LFEDF34         phb
fe/df35: f4 00 00     ??MXd??? e .....                 pea     $0000
fe/df38: ab           ??MXd??? e .....                 plb
                                                       .dbank  $00
fe/df39: ab           ??MXd??? e .....                 plb
fe/df3a: 48           ??MXd??? e .....                 pha
fe/df3b: 08           ??MXd??? e .....                 php
fe/df3c: 78           ??MXd??? e .....                 sei
fe/df3d: b0 19        ??MXdI?? e .....                 bcs     @skipsound
fe/df3f: 8a           ??MXdI?c e .....                 txa
fe/df40: 29 04        ??MXdI?c e .....                 and     #$04
fe/df42: f0 14        n?MXdI?c e .....                 beq     @skipsound
fe/df44: ad 6b a5     n?MXdIzc e .....                 lda     SYSVAR_SOUND_EXT_FLAG ;sound flag??
fe/df47: f0 0c        ??MXdI?c e .....                 beq     @ext_sound_qry
fe/df49: 8a           ??MXdIzc e .....                 txa
fe/df4a: 48           ??MXdI?c e .....                 pha
fe/df4b: a8           ??MXdI?c e .....                 tay
fe/df4c: a2 17        ??MXdI?c e .....                 ldx     #$17
fe/df4e: 20 47 ee     n?MXdIzc e .....                 jsr     donothingRTS
fe/df51: 68           ??MXdI?? e .....                 pla
fe/df52: aa           ??MXdI?? e .....                 tax
fe/df53: d0 03        ??MXdI?? e .....                 bne     @skipsound
fe/df55: 20 44 ec     ??MXdIZ? e ....> @ext_sound_qry  jsr     SOUND_RESET_CHAN_X_QRY
fe/df58: 38           ??MXdI?? e ....> @skipsound      sec
fe/df59: bf c3 a5 00  ??MXdI?C e .....                 ldal    f:SYSVARS_ELK_BUFFER_BUSY,x
fe/df5d: 6a           ??MXdI?C e .....                 ror     A
fe/df5e: 9f c3 a5 00  N?MXdIz? e .....                 stal    f:SYSVARS_ELK_BUFFER_BUSY,x
fe/df62: e0 02        N?MXdIz? e .....                 cpx     #$02
fe/df64: b0 0b        ??MXdI?? e .....                 bcs     @notinput
fe/df66: a9 00        ??MXdI?c e .....                 lda     #$00
fe/df68: 8d 68 a5     n?MXdIZc e .....                 sta     SYSVAR_SOFTKEY_STRLEN
fe/df6b: 8d 5d a5     n?MXdIZc e .....                 sta     SYSVAR_ELK_SOFTKEY_STRLEN
fe/df6e: 8d 6a a5     n?MXdIZc e .....                 sta     SYSVAR_VDU_QLEN
fe/df71: 20 80 e7     ??MXdI?? e ....> @notinput       jsr     callCNPV
fe/df74: 28           ??MXdI?? e .....                 plp
fe/df75: 68           ??MXdI?c e .....                 pla
fe/df76: ab           ??MXdI?c e .....                 plb
fe/df77: 60           ??MXdI?c e ...#.                 rts

fe/df78: 50 09        ??MXd??? e @T... defaultCNPV     bvc     LFEDF83
fe/df7a: bf cc a5 00  ?VMXd??? e .....                 ldal    f:SYSVARS+204,x
fe/df7e: 9f d5 a5 00  ?VMXd??? e .....                 stal    f:$00a5d5,x
fe/df82: 60           ?VMXd??? e ...#.                 rts

fe/df83: 08           ?vMXd??? e ....> LFEDF83         php
fe/df84: 78           ?vMXd??? e .....                 sei
fe/df85: 08           ?vMXdI?? e .....                 php
fe/df86: 38           ?vMXdI?? e .....                 sec
fe/df87: bf d5 a5 00  ?vMXdI?C e .....                 ldal    f:$00a5d5,x
fe/df8b: ff cc a5 00  ?vMXdI?C e .....                 sbcl    f:SYSVARS+204,x
fe/df8f: b0 08        ??MXdI?? e .....                 bcs     LFEDF99
fe/df91: 38           ??MXdI?c e .....                 sec
fe/df92: 8b           ??MXdI?C e .....                 phb
fe/df93: 4b           ??MXdI?C e .....                 phk
                                                       .dbank  K (auto)
fe/df94: ab           ??MXdI?C e .....                 plb
fe/df95: fd 78 e1     ??MXdI?C e .....                 sbc     LFEE178 & $ffff,x
fe/df98: ab           ??MXdI?? e .....                 plb
fe/df99: 28           ??MXdI?? e ....> LFEDF99         plp
fe/df9a: 90 0a        ?vMXdI?? e .....                 bcc     LFEDFA6
fe/df9c: 18           ?vMXdI?C e .....                 clc
fe/df9d: 8b           ?vMXdI?c e .....                 phb
fe/df9e: 4b           ?vMXdI?c e .....                 phk
                                                       .dbank  K (auto)
fe/df9f: ab           ?vMXdI?c e .....                 plb
fe/dfa0: 7d 78 e1     ?vMXdI?c e .....                 adc     LFEE178 & $ffff,x
fe/dfa3: ab           ??MXdI?? e .....                 plb
fe/dfa4: 49 ff        ??MXdI?? e .....                 eor     #$ff
fe/dfa6: a0 00        ??MXdI?? e ....> LFEDFA6         ldy     #$00
fe/dfa8: aa           n?MXdIZ? e .....                 tax
fe/dfa9: 28           ??MXdI?? e .....                 plp
fe/dfaa: 60           ?vMXdI?? e ...#.                 rts

fe/dfab: 78           ??MXd??? e ....> LFEDFAB         sei
fe/dfac: 20 e2 e1     ??MXdI?? e .....                 jsr     callINSV
fe/dfaf: 90 0d        ??MXdI?? e .....                 bcc     LFEDFBE
fe/dfb1: 20 b6 ea     ??MXdI?C e .....                 jsr     LFEEAB6
fe/dfb4: b0 08        ??MXdI?? e .....                 bcs     LFEDFBE
fe/dfb6: 48           ??MXdI?c e .....                 pha
fe/dfb7: 20 18 ec     ??MXdI?c e .....                 jsr     LFEEC18
fe/dfba: 68           ??MXdI?? e .....                 pla
fe/dfbb: 58           ??MXdI?? e .....                 cli
fe/dfbc: 80 ed        ??MXdi?? e ...#.                 bra     LFEDFAB

fe/dfbe: 60           ??MXdI?? e ...#> LFEDFBE         rts

fe/dfbf: 48           ??MXd??? e ....> LFEDFBF         pha
fe/dfc0: 9e e2 a5     ??MXd??? e .....                 stz     $a5e2,x
fe/dfc3: 9e e3 a5     ??MXd??? e .....                 stz     $a5e3,x
fe/dfc6: 9e e4 a5     ??MXd??? e .....                 stz     $a5e4,x
fe/dfc9: 9e e5 a5     ??MXd??? e .....                 stz     $a5e5,x
fe/dfcc: 68           ??MXd??? e .....                 pla
fe/dfcd: 60           ??MXd??? e ...#.                 rts

fe/dfce: 5a           ??MXd??? e ....> LFEDFCE         phy
fe/dfcf: 2a           ??MXd??? e .....                 rol     A
fe/dfd0: 2a           ??MXd??? e .....                 rol     A
fe/dfd1: 2a           ??MXd??? e .....                 rol     A
fe/dfd2: 2a           ??MXd??? e .....                 rol     A
fe/dfd3: a0 04        ??MXd??? e .....                 ldy     #$04
fe/dfd5: 2a           ??MXd?z? e ....> LFEDFD5         rol     A
fe/dfd6: 3e e2 a5     ??MXd??? e .....                 rol     $a5e2,x
fe/dfd9: 3e e3 a5     ??MXd??? e .....                 rol     $a5e3,x
fe/dfdc: 3e e4 a5     ??MXd??? e .....                 rol     $a5e4,x
fe/dfdf: 3e e5 a5     ??MXd??? e .....                 rol     $a5e5,x
fe/dfe2: b0 03        ??MXd??? e .....                 bcs     LFEDFE7
fe/dfe4: 88           ??MXd??c e .....                 dey
fe/dfe5: d0 ee        ??MXd??c e .....                 bne     LFEDFD5
fe/dfe7: 7a           ??MXd??? e ....> LFEDFE7         ply
fe/dfe8: 60           ??MXd??? e ...#.                 rts

fe/dfe9: a2 1c        ??MXd??? e ....> LFEDFE9         ldx     #$1c
fe/dfeb: 22 88 ff 00  n?MXd?z? e .....                 jsl     __ST
fe/dfef: a2 0c        ??MXd??? e .....                 ldx     #$0c
fe/dff1: 22 88 ff 00  n?MXd?z? e .....                 jsl     __ST
fe/dff5: f4 00 00     ??MXd??? e .....                 pea     $0000
fe/dff8: ab           ??MXd??? e .....                 plb
fe/dff9: ab           ??MXd??? e .....                 plb
fe/dffa: 60           ??MXd??? e ...#.                 rts

fe/dffb: a0 ff        ??MXd??? e @T... starLOAD        ldy     #$ff
fe/dffd: 80 02        N?MXd?z? e ...#.                 bra     intstarLOADSAVE

fe/dfff: a0 00        ??MXd??? e @T... starSAVE        ldy     #$00
fe/e001: 5a           ??MXd??? e ....> intstarLOADSAVE phy
fe/e002: 4b           ??MXd??? e .....                 phk
fe/e003: 20 d8 f7     ??MXd??? e .....                 jsr     LFEF7D8
fe/e006: 48           ??MXd??? e .....                 pha
fe/e007: 8f e2 a5 00  ??MXd??? e .....                 stal    f:DPSYS_OSWORD0_BUFPTR-1
fe/e00b: eb           ??MXd??? e .....                 xba
fe/e00c: 8f e3 a5 00  ??MXd??? e .....                 stal    f:DPSYS_OSWORD0_BUFPTR
fe/e010: eb           ??MXd??? e .....                 xba
fe/e011: 8b           ??MXd??? e .....                 phb
fe/e012: 68           ??MXd??? e .....                 pla
fe/e013: 8f e4 a5 00  ??MXd??? e .....                 stal    f:DPSYS_OSWORD0_BUFPTR+1
fe/e017: 68           ??MXd??? e .....                 pla
fe/e018: a0 00        ??MXd??? e .....                 ldy     #$00
fe/e01a: 5a           n?MXd?Z? e .....                 phy
fe/e01b: a2 0a        n?MXd?Z? e .....                 ldx     #__STGIT
fe/e01d: 22 88 ff 00  n?MXd?z? e .....                 jsl     __ST
fe/e021: ab           ??MXd??? e .....                 plb
fe/e022: a2 04        ??MXd??? e .....                 ldx     #$04
fe/e024: 20 bf df     n?MXd?z? e .....                 jsr     LFEDFBF
fe/e027: a2 08        ??MXd??? e .....                 ldx     #$08
fe/e029: 20 bf df     n?MXd?z? e .....                 jsr     LFEDFBF
fe/e02c: a9 ff        ??MXd??? e .....                 lda     #$ff
fe/e02e: 8d f2 a5     N?MXd?z? e .....                 sta     $a5f2
fe/e031: 8d f3 a5     N?MXd?z? e .....                 sta     $a5f3
fe/e034: 8d f4 a5     N?MXd?z? e .....                 sta     $a5f4
fe/e037: 9c f5 a5     N?MXd?z? e .....                 stz     $a5f5
fe/e03a: a2 0e        ??MXd??? e ....> LFEE03A         ldx     #__STGRD
fe/e03c: 22 88 ff 00  n?MXd?z? e .....                 jsl     __ST
fe/e040: 90 f8        ??MXd??? e .....                 bcc     LFEE03A
fe/e042: 20 e9 df     ??MXd??C e .....                 jsr     LFEDFE9
fe/e045: 84 d9        ??MXd??? e .....                 sty     $d9
fe/e047: a2 0c        ??MXd??? e .....                 ldx     #$0c
fe/e049: 68           n?MXd?z? e .....                 pla
fe/e04a: f0 3a        ??MXd??? e .....                 beq     LFEE086
fe/e04c: 20 f7 e0     ??MXd?z? e .....                 jsr     LFEE0F7
fe/e04f: 90 24        ??MXd??? e .....                 bcc     LFEE075
fe/e051: 02 26        ??MXd??C e .....                 cop     COP_26_OPBHA
fe/e053: 42 61 64 20+            .T...                 .zstr   “Bad address”
fe/e05f: a2 01        ??MXd??C e .....                 ldx     #$01
fe/e061: 38           n?MXd?zC e .....                 sec
fe/e062: 60           n?MXd?zC e ...#.                 rts

fe/e063: 02 26        ??MXd??? e ....> @reterrBadCommand cop   COP_26_OPBHA
fe/e065: 42 61 64 20+            .T...                 .zstr   “Bad command”
fe/e071: a2 01        ??MXd??? e .....                 ldx     #$01
fe/e073: 38           n?MXd?z? e .....                 sec
fe/e074: 60           n?MXd?zC e ...#.                 rts

fe/e075: f0 03        ??MXd??c e ....> LFEE075         beq     LFEE07A
fe/e077: 82 e9 ff     ??MXd?zc e ...#.                 brl     @reterrBadCommand

fe/e07a: c2 30        ??MXd?Zc e ....> LFEE07A         rep     #$30
                                                       .rwid   longm,longx
fe/e07c: a9 e2 a5     ??mxd?Zc e .....                 lda     #$a5e2
fe/e07f: 02 24        n?mxd?zc e .....                 cop     COP_24_OPCVD
fe/e081: 02 4e        n?mxd?zc e .....                 cop     COP_4E_OPLOD
fe/e083: e2 30        n?mxd?zc e .....                 sep     #$30
                                                       .rwid   shortm,shortx
fe/e085: 60           n?MXd?zc e ...#.                 rts

fe/e086: 20 e9 df     ??MXd?Z? e ....> LFEE086         jsr     LFEDFE9
fe/e089: a2 0c        ??MXd??? e .....                 ldx     #$0c
fe/e08b: 20 f7 e0     n?MXd?z? e .....                 jsr     LFEE0F7
fe/e08e: b0 d3        ??MXd??? e .....                 bcs     @reterrBadCommand
fe/e090: 20 67 de     ??MXd??c e .....                 jsr     LFEDE67
fe/e093: b8           ??MXd??? e .....                 clv
fe/e094: c9 2b        ?vMXd??? e .....                 cmp     #$2b
fe/e096: d0 04        ?vMXd??? e .....                 bne     LFEE09C
fe/e098: e2 40        ?vMXd?Z? e .....                 sep     #$40
fe/e09a: a4 d9        ?VMXd?Z? e .....                 ldy     $d9
fe/e09c: a2 10        ??MXd??? e ....> LFEE09C         ldx     #$10
fe/e09e: 20 f7 e0     n?MXd?z? e .....                 jsr     LFEE0F7
fe/e0a1: b0 c0        ??MXd??? e .....                 bcs     @reterrBadCommand
fe/e0a3: 08           ??MXd??c e .....                 php
fe/e0a4: 70 0f        ??MXd??c e .....                 bvs     LFEE0B5
fe/e0a6: a2 fc        ?vMXd??c e .....                 ldx     #$fc
fe/e0a8: 38           NvMXd?zc e .....                 sec
fe/e0a9: bd f6 a4     ??MXd?z? e ....> LFEE0A9         lda     $a4f6,x
fe/e0ac: fd f2 a4     ??MXd??? e .....                 sbc     $a4f2,x
fe/e0af: 9d f6 a4     ??MXd??? e .....                 sta     $a4f6,x
fe/e0b2: e8           ??MXd??? e .....                 inx
fe/e0b3: d0 f4        ??MXd??? e .....                 bne     LFEE0A9
fe/e0b5: a2 03        ??MXd??? e ....> LFEE0B5         ldx     #$03
fe/e0b7: bd ee a5     n?MXd??? e ....> LFEE0B7         lda     $a5ee,x
fe/e0ba: 9d ea a5     ??MXd??? e .....                 sta     $a5ea,x
fe/e0bd: 9d e6 a5     ??MXd??? e .....                 sta     $a5e6,x
fe/e0c0: ca           ??MXd??? e .....                 dex
fe/e0c1: 10 f4        ??MXd??? e .....                 bpl     LFEE0B7
fe/e0c3: 28           N?MXd??? e .....                 plp
fe/e0c4: f0 14        ??MXd??c e .....                 beq     LFEE0DA
fe/e0c6: a2 08        ??MXd?zc e .....                 ldx     #$08
fe/e0c8: 20 f7 e0     n?MXd?zc e .....                 jsr     LFEE0F7
fe/e0cb: b0 96        ??MXd??? e .....                 bcs     @reterrBadCommand
fe/e0cd: f0 0b        ??MXd??c e .....                 beq     LFEE0DA
fe/e0cf: a2 04        ??MXd?zc e .....                 ldx     #$04
fe/e0d1: 20 f7 e0     n?MXd?zc e .....                 jsr     LFEE0F7
fe/e0d4: b0 8d        ??MXd??? e .....                 bcs     @reterrBadCommand
fe/e0d6: f0 02        ??MXd??c e .....                 beq     LFEE0DA
fe/e0d8: d0 89        ??MXd?zc e ...#.                 bne     @reterrBadCommand

fe/e0da: c2 30        ??MXd?Zc e ....> LFEE0DA         rep     #$30
                                                       .rwid   longm,longx
fe/e0dc: a9 e2 a5     ??mxd?Zc e .....                 lda     #$a5e2
fe/e0df: 02 24        n?mxd?zc e .....                 cop     COP_24_OPCVD
fe/e0e1: 02 4f        n?mxd?zc e .....                 cop     COP_4F_OPSAV
fe/e0e3: e2 30        n?mxd?zc e .....                 sep     #$30
                                                       .rwid   shortm,shortx
fe/e0e5: 60           n?MXd?zc e ...#.                 rts

fe/e0e6: 82 2b 0d     ??MXd??? e @T.#. OSBYTE77a       brl     OSBYTE_77

fe/e0e9: 00 fe        ??MXd??? e ...#> defaultUSERV    brk     $fe

fe/e0eb: 42 61 64 20+            .....                 .zstr   “Bad command”

fe/e0f7: 08           ??MXd?z? e ....> LFEE0F7         php
fe/e0f8: 20 23 de     ??MXd?z? e .....                 jsr     LFEDE23
fe/e0fb: 20 8b de     ??MXd??? e .....                 jsr     LFEDE8B
fe/e0fe: 90 12        ??MXd??? e .....                 bcc     LFEE112
fe/e100: 20 bf df     ??MXd??C e .....                 jsr     LFEDFBF
fe/e103: 20 ce df     ??MXd??? e ....> LFEE103         jsr     LFEDFCE
fe/e106: b0 0e        ??MXd??? e .....                 bcs     LFEE116
fe/e108: 20 8b de     ??MXd??c e .....                 jsr     LFEDE8B
fe/e10b: b0 f6        ??MXd??? e .....                 bcs     LFEE103
fe/e10d: 28           ??MXd??c e .....                 plp
fe/e10e: c9 0d        ??MXd?z? e .....                 cmp     #$0d
fe/e110: 18           ??MXd??? e .....                 clc
fe/e111: 60           ??MXd??c e ...#.                 rts

fe/e112: 28           ??MXd??c e ....> LFEE112         plp
fe/e113: c9 0d        ??MXd?z? e .....                 cmp     #$0d
fe/e115: 08           ??MXd??? e .....                 php
fe/e116: 28           ??MXd??? e ....> LFEE116         plp
fe/e117: 38           ??MXd??? e .....                 sec
fe/e118: 60           ??MXd??C e ...#.                 rts

fe/e119: 82 89 02     ??MXd??? e @T.#. starKEY         brl     starKEY2

fe/e11c: a2 9d        ??MXd??? e @T... starLCB         ldx     #$9d              ;Does OSBYTE &9D
fe/e11e: 80 0f        N?MXd?z? e ...#.                 bra     LFEE12F

fe/e120: a2 0c        ??MXd??? e @T... starFX          ldx     #$0c
fe/e122: 22 88 ff 00  n?MXd?z? e .....                 jsl     __ST
fe/e126: 20 39 de     ??MXd??? e .....                 jsr     LFEDE39
fe/e129: 90 be        ??MXd??? e .....                 bcc     defaultUSERV
fe/e12b: da           ??MXd??C e .....                 phx
fe/e12c: 08           ??MXd??C e .....                 php
fe/e12d: 80 08        ??MXd??C e ...#.                 bra     LFEE137

fe/e12f: da           N?MXd?z? e ....> LFEE12F         phx
fe/e130: 08           N?MXd?z? e .....                 php
fe/e131: a2 0c        N?MXd?z? e .....                 ldx     #$0c
fe/e133: 22 88 ff 00  n?MXd?z? e .....                 jsl     __ST
fe/e137: a9 00        ??MXd??? e ....> LFEE137         lda     #$00
fe/e139: 48           n?MXd?Z? e .....                 pha
                                                       .dbank  $00 (auto)
fe/e13a: ab           n?MXd?Z? e .....                 plb
fe/e13b: 85 e0        ??MXd??? e .....                 sta     $e0
fe/e13d: 85 df        ??MXd??? e .....                 sta     $df
fe/e13f: 28           ??MXd??? e .....                 plp
fe/e140: 20 2d de     N?MXd?z? e .....                 jsr     LFEDE2D
fe/e143: f0 18        ??MXd??? e .....                 beq     LFEE15D
fe/e145: 20 39 de     ??MXd?z? e .....                 jsr     LFEDE39
fe/e148: 90 9f        ??MXd??? e .....                 bcc     defaultUSERV
fe/e14a: 86 e0        ??MXd??C e .....                 stx     $e0
fe/e14c: 20 2f de     ??MXd??C e .....                 jsr     LFEDE2F
fe/e14f: f0 0c        ??MXd??? e .....                 beq     LFEE15D
fe/e151: 20 39 de     ??MXd?z? e .....                 jsr     LFEDE39
fe/e154: 90 93        ??MXd??? e .....                 bcc     defaultUSERV
fe/e156: 86 df        ??MXd??C e .....                 stx     $df
fe/e158: 20 23 de     ??MXd??C e .....                 jsr     LFEDE23
fe/e15b: d0 8c        ??MXd??? e .....                 bne     defaultUSERV
fe/e15d: a4 df        ??MXd?Z? e ....> LFEE15D         ldy     $df
fe/e15f: a6 e0        ??MXd??? e .....                 ldx     $e0
fe/e161: 68           ??MXd??? e .....                 pla
fe/e162: 02 06        ??MXd??? e .....                 cop     COP_06_OPOSB
fe/e164: 18           ??MXd??? e .....                 clc
fe/e165: 60           ??MXd??c e ...#.                 rts

fe/e166: a7                      .....                 .dd1    $a7
fe/e167: aa                      .....                 .dd1    $aa
fe/e168: a8                      .....                 .dd1    $a8
fe/e169: a7                      .....                 .dd1    $a7
fe/e16a: a7                      .....                 .dd1    $a7
fe/e16b: a7                      .....                 .dd1    $a7
fe/e16c: a7                      .....                 .dd1    $a7
fe/e16d: a7                      .....                 .dd1    $a7
fe/e16e: a9                      .....                 .dd1    $a9
fe/e16f: 00                      .....                 .dd1    $00
fe/e170: 00                      .....                 .dd1    $00
fe/e171: c0                      .....                 .dd1    $c0
fe/e172: c0                      .....                 .dd1    $c0
fe/e173: 50                      .....                 .dd1    $50
fe/e174: 60                      .....                 .dd1    $60
fe/e175: 70                      .....                 .dd1    $70
fe/e176: 80                      .....                 .dd1    $80
fe/e177: 00                      .....                 .dd1    $00
fe/e178: e0                      ..... LFEE178         .dd1    $e0
fe/e179: 00                      .....                 .dd1    $00
fe/e17a: 40                      .....                 .dd1    $40
fe/e17b: c0                      .....                 .dd1    $c0
fe/e17c: f0                      .....                 .dd1    $f0
fe/e17d: f0                      .....                 .dd1    $f0
fe/e17e: f0                      .....                 .dd1    $f0
fe/e17f: f0                      .....                 .dd1    $f0
fe/e180: c0                      .....                 .dd1    $c0

fe/e181: bd 6f e1     ??MXdI?? e ....> LFEE181         lda     $e16f,x
fe/e184: 85 f6        ??MXdI?? e .....                 sta     $f6
fe/e186: bd 66 e1     ??MXdI?? e .....                 lda     $e166,x
fe/e189: 85 f7        ??MXdI?? e .....                 sta     $f7
fe/e18b: 64 f8        ??MXdI?? e .....                 stz     $f8
fe/e18d: 60           ??MXdI?? e ...#.                 rts

                                       ********************************************************************************
                                       * OSBYTE 98 - examing buffer status                                            *
                                       ********************************************************************************
fe/e18e: e2 40        ??MXd??? e ....> OSBYTE_98       sep     #$40
fe/e190: 70 01        ?VMXd??? e ...#.                 bvs     callREMV

                                       ********************************************************************************
                                       * OSBYTE 91 - read character from buffer                                       *
                                       ********************************************************************************
fe/e192: b8           ??MXdI?? e ....> OSBYTE_91       clv
fe/e193: eb           ??MXd??? e ....> callREMV        xba
fe/e194: 4b           ??MXd??? e .....                 phk
fe/e195: af 2d a5 00  ??MXd??? e .....                 ldal    f:SYSVARS_REMV+1
fe/e199: 48           ??MXd??? e .....                 pha
fe/e19a: af 2c a5 00  ??MXd??? e .....                 ldal    f:SYSVARS_REMV
fe/e19e: 48           ??MXd??? e .....                 pha
fe/e19f: eb           ??MXd??? e .....                 xba
fe/e1a0: 08           ??MXd??? e .....                 php
fe/e1a1: 40           ??MXd??? e ...#.                 rti

fe/e1a2: 8b           ??MXd??? e @T... defaultREMV     phb
fe/e1a3: 08           ??MXd??? e .....                 php
fe/e1a4: 78           ??MXd??? e .....                 sei
fe/e1a5: 4b           ??MXdI?? e .....                 phk
                                                       .dbank  K (auto)
fe/e1a6: ab           ??MXdI?? e .....                 plb
fe/e1a7: bf cc a5 00  ??MXdI?? e .....                 ldal    f:SYSVARS+204,x
fe/e1ab: df d5 a5 00  ??MXdI?? e .....                 cmpl    f:$00a5d5,x
fe/e1af: f0 79        ??MXdI?? e .....                 beq     LFEE22A
fe/e1b1: a8           ??MXdIz? e .....                 tay
fe/e1b2: 20 81 e1     ??MXdI?? e .....                 jsr     LFEE181
fe/e1b5: b7 f6        ??MXdI?? e .....                 lda     [$f6],y
fe/e1b7: 70 1c        ??MXdI?? e .....                 bvs     LFEE1D5
fe/e1b9: 48           ?vMXdI?? e .....                 pha
fe/e1ba: c8           ?vMXdI?? e .....                 iny
fe/e1bb: 98           ?vMXdI?? e .....                 tya
fe/e1bc: d0 03        ?vMXdI?? e .....                 bne     LFEE1C1
fe/e1be: bd 78 e1     ?vMXdIZ? e .....                 lda     LFEE178 & $ffff,x
fe/e1c1: 9f cc a5 00  ?vMXdI?? e ....> LFEE1C1         stal    f:SYSVARS+204,x
fe/e1c5: e0 02        ?vMXdI?? e .....                 cpx     #$02
fe/e1c7: 90 0b        ?vMXdI?? e .....                 bcc     LFEE1D4
fe/e1c9: df d5 a5 00  ?vMXdI?C e .....                 cmpl    f:$00a5d5,x
fe/e1cd: d0 05        ?vMXdI?? e .....                 bne     LFEE1D4
fe/e1cf: a0 00        ?vMXdIZ? e .....                 ldy     #$00
fe/e1d1: 20 73 e5     nvMXdIZ? e .....                 jsr     LFEE573
fe/e1d4: 68           ??MXdI?? e ....> LFEE1D4         pla
fe/e1d5: a8           ??MXdI?? e ....> LFEE1D5         tay
fe/e1d6: 28           ??MXdI?? e .....                 plp
fe/e1d7: 18           ??MXd??? e .....                 clc
fe/e1d8: ab           ??MXd??c e .....                 plb
fe/e1d9: 60           ??MXd??c e ...#.                 rts

fe/e1da: 98           ??MXd?z? e ....> LFEE1DA         tya
fe/e1db: a0 02        ??MXd??? e .....                 ldy     #$02
fe/e1dd: 20 73 e5     n?MXd?z? e .....                 jsr     LFEE573
fe/e1e0: a8           ??MXd??? e .....                 tay
                                       ********************************************************************************
                                       * OSBYTE 8A - place char in buffer                                             *
                                       *                                                                              *
                                       *    X=buffer number                                                           *
                                       *    Y=character to place                                                      *
                                       ********************************************************************************
fe/e1e1: 98           ??MXd??? e ....> OSBYTE_8A       tya
fe/e1e2: eb           ??MXd??? e ....> callINSV        xba
fe/e1e3: 4b           ??MXd??? e .....                 phk
fe/e1e4: af 2b a5 00  ??MXd??? e .....                 ldal    f:SYSVARS_INSV+1
fe/e1e8: 48           ??MXd??? e .....                 pha
fe/e1e9: af 2a a5 00  ??MXd??? e .....                 ldal    f:SYSVARS_INSV
fe/e1ed: 48           ??MXd??? e .....                 pha
fe/e1ee: eb           ??MXd??? e .....                 xba
fe/e1ef: 08           ??MXd??? e .....                 php
fe/e1f0: 40           ??MXd??? e ...#.                 rti

fe/e1f1: 8b           ??MXd??? e @T... defaultINSV     phb
fe/e1f2: 08           ??MXd??? e .....                 php
fe/e1f3: 78           ??MXd??? e .....                 sei
fe/e1f4: 4b           ??MXdI?? e .....                 phk
                                                       .dbank  K (auto)
fe/e1f5: ab           ??MXdI?? e .....                 plb
fe/e1f6: 48           ??MXdI?? e .....                 pha
fe/e1f7: bf d5 a5 00  ??MXdI?? e .....                 ldal    f:$00a5d5,x
fe/e1fb: a8           ??MXdI?? e .....                 tay
fe/e1fc: c8           ??MXdI?? e .....                 iny
fe/e1fd: d0 03        ??MXdI?? e .....                 bne     LFEE202
fe/e1ff: bc 78 e1     ??MXdIZ? e .....                 ldy     LFEE178 & $ffff,x
fe/e202: 98           ??MXdI?? e ....> LFEE202         tya
fe/e203: df cc a5 00  ??MXdI?? e .....                 cmpl    f:SYSVARS+204,x
fe/e207: f0 15        ??MXdI?? e .....                 beq     LFEE21E
fe/e209: 48           ??MXdIz? e .....                 pha
fe/e20a: bf d5 a5 00  ??MXdIz? e .....                 ldal    f:$00a5d5,x
fe/e20e: a8           ??MXdI?? e .....                 tay
fe/e20f: 68           ??MXdI?? e .....                 pla
fe/e210: 9f d5 a5 00  ??MXdI?? e .....                 stal    f:$00a5d5,x
fe/e214: 20 81 e1     ??MXdI?? e .....                 jsr     LFEE181
fe/e217: 68           ??MXdI?? e .....                 pla
fe/e218: 97 f6        ??MXdI?? e .....                 sta     [$f6],y
fe/e21a: 28           ??MXdI?? e .....                 plp
fe/e21b: 18           ??MXd??? e .....                 clc
fe/e21c: ab           ??MXd??c e .....                 plb
fe/e21d: 60           ??MXd??c e ...#.                 rts

fe/e21e: 68           ??MXdIZ? e ....> LFEE21E         pla
fe/e21f: e0 02        ??MXdI?? e .....                 cpx     #$02
fe/e221: b0 07        ??MXdI?? e .....                 bcs     LFEE22A
fe/e223: a0 01        ??MXdI?c e .....                 ldy     #$01
fe/e225: 20 73 e5     n?MXdIzc e .....                 jsr     LFEE573
fe/e228: 48           ??MXdI?? e .....                 pha
fe/e229: 68           ??MXdI?? e .....                 pla
fe/e22a: 28           ??MXdI?? e ....> LFEE22A         plp
fe/e22b: 38           ??MXd??? e .....                 sec
fe/e22c: ab           ??MXd??C e .....                 plb
fe/e22d: 60           ??MXd??C e ...#.                 rts

fe/e22e: 8b           ??MXd??? e ....> LFEE22E         phb
fe/e22f: f4 00 00     ??MXd??? e .....                 pea     $0000
fe/e232: ab           ??MXd??? e .....                 plb
fe/e233: ab           ??MXd??? e .....                 plb
fe/e234: a2 00        ??MXd??? e .....                 ldx     #$00
                                       ********************************************************************************
                                       * OSBYTE 99 - write character to buffer                                        *
                                       ********************************************************************************
fe/e236: 8a           n?MXd?Z? e ..... OSBYTE_99       txa
fe/e237: 2d 45 a5     ??MXd??? e .....                 and     SYSVAR_RS232_MODE
fe/e23a: d0 a5        ??MXd??? e .....                 bne     OSBYTE_8A
fe/e23c: 98           ??MXd?Z? e .....                 tya
fe/e23d: 4f 6c a5 00  ??MXd??? e .....                 eorl    f:SYSVARS_6C_ESCCHAR
fe/e241: 0f 75 a5 00  ??MXd??? e .....                 oral    f:SYSVARS_75_ESCACTION
fe/e245: f0 05        ??MXd??? e .....                 beq     @doESCape
fe/e247: 20 da e1     ??MXd?z? e .....                 jsr     LFEE1DA
fe/e24a: ab           ??MXd??? e .....                 plb
fe/e24b: 60           ??MXd??? e ...#.                 rts

fe/e24c: ad 58 a5     ??MXd?Z? e ....> @doESCape       lda     SYSVAR_58_ESCBRK_EFFECT
fe/e24f: 6a           ??MXd??? e .....                 ror     A
fe/e250: 98           ??MXd??? e .....                 tya
fe/e251: b0 0a        ??MXd??? e .....                 bcs     @noESC            ;Ignore ESCape
fe/e253: a0 06        ??MXd??c e .....                 ldy     #$06
fe/e255: 20 73 e5     n?MXd?zc e .....                 jsr     LFEE573
fe/e258: 90 03        ??MXd??? e .....                 bcc     @noESC
fe/e25a: 20 a1 e6     ??MXd??C e .....                 jsr     OSBYTE_7D         ;Set ESCape condition
fe/e25d: 18           ??MXd??? e ....> @noESC          clc
fe/e25e: ab           ??MXd??c e .....                 plb
fe/e25f: 60           ??MXd??c e ...#.                 rts

fe/e260: f4 00 00     n?MXdi?? e ....> INKEY_ctdn      pea     $0000
fe/e263: ab           n?MXdi?? e .....                 plb
                                                       .dbank  $00
fe/e264: ab           ??MXdi?? e .....                 plb
fe/e265: 08           ??MXdi?? e .....                 php
fe/e266: 78           ??MXdi?? e .....                 sei
fe/e267: 8e b0 a5     ??MXdI?? e .....                 stx     SYSVARS_B0_INKEYCTDN
fe/e26a: 8c b1 a5     ??MXdI?? e .....                 sty     SYSVARS_B0_INKEYCTDN+1
fe/e26d: 28           ??MXdI?? e .....                 plp
fe/e26e: a9 ff        ??MXdi?? e .....                 lda     #$ff
fe/e270: 80 02        N?MXdiz? e ...#.                 bra     LFEE274

fe/e272: a9 00        ??MXd??? e ....> int_OPRDC       lda     #$00
fe/e274: f4 00 00     ??MXd??? e ....> LFEE274         pea     $0000
fe/e277: ab           ??MXd??? e .....                 plb
fe/e278: ab           ??MXd??? e .....                 plb
fe/e279: 48           ??MXd??? e .....                 pha
fe/e27a: da           ??MXd??? e .....                 phx
fe/e27b: 5a           ??MXd??? e .....                 phy
fe/e27c: 4b           ??MXd??? e .....                 phk
fe/e27d: 20 9b bf     ??MXd??? e .....                 jsr     LFEBF9B
fe/e280: c2 10        ??MXd??? e ....> LFEE280         rep     #$10
                                                       .rwid   longx
fe/e282: a4 d1        ??Mxd??? e .....                 ldy     $d1
fe/e284: f0 17        ??Mxd??? e .....                 beq     LFEE29D
fe/e286: 38           ??Mxd?z? e .....                 sec
fe/e287: 66 e6        ??Mxd?zC e .....                 ror     $e6
fe/e289: 8b           N?Mxd?z? e .....                 phb
fe/e28a: 20 9d ed     N?Mxd?z? e .....                 jsr     default__BGET
fe/e28d: ab           ??Mxd??? e .....                 plb
fe/e28e: 08           ??Mxd??? e .....                 php
fe/e28f: 46 e6        ??Mxd??? e .....                 lsr     $e6
fe/e291: 28           n?Mxd??? e .....                 plp
fe/e292: e2 10        ??Mxd??? e .....                 sep     #$10
                                                       .rwid   shortx
fe/e294: 90 52        ??MXd??? e .....                 bcc     LFEE2E8
fe/e296: 8b           ??MXd??C e .....                 phb
fe/e297: 20 14 ee     ??MXd??C e .....                 jsr     OSBYTE_77
fe/e29a: ab           ??MXd??? e .....                 plb
fe/e29b: 80 e3        ??MXd??? e ...#.                 bra     LFEE280

fe/e29d: e2 10        ??M?d??? e ....> LFEE29D         sep     #$10
fe/e29f: da           ??MXd??? e .....                 phx
fe/e2a0: a9 00        ??MXd??? e .....                 lda     #$00
fe/e2a2: eb           n?MXd?Z? e .....                 xba
fe/e2a3: a9 03        ??MXd??? e .....                 lda     #$03
fe/e2a5: a2 02        n?MXd?z? e .....                 ldx     #$02
fe/e2a7: 22 b0 ff 00  n?MXd?z? e .....                 jsl     __EV
fe/e2ab: fa           ??MXd??? e .....                 plx
fe/e2ac: b0 37        ??MXd??? e .....                 bcs     LFEE2E5
fe/e2ae: ad 68 a5     ??MXd??c e .....                 lda     SYSVAR_SOFTKEY_STRLEN
fe/e2b1: f0 06        ??MXd??c e .....                 beq     LFEE2B9
fe/e2b3: 20 2c e4     ??MXd?zc e .....                 jsr     LFEE42C
fe/e2b6: 18           ??MXd??? e .....                 clc
fe/e2b7: 80 2f        ??MXd??c e ...#.                 bra     LFEE2E8

fe/e2b9: 08           ??MXd?Zc e ....> LFEE2B9         php
fe/e2ba: 78           ??MXd?Zc e .....                 sei
fe/e2bb: 02 21        ??MXdIZc e .....                 cop     COP_21_OPPRE
fe/e2bd: b0 21        ??MXdIZc e ..!..                 bcs     LFEE2E0
fe/e2bf: ae 41 a5     ??MXdIZc e .....                 ldx     SYSVAR_41_input_stream
fe/e2c2: 20 55 e3     ??MXdI?c e .....                 jsr     LFEE355
fe/e2c5: b0 04        ??MXdI?? e .....                 bcs     LFEE2CB
fe/e2c7: 28           ??MXdI?c e .....                 plp
fe/e2c8: 18           ??MXd?Zc e .....                 clc
fe/e2c9: 80 1d        ??MXd?Zc e ...#.                 bra     LFEE2E8

fe/e2cb: 28           ??MXdI?C e ....> LFEE2CB         plp
fe/e2cc: 38           ??MXd?Zc e .....                 sec
fe/e2cd: a3 03        ??MXd?ZC e .....                 lda     $03,S
fe/e2cf: 10 cc        ??MXd??C e .....                 bpl     LFEE29D
fe/e2d1: 08           N?MXd??C e .....                 php
fe/e2d2: 78           N?MXd??C e .....                 sei
fe/e2d3: ad b0 a5     N?MXdI?C e .....                 lda     SYSVARS_B0_INKEYCTDN
fe/e2d6: 0d b1 a5     ??MXdI?C e .....                 ora     SYSVARS_B0_INKEYCTDN+1
fe/e2d9: 28           ??MXdI?C e .....                 plp
fe/e2da: 49 00        N?MXd??C e .....                 eor     #$00
fe/e2dc: d0 bf        ??MXd??C e .....                 bne     LFEE29D
fe/e2de: 80 0a        ??MXd?ZC e ...#.                 bra     LFEE2EA

fe/e2e0: 28           ??MXd??? e @T... LFEE2E0         plp
fe/e2e1: a9 00        N?MXd??C e .....                 lda     #$00
fe/e2e3: 80 02        n?MXd?ZC e ...#.                 bra     LFEE2E7

fe/e2e5: a9 1b        ??MXd??C e ....> LFEE2E5         lda     #$1b
fe/e2e7: 38           n?MXd??C e ....> LFEE2E7         sec
fe/e2e8: 83 03        ??MXd??? e ....> LFEE2E8         sta     $03,S
fe/e2ea: 7a           ??MXd??? e ....> LFEE2EA         ply
fe/e2eb: fa           ??MXd??? e .....                 plx
fe/e2ec: 68           ??MXd??? e .....                 pla
fe/e2ed: 60           ??MXd??? e ...#.                 rts

fe/e2ee: 6a           ??MXdIz? e ....> LFEE2EE         ror     A
fe/e2ef: 68           ??MXdI?? e .....                 pla
fe/e2f0: b0 12        ??MXdI?? e .....                 bcs     LFEE304
fe/e2f2: 98           ??MXdI?c e ....> LFEE2F2         tya
fe/e2f3: 48           ??MXdI?c e .....                 pha
fe/e2f4: 20 4e e4     ??MXdI?c e .....                 jsr     LFEE44E
fe/e2f7: c9 01        ??MXdI?? e .....                 cmp     #$01
fe/e2f9: d0 03        ??MXdI?? e .....                 bne     LFEE2FE
fe/e2fb: 82 5d 00     ??MXdIZ? e ...#.                 brl     LFEE35B

fe/e2fe: 68           ??MXdIz? e ....> LFEE2FE         pla
fe/e2ff: 90 0a        ??MXdI?? e .....                 bcc     LFEE30B
fe/e301: 20 59 e4     ??MXdI?C e .....                 jsr     LFEE459
fe/e304: 18           ??MXdI?? e ....> LFEE304         clc
fe/e305: 60           ??MXdI?c e ...#.                 rts

fe/e306: 20 e0 e8     ??MXdIZ? e ....> LFEE306         jsr     Serv8_QRY
fe/e309: 68           ??MXdI?? e .....                 pla
fe/e30a: aa           ??MXdI?? e .....                 tax
fe/e30b: 20 92 e1     ??MXdI?? e ....> LFEE30B         jsr     OSBYTE_91
fe/e30e: b0 48        ??MXdI?? e .....                 bcs     LFEE358
fe/e310: e0 01        ??MXdI?c e .....                 cpx     #$01
fe/e312: d0 05        ??MXdI?? e .....                 bne     LFEE319
fe/e314: ac 45 a5     ??MXdIZ? e .....                 ldy     SYSVAR_RS232_MODE
fe/e317: d0 3e        ??MXdI?? e .....                 bne     LFEE357
fe/e319: a8           ??MXdI?? e ....> LFEE319         tay
fe/e31a: c9 80        ??MXdI?? e .....                 cmp     #$80
fe/e31c: 90 39        ??MXdI?? e .....                 bcc     LFEE357
fe/e31e: 29 0f        ??MXdI?C e .....                 and     #$0f
fe/e320: c9 0b        n?MXdI?C e .....                 cmp     #$0b
fe/e322: 90 ce        ??MXdI?? e .....                 bcc     LFEE2F2
fe/e324: 20 48 e4     ??MXdI?C e .....                 jsr     LFEE448
fe/e327: 48           ??MXdI?? e .....                 pha
fe/e328: ad 7d a5     ??MXdI?? e .....                 lda     SYSVARS+125
fe/e32b: d0 c1        ??MXdI?? e .....                 bne     LFEE2EE
fe/e32d: ad 7c a5     ??MXdIZ? e .....                 lda     SYSVARS_7C_OUTDEST
fe/e330: 6a           ??MXdI?? e .....                 ror     A
fe/e331: 6a           ??MXdI?? e .....                 ror     A
fe/e332: 68           ??MXdI?? e .....                 pla
fe/e333: b0 d6        ??MXdI?? e .....                 bcs     LFEE30B
fe/e335: c9 87        ??MXdI?c e .....                 cmp     #$87
fe/e337: d0 10        ??MXdI?? e .....                 bne     LFEE349
fe/e339: 8a           ??MXdIZ? e .....                 txa
fe/e33a: 48           ??MXdI?? e .....                 pha
fe/e33b: a2 26        ??MXdI?? e .....                 ldx     #$26
fe/e33d: 4b           n?MXdIz? e .....                 phk
fe/e33e: 20 38 fe     n?MXdIz? e .....                 jsr     callModVDU
fe/e341: a8           ??MXdI?? e .....                 tay
fe/e342: f0 c2        ??MXdI?? e .....                 beq     LFEE306
fe/e344: 68           ??MXdIz? e .....                 pla
fe/e345: aa           ??MXdI?? e .....                 tax
fe/e346: 98           ??MXdI?? e .....                 tya
fe/e347: 18           ??MXdI?? e .....                 clc
fe/e348: 60           ??MXdI?c e ...#.                 rts

fe/e349: a8           ??MXdIz? e ....> LFEE349         tay
fe/e34a: 8a           ??MXdI?? e .....                 txa
fe/e34b: 48           ??MXdI?? e .....                 pha
fe/e34c: 98           ??MXdI?? e .....                 tya
fe/e34d: a2 28        ??MXdI?? e .....                 ldx     #$28
fe/e34f: 4b           n?MXdIz? e .....                 phk
fe/e350: 20 38 fe     n?MXdIz? e .....                 jsr     callModVDU
fe/e353: 68           ??MXdI?? e .....                 pla
fe/e354: aa           ??MXdI?? e .....                 tax
fe/e355: 80 b4        ??MXdI?? e ...#> LFEE355         bra     LFEE30B

fe/e357: 18           ??MXdI?? e ....> LFEE357         clc
fe/e358: b0 19        ??MXdI?? e ....> LFEE358         bcs     LFEE373
fe/e35a: 60           ??MXdI?c e ...#.                 rts

fe/e35b: 68           ??MXdIZ? e ....> LFEE35B         pla
fe/e35c: 20 18 e4     ??MXdI?? e .....                 jsr     LFEE418
fe/e35f: 20 1b e4     ??MXdI?? e .....                 jsr     LFEE41B
fe/e362: 80 f1        ??MXdI?? e ...#.                 bra     LFEE355

fe/e364: a9 06        ??MXd??? e @T...                 lda     #$06
fe/e366: eb           ??MXd??? e ....> QOSBY_VECTORthruA524 xba
fe/e367: 4b           ??MXd??? e .....                 phk
fe/e368: ad 25 a5     ??MXd??? e .....                 lda     QOSBY_VECTOR+1
fe/e36b: 48           ??MXd??? e .....                 pha
fe/e36c: ad 24 a5     ??MXd??? e .....                 lda     QOSBY_VECTOR
fe/e36f: 48           ??MXd??? e .....                 pha
fe/e370: eb           ??MXd??? e .....                 xba
fe/e371: 08           ??MXd??? e .....                 php                       ;jump to address - why not just jmp (X) as bank is 0?
fe/e372: 40           ??MXd??? e ...#.                 rti

fe/e373: 48           ??MXdI?C e ....> LFEE373         pha
fe/e374: 20 18 ec     ??MXdI?C e .....                 jsr     LFEEC18
fe/e377: 68           ??MXdI?? e .....                 pla
fe/e378: 38           ??MXdI?? e .....                 sec
fe/e379: 60           ??MXdI?C e ...#.                 rts

                                       ; QRY suspect next two are dead code for rom select or something?
fe/e37a: 8a           ??MXd??? e @T...                 txa
fe/e37b: a9 08        ??MXd??? e .....                 lda     #$08
fe/e37d: 85 f0        n?MXd?z? e .....                 sta     $f0
fe/e37f: 8f 05 fe 45  n?MXd?z? e .....                 stal    sheila_ULA_PAG_IRQCLR
fe/e383: 60           n?MXd?z? e ...#.                 rts

fe/e384: 48           ??MXd??? e @T...                 pha
fe/e385: a9 0c        ??MXd??? e .....                 lda     #$0c
fe/e387: 8f 05 fe 45  n?MXd?z? e .....                 stal    sheila_ULA_PAG_IRQCLR
fe/e38b: 68           n?MXd?z? e .....                 pla
fe/e38c: 60           ??MXd??? e ...#.                 rts

fe/e38d: 60                      .....                 .dd1    $60

fe/e38e: 7a           ??MXd??C e ....> LFEE38E         ply
fe/e38f: 90 03        ??MXd??C e ..!.> LFEE38F         bcc     LFEE394
fe/e391: 28           ??MXd??C e .....                 plp
fe/e392: 38           ?vMXdI?? e .....                 sec
fe/e393: 60           ?vMXdI?C e ...#.                 rts

fe/e394: 28           ??MXd??? e @T... LFEE394         plp
fe/e395: 18           ??MXd??? e .....                 clc
fe/e396: 60           ??MXd??c e ...#.                 rts

fe/e397: 02 26        ??MXd??? e ....> @reterrBadKey   cop     COP_26_OPBHA
fe/e399: 42 61 64 20+            .T...                 .zstr   “Bad key”
fe/e3a1: a2 01        ??MXd??? e .....                 ldx     #$01
fe/e3a3: 38           n?MXd?z? e .....                 sec
fe/e3a4: 60           n?MXd?zC e ...#.                 rts

fe/e3a5: a2 0c        ??MXd??? e ....> starKEY2        ldx     #__STGLN
fe/e3a7: 22 88 ff 00  n?MXd?z? e .....                 jsl     __ST
fe/e3ab: f4 00 00     ??MXd??? e .....                 pea     $0000
fe/e3ae: ab           ??MXd??? e .....                 plb
fe/e3af: ab           ??MXd??? e .....                 plb
fe/e3b0: 20 39 de     ??MXd??? e .....                 jsr     LFEDE39
fe/e3b3: 90 e2        ??MXd??? e .....                 bcc     @reterrBadKey
fe/e3b5: e0 10        ??MXd??C e .....                 cpx     #$10
fe/e3b7: b0 de        ??MXd??? e .....                 bcs     @reterrBadKey
fe/e3b9: 20 2f de     ??MXd??c e .....                 jsr     LFEDE2F
fe/e3bc: 08           ??MXd??? e .....                 php
fe/e3bd: ae 10 ab     ??MXd??? e .....                 ldx     SYSFNK+16
fe/e3c0: 98           ??MXd??? e .....                 tya
fe/e3c1: 48           ??MXd??? e .....                 pha
fe/e3c2: 20 bd e4     ??MXd??? e .....                 jsr     LFEE4BD
fe/e3c5: b0 c7        ??MXd??? e .....                 bcs     LFEE38E
fe/e3c7: 68           ??MXd??c e .....                 pla
fe/e3c8: a8           ??MXd??c e .....                 tay
fe/e3c9: 28           ??MXd??c e .....                 plp
fe/e3ca: d0 02        ??MXd??? e .....                 bne     LFEE3CE
fe/e3cc: 18           ??MXd?Z? e .....                 clc
fe/e3cd: 60           ??MXd?Zc e ...#.                 rts

fe/e3ce: da           ??MXd??? e ....> LFEE3CE         phx
fe/e3cf: a2 0e        ??MXd??? e .....                 ldx     #$0e
fe/e3d1: 22 88 ff 00  n?MXd?z? e .....                 jsl     __ST
fe/e3d5: fa           ??MXd??? e .....                 plx
fe/e3d6: b0 0a        ??MXd??? e .....                 bcs     LFEE3E2
fe/e3d8: e8           ??MXd??c e .....                 inx
fe/e3d9: f0 bc        ??MXd??c e .....                 beq     @reterrBadKey
fe/e3db: ca           ??MXd?zc e .....                 dex
fe/e3dc: 20 67 e5     ??MXd??c e .....                 jsr     Fnkey_StoreXpl1
fe/e3df: e8           ??MXd??? e .....                 inx
fe/e3e0: 80 ec        ??MXd??? e ...#.                 bra     LFEE3CE

fe/e3e2: c9 0d        ??MXd??C e ....> LFEE3E2         cmp     #$0d
fe/e3e4: d0 b1        ??MXd??? e .....                 bne     @reterrBadKey
fe/e3e6: 08           ??MXd?Z? e .....                 php
fe/e3e7: 78           ??MXd?Z? e .....                 sei
fe/e3e8: 20 bd e4     ??MXdIZ? e .....                 jsr     LFEE4BD
fe/e3eb: b0 a2        ??MXdI?? e .....                 bcs     LFEE38F
fe/e3ed: a2 10        ??MXdI?c e .....                 ldx     #$10
fe/e3ef: e4 e1        n?MXdI?? e ....> LFEE3EF         cpx     $e1
fe/e3f1: f0 1f        ??MXdI?? e .....                 beq     LFEE412
fe/e3f3: 08           ??MXdIz? e .....                 php
fe/e3f4: da           ??MXdIz? e .....                 phx
fe/e3f5: da           ??MXdIz? e .....                 phx
fe/e3f6: bb           ??MXdIz? e .....                 tyx
fe/e3f7: 20 6b e5     ??MXdI?? e .....                 jsr     FnKey_LoadX
fe/e3fa: fa           ??MXdI?? e .....                 plx
fe/e3fb: 48           ??MXdI?? e .....                 pha
fe/e3fc: 20 6b e5     ??MXdI?? e .....                 jsr     FnKey_LoadX
fe/e3ff: 48           ??MXdI?? e .....                 pha
fe/e400: c3 02        ??MXdI?? e .....                 cmp     $02,S
fe/e402: 08           ??MXdI?? e .....                 php
fe/e403: 68           ??MXdI?? e .....                 pla
fe/e404: 83 04        ??MXdI?? e .....                 sta     $04,S
fe/e406: 68           ??MXdI?? e .....                 pla
fe/e407: fa           ??MXdI?? e .....                 plx
fe/e408: fa           ??MXdI?? e .....                 plx
fe/e409: 28           ??MXdI?? e .....                 plp
fe/e40a: d0 06        ??MXdI?? e .....                 bne     LFEE412
fe/e40c: ad 10 ab     ??MXdIZ? e .....                 lda     SYSFNK+16
fe/e40f: 20 6f e5     ??MXdI?? e .....                 jsr     FnKey_StoreX
fe/e412: ca           ??MXdI?? e ....> LFEE412         dex
fe/e413: 10 da        ??MXdI?? e .....                 bpl     LFEE3EF
fe/e415: 28           N?MXdI?? e .....                 plp
fe/e416: 18           ??MXdI?? e .....                 clc
fe/e417: 60           ??MXdI?c e ...#.                 rts

fe/e418: 29 0f        ??MXdI?? e ....> LFEE418         and     #$0f
fe/e41a: 60           n?MXdI?? e ...#.                 rts

fe/e41b: a8           ??MXdI?? e ....> LFEE41B         tay
fe/e41c: 20 79 e4     ??MXdI?? e .....                 jsr     LFEE479
fe/e41f: 8d 68 a5     ??MXdI?? e .....                 sta     SYSVAR_SOFTKEY_STRLEN
fe/e422: da           ??MXdI?? e .....                 phx
fe/e423: bb           ??MXdI?? e .....                 tyx
fe/e424: 20 6b e5     ??MXdI?? e .....                 jsr     FnKey_LoadX
fe/e427: fa           ??MXdI?? e .....                 plx
fe/e428: 8d 79 a5     ??MXdI?? e .....                 sta     SYSVARS+121
fe/e42b: 60           ??MXdI?? e ...#.                 rts

fe/e42c: da           ??MXd?zc e ....> LFEE42C         phx
fe/e42d: ae 79 a5     ??MXd?zc e .....                 ldx     SYSVARS+121
fe/e430: 20 63 e5     ??MXd??c e .....                 jsr     FnKey_LoadXpl1
fe/e433: ee 79 a5     ??MXd??? e .....                 inc     SYSVARS+121
fe/e436: ce 68 a5     ??MXd??? e .....                 dec     SYSVAR_SOFTKEY_STRLEN
fe/e439: eb           ??MXd??? e .....                 xba
fe/e43a: ad 68 a5     ??MXd??? e .....                 lda     SYSVAR_SOFTKEY_STRLEN
fe/e43d: eb           ??MXd??? e .....                 xba
fe/e43e: fa           ??MXd??? e .....                 plx
fe/e43f: 60           ??MXd??? e ...#.                 rts

fe/e440: 48                      .....                 .dd1    $48
fe/e441: a9                      .....                 .dd1    $a9
fe/e442: 01                      .....                 .dd1    $01
fe/e443: 8d                      .....                 .dd1    $8d
fe/e444: 68                      .....                 .dd1    $68
fe/e445: a5                      .....                 .dd1    $a5
fe/e446: 68                      .....                 .dd1    $68
fe/e447: 60                      .....                 .dd1    $60

fe/e448: 38           ??MXdI?C e ....> LFEE448         sec
fe/e449: 29 0f        ??MXdI?C e .....                 and     #$0f
fe/e44b: 69 7b        n?MXdI?C e .....                 adc     #$7b
fe/e44d: 60           ??MXdI?? e ...#.                 rts

fe/e44e: 4a           ??MXdI?? e ....> LFEE44E         lsr     A
fe/e44f: 4a           n?MXdI?? e .....                 lsr     A
fe/e450: 4a           n?MXdI?? e .....                 lsr     A
fe/e451: 4a           n?MXdI?? e .....                 lsr     A
fe/e452: 49 04        n?MXdI?? e .....                 eor     #$04
fe/e454: a8           ??MXdI?? e .....                 tay
fe/e455: b9 65 a5     ??MXdI?? e .....                 lda     SYSVARS+101,y
fe/e458: 60           ??MXdI?? e ...#.                 rts

fe/e459: 48           ??MXdI?C e ....> LFEE459         pha
fe/e45a: 20 4e e4     ??MXdI?C e .....                 jsr     LFEE44E
fe/e45d: 68           ??MXdI?? e .....                 pla
fe/e45e: 29 0f        ??MXdI?? e .....                 and     #$0f
fe/e460: 18           n?MXdI?? e .....                 clc
fe/e461: 79 65 a5     n?MXdI?c e .....                 adc     SYSVARS+101,y
fe/e464: 60           ??MXdI?? e ...#.                 rts

                                       ; Character buffer interpretation settings
fe/e465: da           ??MXd??c e ....> OSBYTE_DDtoE4   phx
fe/e466: 5a           ??MXd??c e .....                 phy
fe/e467: 38           ??MXd??c e .....                 sec
fe/e468: e9 dd        ??MXd??C e .....                 sbc     #$dd
fe/e46a: a8           ??MXd??? e .....                 tay
fe/e46b: b9 6d a5     ??MXd??? e .....                 lda     SYSVARS+109,y
fe/e46e: aa           ??MXd??? e .....                 tax
fe/e46f: 23 01        ??MXd??? e .....                 and     $01,S
fe/e471: 43 02        ??MXd??? e .....                 eor     $02,S
fe/e473: 99 6d a5     ??MXd??? e .....                 sta     SYSVARS+109,y
fe/e476: 68           ??MXd??? e .....                 pla
fe/e477: 68           ??MXd??? e .....                 pla
fe/e478: 60           ??MXd??? e ...#.                 rts

fe/e479: 08           ??MXdI?? e ....> LFEE479         php
fe/e47a: 78           ??MXdI?? e .....                 sei
fe/e47b: ad 10 ab     ??MXdI?? e .....                 lda     SYSFNK+16
fe/e47e: 38           ??MXdI?? e .....                 sec
fe/e47f: da           ??MXdI?C e .....                 phx
fe/e480: 48           ??MXdI?C e .....                 pha
fe/e481: bb           ??MXdI?C e .....                 tyx
fe/e482: 20 6b e5     ??MXdI?C e .....                 jsr     FnKey_LoadX
fe/e485: fa           ??MXdI?? e .....                 plx
fe/e486: 48           ??MXdI?? e .....                 pha
fe/e487: 8a           ??MXdI?? e .....                 txa
fe/e488: e3 01        ??MXdI?? e .....                 sbc     $01,S
fe/e48a: fa           ??MXdI?? e .....                 plx
fe/e48b: fa           ??MXdI?? e .....                 plx
fe/e48c: 85 f5        ??MXdI?? e .....                 sta     $f5
fe/e48e: 8a           ??MXdI?? e .....                 txa
fe/e48f: 48           ??MXdI?? e .....                 pha
fe/e490: a2 10        ??MXdI?? e .....                 ldx     #$10
fe/e492: 08           n?MXdI?? e ....> LFEE492         php
fe/e493: da           n?MXdI?? e .....                 phx
fe/e494: da           n?MXdI?? e .....                 phx
fe/e495: bb           n?MXdI?? e .....                 tyx
fe/e496: 20 6b e5     ??MXdI?? e .....                 jsr     FnKey_LoadX
fe/e499: fa           ??MXdI?? e .....                 plx
fe/e49a: 48           ??MXdI?? e .....                 pha
fe/e49b: 20 6b e5     ??MXdI?? e .....                 jsr     FnKey_LoadX
fe/e49e: 38           ??MXdI?? e .....                 sec
fe/e49f: e3 01        ??MXdI?C e .....                 sbc     $01,S
fe/e4a1: 48           ??MXdI?? e .....                 pha
fe/e4a2: 08           ??MXdI?? e .....                 php
fe/e4a3: 68           ??MXdI?? e .....                 pla
fe/e4a4: 83 04        ??MXdI?? e .....                 sta     $04,S
fe/e4a6: 68           ??MXdI?? e .....                 pla
fe/e4a7: fa           ??MXdI?? e .....                 plx
fe/e4a8: fa           ??MXdI?? e .....                 plx
fe/e4a9: 28           ??MXdI?? e .....                 plp
fe/e4aa: 90 08        ??MXdI?? e .....                 bcc     LFEE4B4
fe/e4ac: f0 06        ??MXdI?C e .....                 beq     LFEE4B4
fe/e4ae: c5 f5        ??MXdIzC e .....                 cmp     $f5
fe/e4b0: b0 02        ??MXdI?? e .....                 bcs     LFEE4B4
fe/e4b2: 85 f5        ??MXdI?c e .....                 sta     $f5
fe/e4b4: ca           ??MXdI?? e ....> LFEE4B4         dex
fe/e4b5: 10 db        ??MXdI?? e .....                 bpl     LFEE492
fe/e4b7: 68           N?MXdI?? e .....                 pla
fe/e4b8: aa           ??MXdI?? e .....                 tax
fe/e4b9: a5 f5        ??MXdI?? e .....                 lda     $f5
fe/e4bb: 28           ??MXdI?? e .....                 plp
fe/e4bc: 60           ??MXdI?? e ...#.                 rts

fe/e4bd: 08           ??MXd??? e ....> LFEE4BD         php
fe/e4be: 78           ??MXd??? e .....                 sei
fe/e4bf: 8a           ??MXdI?? e .....                 txa
fe/e4c0: 48           ??MXdI?? e .....                 pha
fe/e4c1: a4 e1        ??MXdI?? e .....                 ldy     $e1
fe/e4c3: 20 79 e4     ??MXdI?? e .....                 jsr     LFEE479
fe/e4c6: 85 f5        ??MXdI?? e .....                 sta     $f5
fe/e4c8: da           ??MXdI?? e .....                 phx
fe/e4c9: bb           ??MXdI?? e .....                 tyx
fe/e4ca: 20 6b e5     ??MXdI?? e .....                 jsr     FnKey_LoadX
fe/e4cd: fa           ??MXdI?? e .....                 plx
fe/e4ce: a8           ??MXdI?? e .....                 tay
fe/e4cf: 18           ??MXdI?? e .....                 clc
fe/e4d0: 65 f5        ??MXdI?c e .....                 adc     $f5
fe/e4d2: aa           ??MXdI?? e .....                 tax
fe/e4d3: 85 f4        ??MXdI?? e .....                 sta     $f4
fe/e4d5: ad 68 a5     ??MXdI?? e .....                 lda     SYSVAR_SOFTKEY_STRLEN
fe/e4d8: f0 13        ??MXdI?? e .....                 beq     LFEE4ED
fe/e4da: 68           ??MXdIz? e .....                 pla
fe/e4db: 28           ??MXdI?? e .....                 plp
fe/e4dc: 02 26        ??MXd??? e .....                 cop     COP_26_OPBHA
fe/e4de: 4b 65 79 20+            .T...                 .zstr   “Key in use”
fe/e4e9: a2 01        ??MXd??? e .....                 ldx     #$01
fe/e4eb: 38           n?MXd?z? e .....                 sec
fe/e4ec: 60           n?MXd?zC e ...#.                 rts

fe/e4ed: ce 84 a5     ??MXdIZ? e ....> LFEE4ED         dec     SYSVAR_SOFTKEY_CONS
fe/e4f0: 68           ??MXdI?? e .....                 pla
fe/e4f1: 38           ??MXdI?? e .....                 sec
fe/e4f2: e5 f4        ??MXdI?C e .....                 sbc     $f4
fe/e4f4: 85 f4        ??MXdI?? e .....                 sta     $f4
fe/e4f6: f0 0f        ??MXdI?? e .....                 beq     LFEE507
fe/e4f8: 20 63 e5     ??MXdIz? e ....> LFEE4F8         jsr     FnKey_LoadXpl1
fe/e4fb: da           ??MXdI?? e .....                 phx
fe/e4fc: bb           ??MXdI?? e .....                 tyx
fe/e4fd: 20 67 e5     ??MXdI?? e .....                 jsr     Fnkey_StoreXpl1
fe/e500: fa           ??MXdI?? e .....                 plx
fe/e501: c8           ??MXdI?? e .....                 iny
fe/e502: e8           ??MXdI?? e .....                 inx
fe/e503: c6 f4        ??MXdI?? e .....                 dec     $f4
fe/e505: d0 f1        ??MXdI?? e .....                 bne     LFEE4F8
fe/e507: 98           ??MXdIZ? e ....> LFEE507         tya
fe/e508: 48           ??MXdI?? e .....                 pha
fe/e509: a4 e1        ??MXdI?? e .....                 ldy     $e1
fe/e50b: a2 10        ??MXdI?? e .....                 ldx     #$10
fe/e50d: 08           n?MXdI?? e ....> LFEE50D         php
fe/e50e: da           n?MXdI?? e .....                 phx
fe/e50f: da           n?MXdI?? e .....                 phx
fe/e510: bb           n?MXdI?? e .....                 tyx
fe/e511: 20 6b e5     ??MXdI?? e .....                 jsr     FnKey_LoadX
fe/e514: fa           ??MXdI?? e .....                 plx
fe/e515: 48           ??MXdI?? e .....                 pha
fe/e516: 20 6b e5     ??MXdI?? e .....                 jsr     FnKey_LoadX
fe/e519: 48           ??MXdI?? e .....                 pha
fe/e51a: c3 02        ??MXdI?? e .....                 cmp     $02,S
fe/e51c: 08           ??MXdI?? e .....                 php
fe/e51d: 68           ??MXdI?? e .....                 pla
fe/e51e: 83 04        ??MXdI?? e .....                 sta     $04,S
fe/e520: 68           ??MXdI?? e .....                 pla
fe/e521: fa           ??MXdI?? e .....                 plx
fe/e522: fa           ??MXdI?? e .....                 plx
fe/e523: 28           ??MXdI?? e .....                 plp
fe/e524: 90 07        ??MXdI?? e .....                 bcc     LFEE52D
fe/e526: f0 05        ??MXdI?C e .....                 beq     LFEE52D
fe/e528: e5 f5        ??MXdIzC e .....                 sbc     $f5
fe/e52a: 20 6f e5     ??MXdI?? e .....                 jsr     FnKey_StoreX
fe/e52d: ca           ??MXdI?? e ....> LFEE52D         dex
fe/e52e: 10 dd        ??MXdI?? e .....                 bpl     LFEE50D
fe/e530: ad 10 ab     N?MXdI?? e .....                 lda     SYSFNK+16
fe/e533: da           ??MXdI?? e .....                 phx
fe/e534: bb           ??MXdI?? e .....                 tyx
fe/e535: 20 6f e5     ??MXdI?? e .....                 jsr     FnKey_StoreX
fe/e538: fa           ??MXdI?? e .....                 plx
fe/e539: 68           ??MXdI?? e .....                 pla
fe/e53a: 8d 10 ab     ??MXdI?? e .....                 sta     SYSFNK+16
fe/e53d: aa           ??MXdI?? e .....                 tax
fe/e53e: ee 84 a5     ??MXdI?? e .....                 inc     SYSVAR_SOFTKEY_CONS
fe/e541: 28           ??MXdI?? e .....                 plp
fe/e542: 18           ??MXdI?? e .....                 clc
fe/e543: 60           ??MXdI?c e ...#.                 rts

fe/e544: a9 11        ??MXdI?? e ....> OSB_ResetFnKeys lda     #$11
fe/e546: 8d 84 a5     n?MXdIz? e .....                 sta     SYSVAR_SOFTKEY_CONS
fe/e549: a2 10        n?MXdIz? e .....                 ldx     #$10
fe/e54b: 20 6f e5     n?MXdI?? e ....> @lp             jsr     FnKey_StoreX
fe/e54e: ca           ??MXdI?? e .....                 dex
fe/e54f: 10 fa        ??MXdI?? e .....                 bpl     @lp
fe/e551: a9 10        N?MXdI?? e .....                 lda     #$10
fe/e553: a2 00        n?MXdIz? e .....                 ldx     #$00
fe/e555: 20 6f e5     n?MXdIZ? e .....                 jsr     FnKey_StoreX
fe/e558: a9 1e        ??MXdI?? e .....                 lda     #$1e
fe/e55a: a2 10        n?MXdIz? e .....                 ldx     #$10
fe/e55c: 20 67 e5     n?MXdIz? e .....                 jsr     Fnkey_StoreXpl1
fe/e55f: 9c 84 a5     ??MXdI?? e .....                 stz     SYSVAR_SOFTKEY_CONS
fe/e562: 60           ??MXdI?? e ...#.                 rts

fe/e563: bd 01 ab     ??MXd??? e ....> FnKey_LoadXpl1  lda     SYSFNK+1,x
fe/e566: 60           ??MXd??? e ...#.                 rts

fe/e567: 9d 01 ab     ??MXd??? e ....> Fnkey_StoreXpl1 sta     SYSFNK+1,x
fe/e56a: 60           ??MXd??? e ...#.                 rts

fe/e56b: bd 00 ab     ??MXdI?? e ....> FnKey_LoadX     lda     SYSFNK,x
fe/e56e: 60           ??MXdI?? e ...#.                 rts

fe/e56f: 9d 00 ab     ??MXdI?? e ....> FnKey_StoreX    sta     SYSFNK,x
fe/e572: 60           ??MXdI?? e ...#.                 rts

fe/e573: 08           n?MXd??? e ....> LFEE573         php
fe/e574: 8b           n?MXd??? e .....                 phb
fe/e575: f4 00 00     n?MXd??? e .....                 pea     $0000
fe/e578: ab           n?MXd??? e .....                 plb
                                                       .dbank  $00
fe/e579: ab           ??MXd??? e .....                 plb
fe/e57a: 78           ??MXd??? e .....                 sei
fe/e57b: 48           ??MXdI?? e .....                 pha
fe/e57c: 85 f6        ??MXdI?? e .....                 sta     $f6
fe/e57e: b9 b5 a5     ??MXdI?? e .....                 lda     SYSVARS+181,y
fe/e581: f0 0b        ??MXdI?? e .....                 beq     LFEE58E
fe/e583: 98           ??MXdIz? e .....                 tya
fe/e584: a4 f6        ??MXdI?? e .....                 ldy     $f6
fe/e586: 20 a9 ea     ??MXdI?? e .....                 jsr     LFEEAA9
fe/e589: 68           ??MXdI?? e .....                 pla
fe/e58a: ab           ??MXdI?? e .....                 plb
fe/e58b: 28           ??MXdI?? e .....                 plp
fe/e58c: 18           n?MXd?z? e .....                 clc
fe/e58d: 60           n?MXd?zc e ...#.                 rts

fe/e58e: 68           ??MXdIZ? e ....> LFEE58E         pla
fe/e58f: ab           ??MXdI?? e .....                 plb
fe/e590: 28           ??MXdI?? e .....                 plp
fe/e591: 38           n?MXd?z? e .....                 sec
fe/e592: 60           n?MXd?zC e ...#.                 rts

                                       ****************************************************************
                                       * Converts the char in A into an upper case module name char.  *
                                       *                                                              *
                                       * On Entry: A contains a character                             *
                                       *                                                              *
                                       * On Exit:  If C = 0 A contains the original character, B      *
                                       * contains the character                                       *
                                       *           converted to uppercase                             *
                                       *           If C = 1 A contains the original character, B      *
                                       * contains the original                                        *
                                       *           character which was not in the range A..Z or a..z  *
                                       ****************************************************************
                                                       .rwid   longm,longx
fe/e593: 08           ??mxd?z? e ....> modNameToUpper  php
fe/e594: e2 20        ??mxd?z? e .....                 sep     #$20
                                                       .rwid   shortm
fe/e596: 48           ??Mxd?z? e .....                 pha
fe/e597: 29 df        ??Mxd?z? e .....                 and     #$df              ;convert to upper case
fe/e599: c9 41        ??Mxd??? e .....                 cmp     #‘A’
fe/e59b: 90 04        ??Mxd??? e .....                 bcc     @notname
fe/e59d: c9 5b        ??Mxd??C e .....                 cmp     #‘[’
fe/e59f: 90 03        ??Mxd??? e .....                 bcc     @ok
fe/e5a1: 38           ??Mxd??? e ....> @notname        sec                       ;set carry and return un modified A
fe/e5a2: a3 01        ??Mxd??C e .....                 lda     $01,S
fe/e5a4: eb           ??Mxd??? e ....> @ok             xba
fe/e5a5: 68           ??Mxd??? e .....                 pla
fe/e5a6: b0 03        ??Mxd??? e .....                 bcs     @retsec
fe/e5a8: 28           ??Mxd??c e .....                 plp
                                                       .rwid   longm
fe/e5a9: 18           ??mxd?z? e .....                 clc
fe/e5aa: 60           ??mxd?zc e ...#.                 rts

                                                       .rwid   shortm
fe/e5ab: 28           ??Mxd??C e ....> @retsec         plp
                                                       .rwid   longm
fe/e5ac: 38           ??mxd?z? e .....                 sec
fe/e5ad: 60           ??mxd?zC e ...#.                 rts

fe/e5ae: 6d e8                   ..... tblOSBYTDispatch .dd2   OSBYTE_0 & $ffff  ;OSBYTE 0 - Get Host OS
fe/e5b0: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff ;OSBYTE 1 - R/W user flag
fe/e5b2: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff ;OSBYTE 2 - select input stream - manual lies, this does nothing
fe/e5b4: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff ;OSBYTE 3 - select output stream - manual lies this does nothing
fe/e5b6: 43 ea                   .T...                 .dd2    OSBYTE_4 & $ffff  ;OSBYTE 4 - cursor keys action
fe/e5b8: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
fe/e5ba: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
fe/e5bc: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
fe/e5be: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
fe/e5c0: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
fe/e5c2: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
fe/e5c4: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
fe/e5c6: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
fe/e5c8: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
fe/e5ca: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
fe/e5cc: 01 df                   .T...                 .dd2    OSBYTE_F & $ffff  ;OSBYTE 0F - Flush buffers
fe/e5ce: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
fe/e5d0: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
fe/e5d2: 77 ea                   .T...                 .dd2    OSBYTE_12 & $ffff ;OSBYTE 12 - reset function keys
fe/e5d4: 6c ea                   .T...                 .dd2    OSBYTE_13 & $ffff ;OSBYTE 13 - Wait vsync
fe/e5d6: a9 e6                   .T...                 .dd2    OSBYTE_14 & $ffff ;OSBYTE 14 - Explode and reset font
fe/e5d8: 0d df                   .T...                 .dd2    OSBYTE_15 & $ffff
fe/e5da: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
fe/e5dc: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
fe/e5de: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
fe/e5e0: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
fe/e5e2: 04 e7                   .T...                 .dd2    OSBYTE_1A & $ffff ;OSBYTE 1A - Handset detection
fe/e5e4: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
                                       ; --- break in numbers here restart at 73 ---
fe/e5e6: ae e6                   .T...                 .dd2    OSBYTE_73 & $ffff ;OSBYTE 73 - blank / restore palette
fe/e5e8: 30 ec                   .T...                 .dd2    OSBYTE_74 & $ffff ;OSBYTE 74 - reset sound system
fe/e5ea: b3 e6                   .T...                 .dd2    OSBYTE_75 & $ffff ;OSBYTE 75 - read VDU status byte
fe/e5ec: 8b ea                   .T...                 .dd2    OSBYTE_76 & $ffff ;OSBYTE 76 - reflect keyboard in LEDS
fe/e5ee: e6 e0                   .T...                 .dd2    OSBYTE77a & $ffff ;OSBYTE 77 - Close all SPOOL / EXEC files
fe/e5f0: a1 ea                   .T...                 .dd2    OSBYTE_78 & $ffff ;OSBYTE 78 - Write key pressed data
fe/e5f2: c4 e7                   .T...                 .dd2    OSBYTE_79 & $ffff ;OSBYTE 79 - Keyboard scan
fe/e5f4: c2 e7                   .T...                 .dd2    OSBYTE_7A & $ffff ;OSBYTE_7A - keyboard scan from &10
fe/e5f6: 00 df                   .T...                 .dd2    OSBYTE_7B_null & $ffff ;OSBYTE 7B - printer dormancy warning
fe/e5f8: 91 e6                   .T...                 .dd2    OSBYTE_7C & $ffff ;OSBYTE 7C - Clear ESCape, inform tube
fe/e5fa: a1 e6                   .T...                 .dd2    OSBYTE_7D & $ffff ;OSBYTE 7D - Set ESCape
fe/e5fc: 75 e6                   .T...                 .dd2    OSBYTE_7E & $ffff ;OSBYTE 7E - Acknowledge ESCape condition
fe/e5fe: 16 de                   .T...                 .dd2    OSBYTE_7F & $ffff ;OSBYTE 7F - Check for EOF
fe/e600: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
fe/e602: 41 e7                   .T...                 .dd2    OSBYTE_81 & $ffff ;OSBYTE 81 - INKEY
fe/e604: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
fe/e606: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
fe/e608: b8 e6                   .T...                 .dd2    OSBYTE_84 & $ffff ;OSBYTE 84 - read top of memory HIMEM
fe/e60a: bd e6                   .T...                 .dd2    OSBYTE_85 & $ffff ;OSBYTE 85 - get HIMEM for MODE in X
fe/e60c: c2 e6                   .T...                 .dd2    OSBYTE_86 & $ffff ;OSBYTE 86 - Get text cursor
fe/e60e: c7 e6                   .T...                 .dd2    OSBYTE_87 & $ffff ;OSBYTE 87 - get char at XY and MODE
fe/e610: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
fe/e612: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
fe/e614: e1 e1                   .T...                 .dd2    OSBYTE_8A & $ffff ;OSBYTE 8A - place char in buffer
fe/e616: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
fe/e618: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
fe/e61a: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
fe/e61c: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
fe/e61e: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
fe/e620: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
fe/e622: 92 e1                   .T...                 .dd2    OSBYTE_91 & $ffff ;OSBYTE 91 - read character from buffer
fe/e624: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
fe/e626: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
fe/e628: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
fe/e62a: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
fe/e62c: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
fe/e62e: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
fe/e630: 8e e1                   .T...                 .dd2    OSBYTE_98 & $ffff ;OSBYTE 98 - examine buffer status
fe/e632: 36 e2                   .T...                 .dd2    OSBYTE_99 & $ffff ;OSBYTE 99 - write character to buffer
fe/e634: ee e6                   .T...                 .dd2    OSBYTE_9A & $ffff ;OSBYTE 9A - write vdu ULA
fe/e636: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
fe/e638: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
fe/e63a: c9 de                   .T...                 .dd2    OSBYTE_9D & $ffff ;OSBYTE 9D - QRY
fe/e63c: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
fe/e63e: b6 e7                   .T...                 .dd2    OSBYTE_DOESNOTHINGBADLY & $ffff
fe/e640: cc e6                   .T...                 .dd2    OSBYTE_A0 & $ffff ;OSBYTE A0 - read VDU variable
fe/e642: 48 ea                   .T...                 .dd2    OSBYTE_A6_FF & $ffff ;OSBYTE A6-FF - read variable
fe/e644: 64 e6                   .T...                 .dd2    QRY_Call_UKOSWORD & $ffff ;OSWORD > E0 QRY
fe/e646: 90 e9                   .T...                 .dd2    OSWORD_0 & $ffff  ;OSWORD 0 - read line
fe/e648: 63 e9                   .T...                 .dd2    TFEE963 & $ffff
fe/e64a: 76 e9                   .T...                 .dd2    TFEE976 & $ffff
fe/e64c: 5f e9                   .T...                 .dd2    TFEE95F & $ffff
fe/e64e: 72 e9                   .T...                 .dd2    TFEE972 & $ffff
fe/e650: 6a e8                   .T...                 .dd2    OSBYTE_0_X & $ffff
fe/e652: 6a e8                   .T...                 .dd2    OSBYTE_0_X & $ffff
fe/e654: 90 e8                   .T...                 .dd2    TFEE890 & $ffff
fe/e656: 19 e9                   .T...                 .dd2    TFEE919 & $ffff
fe/e658: d1 e6                   .T...                 .dd2    TFEE6D1 & $ffff
fe/e65a: d5 e6                   .T...                 .dd2    TFEE6D5 & $ffff
fe/e65c: d9 e6                   .T...                 .dd2    TFEE6D9 & $ffff
fe/e65e: dd e6                   .T...                 .dd2    TFEE6DD & $ffff
fe/e660: e1 e6                   .T...                 .dd2    TFEE6E1 & $ffff
                                                       .rwid   shortm,shortx
fe/e662: a9 00        ??MXd??? e @T...                 lda     #$00
fe/e664: eb           n?MXd?Z? e ..... QRY_Call_UKOSWORD xba
fe/e665: 4b           ??MXd??? e .....                 phk
fe/e666: ad 01 a5     ??MXd??? e .....                 lda     SYSVARS+1
fe/e669: 48           ??MXd??? e .....                 pha
fe/e66a: ad 00 a5     ??MXd??? e .....                 lda     SYSVARS
fe/e66d: 48           ??MXd??? e .....                 pha
fe/e66e: eb           ??MXd??? e .....                 xba
fe/e66f: 08           ??MXd??? e .....                 php
fe/e670: 40           ??MXd??? e ...#.                 rti

fe/e671: ee                      .....                 .dd1    $ee
fe/e672: 49                      .....                 .dd1    $49
fe/e673: a5                      .....                 .dd1    $a5
fe/e674: 60                      .....                 .dd1    $60

                                       ********************************************************************************
                                       * OSBYTE 7E - Acknowledge ESCape condition                                     *
                                       ********************************************************************************
fe/e675: a2 00        ??MXd??? e @T... OSBYTE_7E       ldx     #$00
fe/e677: af                      .T...                 .dd1    $af
fe/e678: 13                      .T...                 .dd1    $13
fe/e679: ff                      .T...                 .dd1    $ff
fe/e67a: 00                      .T...                 .dd1    $00
fe/e67b: 29                      .T...                 .dd1    $29
fe/e67c: 03                      .T...                 .dd1    $03
fe/e67d: f0                      .T...                 .dd1    $f0
fe/e67e: 12                      .T...                 .dd1    $12
fe/e67f: ad                      .T...                 .dd1    $ad
fe/e680: 76                      .T...                 .dd1    $76
fe/e681: a5                      .T...                 .dd1    $a5
fe/e682: d0                      .T...                 .dd1    $d0
fe/e683: 0b                      .T...                 .dd1    $0b
fe/e684: 58                      .T...                 .dd1    $58
fe/e685: a9                      .T...                 .dd1    $a9
fe/e686: 00                      .T...                 .dd1    $00
fe/e687: 8b                      .T...                 .dd1    $8b
fe/e688: 20                      .T...                 .dd1    $20
fe/e689: 14                      .T...                 .dd1    $14
fe/e68a: ee                      .T...                 .dd1    $ee
fe/e68b: ab                      .T...                 .dd1    $ab
fe/e68c: 20                      .T...                 .dd1    $20
fe/e68d: 03                      .T...                 .dd1    $03
fe/e68e: df                      .T...                 .dd1    $df
fe/e68f: a2                      .T...                 .dd1    $a2
fe/e690: ff                      .T...                 .dd1    $ff
                                       ********************************************************************************
                                       * OSBYTE 7C - Clear ESCape, inform tube                                        *
                                       ********************************************************************************
fe/e691: c2 30        n?MXd?Z? e .T... OSBYTE_7C       rep     #$30
fe/e693: af 13 ff 00             .T...                 .dd4    SYS_ESCAPE_FLAG_QRY+$fe149c
fe/e697: 29                      .T...                 .dd1    $29
fe/e698: fc                      .T...                 .dd1    $fc
fe/e699: ff                      .T...                 .dd1    $ff
fe/e69a: 8f                      .T...                 .dd1    $8f
fe/e69b: 13                      .T...                 .dd1    $13
fe/e69c: ff                      .T...                 .dd1    $ff
fe/e69d: 00                      .T...                 .dd1    $00
fe/e69e: e2                      .T...                 .dd1    $e2
fe/e69f: 30                      .T...                 .dd1    $30
fe/e6a0: 60                      .T...                 .dd1    $60
                                       ********************************************************************************
                                       * OSBYTE 7D - Set ESCape                                                       *
                                       ********************************************************************************
fe/e6a1: a9 00        ????d??? e ....> OSBYTE_7D       lda     #$00
fe/e6a3: eb           n???d?Z? e .....                 xba
fe/e6a4: a9 03        ????d??? e .....                 lda     #$03
fe/e6a6: 02 20        n???d?z? e .....                 cop     COP_20_OPSEV
fe/e6a8: 60           n???d?z? e ...#.                 rts

                                       ********************************************************************************
                                       * OSBYTE 14 - Explode                                                          *
                                       ********************************************************************************
fe/e6a9: 8a           ??MXd??? e @T... OSBYTE_14       txa
fe/e6aa: a2 08        ??MXd??? e .....                 ldx     #VDUMOD_OPX_8_EXPLODE
fe/e6ac: 80 3b        n?MXd?z? e ...#.                 bra     phkCallModVDU

                                       ********************************************************************************
                                       * OSBYTE 73 - unknown VDU operation                                            *
                                       *                                                                              *
                                       * Blank restore palette                                                        *
                                       *                                                                              *
                                       * calls VDU module with A=X, X=#&A                                             *
                                       ********************************************************************************
fe/e6ae: 8a           ??MXd??? e @T... OSBYTE_73       txa
fe/e6af: a2 0a        ??MXd??? e .....                 ldx     #VDUMOD_OPX_A
fe/e6b1: 80 36        n?MXd?z? e ...#.                 bra     phkCallModVDU

                                       ********************************************************************************
                                       * OSBYTE 75 - read VDU status byte                                             *
                                       ********************************************************************************
fe/e6b3: 8a           ??MXd??? e @T... OSBYTE_75       txa
fe/e6b4: a2 22        ??MXd??? e .....                 ldx     #VDUMOD_OPX_22_READSTATUS
fe/e6b6: 80 31        n?MXd?z? e ...#.                 bra     phkCallModVDU

                                       ********************************************************************************
                                       * OSBYTE 84 - read top of memory HIMEM                                         *
                                       *                                                                              *
                                       * QRY what does this actually return                                           *
                                       ********************************************************************************
fe/e6b8: 8a           ??MXd??? e @T... OSBYTE_84       txa
fe/e6b9: a2 0c        ??MXd??? e .....                 ldx     #VDUMOD_OPX_C_HIMEM
fe/e6bb: 80 2c        n?MXd?z? e ...#.                 bra     phkCallModVDU

                                       ********************************************************************************
                                       * OSBYTE 85 - get HIMEM for MODE in X                                          *
                                       ********************************************************************************
fe/e6bd: 8a           ??MXd??? e @T... OSBYTE_85       txa
fe/e6be: a2 0e        ??MXd??? e .....                 ldx     #VDUMOD_OPX_E_HIMEMBYX
fe/e6c0: 80 27        n?MXd?z? e ...#.                 bra     phkCallModVDU

                                       ********************************************************************************
                                       * OSBYTE 86 - Get text cursor                                                  *
                                       ********************************************************************************
fe/e6c2: 8a           ??MXd??? e @T... OSBYTE_86       txa
fe/e6c3: a2 10        ??MXd??? e .....                 ldx     #VDUMOD_OPX_10_GETCURSOR
fe/e6c5: 80 22        n?MXd?z? e ...#.                 bra     phkCallModVDU

                                       ********************************************************************************
                                       * OSBYTE 87 - get char at XY and MODE                                          *
                                       ********************************************************************************
fe/e6c7: 8a           ??MXd??? e @T... OSBYTE_87       txa
fe/e6c8: a2 16        ??MXd??? e .....                 ldx     #VDUMOD_OPX_16_GETCHARXY
fe/e6ca: 80 1d        n?MXd?z? e ...#.                 bra     phkCallModVDU

                                       ********************************************************************************
                                       * OSBYTE A0 - read VDU variable                                                *
                                       ********************************************************************************
fe/e6cc: 8a           ??MXd??? e @T... OSBYTE_A0       txa
fe/e6cd: a2 24        ??MXd??? e .....                 ldx     #VDUMOD_OPX_24_READVDUVAR+12
fe/e6cf: 80 18        n?MXd?z? e ...#.                 bra     phkCallModVDU

fe/e6d1: a2 18        ??MXd??? e @T... TFEE6D1         ldx     #$18
fe/e6d3: 80 0e        n?MXd?z? e ...#.                 bra     LFEE6E3

fe/e6d5: a2 1a        ??MXd??? e @T... TFEE6D5         ldx     #$1a
fe/e6d7: 80 0a        n?MXd?z? e ...#.                 bra     LFEE6E3

fe/e6d9: a2 1c        ??MXd??? e @T... TFEE6D9         ldx     #$1c
fe/e6db: 80 06        n?MXd?z? e ...#.                 bra     LFEE6E3

fe/e6dd: a2 1e        ??MXd??? e @T... TFEE6DD         ldx     #$1e
fe/e6df: 80 02        n?MXd?z? e ...#.                 bra     LFEE6E3

fe/e6e1: a2 20        ??MXd??? e @T... TFEE6E1         ldx     #$20
fe/e6e3: 48           n?MXd?z? e ....> LFEE6E3         pha
fe/e6e4: a5 ec        n?MXd?z? e .....                 lda     $ec
fe/e6e6: 48           ??MXd??? e .....                 pha
fe/e6e7: ab           ??MXd??? e .....                 plb
fe/e6e8: 68           ??MXd??? e .....                 pla
fe/e6e9: 4b           ??MXd??? e ....> phkCallModVDU   phk
fe/e6ea: 20 38 fe     ??MXd??? e .....                 jsr     callModVDU
fe/e6ed: 60           ??MXd??? e ...#.                 rts

                                       ********************************************************************************
                                       * OSBYTE 9A - write vdu ULA                                                    *
                                       *                                                                              *
                                       * This doesn't seem to work as documented on MDFS.net for the Electron instead *
                                       * it:                                                                          *
                                       *                                                                              *
                                       * ULA/COPY = (OLD AND Y) EOR X                                                 *
                                       *                                                                              *
                                       * returns OLD in X                                                             *
                                       ********************************************************************************
fe/e6ee: da           ??MXd??? e @T... OSBYTE_9A       phx
fe/e6ef: 5a           ??MXd??? e .....                 phy
fe/e6f0: ae 82 a5     ??MXd??? e .....                 ldx     SYSVARS_ULA_MISC_COPY
fe/e6f3: 8a           ??MXd??? e .....                 txa
fe/e6f4: 23 01        ??MXd??? e .....                 and     $01,S
fe/e6f6: 43 02        ??MXd??? e .....                 eor     $02,S
fe/e6f8: 8d 82 a5     ??MXd??? e .....                 sta     SYSVARS_ULA_MISC_COPY
fe/e6fb: 8f 07 fe 45  ??MXd??? e .....                 stal    shiela_ULA_MISC
fe/e6ff: 68           ??MXd??? e .....                 pla
fe/e700: 68           ??MXd??? e .....                 pla
fe/e701: 4c 34 eb     ??MXd??? e ...#.                 jmp     resetFlashCounters

                                       ********************************************************************************
                                       * OSBYTE 1A - handset detection                                                *
                                       ********************************************************************************
fe/e704: a6 d4        ??MXd??? e @T... OSBYTE_1A       ldx     <DPVAR_ACD4_HANDSET_STATUS_QRY
fe/e706: 60           ??MXd??? e ...#.                 rts

fe/e707: c8                      .....                 .dd1    $c8
fe/e708: 18                      .....                 .dd1    $18
fe/e709: b9                      .....                 .dd1    $b9
fe/e70a: 52                      .....                 .dd1    $52
fe/e70b: a5                      .....                 .dd1    $a5
fe/e70c: 48                      .....                 .dd1    $48
fe/e70d: 8a                      .....                 .dd1    $8a
fe/e70e: 99                      .....                 .dd1    $99
fe/e70f: 52                      .....                 .dd1    $52
fe/e710: a5                      .....                 .dd1    $a5
fe/e711: 68                      .....                 .dd1    $68
fe/e712: a8                      .....                 .dd1    $a8
fe/e713: ad                      .....                 .dd1    $ad
fe/e714: 51                      .....                 .dd1    $51
fe/e715: a5                      .....                 .dd1    $a5
fe/e716: d0                      .....                 .dd1    $d0
fe/e717: 19                      .....                 .dd1    $19
fe/e718: 8e                      .....                 .dd1    $8e
fe/e719: 51                      .....                 .dd1    $51
fe/e71a: a5                      .....                 .dd1    $a5
fe/e71b: a9                      .....                 .dd1    $a9
fe/e71c: 00                      .....                 .dd1    $00
fe/e71d: 90                      .....                 .dd1    $90
fe/e71e: 02                      .....                 .dd1    $02
fe/e71f: a9                      .....                 .dd1    $a9
fe/e720: 07                      .....                 .dd1    $07
fe/e721: 8d                      .....                 .dd1    $8d
fe/e722: 48                      .....                 .dd1    $48
fe/e723: a5                      .....                 .dd1    $a5
fe/e724: 98                      .....                 .dd1    $98
fe/e725: 48                      .....                 .dd1    $48
fe/e726: ac                      .....                 .dd1    $ac
fe/e727: 48                      .....                 .dd1    $48
fe/e728: a5                      .....                 .dd1    $a5
fe/e729: a2                      .....                 .dd1    $a2
fe/e72a: 14                      .....                 .dd1    $14
fe/e72b: 4b                      .....                 .dd1    $4b
fe/e72c: 20                      .....                 .dd1    $20
fe/e72d: 38                      .....                 .dd1    $38
fe/e72e: fe                      .....                 .dd1    $fe
fe/e72f: 68                      .....                 .dd1    $68
fe/e730: a8                      .....                 .dd1    $a8
fe/e731: 50                      .....                 .dd1    $50
fe/e732: 0b                      .....                 .dd1    $0b
fe/e733: 98                      .....                 .dd1    $98
fe/e734: e0                      .....                 .dd1    $e0
fe/e735: 0a                      .....                 .dd1    $0a
fe/e736: b0                      .....                 .dd1    $b0
fe/e737: 07                      .....                 .dd1    $07
fe/e738: bc                      .....                 .dd1    $bc
fe/e739: b5                      .....                 .dd1    $b5
fe/e73a: a5                      .....                 .dd1    $a5
fe/e73b: 9d                      .....                 .dd1    $9d
fe/e73c: b5                      .....                 .dd1    $b5
fe/e73d: a5                      .....                 .dd1    $a5
fe/e73e: 98                      .....                 .dd1    $98
fe/e73f: aa                      .....                 .dd1    $aa
fe/e740: 60                      .....                 .dd1    $60

                                       ********************************************************************************
                                       * OSBYTE 81 - INKEY                                                            *
                                       *                                                                              *
                                       *  On entry: XY=16-bit argument                                                *
                                       *  On exit:  XY=returned character or state                                    *
                                       *            Cy=when waiting for a character, no character returned            *
                                       ********************************************************************************
fe/e741: 98           ??MXd??? e @T... OSBYTE_81       tya
fe/e742: 30 0b        ??MXd??? e .....                 bmi     LFEE74F
fe/e744: 58           n?MXd??? e .....                 cli
fe/e745: 20 60 e2     n?MXdi?? e .....                 jsr     INKEY_ctdn
fe/e748: b0 03        ??MXdi?? e .....                 bcs     LFEE74D
fe/e74a: aa           ??MXdi?c e .....                 tax
fe/e74b: a9 00        ??MXd??? e ....> LFEE74B         lda     #$00
fe/e74d: a8           ??MXd??? e ....> LFEE74D         tay
fe/e74e: 60           ??MXd??? e ...#.                 rts

fe/e74f: 8a           N?MXd??? e ....> LFEE74F         txa
fe/e750: 29 0f        ??MXd??? e .....                 and     #$0f
fe/e752: f0 15        n?MXd??? e .....                 beq     LFEE769
fe/e754: 8a           n?MXd?z? e .....                 txa
fe/e755: 49 7f        ??MXd??? e .....                 eor     #$7f
fe/e757: aa           ??MXd??? e .....                 tax
fe/e758: 9b           ??MXd??? e .....                 txy
fe/e759: a2 04        ??MXd??? e .....                 ldx     #$04
fe/e75b: 22 ac ff 00  n?MXd?z? e .....                 jsl     __KB
fe/e75f: 2a           ??MXd??? e .....                 rol     A
fe/e760: a2 ff        ??MXd??? e ....> LFEE760         ldx     #$ff
fe/e762: a0 ff        N?MXd?z? e .....                 ldy     #$ff
fe/e764: b0 02        N?MXd?z? e .....                 bcs     LFEE768
fe/e766: e8           N?MXd?zc e .....                 inx
fe/e767: c8           ??MXd??c e .....                 iny
fe/e768: 60           ??MXd??? e ...#> LFEE768         rts

fe/e769: 8a           n?MXd?Z? e ....> LFEE769         txa
fe/e76a: f0 07        ??MXd??? e .....                 beq     LFEE773
fe/e76c: 20 b6 e7     ??MXd?z? e .....                 jsr     OSBYTE_DOESNOTHINGBADLY
fe/e76f: 18           ??MXd??? e .....                 clc
fe/e770: d0 ee        ??MXd??c e .....                 bne     LFEE760
fe/e772: 60           ??MXd?Zc e ...#.                 rts

fe/e773: a2 f9        ??MXd?Z? e ....> LFEE773         ldx     #$f9
fe/e775: 80 d4        N?MXd?z? e ...#.                 bra     LFEE74B

fe/e777: 8a                      .....                 .dd1    $8a
fe/e778: 49                      .....                 .dd1    $49
fe/e779: ff                      .....                 .dd1    $ff
fe/e77a: aa                      .....                 .dd1    $aa
fe/e77b: e0                      .....                 .dd1    $e0
fe/e77c: 02                      .....                 .dd1    $02
fe/e77d: b8                      .....                 .dd1    $b8
fe/e77e: 50                      .....                 .dd1    $50
fe/e77f: 02                      .....                 .dd1    $02

                                       ; calls the CNPV vector
                                       ; 
                                       ; TODO: check with MAME - must CNPV be called from this ROM -
                                       ; bank not passed?
                                       ; 
                                       ; TODO: replace with
                                       ;   PER +
                                       ;   JMP (CNPV)
                                       ; +
fe/e780: e2 40        ??MXdI?? e ....> callCNPV        sep     #$40
fe/e782: eb           ?VMXdI?? e .....                 xba
fe/e783: 4b           ?VMXdI?? e .....                 phk
fe/e784: ad 2f a5     ?VMXdI?? e .....                 lda     SYSVARS_CNPV+1
fe/e787: 48           ?VMXdI?? e .....                 pha
fe/e788: ad 2e a5     ?VMXdI?? e .....                 lda     SYSVARS_CNPV
fe/e78b: 48           ?VMXdI?? e .....                 pha
fe/e78c: eb           ?VMXdI?? e .....                 xba
fe/e78d: 08           ?VMXdI?? e .....                 php
fe/e78e: 40           ?VMXdI?? e ...#.                 rti

fe/e78f: 30                      .....                 .dd1    $30
fe/e790: e6                      .....                 .dd1    $e6
fe/e791: f0                      .....                 .dd1    $f0
fe/e792: 0d                      .....                 .dd1    $0d
fe/e793: 20                      .....                 .dd1    $20
fe/e794: b6                      .....                 .dd1    $b6
fe/e795: e7                      .....                 .dd1    $e7
fe/e796: f0                      .....                 .dd1    $f0
fe/e797: 07                      .....                 .dd1    $07
fe/e798: bc                      .....                 .dd1    $bc
fe/e799: fb                      .....                 .dd1    $fb
fe/e79a: a5                      .....                 .dd1    $a5
fe/e79b: bd                      .....                 .dd1    $bd
fe/e79c: f7                      .....                 .dd1    $f7
fe/e79d: a5                      .....                 .dd1    $a5
fe/e79e: aa                      .....                 .dd1    $aa
fe/e79f: 60                      .....                 .dd1    $60
fe/e7a0: 20                      .....                 .dd1    $20
fe/e7a1: b6                      .....                 .dd1    $b6
fe/e7a2: e7                      .....                 .dd1    $e7
fe/e7a3: f0                      .....                 .dd1    $f0
fe/e7a4: 02                      .....                 .dd1    $02
fe/e7a5: a2                      .....                 .dd1    $a2
fe/e7a6: 00                      .....                 .dd1    $00
fe/e7a7: ac                      .....                 .dd1    $ac
fe/e7a8: f7                      .....                 .dd1    $f7
fe/e7a9: a5                      .....                 .dd1    $a5
fe/e7aa: a9                      .....                 .dd1    $a9
fe/e7ab: 00                      .....                 .dd1    $00
fe/e7ac: 8d                      .....                 .dd1    $8d
fe/e7ad: f7                      .....                 .dd1    $f7
fe/e7ae: a5                      .....                 .dd1    $a5
fe/e7af: 60                      .....                 .dd1    $60
fe/e7b0: 8a                      .....                 .dd1    $8a
fe/e7b1: 0d                      .....                 .dd1    $0d
fe/e7b2: 41                      .....                 .dd1    $41
fe/e7b3: a5                      .....                 .dd1    $a5
fe/e7b4: f0                      .....                 .dd1    $f0
fe/e7b5: b2                      .....                 .dd1    $b2

                                       ; This looks to be some sort of vestigial attempt at implementing r/w variables
                                       ; in OSBYTE but just does an RTS
fe/e7b6: a2 07        ????d?z? e .T..> OSBYTE_DOESNOTHINGBADLY ldx #$07
fe/e7b8: 20 47 ee     n???d?z? e .....                 jsr     donothingRTS
fe/e7bb: a6 ea        ????d??? e .....                 ldx     <DPSYS_OSB_X
fe/e7bd: a4 eb        ????d??? e .....                 ldy     <DPSYS_OSB_Y
fe/e7bf: 49 00        ????d??? e .....                 eor     #$00
fe/e7c1: 60           ????d??? e ...#.                 rts

fe/e7c2: a2 01        ??MXd??? e @T... OSBYTE_7A       ldx     #$01
fe/e7c4: 9b           n?MXd?z? e .T... OSBYTE_79       txy
fe/e7c5: a2 04        ??MXd??? e .....                 ldx     #$04
fe/e7c7: 22 ac ff 00  n?MXd?z? e .....                 jsl     __KB
fe/e7cb: 60           ??MXd??? e ...#.                 rts

fe/e7cc: f4 00 ac     ??MXd??? e ....> doDispatchOSBYTE pea    DPLOC_SYS
fe/e7cf: 2b           ??MXd??? e .....                 pld
fe/e7d0: f4 00 00     ??MXd??? e .....                 pea     $0000
fe/e7d3: ab           ??MXd??? e .....                 plb
                                                       .dbank  $00
fe/e7d4: ab           ??MXd??? e .....                 plb
fe/e7d5: 48           ??MXd??? e .....                 pha
fe/e7d6: 08           ??MXd??? e .....                 php
fe/e7d7: 78           ??MXd??? e .....                 sei
fe/e7d8: 85 ec        ??MXdI?? e .....                 sta     <DPSYS_OSB_A
fe/e7da: 86 ea        ??MXdI?? e .....                 stx     <DPSYS_OSB_X
fe/e7dc: 84 eb        ??MXdI?? e .....                 sty     <DPSYS_OSB_Y
fe/e7de: a2 07        ??MXdI?? e .....                 ldx     #$07
fe/e7e0: c9 73        n?MXdIz? e .....                 cmp     #$73
fe/e7e2: 90 42        ??MXdI?? e .....                 bcc     @osb_0to72
fe/e7e4: c9 a1        ??MXdI?C e .....                 cmp     #$a1
fe/e7e6: 90 09        ??MXdI?? e .....                 bcc     @osb_73toA0
fe/e7e8: c9 a6        ??MXdI?C e .....                 cmp     #$a6
fe/e7ea: 90 40        ??MXdI?? e .....                 bcc     @exitNotImpl
fe/e7ec: 18           ??MXdI?C e .....                 clc
fe/e7ed: a9 a1        ??MXdI?? e ....> LFEE7ED         lda     #$a1              ;numbers A1..A6 get turned to A1; A2 if SEC entered below at e85b
fe/e7ef: 69 00        N?MXdIz? e .....                 adc     #$00
fe/e7f1: e9 56        ??MXdI?? e ....> @osb_73toA0     sbc     #$56              ;73..A2 get turned into 1C..4B
fe/e7f3: 0a           ??MXdI?? e ....> LFEE7F3         asl     A                 ;; multiply by 2
fe/e7f4: 38           ??MXdI?? e .....                 sec
fe/e7f5: 84 eb        ??MXdI?C e .....                 sty     <DPSYS_OSB_Y
fe/e7f7: a8           ??MXdI?? e ....> dispatchOSWORDinA tay                     ;When OSWORD enters here A=98..B4
fe/e7f8: 2c 5e a5     ??MXdI?? e .....                 bit     SYSVAR_FLAGS_SOMETHINGOSBYTEY
fe/e7fb: 10 07        ??MXdI?? e .....                 bpl     LFEE804
fe/e7fd: 8a           N?MXdI?? e .....                 txa
fe/e7fe: b8           ??MXdI?? e .....                 clv
fe/e7ff: 20 66 e3     ?vMXdI?? e .....                 jsr     QOSBY_VECTORthruA524
fe/e802: 70 1c        ??MXdI?? e .....                 bvs     @restoreflags_returnCy
fe/e804: 8b           ??MXdI?? e ....> LFEE804         phb
fe/e805: 4b           ??MXdI?? e .....                 phk
                                                       .dbank  K (auto)
fe/e806: ab           ??MXdI?? e .....                 plb
fe/e807: b9 af e5     ??MXdI?? e .....                 lda     0+(tblOSBYTDispatch & $ffff)+1,y
fe/e80a: 85 f7        ??MXdI?? e .....                 sta     <DPSYS_OSB_IND+1
fe/e80c: b9 ae e5     ??MXdI?? e .....                 lda     tblOSBYTDispatch & $ffff,y
fe/e80f: 85 f6        ??MXdI?? e .....                 sta     <DPSYS_OSB_IND
fe/e811: ab           ??MXdI?? e .....                 plb
fe/e812: a5 ec        ??MXdI?? e .....                 lda     <DPSYS_OSB_A
fe/e814: a4 eb        ??MXdI?? e .....                 ldy     <DPSYS_OSB_Y
fe/e816: b0 02        ??MXdI?? e .....                 bcs     @notosw
fe/e818: a7 ea        ??MXdI?c e .....                 lda     [<DPSYS_OSB_X]    ;if carry clear (OSWORD) A = first byte from long ptr
fe/e81a: 38           ??MXdI?? e ....> @notosw         sec
fe/e81b: a6 ea        ??MXdI?C e .....                 ldx     <DPSYS_OSB_X
fe/e81d: 20 ec ea     ??MXdI?C e .....                 jsr     callDP_F6_SEC_ZeqX
fe/e820: 6a           ??MXdI?? e ....> @restoreflags_returnCy ror A
fe/e821: 28           ??MXdI?? e .....                 plp
fe/e822: 2a           ??MXd??? e .....                 rol     A
fe/e823: 68           ??MXd??? e .....                 pla
fe/e824: b8           ??MXd??? e .....                 clv
fe/e825: 60           ?vMXd??? e ...#.                 rts

fe/e826: a0 00        ??MXdI?c e ....> @osb_0to72      ldy     #$00
fe/e828: c9 1c        n?MXdIZc e .....                 cmp     #$1c
fe/e82a: 90 c7        ??MXdI?? e .....                 bcc     LFEE7F3
fe/e82c: 08           ??MXdI?? e ....> @exitNotImpl    php
fe/e82d: 08           ??MXdI?? e .....                 php
fe/e82e: 68           ??MXd??? e ....> OSB_plaplaplpplaSECSEV pla
fe/e82f: 68           ??MXd??? e .....                 pla
fe/e830: 80 05        ??MXd??? e ...#.                 bra     OSB_plpplaSECSEV

fe/e832: a6                      .....                 .dd1    $a6
fe/e833: ea                      .....                 .dd1    $ea
fe/e834: 4c                      .....                 .dd1    $4c
fe/e835: 20                      .....                 .dd1    $20
fe/e836: e8                      .....                 .dd1    $e8

fe/e837: 28           ??MXd??? e ....> OSB_plpplaSECSEV plp
fe/e838: 68           ??MXdI?? e .....                 pla
fe/e839: e2 41        ??MXdI?? e .....                 sep     #$41
fe/e83b: 60           ?VMXdI?C e ...#.                 rts

fe/e83c: 60                      .....                 .dd1    $60

fe/e83d: e2 30        ??MXd??? e ....> enterOSWORD_BHA sep     #$30
fe/e83f: da           ??MXd??? e .....                 phx                       ;caller's A - TODO: pointless push here? Check if to align with OSBYTE entry?
fe/e840: 08           ??MXd??? e .....                 php
fe/e841: 78           ??MXd??? e .....                 sei
fe/e842: 85 ea        ??MXdI?? e .....                 sta     <DPSYS_OSB_X
fe/e844: eb           ??MXdI?? e .....                 xba
fe/e845: 85 eb        ??MXdI?? e .....                 sta     <DPSYS_OSB_Y
fe/e847: 8b           ??MXdI?? e .....                 phb
fe/e848: 68           ??MXdI?? e .....                 pla
fe/e849: 85 ec        ??MXdI?? e .....                 sta     <DPSYS_OSB_A
fe/e84b: 8a           ??MXdI?? e .....                 txa
fe/e84c: f4 00 ac     ??MXdI?? e .....                 pea     DPSYS
fe/e84f: 2b           ??MXdI?? e .....                 pld
                                                       .dbank  $00
fe/e850: f4 00 00     ??MXdI?? e .....                 pea     $0000
fe/e853: ab           ??MXdI?? e .....                 plb
fe/e854: ab           ??MXdI?? e .....                 plb
fe/e855: a2 08        ??MXdI?? e .....                 ldx     #$08
fe/e857: c9 e0        n?MXdIz? e .....                 cmp     #$e0
fe/e859: 90 03        ??MXdI?? e .....                 bcc     LFEE85E
fe/e85b: 82 8f ff     ??MXdI?C e ...#.                 brl     LFEE7ED           ;enter OSBYTE dispatcher with carry set to index into rest of table

fe/e85e: c9 0e        ??MXdI?c e ....> LFEE85E         cmp     #$0e
fe/e860: b0 ca        ??MXdI?? e .....                 bcs     @exitNotImpl
fe/e862: 69 4c        ??MXdI?c e .....                 adc     #$4c
fe/e864: 0a           ??MXdI?? e .....                 asl     A
fe/e865: b0 03        ??MXdI?? e .....                 bcs     OSBYTE_0_X
fe/e867: 82 8d ff     ??MXdI?c e ...#.                 brl     dispatchOSWORDinA

fe/e86a: a2 00        ??MXd??? e ....> OSBYTE_0_X      ldx     #$00
fe/e86c: 60           n?MXd?Z? e ...#.                 rts

                                       ********************************************************************************
                                       * OSBYTE 0 - print OS version or return in X                                   *
                                       ********************************************************************************
fe/e86d: d0 fb        ??MXd??? e @T... OSBYTE_0        bne     OSBYTE_0_X
fe/e86f: 00 f7        ??MXd?Z? e ...#.                 brk     $f7

fe/e871: 56 65 72 73+            .....                 .zstr   “Version 1.00 13/Nov/86 (C)1986”

fe/e890: a0 00        ??MXd??? e @T... TFEE890         ldy     #$00
fe/e892: ad 62 a5     n?MXd?Z? e .....                 lda     SYSVARS+98
fe/e895: d0 48        ??MXd??? e .....                 bne     LFEE8DF
fe/e897: ad 6b a5     ??MXd?Z? e .....                 lda     SYSVAR_SOUND_EXT_FLAG
fe/e89a: d0 05        ??MXd??? e .....                 bne     LFEE8A1
fe/e89c: c8           ??MXd?Z? e .....                 iny
fe/e89d: b7 ea        ??MXd??? e .....                 lda     [$ea],y
fe/e89f: c9 20        ??MXd??? e .....                 cmp     #$20
fe/e8a1: a2 08        ??MXd??? e ....> LFEE8A1         ldx     #$08
fe/e8a3: 90 03        n?MXd?z? e .....                 bcc     LFEE8A8
fe/e8a5: 82 86 ff     n?MXd?zC e ...#.                 brl     OSB_plaplaplpplaSECSEV

fe/e8a8: 88           n?MXd?zc e ....> LFEE8A8         dey
fe/e8a9: b7 ea        ??MXd??c e .....                 lda     [$ea],y
fe/e8ab: 20 41 e9     ??MXd??c e .....                 jsr     LFEE941
fe/e8ae: 20 57 e9     ??MXd??? e .....                 jsr     LFEE957
fe/e8b1: 09 04        ??MXd??? e .....                 ora     #$04
fe/e8b3: aa           ??MXd?z? e .....                 tax
fe/e8b4: 90 05        ??MXd??? e .....                 bcc     LFEE8BB
fe/e8b6: 20 34 df     ??MXd??C e .....                 jsr     LFEDF34
fe/e8b9: a0 01        ??MXd??? e .....                 ldy     #$01
fe/e8bb: 20 57 e9     ??MXd??? e ....> LFEE8BB         jsr     LFEE957
fe/e8be: 85 f6        ??MXd??? e .....                 sta     $f6
fe/e8c0: 08           ??MXd??? e .....                 php
fe/e8c1: a0 06        ??MXd??? e .....                 ldy     #$06
fe/e8c3: b7 ea        n?MXd?z? e .....                 lda     [$ea],y
fe/e8c5: 48           ??MXd??? e .....                 pha
fe/e8c6: a0 04        ??MXd??? e .....                 ldy     #$04
fe/e8c8: b7 ea        n?MXd?z? e .....                 lda     [$ea],y
fe/e8ca: 48           ??MXd??? e .....                 pha
fe/e8cb: a0 02        ??MXd??? e .....                 ldy     #$02
fe/e8cd: b7 ea        n?MXd?z? e .....                 lda     [$ea],y
fe/e8cf: 2a           ??MXd??? e .....                 rol     A
fe/e8d0: 38           ??MXd??? e .....                 sec
fe/e8d1: e9 02        ??MXd??C e .....                 sbc     #$02
fe/e8d3: 0a           ??MXd??? e .....                 asl     A
fe/e8d4: 0a           ??MXd??? e .....                 asl     A
fe/e8d5: 05 f6        ??MXd??? e .....                 ora     $f6
fe/e8d7: 20 ab df     ??MXd??? e .....                 jsr     LFEDFAB
fe/e8da: 90 2f        ??MXd??? e .....                 bcc     LFEE90B
fe/e8dc: 68           ??MXd??C e .....                 pla
fe/e8dd: 68           ??MXd??C e .....                 pla
fe/e8de: 28           ??MXd??C e .....                 plp
fe/e8df: 60           ??MXd??? e ...#> LFEE8DF         rts

fe/e8e0: f4 00 00     ??MXdIZ? e .T..> Serv8_QRY       pea     $0000
fe/e8e3: ab           ??MXdIZ? e .....                 plb
fe/e8e4: ab           ??MXdI?? e .....                 plb
fe/e8e5: ad 62 a5     ??MXdI?? e .....                 lda     SYSVARS+98
fe/e8e8: d0 f5        ??MXdI?? e .....                 bne     LFEE8DF
fe/e8ea: ad 6b a5     ??MXdIZ? e .....                 lda     SYSVAR_SOUND_EXT_FLAG
fe/e8ed: f0 05        ??MXdI?? e .....                 beq     LFEE8F4
fe/e8ef: a2 16        ??MXdIz? e .....                 ldx     #$16
fe/e8f1: 4c 47 ee     n?MXdIz? e ...#.                 jmp     donothingRTS

fe/e8f4: 08           ??MXdIZ? e ....> LFEE8F4         php
fe/e8f5: 78           ??MXdIZ? e .....                 sei
fe/e8f6: ad 63 a5     ??MXdIZ? e .....                 lda     SYSVARS+99
fe/e8f9: 20 41 e9     ??MXdI?? e .....                 jsr     LFEE941
fe/e8fc: aa           ??MXdI?? e .....                 tax
fe/e8fd: ad 64 a5     ??MXdI?? e .....                 lda     SYSVARS+100
fe/e900: 20 e2 e1     ??MXdI?? e .....                 jsr     callINSV
fe/e903: ad 66 a5     ??MXdI?? e .....                 lda     SYSVARS+102
fe/e906: 48           ??MXdI?? e .....                 pha
fe/e907: ad 65 a5     ??MXdI?? e .....                 lda     SYSVARS+101
fe/e90a: 48           ??MXdI?? e .....                 pha
fe/e90b: 38           ??MXd??? e ....> LFEE90B         sec
fe/e90c: 6e 14 a8     ??MXd??C e .....                 ror     SOUND_QRY_T
fe/e90f: 68           N?MXd?z? e .....                 pla
fe/e910: 20 e2 e1     ??MXd??? e .....                 jsr     callINSV
fe/e913: 68           ??MXd??? e .....                 pla
fe/e914: 20 e2 e1     ??MXd??? e .....                 jsr     callINSV
fe/e917: 28           ??MXd??? e .....                 plp
fe/e918: 60           ??MXdIZ? e ...#.                 rts

fe/e919: ae 62 a5     ??MXd??? e @T... TFEE919         ldx     SYSVARS+98
fe/e91c: d0 c1        ??MXd??? e .....                 bne     LFEE8DF
fe/e91e: ae 6b a5     ??MXd?Z? e .....                 ldx     SYSVAR_SOUND_EXT_FLAG
fe/e921: f0 03        ??MXd??? e .....                 beq     LFEE926
fe/e923: 82 7b ff     ??MXd?z? e ...#.                 brl     LFEE8A1

fe/e926: e9 01        ??MXd?Z? e ....> LFEE926         sbc     #$01
fe/e928: 0a           ??MXd??? e .....                 asl     A
fe/e929: 0a           ??MXd??? e .....                 asl     A
fe/e92a: 0a           ??MXd??? e .....                 asl     A
fe/e92b: 0a           ??MXd??? e .....                 asl     A
fe/e92c: 09 0f        ??MXd??? e .....                 ora     #$0f
fe/e92e: aa           ??MXd?z? e .....                 tax
fe/e92f: a9 00        ??MXd??? e .....                 lda     #$00
fe/e931: a0 10        n?MXd?Z? e .....                 ldy     #$10
fe/e933: c0 0e        ??MXd?z? e ....> LFEE933         cpy     #$0e
fe/e935: b0 02        ??MXd??? e .....                 bcs     LFEE939
fe/e937: b7 ea        ??MXd??c e .....                 lda     [$ea],y
fe/e939: 9d c0 a8     ??MXd??? e ....> LFEE939         sta     $a8c0,x
fe/e93c: ca           ??MXd??? e .....                 dex
fe/e93d: 88           ??MXd??? e .....                 dey
fe/e93e: d0 f3        ??MXd??? e .....                 bne     LFEE933
fe/e940: 60           ??MXd?Z? e ...#.                 rts

fe/e941: 29 03        ??MXd??? e ....> LFEE941         and     #$03
fe/e943: 09 04        n?MXd??? e .....                 ora     #$04
fe/e945: cd 25 a8     ??MXd?z? e .....                 cmp     SOUND_CUR_CHAN_QRY
fe/e948: f0 0c        ??MXd??? e .....                 beq     LFEE956
fe/e94a: 48           ??MXd?z? e .....                 pha
fe/e94b: 18           ??MXd?z? e .....                 clc
fe/e94c: ae 25 a8     ??MXd?zc e .....                 ldx     SOUND_CUR_CHAN_QRY
fe/e94f: 8d 25 a8     ??MXd??c e .....                 sta     SOUND_CUR_CHAN_QRY
fe/e952: 20 34 df     ??MXd??c e .....                 jsr     LFEDF34
fe/e955: 68           ??MXd??? e .....                 pla
fe/e956: 60           ??MXd??? e ...#> LFEE956         rts

fe/e957: b7 ea        ??MXd??? e ....> LFEE957         lda     [$ea],y
fe/e959: c9 10        ??MXd??? e .....                 cmp     #$10
fe/e95b: 29 03        ??MXd??? e .....                 and     #$03
fe/e95d: c8           n?MXd??? e .....                 iny
fe/e95e: 60           ??MXd??? e ...#.                 rts

fe/e95f: a2 0f        ??MXd??? e @T... TFEE95F         ldx     #$0f
fe/e961: d0 03        n?MXd?z? e ...#.                 bne     LFEE966

fe/e963: ae 83 a5     ??MXd??? e @T... TFEE963         ldx     SYSVARS+131
fe/e966: a0 04        ??MXd??? e ....> LFEE966         ldy     #$04
fe/e968: bd 8c a5     n?MXd??? e ....> LFEE968         lda     SYSVARS+140,x
fe/e96b: 97 ea        ??MXd??? e .....                 sta     [$ea],y
fe/e96d: e8           ??MXd??? e .....                 inx
fe/e96e: 88           ??MXd??? e .....                 dey
fe/e96f: 10 f7        ??MXd??? e .....                 bpl     LFEE968
fe/e971: 60           ??MXd??? e ...#> LFEE971         rts

fe/e972: a9 0f        ??MXd??? e @T... TFEE972         lda     #$0f
fe/e974: d0 06        n?MXd?z? e ...#.                 bne     LFEE97C

fe/e976: ad 83 a5     ??MXd??? e @T... TFEE976         lda     SYSVARS+131
fe/e979: 49 0f        ??MXd??? e .....                 eor     #$0f
fe/e97b: 18           ??MXd??? e .....                 clc
fe/e97c: 48           ??MXd??? e ....> LFEE97C         pha
fe/e97d: aa           ??MXd??? e .....                 tax
fe/e97e: a0 04        ??MXd??? e .....                 ldy     #$04
fe/e980: b7 ea        n?MXd??? e ....> LFEE980         lda     [$ea],y
fe/e982: 9d 8c a5     ??MXd??? e .....                 sta     SYSVARS+140,x
fe/e985: e8           ??MXd??? e .....                 inx
fe/e986: 88           ??MXd??? e .....                 dey
fe/e987: 10 f7        ??MXd??? e .....                 bpl     LFEE980
fe/e989: 68           N?MXd??? e .....                 pla
fe/e98a: b0 e5        ??MXd??? e .....                 bcs     LFEE971
fe/e98c: 8d 83 a5     ??MXd??c e .....                 sta     SYSVARS+131
fe/e98f: 60           ??MXd??c e ...#.                 rts

                                       ********************************************************************************
                                       * OSWORD 0 - readline                                                          *
                                       * As per BBC - not sure what the implied bank for the pointer in the block is  *
                                       ********************************************************************************
                                                       .dbank  $00
fe/e990: a0 04        ??MXd??? e @T... OSWORD_0        ldy     #$04
                                       ; Copy bytes 2,3,4 to SYSVARS+B0 (different to BBC)
fe/e992: b7 ea        ??MXd??? e ....> @lp             lda     [<DPSYS_OSB_X],y
fe/e994: bb           ??MXd??? e .....                 tyx                       ;TODO - remove
fe/e995: 9d b0 a5     ??MXd??? e .....                 sta     SYSVARS_OSWORD_0_PARMS-2,x ;TODO - use Y here
fe/e998: 88           ??MXd??? e .....                 dey
fe/e999: c0 02        ??MXd??? e .....                 cpy     #$02
fe/e99b: b0 f5        ??MXd??? e .....                 bcs     @lp
                                       ; store the address pointer in DP
fe/e99d: b7 ea        ??MXd??c e .....                 lda     [<DPSYS_OSB_X],y
fe/e99f: 85 e4        ??MXd??c e .....                 sta     <DPSYS_OSWORD0_BUFPTR+1
fe/e9a1: 88           ??MXd??c e .....                 dey
fe/e9a2: 8c 69 a5     ??MXd??c e .....                 sty     DPSYS_PAGEMODE_CTR-$700 ;Y is zero here; TODO: use STZ
fe/e9a5: b7 ea        ??MXd??c e .....                 lda     [<DPSYS_OSB_X],y
fe/e9a7: 85 e3        ??MXd??c e .....                 sta     <DPSYS_OSWORD0_BUFPTR
fe/e9a9: 58           ??MXd??c e .....                 cli
fe/e9aa: 80 0c        ??MXdi?c e ...#.                 bra     @loop

fe/e9ac: a9 07        ??MXdi?C e ....> @OSW0_BELL      lda     #VDU_07_BELL      ;beep and go round the loop without incrementing Y
fe/e9ae: 88           n?MXdizC e .....                 dey
fe/e9af: c8           ??MXdi?? e ....> @OSW0_inyecho   iny
fe/e9b0: a6 d8        ??MXdi?? e ....> @badcharNoInc   ldx     DPSYS_D8_B_SAV
fe/e9b2: da           ??MXdi?? e .....                 phx                       ;TODO: pointless push - OPWRC preserves all regs
fe/e9b3: 02 00        ??MXdi?? e .....                 cop     COP_00_OPWRC
fe/e9b5: fa           ??MXdi?? e .....                 plx
fe/e9b6: 86 d8        ??MXdi?? e .....                 stx     DPSYS_D8_B_SAV
fe/e9b8: a6 d8        ??MXdi?? e ....> @loop           ldx     DPSYS_D8_B_SAV
fe/e9ba: da           ??MXdi?? e .....                 phx
fe/e9bb: 02 04        ??MXdi?? e .....                 cop     COP_04_OPRDC      ;read char from input stream
fe/e9bd: fa           ??MXdi?? e .....                 plx
fe/e9be: 86 d8        ??MXdi?? e .....                 stx     DPSYS_D8_B_SAV
fe/e9c0: b0 4d        ??MXdi?? e .....                 bcs     @ESC_ret          ;ESCape
fe/e9c2: aa           ??MXdi?c e .....                 tax
fe/e9c3: ad 7c a5     ??MXdi?c e .....                 lda     SYSVARS_7C_OUTDEST
fe/e9c6: 6a           ??MXdi?c e .....                 ror     A
fe/e9c7: 6a           n?MXdi?? e .....                 ror     A                 ;rotate twice to see if output disabled
fe/e9c8: 8a           ??MXdi?? e .....                 txa                       ;restore A
fe/e9c9: b0 05        ??MXdi?? e .....                 bcs     @novdu            ;if VDU disabled skip forward
fe/e9cb: ae 6a a5     ??MXdi?c e .....                 ldx     SYSVAR_VDU_QLEN
fe/e9ce: d0 e0        ??MXdi?c e .....                 bne     @badcharNoInc     ;if there's stuff in the VDU Q just output the char and continue
fe/e9d0: c9 7f        ??MXdi?? e ....> @novdu          cmp     #VDU_7F_BKSP
fe/e9d2: d0 07        ??MXdi?? e .....                 bne     @notbksp
fe/e9d4: c0 00        ??MXdiZ? e .....                 cpy     #$00
fe/e9d6: f0 e0        ??MXdi?? e .....                 beq     @loop             ;if zero just loop around
fe/e9d8: 88           ??MXdiz? e .....                 dey                       ;decrement pointer
fe/e9d9: b0 d5        ??MXdi?? e .....                 bcs     @badcharNoInc     ;always branch round - TODO: change to more meaningful BRA
fe/e9db: c9 15        ??MXdi?? e ....> @notbksp        cmp     #VDU_15_DELLN
fe/e9dd: d0 0c        ??MXdi?? e .....                 bne     @storeInBuf
fe/e9df: 98           ??MXdiZ? e .....                 tya                       ;check pointer for 0
fe/e9e0: f0 d6        ??MXdi?? e .....                 beq     @loop             ;nothing in current line got back to reading
fe/e9e2: a9 7f        ??MXdiz? e .....                 lda     #VDU_7F_BKSP
fe/e9e4: 02 00        ??MXdiz? e ....> @dellnlp        cop     COP_00_OPWRC
fe/e9e6: 88           ??MXdiz? e .....                 dey
fe/e9e7: d0 fb        ??MXdi?? e .....                 bne     @dellnlp
fe/e9e9: f0 cd        ??MXdiZ? e ...#.                 beq     @loop

fe/e9eb: 8b           ??MXdiz? e ....> @storeInBuf     phb                       ;preserve our Bank
fe/e9ec: eb           ??MXdiz? e .....                 xba                       ;preserve A (char to store)
fe/e9ed: a5 d8        ??MXdi?? e .....                 lda     DPSYS_D8_B_SAV    ;get dest bank
fe/e9ef: 48           ??MXdi?? e .....                 pha
fe/e9f0: ab           ??MXdi?? e .....                 plb
fe/e9f1: eb           ??MXdi?? e .....                 xba                       ;get back A
fe/e9f2: 91 e3        ??MXdi?? e .....                 sta     (<DPSYS_OSWORD0_BUFPTR),y
fe/e9f4: ab           ??MXdi?? e .....                 plb                       ;back to our bank
fe/e9f5: c9 0d        ??MXdi?? e .....                 cmp     #VDU_0D_CR        ;check for EOL
fe/e9f7: f0 13        ??MXdi?? e .....                 beq     @newlClcRet
fe/e9f9: cc b2 a5     ??MXdiz? e .....                 cpy     SYSVARS_OSWORD_0_PARMS
fe/e9fc: b0 ae        ??MXdi?? e .....                 bcs     @OSW0_BELL        ;too long - beep
fe/e9fe: cd b3 a5     ??MXdi?c e .....                 cmp     SYSVARS_OSWORD_0_PARMS+1
fe/ea01: 90 ad        ??MXdi?? e .....                 bcc     @badcharNoInc     ;bad char silently store in buffer no increment
fe/ea03: cd b4 a5     ??MXdi?C e .....                 cmp     SYSVARS_OSWORD_0_PARMS+2
fe/ea06: f0 a7        ??MXdi?? e .....                 beq     @OSW0_inyecho
fe/ea08: 90 a5        ??MXdiz? e .....                 bcc     @OSW0_inyecho
fe/ea0a: b0 a4        ??MXdizC e ...#.                 bcs     @badcharNoInc

fe/ea0c: 02 03        ??MXdiZ? e ....> @newlClcRet     cop     COP_03_OPNLI
fe/ea0e: 18           ??MXdiZ? e .....                 clc
fe/ea0f: aa           ??MXdi?? e ....> @ESC_ret        tax
fe/ea10: 60           ??MXdi?? e ...#.                 rts

fe/ea11: 58                      .....                 .dd1    $58
fe/ea12: 78                      .....                 .dd1    $78
fe/ea13: da                      .....                 .dd1    $da
fe/ea14: a9                      .....                 .dd1    $a9
fe/ea15: 00                      .....                 .dd1    $00
fe/ea16: eb                      .....                 .dd1    $eb
fe/ea17: a9                      .....                 .dd1    $a9
fe/ea18: 03                      .....                 .dd1    $03
fe/ea19: a2                      .....                 .dd1    $a2
fe/ea1a: 02                      .....                 .dd1    $02
fe/ea1b: 22                      .....                 .dd1    $22
fe/ea1c: b0                      .....                 .dd1    $b0
fe/ea1d: ff                      .....                 .dd1    $ff
fe/ea1e: 00                      .....                 .dd1    $00
fe/ea1f: fa                      .....                 .dd1    $fa
fe/ea20: 90                      .....                 .dd1    $90
fe/ea21: 3e                      .....                 .dd1    $3e
fe/ea22: 2c                      .....                 .dd1    $2c
fe/ea23: c6                      .....                 .dd1    $c6
fe/ea24: a5                      .....                 .dd1    $a5
fe/ea25: 10                      .....                 .dd1    $10
fe/ea26: ea                      .....                 .dd1    $ea
fe/ea27: 20                      .....                 .dd1    $20
fe/ea28: 16                      .....                 .dd1    $16
fe/ea29: df                      .....                 .dd1    $df
fe/ea2a: a0                      .....                 .dd1    $a0
fe/ea2b: 00                      .....                 .dd1    $00
fe/ea2c: 84                      .....                 .dd1    $84
fe/ea2d: eb                      .....                 .dd1    $eb
fe/ea2e: 86                      .....                 .dd1    $86
fe/ea2f: ea                      .....                 .dd1    $ea
fe/ea30: 20                      .....                 .dd1    $20
fe/ea31: b6                      .....                 .dd1    $b6
fe/ea32: e7                      .....                 .dd1    $e7
fe/ea33: a9                      .....                 .dd1    $a9
fe/ea34: 05                      .....                 .dd1    $05
fe/ea35: 09                      .....                 .dd1    $09
fe/ea36: f0                      .....                 .dd1    $f0
fe/ea37: 80                      .....                 .dd1    $80
fe/ea38: 0d                      .....                 .dd1    $0d
fe/ea39: d0                      .....                 .dd1    $d0
fe/ea3a: 07                      .....                 .dd1    $07
fe/ea3b: a2                      .....                 .dd1    $a2
fe/ea3c: 32                      .....                 .dd1    $32
fe/ea3d: 48                      .....                 .dd1    $48
fe/ea3e: a9                      .....                 .dd1    $a9
fe/ea3f: 03                      .....                 .dd1    $03
fe/ea40: aa                      .....                 .dd1    $aa
fe/ea41: 68                      .....                 .dd1    $68
fe/ea42: 60                      .....                 .dd1    $60

fe/ea43: 18           ??MXd??? e @T... OSBYTE_4        clc
fe/ea44: 69 e9        ??MXd??c e .....                 adc     #$e9              ;TODO: make this relative to SYSVARS/VDUVARS
fe/ea46: 86 ea        ??MXd??? e .....                 stx     <DPSYS_OSB_X      ;TODO: suspect this is superfluous?
fe/ea48: c9 dd        ??MXd??? e .T... OSBYTE_A6_FF    cmp     #$dd
fe/ea4a: 90 04        ??MXd??? e .....                 bcc     @sk1
fe/ea4c: c9 e5        ??MXd??C e .....                 cmp     #$e5
fe/ea4e: 90 11        ??MXd??? e .....                 bcc     @skDDtoE4
fe/ea50: a8           ??MXd??? e ....> @sk1            tay
fe/ea51: b9 90 a4     ??MXd??? e .....                 lda     SYSVARS-112,y
fe/ea54: aa           ??MXd??? e .....                 tax
fe/ea55: 25 eb        ??MXd??? e .....                 and     <DPSYS_OSB_Y
fe/ea57: 45 ea        ??MXd??? e .....                 eor     <DPSYS_OSB_X
fe/ea59: 99 90 a4     ??MXd??? e .....                 sta     SYSVARS-112,y
fe/ea5c: b9 91 a4     ??MXd??? e .....                 lda     SYSVARS-111,y
fe/ea5f: a8           ??MXd??? e .....                 tay
fe/ea60: 60           ??MXd??? e ...#.                 rts

fe/ea61: 20 65 e4     ??MXd??c e ....> @skDDtoE4       jsr     OSBYTE_DDtoE4     ;;TODO: replace with jump
fe/ea64: 60           ??MXd??? e ...#.                 rts

fe/ea65: 49                      .....                 .dd1    $49
fe/ea66: 8c                      .....                 .dd1    $8c
fe/ea67: 0a                      .....                 .dd1    $0a
fe/ea68: 8d                      .....                 .dd1    $8d
fe/ea69: 47                      .....                 .dd1    $47
fe/ea6a: a5                      .....                 .dd1    $a5
fe/ea6b: 60                      .....                 .dd1    $60

                                       ********************************************************************************
                                       * OSBYTE 13 (19) - Wait for Vsync                                              *
                                       ********************************************************************************
                                                       .dbank  $00
fe/ea6c: ad 40 a5     ??MXd??? e @T... OSBYTE_13       lda     SYSVAR_CFS_TIMEOUT
fe/ea6f: 58           ??MXd??? e ....> @lp             cli
fe/ea70: 78           ??MXdi?? e .....                 sei
fe/ea71: cd 40 a5     ??MXdI?? e .....                 cmp     SYSVAR_CFS_TIMEOUT
fe/ea74: f0 f9        ??MXdI?? e .....                 beq     @lp
fe/ea76: 60           ??MXdIz? e ...#.                 rts

                                       ********************************************************************************
                                       * OSBYTE 12 - Reset Soft Key Definitions                                       *
                                       ********************************************************************************
fe/ea77: 20 44 e5     ??MXdI?? e ....> OSBYTE_12       jsr     OSB_ResetFnKeys
fe/ea7a: 60           ??MXdI?? e ...#.                 rts

                                                       .rwid   longm,longx
fe/ea7b: 08           ??mxd??? e ....> LFEEA7B         php
fe/ea7c: c2 30        ??mxd??? e .....                 rep     #$30
fe/ea7e: a9 00 00     ??mxd??? e .....                 lda     #$0000
fe/ea81: a8           n?mxd?Z? e .....                 tay
fe/ea82: a2 3a 00     ??mxd??? e .....                 ldx     #$003a
fe/ea85: 4b           n?mxd?z? e .....                 phk
fe/ea86: 20 38 fe     n?mxd?z? e .....                 jsr     callModVDU
fe/ea89: 28           ??mxd??? e .....                 plp
fe/ea8a: 60           ??mxd??? e ...#.                 rts

                                       ********************************************************************************
                                       * OSBYTE 76 - reflect keyboard in LEDS                                         *
                                       ********************************************************************************
                                                       .rwid   shortm,shortx
fe/ea8b: 08           ??MXd??? e @T... OSBYTE_76       php
fe/ea8c: 78           ??MXd??? e .....                 sei
fe/ea8d: a9 40        ??MXdI?? e .....                 lda     #$40
fe/ea8f: 20 b6 ea     n?MXdIz? e .....                 jsr     LFEEAB6
fe/ea92: b0 0a        ??MXdI?? e .....                 bcs     LFEEA9E
fe/ea94: 18           ??MXdI?c e .....                 clc
fe/ea95: b8           ??MXdI?c e .....                 clv
fe/ea96: da           ?vMXdI?c e .....                 phx
fe/ea97: a2 1c        ?vMXdI?c e .....                 ldx     #$1c
fe/ea99: 22 ac ff 00  nvMXdIzc e .....                 jsl     __KB
fe/ea9d: fa           ??MXdI?? e .....                 plx
fe/ea9e: 28           ??MXdI?? e ....> LFEEA9E         plp
fe/ea9f: 2a           ??MXd??? e .....                 rol     A
fe/eaa0: 60           ??MXd??? e ...#.                 rts

                                       ********************************************************************************
                                       * OSBYTE 78 - write key pressed data                                           *
                                       ********************************************************************************
fe/eaa1: 9b           ??MXd??? e @T... OSBYTE_78       txy
fe/eaa2: a2 18        ??MXd??? e .....                 ldx     #$18
fe/eaa4: 22 ac ff 00  n?MXd?z? e .....                 jsl     __KB
fe/eaa8: 60           ??MXd??? e ...#.                 rts

fe/eaa9: eb           ??MXdI?? e ....> LFEEAA9         xba
fe/eaaa: 4b           ??MXdI?? e .....                 phk
fe/eaab: ad 21 a5     ??MXdI?? e .....                 lda     SYSVARS+33
fe/eaae: 48           ??MXdI?? e .....                 pha
fe/eaaf: ad 20 a5     ??MXdI?? e .....                 lda     SYSVARS+32
fe/eab2: 48           ??MXdI?? e .....                 pha
fe/eab3: eb           ??MXdI?? e .....                 xba
fe/eab4: 08           ??MXdI?? e .....                 php
fe/eab5: 40           ??MXdI?? e ...#.                 rti

fe/eab6: 90 11        ??MXdI?? e ....> LFEEAB6         bcc     @skCC
fe/eab8: 48           ??MXdI?C e .....                 pha
fe/eab9: ad 82 a5     ??MXdI?C e .....                 lda     SYSVARS_ULA_MISC_COPY
fe/eabc: 49 c0        ??MXdI?C e .....                 eor     #$c0
fe/eabe: 8f 07 fe 45  ??MXdI?C e .....                 stal    shiela_ULA_MISC
fe/eac2: 49 c0        ??MXdI?C e .....                 eor     #$c0
fe/eac4: 8f 07 fe 45  ??MXdI?C e .....                 stal    shiela_ULA_MISC
fe/eac8: 68           ??MXdI?C e .....                 pla
fe/eac9: 48           ??MXdI?? e ....> @skCC           pha
fe/eaca: da           ??MXdI?? e .....                 phx
fe/eacb: a9 00        ??MXdI?? e .....                 lda     #$00
fe/eacd: eb           n?MXdIZ? e .....                 xba
fe/eace: a9 03        ??MXdI?? e .....                 lda     #$03
fe/ead0: a2 02        n?MXdIz? e .....                 ldx     #$02
fe/ead2: 22 b0 ff 00  n?MXdIz? e .....                 jsl     __EV
fe/ead6: fa           ??MXdI?? e .....                 plx
fe/ead7: 68           ??MXdI?? e .....                 pla
fe/ead8: 60           ??MXdI?? e ...#.                 rts

fe/ead9: ad                      .....                 .dd1    $ad
fe/eada: 87                      .....                 .dd1    $87
fe/eadb: a5                      .....                 .dd1    $a5
fe/eadc: 49                      .....                 .dd1    $49
fe/eadd: 4c                      .....                 .dd1    $4c
fe/eade: d0                      .....                 .dd1    $d0
fe/eadf: 04                      .....                 .dd1    $04
fe/eae0: 5c                      .....                 .dd1    $5c
fe/eae1: 87                      .....                 .dd1    $87
fe/eae2: a5                      .....                 .dd1    $a5
fe/eae3: 00                      .....                 .dd1    $00
fe/eae4: 60                      .....                 .dd1    $60
fe/eae5: 60                      .....                 .dd1    $60
fe/eae6: 2f                      .....                 .dd1    $2f
fe/eae7: 21                      .....                 .dd1    $21
fe/eae8: 42                      .....                 .dd1    $42
fe/eae9: 4f                      .....                 .dd1    $4f
fe/eaea: 2e                      .....                 .dd1    $2e
fe/eaeb: 0d                      .....                 .dd1    $0d

                                       ; QRY this appears to do a jump indirect to (f6) in DP setting flags Z if X==0
                                       ; and Cy=1
                                       ; 
                                       ; As this is called once in OSBYTE dispatch where DP is known why not just
                                       ; 
                                       ; CPX#0
                                       ; SEC
                                       ; JMP(ACF6)
fe/eaec: 4b           ??MXdI?C e ....> callDP_F6_SEC_ZeqX phk
fe/eaed: 0b           ??MXdI?C e .....                 phd
fe/eaee: 48           ??MXdI?C e .....                 pha
fe/eaef: eb           ??MXdI?C e .....                 xba
fe/eaf0: 48           ??MXdI?C e .....                 pha
                                       ; +7  RETH
                                       ; +6  RETL
                                       ; +5  K
                                       ; +3  D
                                       ; +2  A
                                       ; +1  B
fe/eaf1: a5 f7        ??MXdI?C e .....                 lda     <DPSYS_OSB_IND+1
fe/eaf3: 83 04        ??MXdI?C e .....                 sta     $04,S
fe/eaf5: a5 f6        ??MXdI?C e .....                 lda     <DPSYS_OSB_IND
fe/eaf7: 83 03        ??MXdI?C e .....                 sta     $03,S
                                       ; +7  RETH
                                       ; +6  RETL
                                       ; +5  K
                                       ; +3  F6,F7
                                       ; +2  A
                                       ; +1  B
fe/eaf9: 68           ??MXdI?C e .....                 pla
fe/eafa: eb           ??MXdI?C e .....                 xba
fe/eafb: 68           ??MXdI?C e .....                 pla
                                       ; +5  RETH
                                       ; +4  RETL
                                       ; +3  K
                                       ; +1  F6,F7
fe/eafc: e0 00        ??MXdI?C e .....                 cpx     #$00
fe/eafe: 38           ??MXdI?? e .....                 sec
fe/eaff: 08           ??MXdI?C e .....                 php
                                       ; +6  RETH
                                       ; +5  RETL
                                       ; +4  K
                                       ; +2  F6,F7
                                       ; +1  FLAGS with Cy=1, Z if X==0
fe/eb00: 40           ??MXdI?C e ...#.                 rti

                                       ; TODO - this looks dead as it will trip over the string
fe/eb01: a2 09        ??MXd??? e @T...                 ldx     #$09
fe/eb03: 20 47 ee     n?MXd?z? e .....                 jsr     donothingRTS
fe/eb06: 20 0b ee     ??MXd??? e .....                 jsr     LFEEE0B_rts
fe/eb09: 0d 56 65 72+            .T...                 .zstr   $0d,“Version 1.00 13/Nov/86 (C)1986”
fe/eb29: 60           ??MXd??? e ...#.                 rts

fe/eb2a: ce 49 a5     ??MXd??? e @T...                 dec     SYSVARS+73
fe/eb2d: 60           ??MXd??? e ...#.                 rts

fe/eb2e: ac 44 a5     ??MXd??? e @T...                 ldy     SYSVARS+68
fe/eb31: a2 00        ??MXd??? e .....                 ldx     #$00
fe/eb33: 60           n?MXd?Z? e ...#.                 rts

fe/eb34: 08           ??MXd??? e ....> resetFlashCounters php
fe/eb35: 78           ??MXd??? e .....                 sei
fe/eb36: a2 00        ??MXdI?? e .....                 ldx     #$00
fe/eb38: 8e 48 a5     n?MXdIZ? e .....                 stx     SYSVAR_48_UNKNOWN_ULA
fe/eb3b: ad 53 a5     n?MXdIZ? e .....                 lda     SYSVAR_FLASH_MARK
fe/eb3e: 8d 51 a5     ??MXdI?? e .....                 sta     SYSVAR_51_FLASHCTDN
fe/eb41: a2 14        ??MXdI?? e .....                 ldx     #VDUMOD_OPX_14_FLASH_QRY
fe/eb43: 4b           n?MXdIz? e .....                 phk
fe/eb44: 20 38 fe     n?MXdIz? e .....                 jsr     callModVDU
fe/eb47: 28           ??MXdI?? e .....                 plp
fe/eb48: 60           ??MXd??? e ...#.                 rts

fe/eb49: 8b           ??MXd??? e @T...                 phb
fe/eb4a: f4 00 00     ??MXd??? e .....                 pea     $0000
                                                       .dbank  $00
fe/eb4d: ab           ??MXd??? e .....                 plb
fe/eb4e: ab           ??MXd??? e .....                 plb
fe/eb4f: ad 6b a5     ??MXd??? e .....                 lda     SYSVAR_SOUND_EXT_FLAG
fe/eb52: d0 08        ??MXd??? e .....                 bne     LFEEB5C
fe/eb54: ad 14 a8     ??MXd?Z? e .....                 lda     SOUND_QRY_T
fe/eb57: f0 03        ??MXd??? e .....                 beq     LFEEB5C
fe/eb59: 20 5e eb     ??MXd?z? e .....                 jsr     LFEEB5E
fe/eb5c: ab           ??MXd??? e ....> LFEEB5C         plb
fe/eb5d: 60           ??MXd??? e ...#.                 rts

fe/eb5e: ae 25 a8     ??MXd?z? e ....> LFEEB5E         ldx     SOUND_CUR_CHAN_QRY
fe/eb61: bd c3 a5     ??MXd??? e .....                 lda     SYSVARS_ELK_BUFFER_BUSY,x
fe/eb64: 30 05        ??MXd??? e .....                 bmi     LFEEB6B
fe/eb66: ad 1b a8     n?MXd??? e .....                 lda     SOUND_QRY_S
fe/eb69: d0 03        ??MXd??? e .....                 bne     LFEEB6E
fe/eb6b: 20 5d ec     ??MXd??? e ....> LFEEB6B         jsr     LFEEC5D
fe/eb6e: ad 1b a8     ??MXd??? e ....> LFEEB6E         lda     SOUND_QRY_S
fe/eb71: f0 11        ??MXd??? e .....                 beq     LFEEB84
fe/eb73: c9 ff        ??MXd?z? e .....                 cmp     #$ff
fe/eb75: f0 10        ??MXd??? e .....                 beq     LFEEB87
fe/eb77: ce 1c a8     ??MXd?z? e .....                 dec     $a81c
fe/eb7a: d0 0b        ??MXd??? e .....                 bne     LFEEB87
fe/eb7c: 20 da ec     ??MXd?Z? e .....                 jsr     LFEECDA
fe/eb7f: ce 1b a8     ??MXd??? e .....                 dec     SOUND_QRY_S
fe/eb82: d0 03        ??MXd??? e .....                 bne     LFEEB87
fe/eb84: 20 5d ec     ??MXd?Z? e ....> LFEEB84         jsr     LFEEC5D
fe/eb87: ac 1d a8     ??MXd??? e ....> LFEEB87         ldy     $a81d
fe/eb8a: c0 ff        ??MXd??? e .....                 cpy     #$ff
fe/eb8c: d0 03        ??MXd??? e .....                 bne     LFEEB91
fe/eb8e: 82 62 00     ??MXd?Z? e ...#.                 brl     sound_QRY1

fe/eb91: ad 1e a8     ??MXd?z? e ....> LFEEB91         lda     $a81e
fe/eb94: f0 08        ??MXd??? e .....                 beq     LFEEB9E
fe/eb96: ce 1e a8     ??MXd?z? e .....                 dec     $a81e
fe/eb99: f0 03        ??MXd??? e .....                 beq     LFEEB9E
fe/eb9b: 82 55 00     ??MXd?z? e ...#.                 brl     sound_QRY1

fe/eb9e: ad 19 a8     ??MXd?Z? e ....> LFEEB9E         lda     $a819
fe/eba1: c9 03        ??MXd??? e .....                 cmp     #$03
fe/eba3: f0 4e        ??MXd??? e .....                 beq     sound_QRY1
fe/eba5: b9 c0 a8     ??MXd?z? e .....                 lda     $a8c0,y
fe/eba8: 29 7f        ??MXd??? e .....                 and     #$7f
fe/ebaa: 8d 1e a8     n?MXd??? e .....                 sta     $a81e
fe/ebad: ad 1a a8     n?MXd??? e .....                 lda     SOUND_QRY_S-1
fe/ebb0: d0 2a        ??MXd??? e .....                 bne     LFEEBDC
fe/ebb2: ee 19 a8     ??MXd?Z? e .....                 inc     $a819
fe/ebb5: ad 19 a8     ??MXd??? e .....                 lda     $a819
fe/ebb8: c9 03        ??MXd??? e .....                 cmp     #$03
fe/ebba: d0 10        ??MXd??? e .....                 bne     LFEEBCC
fe/ebbc: ac 1d a8     ??MXd?Z? e .....                 ldy     $a81d
fe/ebbf: b9 c0 a8     ??MXd??? e .....                 lda     $a8c0,y
fe/ebc2: 30 2f        ??MXd??? e .....                 bmi     sound_QRY1
fe/ebc4: a9 00        n?MXd??? e .....                 lda     #$00
fe/ebc6: 8d 19 a8     n?MXd?Z? e .....                 sta     $a819
fe/ebc9: 20 eb ec     n?MXd?Z? e .....                 jsr     LFEECEB
fe/ebcc: ad 19 a8     ??MXd??? e ....> LFEEBCC         lda     $a819
fe/ebcf: 18           ??MXd??? e .....                 clc
fe/ebd0: 6d 1d a8     ??MXd??c e .....                 adc     $a81d
fe/ebd3: a8           ??MXd??? e .....                 tay
fe/ebd4: b9 c4 a8     ??MXd??? e .....                 lda     $a8c4,y
fe/ebd7: 8d 1a a8     ??MXd??? e .....                 sta     SOUND_QRY_S-1
fe/ebda: f0 17        ??MXd??? e .....                 beq     sound_QRY1
fe/ebdc: ce 1a a8     ??MXd?z? e ....> LFEEBDC         dec     SOUND_QRY_S-1
fe/ebdf: ad 1d a8     ??MXd??? e .....                 lda     $a81d
fe/ebe2: 18           ??MXd??? e .....                 clc
fe/ebe3: 6d 19 a8     ??MXd??c e .....                 adc     $a819
fe/ebe6: a8           ??MXd??? e .....                 tay
fe/ebe7: b9 c1 a8     ??MXd??? e .....                 lda     $a8c1,y
fe/ebea: f0 07        ??MXd??? e .....                 beq     sound_QRY1
fe/ebec: 18           ??MXd?z? e .....                 clc
fe/ebed: 6d 1f a8     ??MXd?zc e .....                 adc     SOUND_STATUS_QRY-1
fe/ebf0: 20 eb ec     ??MXd??? e .....                 jsr     LFEECEB
                                                       .dbank  $00
fe/ebf3: a5 e5        ??MXd??? e ....> sound_QRY1      lda     $e5               ;QRY E5?
fe/ebf5: 0d 62 a5     ??MXd??? e .....                 ora     SYSVARS+98        ;or with sound suppression status
fe/ebf8: d0 35        ??MXd??? e .....                 bne     @ret              ;if ne then exit
fe/ebfa: 08           ??MXd?Z? e .....                 php
fe/ebfb: 78           ??MXd?Z? e .....                 sei
fe/ebfc: ad 82 a5     ??MXdIZ? e .....                 lda     SYSVARS_ULA_MISC_COPY
fe/ebff: 29 f9        ??MXdI?? e .....                 and     #$f9
fe/ec01: 0d 20 a8     ??MXdI?? e .....                 ora     SOUND_STATUS_QRY
fe/ec04: cd 82 a5     ??MXdI?? e .....                 cmp     SYSVARS_ULA_MISC_COPY
fe/ec07: f0 07        ??MXdI?? e .....                 beq     LFEEC10
fe/ec09: 8d 82 a5     ??MXdIz? e .....                 sta     SYSVARS_ULA_MISC_COPY
fe/ec0c: 8f 07 fe 45  ??MXdIz? e .....                 stal    shiela_ULA_MISC
fe/ec10: 28           ??MXdI?? e ....> LFEEC10         plp
fe/ec11: ad 21 a8     ??MXdIZ? e .....                 lda     SOUND_TONE_QRY
fe/ec14: 8f 06 fe 45  ??MXdI?? e .....                 stal    sheila_UKA_TONE
fe/ec18: ad 22 a8     ??MXdI?? e ....> LFEEC18         lda     SOUND_QRY_X
fe/ec1b: f0 12        ??MXdI?? e .....                 beq     @ret
fe/ec1d: a5 e5        ??MXdIz? e .....                 lda     $e5
fe/ec1f: d0 0e        ??MXdI?? e .....                 bne     @ret
fe/ec21: 8a           ??MXdIZ? e .....                 txa
fe/ec22: 48           ??MXdI?? e .....                 pha
fe/ec23: ee 24 a8     ??MXdI?? e .....                 inc     SOUND_CUR_CHAN_QRY-1
fe/ec26: ae 24 a8     ??MXdI?? e .....                 ldx     SOUND_CUR_CHAN_QRY-1
fe/ec29: 8f 06 fe 45  ??MXdI?? e .....                 stal    sheila_UKA_TONE
fe/ec2d: 68           ??MXdI?? e .....                 pla
fe/ec2e: aa           ??MXdI?? e .....                 tax
fe/ec2f: 60           ??MXd??? e ...#> @ret            rts

                                       ********************************************************************************
                                       * OSBYTE 74                                                                    *
                                       *                                                                              *
                                       * Reset the sound system - Electron                                            *
                                       ********************************************************************************
fe/ec30: 8b           N?MXdIz? e ....> OSBYTE_74       phb
fe/ec31: f4 00 00     N?MXdIz? e .....                 pea     $0000
fe/ec34: ab           N?MXdIz? e .....                 plb
                                                       .dbank  $00
fe/ec35: ab           ??MXdI?? e .....                 plb
fe/ec36: a2 04        ??MXdI?? e .....                 ldx     #$04
fe/ec38: 8e 25 a8     n?MXdIz? e .....                 stx     SOUND_CUR_CHAN_QRY
fe/ec3b: 20 44 ec     ??MXdIz? e ....> @lp             jsr     SOUND_RESET_CHAN_X_QRY
fe/ec3e: e8           ??MXdI?? e .....                 inx
fe/ec3f: e0 07        ??MXdI?? e .....                 cpx     #$07
fe/ec41: d0 f8        ??MXdI?? e .....                 bne     @lp
fe/ec43: ab           ??MXdIZ? e .....                 plb
fe/ec44: 8b           ??MXdI?? e ....> SOUND_RESET_CHAN_X_QRY phb
fe/ec45: f4 00 00     ??MXdI?? e .....                 pea     $0000
fe/ec48: ab           ??MXdI?? e .....                 plb
                                                       .dbank  $00
fe/ec49: ab           ??MXdI?? e .....                 plb
fe/ec4a: a9 00        ??MXdI?? e .....                 lda     #$00
fe/ec4c: 8d 1b a8     n?MXdIZ? e .....                 sta     SOUND_QRY_S
fe/ec4f: 9d c3 a5     n?MXdIZ? e .....                 sta     SYSVARS_ELK_BUFFER_BUSY,x
fe/ec52: 8d 14 a8     n?MXdIZ? e .....                 sta     SOUND_QRY_T
fe/ec55: 20 e0 ec     n?MXdIZ? e .....                 jsr     SOUND_CLR_QRY
fe/ec58: 20 f3 eb     ??MXdI?? e .....                 jsr     sound_QRY1
fe/ec5b: ab           ??MXdI?? e .....                 plb
fe/ec5c: 60           ??MXdI?? e ...#.                 rts

fe/ec5d: ae 25 a8     ??MXd??? e .T..> LFEEC5D         ldx     SOUND_CUR_CHAN_QRY
fe/ec60: 20 e0 ec     ??MXd??? e .....                 jsr     SOUND_CLR_QRY
fe/ec63: bd c3 a5     ??MXd??? e .....                 lda     SYSVARS_ELK_BUFFER_BUSY,x
fe/ec66: f0 08        ??MXd??? e .....                 beq     LFEEC70
fe/ec68: a9 00        ??MXd?z? e .....                 lda     #$00
fe/ec6a: 9d c3 a5     n?MXd?Z? e .....                 sta     SYSVARS_ELK_BUFFER_BUSY,x
fe/ec6d: 8d 1b a8     n?MXd?Z? e .....                 sta     SOUND_QRY_S
fe/ec70: 20 8e e1     ??MXd?Z? e ....> LFEEC70         jsr     OSBYTE_98
fe/ec73: 90 0f        ??MXd??? e .....                 bcc     LFEEC84
fe/ec75: 08           ??MXd??C e .....                 php
fe/ec76: 78           ??MXd??C e .....                 sei
fe/ec77: 20 8e e1     ??MXdI?C e .....                 jsr     OSBYTE_98
fe/ec7a: 90 05        ??MXdI?? e .....                 bcc     LFEEC81
fe/ec7c: a9 00        ??MXdI?C e .....                 lda     #$00
fe/ec7e: 8d 14 a8     n?MXdIZC e .....                 sta     SOUND_QRY_T
fe/ec81: 28           ??MXdI?? e ....> LFEEC81         plp
fe/ec82: 80 5c        ??MXd??C e ...#.                 bra     SOUND_CLR_QRY

fe/ec84: 08           ??MXd??c e ....> LFEEC84         php
fe/ec85: 78           ??MXd??c e .....                 sei
fe/ec86: 20 92 e1     ??MXdI?c e .....                 jsr     OSBYTE_91
fe/ec89: 48           ??MXdI?? e .....                 pha
fe/ec8a: 29 04        ??MXdI?? e .....                 and     #$04
fe/ec8c: f0 0e        n?MXdI?? e .....                 beq     LFEEC9C
fe/ec8e: 68           n?MXdIz? e .....                 pla
fe/ec8f: 20 e0 ec     ??MXdI?? e .....                 jsr     SOUND_CLR_QRY
fe/ec92: 20 92 e1     ??MXdI?? e .....                 jsr     OSBYTE_91
fe/ec95: 20 92 e1     ??MXdI?? e .....                 jsr     OSBYTE_91
fe/ec98: 28           ??MXdI?? e .....                 plp
fe/ec99: 4c d7 ec     ??MXd??c e ...#.                 jmp     LFEECD7

fe/ec9c: a9 02        n?MXdIZ? e ....> LFEEC9C         lda     #$02
fe/ec9e: 8d 20 a8     n?MXdIz? e .....                 sta     SOUND_STATUS_QRY
fe/eca1: 68           n?MXdIz? e .....                 pla
fe/eca2: 29 f8        ??MXdI?? e .....                 and     #$f8
fe/eca4: 0a           ??MXdI?? e .....                 asl     A
fe/eca5: 90 0b        ??MXdI?? e .....                 bcc     LFEECB2
fe/eca7: c9 f0        ??MXdI?C e .....                 cmp     #$f0
fe/eca9: d0 05        ??MXdI?? e .....                 bne     LFEECB0
fe/ecab: a9 00        ??MXdIZ? e .....                 lda     #$00
fe/ecad: 8d 20 a8     n?MXdIZ? e .....                 sta     SOUND_STATUS_QRY
fe/ecb0: a9 ff        ??MXdI?? e ....> LFEECB0         lda     #$ff
                                                       .dbank  $00
fe/ecb2: 8d 1d a8     ??MXdI?? e ....> LFEECB2         sta     $a81d
fe/ecb5: a0 01        ??MXdI?? e .....                 ldy     #$01
fe/ecb7: 8c 1e a8     n?MXdIz? e .....                 sty     $a81e
fe/ecba: 88           n?MXdIz? e .....                 dey
fe/ecbb: 8c 1a a8     ??MXdI?? e .....                 sty     SOUND_QRY_S-1
fe/ecbe: 8c 1f a8     ??MXdI?? e .....                 sty     SOUND_STATUS_QRY-1
fe/ecc1: 88           ??MXdI?? e .....                 dey
fe/ecc2: 8c 19 a8     ??MXdI?? e .....                 sty     $a819
fe/ecc5: 20 92 e1     ??MXdI?? e .....                 jsr     OSBYTE_91
fe/ecc8: 8d 18 a8     ??MXdI?? e .....                 sta     $a818
fe/eccb: 20 92 e1     ??MXdI?? e .....                 jsr     OSBYTE_91
fe/ecce: 28           ??MXdI?? e .....                 plp
fe/eccf: 48           ??MXd??c e .....                 pha
fe/ecd0: ad 18 a8     ??MXd??c e .....                 lda     $a818
fe/ecd3: 20 f2 ec     ??MXd??c e .....                 jsr     LFEECF2
fe/ecd6: 68           ??MXd??? e .....                 pla
fe/ecd7: 8d 1b a8     ??MXd??? e ....> LFEECD7         sta     SOUND_QRY_S
fe/ecda: a9 05        ??MXd??? e ....> LFEECDA         lda     #$05
fe/ecdc: 8d 1c a8     n?MXd?z? e .....                 sta     $a81c
fe/ecdf: 60           n?MXd?z? e ...#.                 rts

fe/ece0: a9 00        ??MXd??? e ....> SOUND_CLR_QRY   lda     #$00
fe/ece2: 8d 20 a8     n?MXd?Z? e .....                 sta     SOUND_STATUS_QRY
fe/ece5: a9 00        ??MXd??? e ....> LFEECE5         lda     #$00
fe/ece7: 8d 22 a8     ??MXd??? e ....> LFEECE7         sta     SOUND_QRY_X
fe/ecea: 60           ??MXd??? e ...#.                 rts

fe/eceb: 8d 1f a8     ??MXd??? e .T..> LFEECEB         sta     SOUND_STATUS_QRY-1
fe/ecee: 18           ??MXd??? e .....                 clc
fe/ecef: 6d 18 a8     ??MXd??c e .....                 adc     $a818
fe/ecf2: 48           ??MXd??? e ....> LFEECF2         pha
fe/ecf3: 29 03        ??MXd??? e .....                 and     #$03
fe/ecf5: aa           n?MXd??? e .....                 tax
fe/ecf6: ad 25 a8     ??MXd??? e .....                 lda     SOUND_CUR_CHAN_QRY
fe/ecf9: c9 04        ??MXd??? e .....                 cmp     #$04
fe/ecfb: d0 21        ??MXd??? e .....                 bne     LFEED1E
fe/ecfd: 68           ??MXd?Z? e .....                 pla
fe/ecfe: 29 04        ??MXd??? e .....                 and     #$04
fe/ed00: f0 10        n?MXd??? e .....                 beq     LFEED12
fe/ed02: 8b           n?MXd?z? e .....                 phb
fe/ed03: 4b           n?MXd?z? e .....                 phk
                                                       .dbank  K (auto)
fe/ed04: ab           n?MXd?z? e .....                 plb
fe/ed05: bd 63 ed     ??MXd??? e .....                 lda     LFEED63 & $ffff,x
fe/ed08: 8f 23 a8 00  ??MXd??? e .....                 stal    f:$00a823
fe/ed0c: bd 6b ed     ??MXd??? e .....                 lda     LFEED6B & $ffff,x
fe/ed0f: ab           ??MXd??? e .....                 plb
fe/ed10: 80 d5        ??MXd??? e ...#.                 bra     LFEECE7

fe/ed12: 8b           n?MXd?Z? e ....> LFEED12         phb
fe/ed13: 4b           n?MXd?Z? e .....                 phk
                                                       .dbank  K (auto)
fe/ed14: ab           n?MXd?Z? e .....                 plb
fe/ed15: bd 67 ed     ??MXd??? e .....                 lda     LFEED67 & $ffff,x
fe/ed18: ab           ??MXd??? e .....                 plb
fe/ed19: 8d 21 a8     ??MXd??? e .....                 sta     $a821
fe/ed1c: 80 c7        ??MXd??? e ...#.                 bra     LFEECE5

fe/ed1e: e8           ??MXd?z? e ....> LFEED1E         inx
fe/ed1f: a9 00        ??MXd??? e .....                 lda     #$00
fe/ed21: 8d 21 a8     n?MXd?Z? e .....                 sta     $a821
fe/ed24: 68           n?MXd?Z? e .....                 pla
fe/ed25: 4a           ??MXd??? e .....                 lsr     A
fe/ed26: 4a           n?MXd??? e .....                 lsr     A
fe/ed27: c9 0c        ??MXd??? e ....> LFEED27         cmp     #$0c
fe/ed29: 90 07        ??MXd??? e .....                 bcc     LFEED32
fe/ed2b: ee 21 a8     ??MXd??C e .....                 inc     $a821
fe/ed2e: e9 0c        ??MXd??C e .....                 sbc     #$0c
fe/ed30: d0 f5        ??MXd??? e .....                 bne     LFEED27
fe/ed32: a8           ??MXd??? e ....> LFEED32         tay
fe/ed33: ad 21 a8     ??MXd??? e .....                 lda     $a821
fe/ed36: 48           ??MXd??? e .....                 pha
fe/ed37: 8b           ??MXd??? e .....                 phb
fe/ed38: 4b           ??MXd??? e .....                 phk
                                                       .dbank  K (auto)
fe/ed39: ab           ??MXd??? e .....                 plb
fe/ed3a: b9 57 ed     ??MXd??? e .....                 lda     0+(LFEED59 & $ffff)-2,y
                                                       .dbank  $00
fe/ed3d: ab           ??MXd??? e .....                 plb
fe/ed3e: c0 07        ??MXd??? e ....> LFEED3E         cpy     #$07
fe/ed40: e9 02        ??MXd??? e .....                 sbc     #$02
fe/ed42: ca           ??MXd??? e .....                 dex
fe/ed43: d0 f9        ??MXd??? e .....                 bne     LFEED3E
fe/ed45: 8d 21 a8     ??MXd?Z? e .....                 sta     SOUND_TONE_QRY
fe/ed48: 68           ??MXd?Z? e .....                 pla
fe/ed49: a8           ??MXd??? e .....                 tay
fe/ed4a: f0 06        ??MXd??? e .....                 beq     LFEED52
fe/ed4c: 4e 21 a8     ??MXd?z? e ....> LFEED4C         lsr     SOUND_TONE_QRY
fe/ed4f: 88           n?MXd??? e .....                 dey
fe/ed50: d0 fa        ??MXd??? e .....                 bne     LFEED4C
fe/ed52: ce 21 a8     ??MXd?Z? e ....> LFEED52         dec     SOUND_TONE_QRY
fe/ed55: d0 8e        ??MXd??? e .....                 bne     LFEECE5
fe/ed57: 00 f0        ??MXd?Z? e ...#.                 brk     $f0

fe/ed59: e3                      ..... LFEED59         .dd1    $e3
fe/ed5a: d6                      .....                 .dd1    $d6
fe/ed5b: cb                      .....                 .dd1    $cb
fe/ed5c: bf                      .....                 .dd1    $bf
fe/ed5d: b5                      .....                 .dd1    $b5
fe/ed5e: aa                      .....                 .dd1    $aa
fe/ed5f: a0                      .....                 .dd1    $a0
fe/ed60: 97                      .....                 .dd1    $97
fe/ed61: 8f                      .....                 .dd1    $8f
fe/ed62: 87                      .....                 .dd1    $87
fe/ed63: 40                      ..... LFEED63         .dd1    $40
fe/ed64: 80                      .....                 .dd1    $80
fe/ed65: c0                      .....                 .dd1    $c0
fe/ed66: 80                      .....                 .dd1    $80
fe/ed67: 3b                      ..... LFEED67         .dd1    $3b
fe/ed68: 76                      .....                 .dd1    $76
fe/ed69: f0                      .....                 .dd1    $f0
fe/ed6a: 76                      .....                 .dd1    $76
fe/ed6b: 7f                      ..... LFEED6B         .dd1    $7f
fe/ed6c: ff                      .....                 .dd1    $ff
fe/ed6d: ff                      .....                 .dd1    $ff
fe/ed6e: ff                      .....                 .dd1    $ff
fe/ed6f: 60                      .....                 .dd1    $60
fe/ed70: 02                      .....                 .dd1    $02
fe/ed71: 0f                      .....                 .dd1    $0f
fe/ed72: 75                      .....                 .dd1    $75
fe/ed73: 73                      .....                 .dd1    $73
fe/ed74: 65                      .....                 .dd1    $65
fe/ed75: 20                      .....                 .dd1    $20
fe/ed76: 43                      .....                 .dd1    $43
fe/ed77: 4f                      .....                 .dd1    $4f
fe/ed78: 50                      .....                 .dd1    $50
fe/ed79: 20                      .....                 .dd1    $20
fe/ed7a: 6e                      .....                 .dd1    $6e
fe/ed7b: 6f                      .....                 .dd1    $6f
fe/ed7c: 74                      .....                 .dd1    $74
fe/ed7d: 20                      .....                 .dd1    $20
fe/ed7e: 63                      .....                 .dd1    $63
fe/ed7f: 61                      .....                 .dd1    $61
fe/ed80: 6c                      .....                 .dd1    $6c
fe/ed81: 6c                      .....                 .dd1    $6c
fe/ed82: 20                      .....                 .dd1    $20
fe/ed83: 74                      .....                 .dd1    $74
fe/ed84: 6f                      .....                 .dd1    $6f
fe/ed85: 20                      .....                 .dd1    $20
fe/ed86: 61                      .....                 .dd1    $61
fe/ed87: 62                      .....                 .dd1    $62
fe/ed88: 73                      .....                 .dd1    $73
fe/ed89: 6f                      .....                 .dd1    $6f
fe/ed8a: 6c                      .....                 .dd1    $6c
fe/ed8b: 75                      .....                 .dd1    $75
fe/ed8c: 74                      .....                 .dd1    $74
fe/ed8d: 65                      .....                 .dd1    $65
fe/ed8e: 20                      .....                 .dd1    $20
fe/ed8f: 61                      .....                 .dd1    $61
fe/ed90: 64                      .....                 .dd1    $64
fe/ed91: 64                      .....                 .dd1    $64
fe/ed92: 72                      .....                 .dd1    $72
fe/ed93: 65                      .....                 .dd1    $65
fe/ed94: 73                      .....                 .dd1    $73
fe/ed95: 73                      .....                 .dd1    $73
fe/ed96: 00                      .....                 .dd1    $00

fe/ed97: 02 06        ???????? e @T... default__OSB    cop     COP_06_OPOSB
fe/ed99: 6b           ???????? e ...#.                 rtl

fe/ed9a: 02 07        ???????? e @T... default__OSW    cop     COP_07_OPOSW
fe/ed9c: 6b           ???????? e ...#.                 rtl

                                                       .rwid   longx
fe/ed9d: 02 0a        N?Mxd?z? e ....> default__BGET   cop     COP_0A_OPBGT
fe/ed9f: 60           N?Mxd?z? e ...#.                 rts

                                                       .rwid   shortx
fe/eda0: 02 0b        ??MXd??? e @T... default__BPUT   cop     COP_0B_OPBPUT
fe/eda2: 60           ??MXd??? e ...#.                 rts

fe/eda3: 02 0f        ??MXd??? e @T... syserrorTestEsc cop     COP_0F_OPERR
fe/eda5: 75 73 65 20+            .T...                 .zstr   “use TESTESC in $.I.SYSTEM not XXOSESC”
                                       ********************************************************************************
                                       * FFB0 - EV - ????                                                             *
                                       *                                                                              *
                                       * Well known entry point not documented in Systems Documentation               *
                                       *                                                                              *
                                       * Given an even mask in A test escape/preempt status                           *
                                       ********************************************************************************
fe/edcb: 08           ???????? e .T... default__EV     php
fe/edcc: c2 20        ???????? e .....                 rep     #$20
                                                       .rwid   longm
fe/edce: 48           ??m????? e .....                 pha
fe/edcf: 29 fc 00     ??m????? e .....                 and     #$00fc
fe/edd2: f0 24        n?m????? e .....                 beq     @ok
fe/edd4: 02 0f        n?m???z? e .....                 cop     COP_0F_OPERR
fe/edd6: 69 6e 76 61+            .T...                 .zstr   “invalid A contents in call to `EV”
fe/edf8: 68           n?m????? e ....> @ok             pla
fe/edf9: 2f 13 ff 00  ??m????? e .....                 andl    f:SYS_ESCAPE_FLAG_QRY
fe/edfd: c9 01 00     ??m????? e .....                 cmp     #__EVESC
fe/ee00: 90 04        ??m????? e .....                 bcc     @retCCPL
fe/ee02: 28           ??m????C e .....                 plp
                                                       .rwid   shortm
fe/ee03: e2 81        ???????? e .....                 sep     #$81
fe/ee05: 6b           N??????C e ...#.                 rtl

                                                       .rwid   longm
fe/ee06: 28           ??m????c e ....> @retCCPL        plp
                                                       .rwid   shortm
fe/ee07: 18           ???????? e .....                 clc
fe/ee08: c2 81        ???????c e .....                 rep     #$81
fe/ee0a: 6b           n??????c e ...#.                 rtl

                                       ; TODO: dead code?
fe/ee0b: 60           ??MXd??? e .T.#> LFEEE0B_rts     rts

fe/ee0c: a2 0c        ??MXd??? e @T... starEXEC        ldx     #$0c              ;GSINIT
fe/ee0e: 22 88 ff 00  n?MXd?z? e .....                 jsl     __ST
fe/ee12: 80 01        ??MXd??? e ...#.                 bra     closeEXEC2

                                       ********************************************************************************
                                       * OSBYTE 77 - close all EXEC / SPOOL files                                     *
                                       ********************************************************************************
fe/ee14: 38           ??MXd??? e .T..> OSBYTE_77       sec
fe/ee15: 08           ??MXd??? e ....> closeEXEC2      php
fe/ee16: c2 10        ??MXd??? e .....                 rep     #$10
                                                       .rwid   longx
fe/ee18: e2 20        ??Mxd??? e .....                 sep     #$20
fe/ee1a: 08           ??Mxd??? e .....                 php
fe/ee1b: 5a           ??Mxd??? e .....                 phy
fe/ee1c: a2 00 00     ??Mxd??? e .....                 ldx     #$0000
fe/ee1f: a4 d1        n?Mxd?Z? e .....                 ldy     <DPSYS_D1_EXEC_handle
fe/ee21: 86 d1        ??Mxd??? e .....                 stx     <DPSYS_D1_EXEC_handle
fe/ee23: f0 02        ??Mxd??? e .....                 beq     LFEEE27
fe/ee25: 02 45        ??Mxd?z? e .....                 cop     COP_45_OPCLS
fe/ee27: 7a           ??Mxd??? e ....> LFEEE27         ply
fe/ee28: 28           ??Mxd??? e .....                 plp
fe/ee29: b0 13        ??Mxd??? e .....                 bcs     LFEEE3E
fe/ee2b: a2 1c 00     ??Mxd??c e .....                 ldx     #$001c
fe/ee2e: 22 88 ff 00  n?Mxd?zc e .....                 jsl     __ST              ;Get BHA pointer to first character of filename
fe/ee32: a0 40 00     ??Mxd??? e .....                 ldy     #$0040
fe/ee35: 02 44        n?Mxd?z? e .....                 cop     COP_44_OPOPN
fe/ee37: 90 03        n?Mxd?z? e .....                 bcc     LFEEE3C
fe/ee39: a0 00 00     n?Mxd?zC e .....                 ldy     #$0000
fe/ee3c: 84 d1        n?Mxd??? e ....> LFEEE3C         sty     <DPSYS_D1_EXEC_handle
fe/ee3e: 90 03        ??Mxd??? e ....> LFEEE3E         bcc     LFEEE43
fe/ee40: 28           ??Mxd??C e .....                 plp
fe/ee41: 38           ??Mxd??C e .....                 sec
fe/ee42: 60           ??Mxd??C e ...#.                 rts

fe/ee43: 28           ??Mxd??c e ....> LFEEE43         plp
fe/ee44: 18           ??Mxd??? e .....                 clc
fe/ee45: 60           ??Mxd??c e ...#.                 rts

                                                       .rwid   shortx
fe/ee46: 60           ??MXdI?? e ...#> LFEEE46         rts

fe/ee47: 60           n???d?z? e ...#> donothingRTS    rts

fe/ee48: 82 09 00     ??MXdI?? e ...#> LFEEE48         brl     LFEEE54           ;todo: remove?

                                                       .rwid   longm,longx
fe/ee4b: 82 e2 02     n?mxd?Z? e ...#> brlFindModule   brl     findModule        ;todo: remove?

fe/ee4e: 82 a1 02     ??mxd??? e .T.#> brlGetModCallRef brl    getModCallRef     ;todo: remove?

fe/ee51: 82 89 03     ??mxd??c e ...#> LFEEE51         brl     getOrCreateModCallBlock ;todo: remove?

                                                       .rwid   shortm,shortx
fe/ee54: 08           ??MXdI?? e ....> LFEEE54         php
fe/ee55: 0b           ??MXdI?? e .....                 phd
fe/ee56: 8b           ??MXdI?? e .....                 phb
fe/ee57: c2 30        ??MXdI?? e .....                 rep     #$30
                                                       .rwid   longm,longx
fe/ee59: f4 00 00     ??mxdI?? e .....                 pea     $0000
fe/ee5c: 4b           ??mxdI?? e .....                 phk
fe/ee5d: 4b           ??mxdI?? e .....                 phk
fe/ee5e: f4 00 ae     ??mxdI?? e .....                 pea     LFEAE00 & $ffff
fe/ee61: 62 80 02     ??mxdI?? e .....                 per     LFEF0E4
fe/ee64: 3b           ??mxdI?? e .....                 tsc
fe/ee65: 5b           ??mxdI?? e .....                 tcd
fe/ee66: fa           ??mxdI?? e .....                 plx
fe/ee67: da           ??mxdI?? e .....                 phx
fe/ee68: 4b           ??mxdI?? e .....                 phk
                                                       .dbank  K (auto)
fe/ee69: ab           ??mxdI?? e .....                 plb
fe/ee6a: 10 03        ??mxdI?? e .....                 bpl     LFEEE6F
fe/ee6c: a2 ea f0     N?mxdI?? e .....                 ldx     #$f0ea
fe/ee6f: 20 9d ef     n?mxdI?? e ....> LFEEE6F         jsr     LFEEF9D
fe/ee72: af 0e fe 00  ??mxdI?? e .....                 ldal    f:B0LST_MODULES_QRY
fe/ee76: aa           ??mxdI?? e .....                 tax
fe/ee77: bf 07 00 00  ??mxdI?? e .....                 ldal    f:DPCOP_B,x
fe/ee7b: f0 0c        ??mxdI?? e .....                 beq     LFEEE89
fe/ee7d: a8           ??mxdIz? e .....                 tay
fe/ee7e: 20 da ce     ??mxdI?? e .....                 jsr     getHandleYinDP
fe/ee81: af 0e fe 00  ??mxdI?? e .....                 ldal    f:B0LST_MODULES_QRY
fe/ee85: 9f 08 00 00  ??mxdI?? e .....                 stal    f:DPCOP_DP,x
fe/ee89: a9 00 00     ??mxdI?? e ....> LFEEE89         lda     #$0000
fe/ee8c: 85 03        n?mxdIZ? e .....                 sta     DPCOP_X
fe/ee8e: 85 05        n?mxdIZ? e .....                 sta     DPCOP_AH
fe/ee90: fa           n?mxdIZ? e .....                 plx
fe/ee91: da           ??mxdI?? e .....                 phx
fe/ee92: bd 04 00     ??mxdI?? e .....                 lda     a:$0004,x
fe/ee95: 85 07        ??mxdI?? e .....                 sta     DPCOP_B
fe/ee97: bd 02 00     ??mxdI?? e .....                 lda     a:$0002,x
fe/ee9a: 85 04        ??mxdI?? e .....                 sta     DPCOP_X+1
fe/ee9c: c9 00 01     ??mxdI?? e .....                 cmp     #$0100
fe/ee9f: b0 1d        ??mxdI?? e .....                 bcs     LFEEEBE
fe/eea1: 8b           ??mxdI?c e .....                 phb
fe/eea2: a8           ??mxdI?c e .....                 tay
fe/eea3: a2 0e 00     ??mxdI?c e .....                 ldx     #$000e
fe/eea6: 22 8c ff 00  n?mxdIzc e .....                 jsl     __MM
fe/eeaa: 8b           ??mxdI?? e .....                 phb
fe/eeab: 48           ??mxdI?? e .....                 pha
fe/eeac: ab           ??mxdI?? e .....                 plb
fe/eead: 68           ??mxdI?? e .....                 pla
fe/eeae: 85 04        ??mxdI?? e .....                 sta     DPCOP_X+1
fe/eeb0: a2 12 00     ??mxdI?? e .....                 ldx     #$0012
fe/eeb3: 22 8c ff 00  n?mxdIz? e .....                 jsl     __MM
fe/eeb7: 8b           ??mxdI?? e .....                 phb
fe/eeb8: 48           ??mxdI?? e .....                 pha
fe/eeb9: ab           ??mxdI?? e .....                 plb
fe/eeba: 68           ??mxdI?? e .....                 pla
fe/eebb: 85 07        ??mxdI?? e .....                 sta     DPCOP_B
fe/eebd: ab           ??mxdI?? e .....                 plb
fe/eebe: 20 2d ef     ??mxdI?? e ....> LFEEEBE         jsr     LFEEF2D
fe/eec1: b0 30        ??mxdI?? e .....                 bcs     LFEEEF3
fe/eec3: fa           ??mxdI?c e .....                 plx
fe/eec4: da           ??mxdI?c e .....                 phx
fe/eec5: 20 9d ef     ??mxdI?c e .....                 jsr     LFEEF9D
fe/eec8: 8b           ??mxdI?? e .....                 phb
fe/eec9: 02 26        ??mxdI?? e .....                 cop     COP_26_OPBHA
fe/eecb: 4d 4f 53 00             .T...                 .zstr   “MOS”
fe/eecf: a2 00 00     ??mxdI?? e .....                 ldx     #$0000
fe/eed2: 9b           n?mxdIZ? e .....                 txy
fe/eed3: 02 34        ??mxdI?? e .....                 cop     COP_34_OPRMI
fe/eed5: b0 14        ??mxdI?? e .....                 bcs     LFEEEEB
fe/eed7: 8b           ??mxdI?c e .....                 phb
fe/eed8: 8b           ??mxdI?c e .....                 phb
fe/eed9: 48           ??mxdI?c e .....                 pha
fe/eeda: 62 23 bf     ??mxdI?c e .....                 per     LFEAE00
fe/eedd: 68           ??mxdI?c e .....                 pla
fe/eede: c3 01        ??mxdI?c e .....                 cmp     $01,S
fe/eee0: d0 0c        ??mxdI?? e .....                 bne     LFEEEEE
fe/eee2: 4b           ??mxdIZ? e .....                 phk
fe/eee3: 4b           ??mxdIZ? e .....                 phk
fe/eee4: 68           ??mxdIZ? e .....                 pla
fe/eee5: c3 03        ??mxdI?? e .....                 cmp     $03,S
fe/eee7: d0 05        ??mxdI?? e .....                 bne     LFEEEEE
fe/eee9: 68           ??mxdIZ? e .....                 pla
fe/eeea: 68           ??mxdI?? e .....                 pla
fe/eeeb: ab           ??mxdI?? e ....> LFEEEEB         plb
fe/eeec: 80 d0        ??mxdI?? e ...#.                 bra     LFEEEBE

fe/eeee: a2 02 00     ??mxdIz? e ....> LFEEEEE         ldx     #$0002
fe/eef1: 08           n?mxdIz? e .....                 php
fe/eef2: 40           n?mxdIz? e ...#.                 rti

fe/eef3: fa           ??mxdI?C e ....> LFEEEF3         plx
fe/eef4: da           ??mxdI?C e .....                 phx
fe/eef5: bd 00 00     ??mxdI?C e .....                 lda     a:$0000,x
fe/eef8: 3a           ??mxdI?C e .....                 dec     A
fe/eef9: 49 ff ff     ??mxdI?C e .....                 eor     #$ffff
fe/eefc: 25 03        ??mxdI?C e .....                 and     DPCOP_X
fe/eefe: 18           ??mxdI?C e .....                 clc
fe/eeff: 7d 00 00     ??mxdI?c e .....                 adc     a:$0000,x
fe/ef02: 85 03        ??mxdI?? e .....                 sta     DPCOP_X
fe/ef04: a5 05        ??mxdI?? e .....                 lda     DPCOP_AH
fe/ef06: 69 00 00     ??mxdI?? e .....                 adc     #$0000
fe/ef09: 85 05        ??mxdI?? e .....                 sta     DPCOP_AH
fe/ef0b: 89 00 ff     ??mxdI?? e .....                 bit     #$ff00
fe/ef0e: d0 06        ??mxdI?? e .....                 bne     LFEEF16
fe/ef10: a5 04        ??mxdIZ? e .....                 lda     DPCOP_X+1
fe/ef12: c5 07        ??mxdI?? e .....                 cmp     DPCOP_B
fe/ef14: 90 a8        ??mxdI?? e .....                 bcc     LFEEEBE
fe/ef16: 68           ??mxdI?? e ....> LFEEF16         pla
fe/ef17: 18           ??mxdI?? e .....                 clc
fe/ef18: 69 06 00     ??mxdI?c e .....                 adc     #$0006
fe/ef1b: 48           ??mxdI?? e .....                 pha
fe/ef1c: aa           ??mxdI?? e .....                 tax
fe/ef1d: bd 00 00     ??mxdI?? e .....                 lda     a:$0000,x
fe/ef20: f0 03        ??mxdI?? e .....                 beq     LFEEF25
fe/ef22: 82 64 ff     ??mxdIz? e ...#.                 brl     LFEEE89

fe/ef25: 2b           ??mxdIZ? e ....> LFEEF25         pld
fe/ef26: 2b           ??mxdI?? e .....                 pld
fe/ef27: 2b           ??mxdI?? e .....                 pld
fe/ef28: 2b           ??mxdI?? e .....                 pld
fe/ef29: ab           ??mxdI?? e .....                 plb
fe/ef2a: 2b           ??mxdI?? e .....                 pld
fe/ef2b: 28           ??mxdI?? e .....                 plp
fe/ef2c: 6b           n?mxdIz? e ...#.                 rtl

fe/ef2d: a0 00 00     ??mxd??? e ....> LFEEF2D         ldy     #$0000
fe/ef30: b7 03        n?mxd?Z? e .....                 lda     [DPCOP_X],y
fe/ef32: 29 ff 00     ??mxd??? e .....                 and     #$00ff
fe/ef35: cd e1 f0     n?mxd??? e .....                 cmp     LFEF0E1 & $ffff
fe/ef38: f0 03        ??mxd??? e .....                 beq     LFEEF3D
fe/ef3a: 82 5e 00     ??mxd?z? e ...#.                 brl     LFEEF9B

fe/ef3d: a0 05 00     ??mxd?Z? e ....> LFEEF3D         ldy     #$0005
fe/ef40: b7 03        n?mxd?z? e .....                 lda     [DPCOP_X],y
fe/ef42: 29 ff 00     ??mxd??? e .....                 and     #$00ff
fe/ef45: d0 54        n?mxd??? e .....                 bne     LFEEF9B
fe/ef47: a0 03 00     n?mxd?Z? e .....                 ldy     #$0003
fe/ef4a: b7 03        n?mxd?z? e .....                 lda     [DPCOP_X],y
fe/ef4c: 38           ??mxd??? e .....                 sec
fe/ef4d: e9 03 00     ??mxd??C e .....                 sbc     #$0003
fe/ef50: 90 49        ??mxd??? e .....                 bcc     LFEEF9B
fe/ef52: a0 01 00     ??mxd??C e .....                 ldy     #$0001
fe/ef55: d7 03        n?mxd?zC e .....                 cmp     [DPCOP_X],y
fe/ef57: 90 42        ??mxd??? e .....                 bcc     LFEEF9B
fe/ef59: a0 0e 00     ??mxd??C e .....                 ldy     #$000e
fe/ef5c: b7 03        n?mxd?zC e .....                 lda     [DPCOP_X],y
fe/ef5e: 20 f7 f4     ??mxd??C e .....                 jsr     checkValidModnameChar
fe/ef61: b0 38        ??mxd??? e .....                 bcs     LFEEF9B
fe/ef63: b7 03        ??mxd??c e ....> LFEEF63         lda     [DPCOP_X],y
fe/ef65: 29 ff 00     ??mxd??c e .....                 and     #$00ff
fe/ef68: f0 0a        n?mxd??c e .....                 beq     LFEEF74
fe/ef6a: 20 bf f0     n?mxd?zc e .....                 jsr     LFEF0BF
fe/ef6d: b0 2c        ??mxd??? e .....                 bcs     LFEEF9B
fe/ef6f: c8           ??mxd??c e .....                 iny
fe/ef70: f0 29        ??mxd??c e .....                 beq     LFEEF9B
fe/ef72: 80 ef        ??mxd?zc e ...#.                 bra     LFEEF63

fe/ef74: 98           n?mxd?Zc e ....> LFEEF74         tya
fe/ef75: a0 03 00     ??mxd??c e .....                 ldy     #$0003
fe/ef78: d7 03        n?mxd?zc e .....                 cmp     [DPCOP_X],y
fe/ef7a: b0 1f        ??mxd??? e .....                 bcs     LFEEF9B
fe/ef7c: a0 03 00     ??mxd??c e .....                 ldy     #$0003
fe/ef7f: b7 03        n?mxd?zc e .....                 lda     [DPCOP_X],y
fe/ef81: 18           ??mxd??c e .....                 clc
fe/ef82: 65 03        ??mxd??c e .....                 adc     DPCOP_X
fe/ef84: 69 02 00     ??mxd??? e .....                 adc     #$0002
fe/ef87: b0 12        ??mxd??? e .....                 bcs     LFEEF9B
fe/ef89: a0 03 00     ??mxd??c e .....                 ldy     #$0003
fe/ef8c: b7 03        n?mxd?zc e .....                 lda     [DPCOP_X],y
fe/ef8e: a8           ??mxd??c e .....                 tay
fe/ef8f: 8b           ??mxd??c e .....                 phb
fe/ef90: d4 04        ??mxd??c e .....                 pei     (DPCOP_X+1)
fe/ef92: ab           ??mxd??c e .....                 plb
fe/ef93: ab           ??mxd??c e .....                 plb
fe/ef94: d4 03        ??mxd??c e .....                 pei     (DPCOP_X)
fe/ef96: 68           ??mxd??c e .....                 pla
fe/ef97: 02 32        ??mxd??c e .....                 cop     COP_32_OPSUM
fe/ef99: ab           ??mxd??c e .....                 plb
fe/ef9a: 60           ??mxd??c e ...#.                 rts

fe/ef9b: 38           ??mxd??? e ....> LFEEF9B         sec
fe/ef9c: 60           ??mxd??C e ...#.                 rts

fe/ef9d: 20 67 f0     ??mxd??? e ....> LFEEF9D         jsr     LFEF067
fe/efa0: 90 03        ??mxd??? e .....                 bcc     LFEEFA5
fe/efa2: 82 98 00     ??mxd??C e ...#.                 brl     LFEF03D

fe/efa5: 48           ??mxd??c e ....> LFEEFA5         pha
fe/efa6: bd 02 00     ??mxd??c e .....                 lda     a:$0002,x
fe/efa9: c9 00 01     ??mxd??c e .....                 cmp     #$0100
fe/efac: a0 00 00     ??mxd??? e .....                 ldy     #$0000
fe/efaf: b0 20        n?mxd?Z? e .....                 bcs     LFEEFD1
fe/efb1: 0b           n?mxd?Zc e .....                 phd
fe/efb2: 8b           n?mxd?Zc e .....                 phb
fe/efb3: a0 03 00     n?mxd?Zc e .....                 ldy     #$0003
fe/efb6: b7 03        n?mxd?zc e .....                 lda     [DPCOP_X],y
fe/efb8: 48           ??mxd??c e .....                 pha
fe/efb9: 1a           ??mxd??c e .....                 inc     A
fe/efba: 1a           ??mxd??c e .....                 inc     A
fe/efbb: bd 02 00     ??mxd??c e .....                 lda     a:$0002,x
fe/efbe: a8           ??mxd??c e .....                 tay
fe/efbf: d4 04        ??mxd??c e .....                 pei     (DPCOP_X+1)
fe/efc1: ab           ??mxd??c e .....                 plb
fe/efc2: ab           ??mxd??c e .....                 plb
fe/efc3: a5 03        ??mxd??c e .....                 lda     DPCOP_X
fe/efc5: 2b           ??mxd??c e .....                 pld
fe/efc6: a2 04 00     ??mxd??c e .....                 ldx     #$0004
fe/efc9: 22 8c ff 00  n?mxd?zc e .....                 jsl     __MM
fe/efcd: ab           ??mxd??? e .....                 plb
fe/efce: 2b           ??mxd??? e .....                 pld
fe/efcf: b0 6c        ??mxd??? e .....                 bcs     LFEF03D
fe/efd1: fa           ??mxd??? e ....> LFEEFD1         plx
fe/efd2: f0 15        ??mxd??? e .....                 beq     LFEEFE9
fe/efd4: bf 07 00 00  ??mxd?z? e .....                 ldal    f:DPCOP_B,x
fe/efd8: f0 0c        ??mxd??? e .....                 beq     LFEEFE6
fe/efda: da           ??mxd?z? e .....                 phx
fe/efdb: 5a           ??mxd?z? e .....                 phy
fe/efdc: a8           ??mxd?z? e .....                 tay
fe/efdd: a2 02 00     ??mxd??? e .....                 ldx     #$0002
fe/efe0: 22 8c ff 00  n?mxd?z? e .....                 jsl     __MM
fe/efe4: 7a           ??mxd??? e .....                 ply
fe/efe5: fa           ??mxd??? e .....                 plx
fe/efe6: 38           ??mxd??? e ....> LFEEFE6         sec
fe/efe7: 80 08        ??mxd??C e ...#.                 bra     LFEEFF1

fe/efe9: a9 0c 00     ??mxd?Z? e ....> LFEEFE9         lda     #HND_type_C_CBMOD
fe/efec: 20 01 ce     n?mxd?z? e .....                 jsr     obtainFreeBlock
fe/efef: b0 42        ??mxd??? e .....                 bcs     LFEF033
fe/eff1: a5 04        ??mxd??? e ....> LFEEFF1         lda     DPCOP_X+1
fe/eff3: 9f 05 00 00  ??mxd??? e .....                 stal    f:DPCOP_AH,x
fe/eff7: a5 03        ??mxd??? e .....                 lda     DPCOP_X
fe/eff9: 9f 04 00 00  ??mxd??? e .....                 stal    f:DPCOP_X+1,x
fe/effd: 98           ??mxd??? e .....                 tya
fe/effe: 9f 07 00 00  ??mxd??? e .....                 stal    f:DPCOP_B,x
fe/f002: b0 2c        ??mxd??? e .....                 bcs     LFEF030
fe/f004: 8b           ??mxd??c e .....                 phb
fe/f005: da           ??mxd??c e .....                 phx
fe/f006: bf 05 00 00  ??mxd??c e .....                 ldal    f:DPCOP_AH,x
fe/f00a: 48           ??mxd??c e .....                 pha
fe/f00b: ab           ??mxd??c e .....                 plb
fe/f00c: ab           ??mxd??c e .....                 plb
fe/f00d: bf 04 00 00  ??mxd??c e .....                 ldal    f:DPCOP_X+1,x
fe/f011: 18           ??mxd??c e .....                 clc
fe/f012: 69 0e 00     ??mxd??c e .....                 adc     #$000e
fe/f015: a2 00 00     ??mxd??? e .....                 ldx     #$0000
fe/f018: a0 00 00     n?mxd?Z? e .....                 ldy     #$0000
fe/f01b: 4b           n?mxd?Z? e .....                 phk
fe/f01c: 20 31 f2     n?mxd?Z? e .....                 jsr     LFEF231
fe/f01f: bb           ??mxd??? e .....                 tyx
fe/f020: bf 00 00 00  ??mxd??? e .....                 ldal    f:$000000,x
fe/f024: fa           ??mxd??? e .....                 plx
fe/f025: 9f 00 00 00  ??mxd??? e .....                 stal    f:$000000,x
fe/f029: 8a           ??mxd??? e .....                 txa
fe/f02a: bb           ??mxd??? e .....                 tyx
fe/f02b: 9f 00 00 00  ??mxd??? e .....                 stal    f:$000000,x
fe/f02f: ab           ??mxd??? e .....                 plb
fe/f030: 18           ??mxd??? e ....> LFEF030         clc
fe/f031: 80 0b        ??mxd??c e ...#.                 bra     LFEF03E

fe/f033: 98           ??mxd??C e ....> LFEF033         tya
fe/f034: f0 07        ??mxd??C e .....                 beq     LFEF03D
fe/f036: a2 02 00     ??mxd?zC e .....                 ldx     #$0002
fe/f039: 22 8c ff 00  n?mxd?zC e .....                 jsl     __MM
fe/f03d: 38           ??mxd??? e ....> LFEF03D         sec
fe/f03e: 08           ??mxd??? e ....> LFEF03E         php
fe/f03f: a0 03 00     ??mxd??? e .....                 ldy     #$0003
fe/f042: b7 03        n?mxd?z? e .....                 lda     [DPCOP_X],y
fe/f044: 18           ??mxd??? e .....                 clc
fe/f045: 65 03        ??mxd??c e .....                 adc     DPCOP_X
fe/f047: 48           ??mxd??? e .....                 pha
fe/f048: c8           ??mxd??? e .....                 iny
fe/f049: c8           ??mxd??? e .....                 iny
fe/f04a: b7 03        ??mxd??? e .....                 lda     [DPCOP_X],y
fe/f04c: 29 ff 00     ??mxd??? e .....                 and     #$00ff
fe/f04f: 65 05        n?mxd??? e .....                 adc     DPCOP_AH
fe/f051: 85 05        ??mxd??? e .....                 sta     DPCOP_AH
fe/f053: 68           ??mxd??? e .....                 pla
fe/f054: 85 03        ??mxd??? e .....                 sta     DPCOP_X
fe/f056: a5 03        ??mxd??? e .....                 lda     DPCOP_X
fe/f058: 18           ??mxd??? e .....                 clc
fe/f059: 69 02 00     ??mxd??c e .....                 adc     #$0002
fe/f05c: 85 03        ??mxd??? e .....                 sta     DPCOP_X
fe/f05e: a5 05        ??mxd??? e .....                 lda     DPCOP_AH
fe/f060: 69 00 00     ??mxd??? e .....                 adc     #$0000
fe/f063: 85 05        ??mxd??? e .....                 sta     DPCOP_AH
fe/f065: 28           ??mxd??? e .....                 plp
fe/f066: 60           ??mxd??? e ...#.                 rts

fe/f067: 08           ??mxd??? e ....> LFEF067         php
fe/f068: 0b           ??mxd??? e .....                 phd
fe/f069: 8b           ??mxd??? e .....                 phb
fe/f06a: da           ??mxd??? e .....                 phx
fe/f06b: f4 0e fe     ??mxd??? e .....                 pea     B0LST_MODULES_QRY
                                                       .rwid   shortm
fe/f06e: c2 20        ???xd??? e ....> LFEF06E         rep     #$20
                                                       .rwid   longm
fe/f070: fa           ??mxd??? e .....                 plx
fe/f071: bf 00 00 00  ??mxd??? e .....                 ldal    f:$000000,x
fe/f075: c9 0e fe     ??mxd??? e .....                 cmp     #$fe0e
fe/f078: f0 39        ??mxd??? e .....                 beq     LFEF0B3
fe/f07a: 48           ??mxd?z? e .....                 pha
fe/f07b: 20 c3 f1     ??mxd?z? e .....                 jsr     getModCallBlock
fe/f07e: 5b           ??mxd??? e .....                 tcd
fe/f07f: e2 20        ??mxd??? e .....                 sep     #$20
                                                       .rwid   shortm
fe/f081: a3 11        ??Mxd??? e .....                 lda     $11,S
fe/f083: 48           ??Mxd??? e .....                 pha
fe/f084: ab           ??Mxd??? e .....                 plb
fe/f085: a0 0d 00     ??Mxd??? e .....                 ldy     #$000d
fe/f088: c8           ??Mxd??? e ....> LFEF088         iny
fe/f089: b7 00        ??Mxd??? e .....                 lda     [$00],y
fe/f08b: 20 f7 f4     ??Mxd??? e .....                 jsr     checkValidModnameChar
fe/f08e: b0 08        ??Mxd??? e .....                 bcs     LFEF098
fe/f090: 53 0f        ??Mxd??c e .....                 eor     ($0f,S),y
fe/f092: 29 df        ??Mxd??c e .....                 and     #$df
fe/f094: d0 d8        ??Mxd??c e .....                 bne     LFEF06E
fe/f096: 80 f0        ??Mxd?Zc e ...#.                 bra     LFEF088

fe/f098: b3 0f        ??Mxd??C e ....> LFEF098         lda     ($0f,S),y
fe/f09a: 20 f7 f4     ??Mxd??C e .....                 jsr     checkValidModnameChar
fe/f09d: 90 cf        ??Mxd??? e .....                 bcc     LFEF06E
fe/f09f: a0 06 00     ??Mxd??C e .....                 ldy     #$0006
fe/f0a2: c2 20        n?Mxd?zC e .....                 rep     #$20
                                                       .rwid   longm
fe/f0a4: b7 00        n?mxd?zC e .....                 lda     [$00],y
fe/f0a6: d3 0f        ??mxd??C e .....                 cmp     ($0f,S),y
fe/f0a8: e2 20        ??mxd??? e .....                 sep     #$20
                                                       .rwid   shortm
fe/f0aa: 90 0a        ??Mxd??? e .....                 bcc     LFEF0B6
fe/f0ac: 2b           ??Mxd??C e .....                 pld
fe/f0ad: fa           ??Mxd??C e .....                 plx
fe/f0ae: ab           ??Mxd??C e .....                 plb
fe/f0af: 2b           ??Mxd??C e .....                 pld
fe/f0b0: 28           ??Mxd??C e .....                 plp
                                                       .rwid   longm
fe/f0b1: 38           ??mxd??? e .....                 sec
fe/f0b2: 60           ??mxd??C e ...#.                 rts

fe/f0b3: f4 00 00     ??mxd?Z? e ....> LFEF0B3         pea     $0000
                                                       .rwid   shortm
fe/f0b6: c2 20        ???xd??? e ....> LFEF0B6         rep     #$20
                                                       .rwid   longm
fe/f0b8: 68           ??mxd??? e .....                 pla
fe/f0b9: fa           ??mxd??? e .....                 plx
fe/f0ba: ab           ??mxd??? e .....                 plb
fe/f0bb: 2b           ??mxd??? e .....                 pld
fe/f0bc: 28           ??mxd??? e .....                 plp
fe/f0bd: 18           ??mxd??? e .....                 clc
fe/f0be: 60           ??mxd??c e ...#.                 rts

fe/f0bf: c9 2c 00     n?mxd?zc e ....> LFEF0BF         cmp     #$002c
fe/f0c2: 90 19        ??mxd??? e .....                 bcc     LFEF0DD
fe/f0c4: c9 3a 00     ??mxd??C e .....                 cmp     #$003a
fe/f0c7: 90 16        ??mxd??? e .....                 bcc     LFEF0DF
fe/f0c9: c9 40 00     ??mxd??C e .....                 cmp     #$0040
fe/f0cc: 90 0f        ??mxd??? e .....                 bcc     LFEF0DD
fe/f0ce: c9 5b 00     ??mxd??C e .....                 cmp     #$005b
fe/f0d1: 90 0c        ??mxd??? e .....                 bcc     LFEF0DF
fe/f0d3: c9 61 00     ??mxd??C e .....                 cmp     #$0061
fe/f0d6: 90 05        ??mxd??? e .....                 bcc     LFEF0DD
fe/f0d8: c9 7b 00     ??mxd??C e .....                 cmp     #$007b
fe/f0db: 90 02        ??mxd??? e .....                 bcc     LFEF0DF
fe/f0dd: 38           ??mxd??? e ....> LFEF0DD         sec
fe/f0de: 60           ??mxd??C e ...#.                 rts

fe/f0df: 18           ??mxd??c e ....> LFEF0DF         clc
fe/f0e0: 60           ??mxd??c e ...#.                 rts

fe/f0e1: 82                      ..... LFEF0E1         .dd1    $82
fe/f0e2: 00                      .....                 .dd1    $00
fe/f0e3: 00                      .....                 .dd1    $00
fe/f0e4: 00                      ..... LFEF0E4         .dd1    $00
fe/f0e5: 01                      .....                 .dd1    $01
fe/f0e6: 01                      .....                 .dd1    $01
fe/f0e7: 00                      .....                 .dd1    $00
fe/f0e8: 00                      .....                 .dd1    $00
fe/f0e9: 00                      .....                 .dd1    $00
fe/f0ea: 00                      ..... LFEF0EA         .dd1    $00
fe/f0eb: 01                      .....                 .dd1    $01
fe/f0ec: 00                      .....                 .dd1    $00
fe/f0ed: 80                      .....                 .dd1    $80
fe/f0ee: ff                      .....                 .dd1    $ff
fe/f0ef: ff                      .....                 .dd1    $ff
fe/f0f0: 00                      .....                 .dd1    $00
fe/f0f1: 00                      .....                 .dd1    $00

fe/f0f2: 08           ??mxd??? e ....> getModCallRef   php
fe/f0f3: 0b           ??mxd??? e .....                 phd
fe/f0f4: c2 30        ??mxd??? e .....                 rep     #$30
fe/f0f6: 4b           ??mxd??? e .....                 phk
fe/f0f7: 20 30 f1     ??mxd??? e .....                 jsr     findModule
fe/f0fa: b0 30        ??mxd??? e .....                 bcs     @retsec
fe/f0fc: 4b           ??mxd??c e .....                 phk
fe/f0fd: 20 dd f1     ??mxd??c e .....                 jsr     getOrCreateModCallBlock
fe/f100: b0 2a        ??mxd??? e .....                 bcs     @retsec
fe/f102: aa           ??mxd??c e .....                 tax
fe/f103: e2 20        ??mxd??c e .....                 sep     #$20
                                                       .rwid   shortm
fe/f105: bf 07 00 00  ??Mxd??c e .....                 ldal    f:$000007,x       ;increment module reference count by 1
fe/f109: 1a           ??Mxd??c e .....                 inc     A
fe/f10a: d0 15        ??Mxd??c e .....                 bne     @ok
fe/f10c: 02 0f        ??Mxd?Zc e .....                 cop     COP_0F_OPERR      ;panic if mod ref >= 255
fe/f10e: 55 73 65 20+            .T...                 .zstr   “Use Count Overflow”
fe/f121: 9f 07 00 00  ??Mxd??c e ....> @ok             stal    f:DPCOP_B,x
fe/f125: c2 20        ??Mxd??c e .....                 rep     #$20
                                                       .rwid   longm
fe/f127: 8a           ??mxd??c e .....                 txa
fe/f128: 2b           ??mxd??c e .....                 pld
fe/f129: 28           ??mxd??c e .....                 plp
fe/f12a: 18           ??mxd??? e .....                 clc
fe/f12b: 6b           ??mxd??c e ...#.                 rtl

fe/f12c: 2b           ??mxd??C e ....> @retsec         pld
fe/f12d: 28           ??mxd??C e .....                 plp
fe/f12e: 38           ??mxd??? e .....                 sec
fe/f12f: 6b           ??mxd??C e ...#.                 rtl

                                       ; 
                                       ; Entry:  BHA is pointer to module name
                                       ;         Y is either 0 or required version number
                                       ; 
                                       ; Exit:   CC for found, pointer to module list entry in X
                                       ;         CS, X=-1 for not found
fe/f130: 08           ??mxd??? e ....> findModule      php
fe/f131: 0b           ??mxd??? e .....                 phd
fe/f132: c2 30        ??mxd??? e .....                 rep     #$30
fe/f134: f4 ff ff     ??mxd??? e .....                 pea     $ffff             ;this looks to be the return value, -1 means not found
fe/f137: 5a           ??mxd??? e .....                 phy
fe/f138: 8b           ??mxd??? e .....                 phb
fe/f139: 8b           ??mxd??? e .....                 phb
fe/f13a: 48           ??mxd??? e .....                 pha                       ;push BHA pointer
fe/f13b: f4 0e fe     ??mxd??? e .....                 pea     B0LST_MODULES_QRY
fe/f13e: a3 03        ??mxd??? e .....                 lda     $03,S             ;back off stacked BHA by 14 TODO:why not do this before pushing!?
fe/f140: 38           ??mxd??? e .....                 sec
fe/f141: e9 0e 00     ??mxd??C e .....                 sbc     #$000e
fe/f144: 83 03        ??mxd??? e .....                 sta     $03,S
fe/f146: a3 05        ??mxd??? e .....                 lda     $05,S
fe/f148: e9 00 00     ??mxd??? e .....                 sbc     #$0000
fe/f14b: 83 05        ??mxd??? e .....                 sta     $05,S
fe/f14d: fa           ??mxd??? e ....> @modsrchlp      plx                       ;get back list pointer
fe/f14e: bf 00 00 00  ??mxd??? e .....                 ldal    f:$000000,x
fe/f152: c9 0e fe     ??mxd??? e .....                 cmp     #B0LST_MODULES_QRY
fe/f155: f0 5c        ??mxd??? e .....                 beq     @unstackExit      ;if at head of list exit
fe/f157: 48           ??mxd?z? e .....                 pha
fe/f158: 20 c3 f1     ??mxd?z? e .....                 jsr     getModCallBlock
fe/f15b: aa           ??mxd??? e .....                 tax
fe/f15c: a0 0d 00     ??mxd??? e .....                 ldy     #$000d
fe/f15f: c8           n?mxd??? e ....> @strmatchlp     iny
fe/f160: f0 eb        ??mxd??? e .....                 beq     @modsrchlp
fe/f162: 3b           ??mxd?z? e .....                 tsc
fe/f163: 5b           ??mxd??? e .....                 tcd
fe/f164: b7 03        ??mxd??? e .....                 lda     [$03],y           ;get character from stacked long BHA-14 pointer
fe/f166: 20 f7 f4     ??mxd??? e .....                 jsr     checkValidModnameChar ;check it's a valid module name char
fe/f169: da           ??mxd??? e .....                 phx
fe/f16a: 2b           ??mxd??? e .....                 pld                       ;point to current module name in list
fe/f16b: b0 09        ??mxd??? e .....                 bcs     @skend            ;end of string
fe/f16d: 57 00        ??mxd??c e .....                 eor     [$00],y           ;check for equality
fe/f16f: 29 df 00     ??mxd??c e .....                 and     #$00df
fe/f172: d0 d9        n?mxd??c e .....                 bne     @modsrchlp        ;no match, next module please
fe/f174: 80 e9        n?mxd?Zc e ...#.                 bra     @strmatchlp

fe/f176: b7 00        ??mxd??C e ....> @skend          lda     [$00],y           ;we got to the end of the passed in string
fe/f178: 20 f7 f4     ??mxd??C e .....                 jsr     checkValidModnameChar ;were we at the end of the module string?
fe/f17b: 90 d0        ??mxd??? e .....                 bcc     @modsrchlp        ;no, next module...
fe/f17d: a3 07        ??mxd??C e .....                 lda     $07,S             ;retrieve passed in Y
fe/f17f: f0 0f        ??mxd??C e .....                 beq     @checkVerGt
fe/f181: a0 06 00     ??mxd?zC e .....                 ldy     #$0006
fe/f184: b7 00        n?mxd?zC e .....                 lda     [$00],y           ;get module version number
fe/f186: c3 07        ??mxd??C e .....                 cmp     $07,S             ;compare with passed in Y
fe/f188: d0 c3        ??mxd??? e .....                 bne     @modsrchlp        ;doesn't match, next module
fe/f18a: 68           ??mxd??? e ....> @setWinner      pla                       ;get back list entry pointer
fe/f18b: 48           ??mxd??? e .....                 pha
fe/f18c: 83 09        ??mxd??? e .....                 sta     $09,S             ;store in return value
fe/f18e: 80 bd        ??mxd??? e ...#.                 bra     @modsrchlp        ;keep going - why TODO: check if this happens, document?

fe/f190: a3 09        ??mxd?ZC e ....> @checkVerGt     lda     $09,S             ;get return value
fe/f192: c9 ff ff     ??mxd??C e .....                 cmp     #$ffff            ;has it been set already?
fe/f195: f0 f3        ??mxd??? e .....                 beq     @setWinner        ;if it hasn't set current as result
fe/f197: 20 c3 f1     ??mxd?z? e .....                 jsr     getModCallBlock
fe/f19a: 5b           ??mxd??? e .....                 tcd
fe/f19b: a0 06 00     ??mxd??? e .....                 ldy     #$0006
fe/f19e: b7 00        n?mxd?z? e .....                 lda     [$00],y           ;get winner's version
fe/f1a0: 48           ??mxd??? e .....                 pha                       ;save it
fe/f1a1: a3 03        ??mxd??? e .....                 lda     $03,S             ;get current module list entry
fe/f1a3: 20 c3 f1     ??mxd??? e .....                 jsr     getModCallBlock   ;get module pointer
fe/f1a6: 5b           ??mxd??? e .....                 tcd
fe/f1a7: b7 00        ??mxd??? e .....                 lda     [$00],y           ;get current module version number
fe/f1a9: 29 ff 00     ??mxd??? e .....                 and     #$00ff            ;mask off low part?!?!?
fe/f1ac: c3 01        n?mxd??? e .....                 cmp     $01,S             ;compare
fe/f1ae: 68           ??mxd??? e .....                 pla                       ;discard pushed
fe/f1af: 90 9c        ??mxd??? e .....                 bcc     @modsrchlp
fe/f1b1: 80 d7        ??mxd??C e ...#.                 bra     @setWinner

fe/f1b3: 2b           ??mxd?Z? e ....> @unstackExit    pld
fe/f1b4: 2b           ??mxd??? e .....                 pld
fe/f1b5: 2b           ??mxd??? e .....                 pld
fe/f1b6: 68           ??mxd??? e .....                 pla
fe/f1b7: c9 ff ff     ??mxd??? e .....                 cmp     #$ffff            ;check for winner
fe/f1ba: 2b           ??mxd??? e .....                 pld
fe/f1bb: b0 03        ??mxd??? e .....                 bcs     @retsec
fe/f1bd: 28           ??mxd??c e .....                 plp
fe/f1be: 18           ??mx???? e .....                 clc
fe/f1bf: 6b           ??mx???c e ...#.                 rtl

fe/f1c0: 28           ??mxd??C e ....> @retsec         plp
fe/f1c1: 38           ??mx???? e .....                 sec
fe/f1c2: 6b           ??mx???C e ...#.                 rtl

fe/f1c3: 0b           ??mxd??? e ....> getModCallBlock phd
fe/f1c4: 18           ??mxd??? e .....                 clc
fe/f1c5: 69 04 00     ??mxd??c e .....                 adc     #$0004            ;HA+=4
fe/f1c8: 5b           ??mxd??? e .....                 tcd                       ;DP=HA
fe/f1c9: a5 02        ??mxd??? e .....                 lda     $02               ;HA=[DP,2]
fe/f1cb: 29 ff 00     ??mxd??? e .....                 and     #$00ff
fe/f1ce: 38           n?mxd??? e .....                 sec
fe/f1cf: d0 09        n?mxd??C e .....                 bne     @ret
fe/f1d1: a5 00        n?mxd?ZC e .....                 lda     $00
fe/f1d3: aa           ??mxd??C e .....                 tax
fe/f1d4: 18           ??mxd??C e .....                 clc
fe/f1d5: 69 02 00     ??mxd??c e .....                 adc     #$0002
fe/f1d8: 5b           ??mxd??? e .....                 tcd
fe/f1d9: 18           ??mxd??? e .....                 clc
fe/f1da: 7b           ??mxd??? e ....> @ret            tdc
fe/f1db: 2b           ??mxd??? e .....                 pld
fe/f1dc: 60           ??mxd??? e ...#.                 rts

fe/f1dd: 20 c3 f1     ??mxd??c e ....> getOrCreateModCallBlock jsr getModCallBlock
fe/f1e0: 90 3a        ??mxd??? e .....                 bcc     @retTxa
fe/f1e2: 0b           ??mxd??C e .....                 phd
fe/f1e3: 5b           ??mxd??C e .....                 tcd
fe/f1e4: a9 06 00     ??mxd??C e .....                 lda     #HND_type_6_CBCO
fe/f1e7: 20 01 ce     n?mxd?zC e .....                 jsr     obtainFreeBlock
fe/f1ea: b0 31        ??mxd??? e .....                 bcs     @ret
fe/f1ec: a9 00 00     ??mxd??c e .....                 lda     #$0000
fe/f1ef: e2 20        n?mxd?Zc e .....                 sep     #$20
                                                       .rwid   shortm
fe/f1f1: 9f 07 00 00  n?Mxd?Zc e .....                 stal    f:$000007,x       ;refernce count
fe/f1f5: c2 20        n?Mxd?Zc e .....                 rep     #$20
                                                       .rwid   longm
fe/f1f7: 9f 08 00 00  n?mxd?Zc e .....                 stal    f:$000008,x       ;QRY what is at offset 8
fe/f1fb: 4b           n?mxd?Zc e .....                 phk
                                                       .dbank  K (auto)
fe/f1fc: ab           n?mxd?Zc e .....                 plb
fe/f1fd: ad 1e f2     ??mxd??c e .....                 lda     templateModCallBlock & $ffff ;get phd, jsl opcodes
fe/f200: 9f 00 00 00  ??mxd??c e .....                 stal    f:$000000,x       ;store at offset 0
fe/f204: ad 23 f2     ??mxd??c e .....                 lda     0+(templateModCallBlock & $ffff)+5 ;get pld, rtl opcodes
fe/f207: 9f 05 00 00  ??mxd??c e .....                 stal    f:$000005,x       ;store at offset 5
fe/f20b: a5 01        ??mxd??c e .....                 lda     $01               ;get program bank and high byte of module service
fe/f20d: 9f 03 00 00  ??mxd??c e .....                 stal    f:$000003,x       ;store at offset 3
fe/f211: a5 00        ??mxd??c e .....                 lda     $00               ;get 16 bit low address of module
fe/f213: 9f 02 00 00  ??mxd??c e .....                 stal    f:$000002,x       ;store at offset 2
fe/f217: 64 01        ??mxd??c e .....                 stz     $01
fe/f219: 86 00        ??mxd??c e .....                 stx     $00               ;store DPX at 0 - QRY why?
fe/f21b: 2b           ??mxd??c e .....                 pld
fe/f21c: 8a           ??mxd??c e ....> @retTxa         txa
fe/f21d: 6b           ??mxd??? e ...#> @ret            rtl

                                       ; This is a template module call that is copied to Bank 0 when a module is first
                                       ; referenced
                                                       .rwid   shortm,shortx
fe/f21e: 0b           ??MXd??? e @T... templateModCallBlock phd
fe/f21f: 22 00 00 00  ??MXd??? e .....                 jsl     $000000
fe/f223: 2b           ??MXd??? e .....                 pld
fe/f224: 6b           ??MXd??? e ...#.                 rtl

fe/f225: 82 09 00     ??MXd??? e @T.#.                 brl     LFEF231

fe/f228: 82 47 01     ??MXd??? e @T.#.                 brl     LFEF372

                                                       .rwid   longm,longx
fe/f22b: 82 54 02     ??mxd??? e ...#> brlFindModuleByAddress brl findModuleByAddress

fe/f22e: 82 86 00     ??mxd??? e .T.#> LFEF22E         brl     LFEF2B7

fe/f231: 0b           ??mxd??? e ....> LFEF231         phd
fe/f232: da           ??mxd??? e .....                 phx
fe/f233: 5a           ??mxd??? e .....                 phy
fe/f234: f4 0e fe     ??mxd??? e .....                 pea     B0LST_MODULES_QRY
fe/f237: f4 00 00     ??mxd??? e .....                 pea     $0000
fe/f23a: f4 00 00     ??mxd??? e .....                 pea     $0000
fe/f23d: 8b           ??mxd??? e .....                 phb
fe/f23e: 48           ??mxd??? e .....                 pha
fe/f23f: 0b           ??mxd??? e .....                 phd
fe/f240: 0b           ??mxd??? e .....                 phd
fe/f241: 3b           ??mxd??? e .....                 tsc
fe/f242: 1a           ??mxd??? e .....                 inc     A
fe/f243: 5b           ??mxd??? e .....                 tcd
fe/f244: a5 0f        ??mxd??? e .....                 lda     $0f
fe/f246: d0 07        ??mxd??? e .....                 bne     LFEF24F
fe/f248: a2 0e fe     ??mxd?Z? e .....                 ldx     #B0LST_MODULES_QRY
fe/f24b: bf 00 00 00  ??mxd??? e ....> LFEF24B         ldal    f:$000000,x
fe/f24f: c9 0e fe     ??mxd??? e ....> LFEF24F         cmp     #B0LST_MODULES_QRY
fe/f252: f0 3f        ??mxd??? e .....                 beq     LFEF293
fe/f254: aa           ??mxd?z? e .....                 tax
fe/f255: 4b           ??mxd??? e .....                 phk
fe/f256: 20 b7 f2     ??mxd??? e .....                 jsr     LFEF2B7
fe/f259: 4b           ??mxd??? e .....                 phk
fe/f25a: 20 e7 f2     ??mxd??? e .....                 jsr     LFEF2E7
fe/f25d: 70 08        ??mxd??? e .....                 bvs     LFEF267
fe/f25f: 26 09        ?vmxd??? e .....                 rol     DPCOP_DP+1
fe/f261: 66 09        ?vmxd??? e .....                 ror     DPCOP_DP+1
fe/f263: d0 02        ?vmxd??? e .....                 bne     LFEF267
fe/f265: 86 0b        ?vmxd?Z? e .....                 stx     DPCOP_PC
fe/f267: b0 26        ??mxd??? e ....> LFEF267         bcs     LFEF28F
fe/f269: c0 00 00     ??mxd??c e .....                 cpy     #$0000
fe/f26c: d0 08        ??mxd??? e .....                 bne     LFEF276
fe/f26e: 85 07        ??mxd?Z? e .....                 sta     DPCOP_B
fe/f270: 86 09        ??mxd?Z? e .....                 stx     DPCOP_DP+1
fe/f272: 84 0b        ??mxd?Z? e .....                 sty     DPCOP_PC
fe/f274: 80 1d        ??mxd?Z? e ...#.                 bra     LFEF293

fe/f276: 26 0d        ??mxd?z? e ....> LFEF276         rol     DPCOP_K
fe/f278: 66 0d        ??mxd??? e .....                 ror     DPCOP_K
fe/f27a: f0 13        ??mxd??? e .....                 beq     LFEF28F
fe/f27c: 26 09        ??mxd?z? e .....                 rol     DPCOP_DP+1
fe/f27e: 66 09        ??mxd??? e .....                 ror     DPCOP_DP+1
fe/f280: f0 07        ??mxd??? e .....                 beq     LFEF289
fe/f282: a9 ff ff     ??mxd?z? e .....                 lda     #$ffff
fe/f285: 85 09        n?mxd?z? e .....                 sta     DPCOP_DP+1
fe/f287: 80 06        n?mxd?z? e ...#.                 bra     LFEF28F

fe/f289: 85 07        ??mxd?Z? e ....> LFEF289         sta     DPCOP_B
fe/f28b: 86 09        ??mxd?Z? e .....                 stx     DPCOP_DP+1
fe/f28d: 84 0b        ??mxd?Z? e .....                 sty     DPCOP_PC
fe/f28f: a5 0f        ??mxd??? e ....> LFEF28F         lda     $0f
fe/f291: f0 b8        ??mxd??? e .....                 beq     LFEF24B
fe/f293: a5 09        ??mxd??? e ....> LFEF293         lda     DPCOP_DP+1
fe/f295: 38           ??mxd??? e .....                 sec
fe/f296: f0 08        ??mxd??C e .....                 beq     LFEF2A0
fe/f298: 1a           ??mxd?zC e .....                 inc     A
fe/f299: f0 02        ??mxd??C e .....                 beq     LFEF29D
fe/f29b: 80 02        ??mxd?zC e ...#.                 bra     LFEF29F

fe/f29d: 64 09        ??mxd?ZC e ....> LFEF29D         stz     DPCOP_DP+1
fe/f29f: 18           ??mxd??C e ....> LFEF29F         clc
fe/f2a0: 2b           ??mxd??? e ....> LFEF2A0         pld
fe/f2a1: 2b           ??mxd??? e .....                 pld
fe/f2a2: 68           ??mxd??? e .....                 pla
fe/f2a3: 08           ??mxd??? e .....                 php
fe/f2a4: 18           ??mxd??? e .....                 clc
fe/f2a5: 63 03        ??mxd??c e .....                 adc     $03,S
fe/f2a7: 90 05        ??mxd??? e .....                 bcc     LFEF2AE
fe/f2a9: 28           ??mxd??C e .....                 plp
fe/f2aa: fa           ??mxd??? e .....                 plx
fe/f2ab: e8           ??mxd??? e .....                 inx
fe/f2ac: da           ??mxd??? e .....                 phx
fe/f2ad: 08           ??mxd??? e .....                 php
fe/f2ae: 28           ??mxd??? e ....> LFEF2AE         plp
fe/f2af: ab           ??mxd??? e .....                 plb
fe/f2b0: 2b           ??mxd??? e .....                 pld
fe/f2b1: fa           ??mxd??? e .....                 plx
fe/f2b2: 7a           ??mxd??? e .....                 ply
fe/f2b3: 2b           ??mxd??? e .....                 pld
fe/f2b4: 2b           ??mxd??? e .....                 pld
fe/f2b5: 2b           ??mxd??? e .....                 pld
fe/f2b6: 6b           ??mxd??? e ...#.                 rtl

fe/f2b7: da           ??mxd??? e ....> LFEF2B7         phx
fe/f2b8: bf 04 00 00  ??mxd??? e .....                 ldal    f:DPCOP_X+1,x
fe/f2bc: 85 00        ??mxd??? e .....                 sta     $00
fe/f2be: e2 20        ??mxd??? e .....                 sep     #$20
                                                       .rwid   shortm
fe/f2c0: bf 06 00 00  ??Mxd??? e .....                 ldal    f:DPCOP_AH+1,x
fe/f2c4: 85 02        ??Mxd??? e .....                 sta     DPCOP_Y+1
fe/f2c6: c2 20        ??Mxd??? e .....                 rep     #$20
                                                       .rwid   longm
fe/f2c8: 29 ff 00     ??mxd??? e .....                 and     #$00ff
fe/f2cb: 38           n?mxd??? e .....                 sec
fe/f2cc: d0 17        n?mxd??C e .....                 bne     LFEF2E5
fe/f2ce: bf 04 00 00  n?mxd?ZC e .....                 ldal    f:DPCOP_X+1,x
fe/f2d2: aa           ??mxd??C e .....                 tax
fe/f2d3: bf 02 00 00  ??mxd??C e .....                 ldal    f:DPCOP_Y+1,x
fe/f2d7: 85 00        ??mxd??C e .....                 sta     $00
fe/f2d9: e2 20        ??mxd??C e .....                 sep     #$20
                                                       .rwid   shortm
fe/f2db: bf 04 00 00  ??Mxd??C e .....                 ldal    f:DPCOP_X+1,x
fe/f2df: 85 02        ??Mxd??C e .....                 sta     DPCOP_Y+1
fe/f2e1: c2 20        ??Mxd??C e .....                 rep     #$20
                                                       .rwid   longm
fe/f2e3: 8a           ??mxd??C e .....                 txa
fe/f2e4: 18           ??mxd??C e .....                 clc
fe/f2e5: fa           ??mxd??? e ....> LFEF2E5         plx
fe/f2e6: 6b           ??mxd??? e ...#.                 rtl

fe/f2e7: a0 0e 00     ??mxd??? e ....> LFEF2E7         ldy     #$000e
fe/f2ea: 20 43 f3     n?mxd?z? e .....                 jsr     LFEF343
                                       ; Action: This call checks a list of names to see if a specific name is present.
                                       ; If it is then the offset of the name from the start of the list is given in Y.
                                       ; 
                                       ; On entry: The 4 byte address at D,0 points to the start of the name list.
                                       ;           The 4 byte address at D,4 points to the name to be located.
                                       ;           If Y = 0 then the slash "/" character is used as a delimiter.
                                       ;           If Y <> 0 then the character whose ASCII code is in Y is used as 
                                       ;           a delimiter.
                                       ; On exit:  If C = 0 then the name is in the list at offset Y from the start 
                                       ;           If C = 1 then the name is not in the list
                                       ;           No registers preserved
fe/f2ed: da           ??mxd??? e ....> doNameSearch    phx
fe/f2ee: 5a           ??mxd??? e .....                 phy
fe/f2ef: a2 00 00     ??mxd??? e .....                 ldx     #$0000
fe/f2f2: 9b           n?mxd?Z? e .....                 txy
fe/f2f3: e8           ??mxd??? e ....> LFEF2F3         inx
fe/f2f4: ca           ??mxd??? e .....                 dex
fe/f2f5: d0 02        ??mxd??? e .....                 bne     LFEF2F9
fe/f2f7: e2 40        ??mxd?Z? e .....                 sep     #$40
fe/f2f9: b7 00        ??mxd??? e ....> LFEF2F9         lda     [$00],y
fe/f2fb: 20 de f4     ??mxd??? e .....                 jsr     LFEF4DE
fe/f2fe: b0 0a        ??mxd??? e .....                 bcs     LFEF30A
fe/f300: 57 04        ??mxd??c e .....                 eor     [DPCOP_X+1],y
fe/f302: 29 df 00     ??mxd??c e .....                 and     #$00df
fe/f305: d0 10        n?mxd??c e .....                 bne     LFEF317
fe/f307: c8           n?mxd?Zc e .....                 iny
fe/f308: 80 ef        ??mxd??c e ...#.                 bra     LFEF2F9

fe/f30a: b7 04        ??mxd??C e ....> LFEF30A         lda     [DPCOP_X+1],y
fe/f30c: 20 de f4     ??mxd??C e .....                 jsr     LFEF4DE
fe/f30f: 90 20        ??mxd??? e .....                 bcc     LFEF331
fe/f311: 98           ??mxd??C e .....                 tya
fe/f312: 9b           ??mxd??C e .....                 txy
fe/f313: 18           ??mxd??C e .....                 clc
fe/f314: fa           ??mxd??c e .....                 plx
fe/f315: fa           ??mxd??c e .....                 plx
fe/f316: 6b           ??mxd??c e ...#.                 rtl

fe/f317: b7 04        n?mxd?zc e ....> LFEF317         lda     [DPCOP_X+1],y
fe/f319: 20 de f4     ??mxd??c e .....                 jsr     LFEF4DE
fe/f31c: b0 0e        ??mxd??? e .....                 bcs     LFEF32C
fe/f31e: 29 df 00     ??mxd??c e .....                 and     #$00df
fe/f321: 48           n?mxd??c e .....                 pha
fe/f322: b7 00        n?mxd??c e .....                 lda     [$00],y
fe/f324: 29 df 00     ??mxd??c e .....                 and     #$00df
fe/f327: c3 01        n?mxd??c e .....                 cmp     $01,S
fe/f329: 68           ??mxd??? e .....                 pla
fe/f32a: b0 05        ??mxd??? e .....                 bcs     LFEF331
fe/f32c: e8           ??mxd??? e ....> LFEF32C         inx
fe/f32d: ca           ??mxd??? e .....                 dex
fe/f32e: d0 01        ??mxd??? e .....                 bne     LFEF331
fe/f330: b8           ??mxd?Z? e .....                 clv
fe/f331: a3 01        ??mxd??? e ....> LFEF331         lda     $01,S
fe/f333: 20 5e f3     ??mxd??? e .....                 jsr     LFEF35E
fe/f336: c9 00 00     ??mxd??? e .....                 cmp     #$0000
fe/f339: f0 04        ??mxd??? e .....                 beq     LFEF33F
fe/f33b: e8           ??mxd?z? e .....                 inx
fe/f33c: e8           ??mxd??? e .....                 inx
fe/f33d: 80 b4        ??mxd??? e ...#.                 bra     LFEF2F3

fe/f33f: 38           ??mxd?Z? e ....> LFEF33F         sec
fe/f340: fa           ??mxd?ZC e .....                 plx
fe/f341: fa           ??mxd??C e .....                 plx
fe/f342: 6b           ??mxd??C e ...#.                 rtl

fe/f343: 48           ??mxd??? e ....> LFEF343         pha
fe/f344: 08           ??mxd??? e .....                 php
fe/f345: 98           ??mxd??? e .....                 tya
fe/f346: 18           ??mxd??? e .....                 clc
fe/f347: 65 00        ??mxd??c e .....                 adc     $00
fe/f349: 85 00        ??mxd??? e .....                 sta     $00
fe/f34b: e2 20        ??mxd??? e .....                 sep     #$20
                                                       .rwid   shortm
fe/f34d: a9 00        ??Mxd??? e .....                 lda     #$00
fe/f34f: 65 02        n?Mxd?Z? e .....                 adc     DPCOP_Y+1
fe/f351: 85 02        ??Mxd??? e .....                 sta     DPCOP_Y+1
fe/f353: c2 20        ??Mxd??? e .....                 rep     #$20
                                                       .rwid   longm
fe/f355: a0 00 00     ??mxd??? e .....                 ldy     #$0000
fe/f358: 28           n?mxd?Z? e .....                 plp
fe/f359: 68           ??mxd??? e .....                 pla
fe/f35a: 60           ??mxd??? e ...#.                 rts

fe/f35b: a9 00 00     ??mxd?Z? e ....> LFEF35B         lda     #$0000
fe/f35e: 48           ??mxd??? e ....> LFEF35E         pha
fe/f35f: 80 01        ??mxd??? e ...#.                 bra     LFEF362

fe/f361: c8           ??mxd??c e ....> LFEF361         iny
fe/f362: b7 00        ??mxd??? e ....> LFEF362         lda     [$00],y
fe/f364: 20 de f4     ??mxd??? e .....                 jsr     LFEF4DE
fe/f367: 90 f8        ??mxd??? e .....                 bcc     LFEF361
fe/f369: c8           ??mxd??C e .....                 iny
fe/f36a: 20 43 f3     ??mxd??C e .....                 jsr     LFEF343
fe/f36d: 7a           ??mxd??? e .....                 ply
fe/f36e: a0 00 00     ??mxd??? e .....                 ldy     #$0000
fe/f371: 60           n?mxd?Z? e ...#.                 rts

                                                       .rwid   shortm,shortx
fe/f372: 08           ??M?d??? e ....> LFEF372         php
fe/f373: 0b           ??M?d??? e .....                 phd
fe/f374: c2 30        ??M?d??? e .....                 rep     #$30
                                                       .rwid   longm,longx
fe/f376: 8b           ??mxd??? e .....                 phb
fe/f377: 48           ??mxd??? e .....                 pha
fe/f378: 8b           ??mxd??? e .....                 phb
fe/f379: 48           ??mxd??? e .....                 pha
fe/f37a: 3b           ??mxd??? e .....                 tsc
fe/f37b: 1a           ??mxd??? e .....                 inc     A
fe/f37c: 5b           ??mxd??? e .....                 tcd
fe/f37d: a0 00 00     ??mxd??? e .....                 ldy     #$0000
fe/f380: 20 5b f3     n?mxd?Z? e .....                 jsr     LFEF35B
fe/f383: a2 00 00     ??mxd??? e .....                 ldx     #$0000
fe/f386: c9 2f 00     n?mxd?Z? e .....                 cmp     #$002f
fe/f389: d0 19        ??mxd??? e .....                 bne     LFEF3A4
fe/f38b: 68           ??mxd?Z? e .....                 pla
fe/f38c: ab           ??mxd??? e .....                 plb
fe/f38d: 8b           ??mxd??? e .....                 phb
fe/f38e: 48           ??mxd??? e .....                 pha
fe/f38f: a2 00 00     ??mxd??? e .....                 ldx     #$0000
fe/f392: a0 00 00     n?mxd?Z? e .....                 ldy     #$0000
fe/f395: 4b           n?mxd?Z? e .....                 phk
fe/f396: 20 31 f2     n?mxd?Z? e .....                 jsr     LFEF231
fe/f399: 90 03        ??mxd??? e .....                 bcc     LFEF39E
fe/f39b: 82 7a 00     ??mxd??C e ...#.                 brl     @reterrModNotFound

fe/f39e: 8a           ??mxd??c e ....> LFEF39E         txa
fe/f39f: d0 03        ??mxd??c e .....                 bne     LFEF3A4
fe/f3a1: 82 a1 00     ??mxd?Zc e ...#.                 brl     @reterrCommandError

fe/f3a4: 20 75 f4     ??mxd?z? e ....> LFEF3A4         jsr     LFEF475
fe/f3a7: 68           ??mxd??? e .....                 pla
fe/f3a8: ab           ??mxd??? e .....                 plb
fe/f3a9: 8b           ??mxd??? e .....                 phb
fe/f3aa: 48           ??mxd??? e .....                 pha
fe/f3ab: a0 01 00     ??mxd??? e .....                 ldy     #$0001
fe/f3ae: 4b           n?mxd?z? e .....                 phk
fe/f3af: 20 31 f2     n?mxd?z? e .....                 jsr     LFEF231
fe/f3b2: 90 03        ??mxd??? e .....                 bcc     LFEF3B7
fe/f3b4: 82 5d 00     ??mxd??C e ...#.                 brl     @retSev

fe/f3b7: 8a           ??mxd??c e ....> LFEF3B7         txa
fe/f3b8: d0 03        ??mxd??c e .....                 bne     LFEF3BD
fe/f3ba: 82 70 00     ??mxd?Zc e ...#.                 brl     @reterrAmbiuousCommand

fe/f3bd: da           ??mxd?zc e ....> LFEF3BD         phx
fe/f3be: 5a           ??mxd?zc e .....                 phy
fe/f3bf: 8a           ??mxd?zc e .....                 txa
fe/f3c0: 4b           ??mxd??c e .....                 phk
fe/f3c1: 20 dd f1     ??mxd??c e .....                 jsr     getOrCreateModCallBlock
fe/f3c4: a0 00 00     ??mxd??? e .....                 ldy     #$0000
fe/f3c7: 20 5b f3     n?mxd?Z? e .....                 jsr     LFEF35B
fe/f3ca: c9 2f 00     ??mxd??? e .....                 cmp     #$002f
fe/f3cd: d0 03        ??mxd??? e .....                 bne     LFEF3D2
fe/f3cf: 20 5b f3     ??mxd?Z? e .....                 jsr     LFEF35B
fe/f3d2: a5 00        ??mxd??? e ....> LFEF3D2         lda     $00
fe/f3d4: c9 01 00     ??mxd??? e .....                 cmp     #$0001
fe/f3d7: c6 00        ??mxd??? e .....                 dec     $00
fe/f3d9: b0 06        ??mxd??? e .....                 bcs     LFEF3E1
fe/f3db: e2 20        ??mxd??c e .....                 sep     #$20
                                                       .rwid   shortm
fe/f3dd: c6 02        ??Mxd??c e .....                 dec     DPCOP_Y+1
fe/f3df: c2 20        ??Mxd??c e .....                 rep     #$20
                                                       .rwid   longm
fe/f3e1: 7a           ??mxd??? e ....> LFEF3E1         ply
fe/f3e2: fa           ??mxd??? e .....                 plx
fe/f3e3: a7 00        ??mxd??? e .....                 lda     [$00]
fe/f3e5: 29 ff 00     ??mxd??? e .....                 and     #$00ff
fe/f3e8: c9 21 00     n?mxd??? e .....                 cmp     #$0021
fe/f3eb: b0 24        ??mxd??? e .....                 bcs     LFEF411
fe/f3ed: 68           ??mxd??c e .....                 pla
fe/f3ee: ab           ??mxd??c e .....                 plb
fe/f3ef: 8b           ??mxd??c e .....                 phb
fe/f3f0: 48           ??mxd??c e .....                 pha
fe/f3f1: 4b           ??mxd??c e .....                 phk
fe/f3f2: f4 0c f4     ??mxd??c e .....                 pea     LFEF40C & $ffff
fe/f3f5: 8b           ??mxd??c e .....                 phb
fe/f3f6: 48           ??mxd??c e .....                 pha
fe/f3f7: 4b           ??mxd??c e .....                 phk
fe/f3f8: 20 b7 f2     ??mxd??c e .....                 jsr     LFEF2B7
fe/f3fb: b0 46        ??mxd??? e .....                 bcs     @plaplberrCommandError
fe/f3fd: aa           ??mxd??c e .....                 tax
fe/f3fe: e2 20        ??mxd??c e .....                 sep     #$20
                                                       .rwid   shortm
fe/f400: a9 00        ??Mxd??c e .....                 lda     #$00
fe/f402: 83 03        n?Mxd?Zc e .....                 sta     $03,S
fe/f404: c2 20        n?Mxd?Zc e .....                 rep     #$20
                                                       .rwid   longm
fe/f406: 68           n?mxd?Zc e .....                 pla
fe/f407: da           ??mxd??c e .....                 phx
fe/f408: a2 00 00     ??mxd??c e .....                 ldx     #$0000
fe/f40b: 08           n?mxd?Zc e .....                 php
fe/f40c: 40           n?mxd?Zc e ...#. LFEF40C         rti

                                                       .rwid   shortm,shortx
fe/f40d: c2 30        ??MXd??? e @T...                 rep     #$30
                                                       .rwid   longm,longx
fe/f40f: 80 48        ??mxd??? e ...#.                 bra     LFEF459

fe/f411: 20 75 f4     ??mxd??C e ....> LFEF411         jsr     LFEF475
fe/f414: e2 40        ??mxd??? e ....> @retSev         sep     #$40
fe/f416: 80 42        ?Vmxd??? e ...#.                 bra     @popsandret

fe/f418: 02 26        ??mxd??C e ....> @reterrModNotFound cop  COP_26_OPBHA
fe/f41a: 4d 6f 64 75+            .T...                 .zstr   “Module not found”
fe/f42b: 80 28        ??mxd??C e ...#.                 bra     @xeq1retsec

fe/f42d: 02 26        ??mxd?Zc e ....> @reterrAmbiuousCommand cop COP_26_OPBHA
fe/f42f: 41 6d 62 69+            .T...                 .zstr   “Ambiguous command”
fe/f441: 80 12        ??mxd?Zc e ...#.                 bra     @xeq1retsec

fe/f443: 68           ??mxd??C e ....> @plaplberrCommandError pla
fe/f444: ab           ??mxd??C e .....                 plb
fe/f445: 02 26        ??mxd??? e ....> @reterrCommandError cop COP_26_OPBHA
fe/f447: 43 6f 6d 6d+            .T...                 .zstr   “Command error”
fe/f455: a2 01 00     ??mxd??? e ....> @xeq1retsec     ldx     #$0001
fe/f458: 38           n?mxd?z? e .....                 sec
fe/f459: b8           ??mxd??? e ....> LFEF459         clv
fe/f45a: 2b           ??mxd??? e ....> @popsandret     pld
fe/f45b: 2b           ??mxd??? e .....                 pld
fe/f45c: 2b           ??mxd??? e .....                 pld
fe/f45d: 2b           ??mxd??? e .....                 pld
fe/f45e: 90 0a        ??mxd??? e .....                 bcc     @retClcSev
fe/f460: 50 04        ??mxd??C e .....                 bvc     @retsecclv
fe/f462: 28           ?Vmxd??C e .....                 plp
fe/f463: e2 41        ??mx???? e .....                 sep     #$41
fe/f465: 6b           ?Vmx???C e ...#.                 rtl

fe/f466: 28           ?vmxd??C e ....> @retsecclv      plp
fe/f467: 38           ??mx???? e .....                 sec
fe/f468: b8           ??mx???C e .....                 clv
fe/f469: 6b           ?vmx???C e ...#.                 rtl

fe/f46a: 50 05        ??mxd??c e ....> @retClcSev      bvc     @retClcClv
fe/f46c: 28           ?Vmxd??c e .....                 plp
fe/f46d: 18           n?mxd?Zc e .....                 clc
fe/f46e: e2 40        n?mxd?Zc e .....                 sep     #$40
fe/f470: 6b           nVmxd?Zc e ...#.                 rtl

fe/f471: 28           ?vmxd??c e ....> @retClcClv      plp
fe/f472: 18           n?mxd?Zc e .....                 clc
fe/f473: b8           n?mxd?Zc e .....                 clv
fe/f474: 6b           nvmxd?Zc e ...#.                 rtl

fe/f475: a5 03        ??mxd??? e ....> LFEF475         lda     DPCOP_X
fe/f477: 85 00        ??mxd??? e .....                 sta     $00
fe/f479: e2 20        ??mxd??? e .....                 sep     #$20
                                                       .rwid   shortm
fe/f47b: a5 05        ??Mxd??? e .....                 lda     DPCOP_AH
fe/f47d: 85 02        ??Mxd??? e .....                 sta     DPCOP_Y+1
fe/f47f: c2 20        ??Mxd??? e .....                 rep     #$20
                                                       .rwid   longm
fe/f481: 60           ??mxd??? e ...#.                 rts

fe/f482: 0b           ??mxd??? e ....> findModuleByAddress phd
fe/f483: 0b           ??mxd??? e .....                 phd
fe/f484: 0b           ??mxd??? e .....                 phd
fe/f485: 8b           ??mxd??? e .....                 phb
fe/f486: 8b           ??mxd??? e .....                 phb
fe/f487: 48           ??mxd??? e .....                 pha
fe/f488: 8b           ??mxd??? e .....                 phb
fe/f489: 48           ??mxd??? e .....                 pha
fe/f48a: 3b           ??mxd??? e .....                 tsc
fe/f48b: 1a           ??mxd??? e .....                 inc     A
fe/f48c: 5b           ??mxd??? e .....                 tcd
fe/f48d: a2 0e fe     ??mxd??? e .....                 ldx     #$fe0e
                                                       .rwid   shortm
fe/f490: c2 20        ???xd??? e ....> LFEF490         rep     #$20
                                                       .rwid   longm
fe/f492: bf 00 00 00  ??mxd??? e .....                 ldal    f:$000000,x
fe/f496: a2 00 00     ??mxd??? e .....                 ldx     #$0000
fe/f499: c9 0e fe     n?mxd?Z? e .....                 cmp     #$fe0e
fe/f49c: f0 38        ??mxd??? e .....                 beq     LFEF4D6
fe/f49e: aa           ??mxd?z? e .....                 tax
fe/f49f: 4b           ??mxd??? e .....                 phk
fe/f4a0: 20 b7 f2     ??mxd??? e .....                 jsr     LFEF2B7
fe/f4a3: e2 20        ??mxd??? e .....                 sep     #$20
                                                       .rwid   shortm
fe/f4a5: 38           ??Mxd??? e .....                 sec
fe/f4a6: a5 03        ??Mxd??C e .....                 lda     DPCOP_X
fe/f4a8: e5 00        ??Mxd??C e .....                 sbc     $00
fe/f4aa: 85 07        ??Mxd??? e .....                 sta     DPCOP_B
fe/f4ac: a5 04        ??Mxd??? e .....                 lda     DPCOP_X+1
fe/f4ae: e5 01        ??Mxd??? e .....                 sbc     DPCOP_Y
fe/f4b0: 85 08        ??Mxd??? e .....                 sta     DPCOP_DP
fe/f4b2: a5 05        ??Mxd??? e .....                 lda     DPCOP_AH
fe/f4b4: e5 02        ??Mxd??? e .....                 sbc     DPCOP_Y+1
fe/f4b6: 85 09        ??Mxd??? e .....                 sta     DPCOP_DP+1
fe/f4b8: 90 d6        ??Mxd??? e .....                 bcc     LFEF490
fe/f4ba: a0 03 00     ??Mxd??C e .....                 ldy     #$0003
fe/f4bd: b7 00        n?Mxd?zC e .....                 lda     [$00],y
fe/f4bf: e5 07        ??Mxd??C e .....                 sbc     DPCOP_B
fe/f4c1: c8           ??Mxd??? e .....                 iny
fe/f4c2: b7 00        ??Mxd??? e .....                 lda     [$00],y
fe/f4c4: e5 08        ??Mxd??? e .....                 sbc     DPCOP_DP
fe/f4c6: c8           ??Mxd??? e .....                 iny
fe/f4c7: b7 00        ??Mxd??? e .....                 lda     [$00],y
fe/f4c9: e5 09        ??Mxd??? e .....                 sbc     DPCOP_DP+1
fe/f4cb: 90 c3        ??Mxd??? e .....                 bcc     LFEF490
fe/f4cd: c2 20        ??Mxd??C e .....                 rep     #$20
                                                       .rwid   longm
fe/f4cf: a0 0e 00     ??mxd??C e .....                 ldy     #$000e
fe/f4d2: 20 43 f3     n?mxd?zC e .....                 jsr     LFEF343
fe/f4d5: 18           ??mxd??? e .....                 clc
fe/f4d6: 68           ??mxd??? e ....> LFEF4D6         pla
fe/f4d7: ab           ??mxd??? e .....                 plb
fe/f4d8: 2b           ??mxd??? e .....                 pld
fe/f4d9: 2b           ??mxd??? e .....                 pld
fe/f4da: 2b           ??mxd??? e .....                 pld
fe/f4db: 2b           ??mxd??? e .....                 pld
fe/f4dc: 2b           ??mxd??? e .....                 pld
fe/f4dd: 6b           ??mxd??? e ...#.                 rtl

fe/f4de: 29 ff 00     ??mxd??? e ....> LFEF4DE         and     #$00ff
fe/f4e1: 48           n?mxd??? e .....                 pha
fe/f4e2: a3 05        n?mxd??? e .....                 lda     $05,S
fe/f4e4: c9 01 00     ??mxd??? e .....                 cmp     #$0001
fe/f4e7: 68           ??mxd??? e .....                 pla
fe/f4e8: 90 0d        ??mxd??? e .....                 bcc     checkValidModnameChar
fe/f4ea: c9 00 00     ??mxd??C e .....                 cmp     #$0000
fe/f4ed: f0 06        ??mxd??? e .....                 beq     LFEF4F5
fe/f4ef: c3 03        ??mxd?z? e .....                 cmp     $03,S
fe/f4f1: f0 02        ??mxd??? e .....                 beq     LFEF4F5
fe/f4f3: 18           ??mxd?z? e .....                 clc
fe/f4f4: 60           ??mxd?zc e ...#.                 rts

fe/f4f5: 38           ??mxd?Z? e ....> LFEF4F5         sec
fe/f4f6: 60           ??mxd?ZC e ...#.                 rts

                                       ; Check if the character passed in A is in '!', '.', '0'..'9', 'A'..'Z',
                                       ; 'a'..'z'
                                                       .rwid   shortm
fe/f4f7: 08           ???xd??? e ....> checkValidModnameChar php
fe/f4f8: c2 20        ???xd??? e .....                 rep     #$20
                                                       .rwid   longm
fe/f4fa: 29 ff 00     ??mxd??? e .....                 and     #$00ff
fe/f4fd: c9 7b 00     n?mxd??? e .....                 cmp     #‘{’
fe/f500: b0 23        ??mxd??? e .....                 bcs     @retsec
fe/f502: c9 61 00     ??mxd??c e .....                 cmp     #‘a’
fe/f505: b0 21        ??mxd??? e .....                 bcs     @retCLC
fe/f507: c9 5b 00     ??mxd??c e .....                 cmp     #‘[’
fe/f50a: b0 19        ??mxd??? e .....                 bcs     @retsec
fe/f50c: c9 41 00     ??mxd??c e .....                 cmp     #‘A’
fe/f50f: b0 17        ??mxd??? e .....                 bcs     @retCLC
fe/f511: c9 3a 00     ??mxd??c e .....                 cmp     #‘:’
fe/f514: b0 0f        ??mxd??? e .....                 bcs     @retsec
fe/f516: c9 30 00     ??mxd??c e .....                 cmp     #‘0’
fe/f519: b0 0d        ??mxd??? e .....                 bcs     @retCLC
fe/f51b: c9 2e 00     ??mxd??c e .....                 cmp     #‘.’
fe/f51e: f0 08        ??mxd??? e .....                 beq     @retCLC
fe/f520: c9 21 00     ??mxd?z? e .....                 cmp     #‘!’
fe/f523: f0 03        ??mxd??? e .....                 beq     @retCLC
fe/f525: 28           ??mxd??? e ....> @retsec         plp
                                                       .rwid   shortm
fe/f526: 38           ???xd??? e .....                 sec
fe/f527: 60           ???xd??C e ...#.                 rts

                                                       .rwid   longm
fe/f528: 28           ??mxd??? e ....> @retCLC         plp
                                                       .rwid   shortm
fe/f529: 18           ???xd??? e .....                 clc
fe/f52a: 60           ???xd??c e ...#.                 rts

                                                       .rwid   shortx
fe/f52b: 48           ????d??? e ....> LFEF52B         pha
fe/f52c: 8a           ????d??? e .....                 txa
fe/f52d: 4a           ????d??? e .....                 lsr     A
fe/f52e: b0 0b        n???d??? e .....                 bcs     LFEF53B
fe/f530: 68           n???d??c e .....                 pla
fe/f531: 02 26        ????d??c e .....                 cop     COP_26_OPBHA
fe/f533: 45 72 72 6f+            .T...                 .zstr   “Error”
fe/f539: 38           ????d??c e .....                 sec
fe/f53a: 6b           ????d??C e ...#.                 rtl

fe/f53b: 68           n???d??C e ....> LFEF53B         pla
fe/f53c: 38           ????d??C e .....                 sec
fe/f53d: 6b           ????d??C e ...#.                 rtl

                                       ********************************************************************************
                                       * Given a Handle in Y returns details - QRY - what details                     *
                                       *                                                                              *
                                       * On Entry:                                                                    *
                                       *    Y   A file handle                                                         *
                                       *                                                                              *
                                       * On Exit:                                                                     *
                                       *    C=0 The file handle was found                                             *
                                       *    V=1 if the file handle was an odd number QRY - what is the significance?  *
                                       *    X   pointer to filing system module entry point in B0 - QRY check this    *
                                       *    Y   file handle with bottom bit cleared                                   *
                                       *                                                                              *
                                       * or C=1 The file handle was not found of not of type file                     *
                                       *    X=1                                                                       *
                                       *    BHA An error string                                                       *
                                       ********************************************************************************
                                                       .rwid   longm,longx
fe/f53e: 48           ??mxd??? e ....> getFileHandleInfo pha                     ;save through routine (unless there's an error)
fe/f53f: 98           ??mxd??? e .....                 tya                       ;get bottom bit of Y into V and clear
fe/f540: 4a           ??mxd??? e .....                 lsr     A
fe/f541: 08           n?mxd??? e .....                 php
fe/f542: 0a           n?mxd??? e .....                 asl     A
fe/f543: 28           ??mxd??? e .....                 plp
fe/f544: a8           n?mxd??? e .....                 tay
fe/f545: aa           ??mxd??? e .....                 tax
fe/f546: b8           ??mxd??? e .....                 clv
fe/f547: 90 02        ?vmxd??? e .....                 bcc     @nosev
fe/f549: e2 40        ?vmxd??C e .....                 sep     #$40
fe/f54b: e0 00 01     ??mxd??? e ....> @nosev          cpx     #$0100            ;check handle validity
fe/f54e: 90 14        ??mxd??? e .....                 bcc     @err_badHandle
fe/f550: bf 0b 00 00  ??mxd??C e .....                 ldal    f:HND_off_B_type,x ;get handle block type
fe/f554: 29 ff 00     ??mxd??C e .....                 and     #$00ff
fe/f557: c9 10 00     n?mxd??C e .....                 cmp     #HND_type_10_file ;check it's a file
fe/f55a: d0 27        ??mxd??? e .....                 bne     @err_unknown_handle
fe/f55c: bf 03 00 00  ??mxd?Z? e .....                 ldal    f:HNDFILE_off_module,x ;get offset 3 QRY - what is this?
fe/f560: aa           ??mxd??? e .....                 tax                       ;return in X
fe/f561: 68           ??mxd??? e .....                 pla                       ;restore A
fe/f562: 18           ??mxd??? e .....                 clc
fe/f563: 6b           ??mxd??c e ...#.                 rtl

fe/f564: 02 26        ??mxd??c e ....> @err_badHandle  cop     COP_26_OPBHA
fe/f566: 42 61 64 20+            .T...                 .zstr   “Bad handle (top byte zero)”
fe/f581: 80 19        ??mxd??c e ...#.                 bra     @popXeq1retsec

fe/f583: 02 26        ??mxd?z? e ....> @err_unknown_handle cop COP_26_OPBHA
fe/f585: 42 61 64 20+            .T...                 .zstr   “Bad handle (not known)”
fe/f59c: fa           ??mxd??? e ....> @popXeq1retsec  plx
fe/f59d: a2 01 00     ??mxd??? e .....                 ldx     #$0001
fe/f5a0: 38           n?mxd?z? e .....                 sec
fe/f5a1: 6b           n?mxd?zC e ...#.                 rtl

fe/f5a2: 4b           ??mxd??? e ....> doBGET          phk
fe/f5a3: 20 3e f5     ??mxd??? e .....                 jsr     getFileHandleInfo
fe/f5a6: b0 12        ??mxd??? e .....                 bcs     @ret
fe/f5a8: 4b           ??mxd??c e .....                 phk
fe/f5a9: 62 b7 08     ??mxd??c e .....                 per     LFEFE63_anRTL
fe/f5ac: f4 00 00     ??mxd??c e .....                 pea     $0000
                                                       .dbank  $00
fe/f5af: ab           ??mxd??c e .....                 plb
fe/f5b0: ca           ??mxd??c e .....                 dex
fe/f5b1: da           ??mxd??c e .....                 phx                       ;push the module jump pointer - 1 suitable for the RTL
fe/f5b2: a2 16 00     ??mxd??c e .....                 ldx     #FSOP_16_BGET
fe/f5b5: 50 03        n?mxd?zc e .....                 bvc     @ret
fe/f5b7: a2 1a 00     nVmxd?zc e .....                 ldx     #FSOP_1A_BGET_odd
fe/f5ba: 6b           ??mxd??? e ...#> @ret            rtl

fe/f5bb: 4b           ??mxd??? e ....> doBPUT          phk
fe/f5bc: 20 3e f5     ??mxd??? e .....                 jsr     getFileHandleInfo
fe/f5bf: b0 12        ??mxd??? e .....                 bcs     @ret
fe/f5c1: 4b           ??mxd??c e .....                 phk
fe/f5c2: 62 9e 08     ??mxd??c e .....                 per     LFEFE63_anRTL     ;the module will return to here - QRY check this out, seems a bit convoluted!
fe/f5c5: f4 00 00     ??mxd??c e .....                 pea     $0000
fe/f5c8: ab           ??mxd??c e .....                 plb
fe/f5c9: ca           ??mxd??c e .....                 dex
fe/f5ca: da           ??mxd??c e .....                 phx
fe/f5cb: a2 18 00     ??mxd??c e .....                 ldx     #FSOP_18_BPUT
fe/f5ce: 50 03        n?mxd?zc e .....                 bvc     @ret
fe/f5d0: a2 1c 00     nVmxd?zc e .....                 ldx     #FSOP_1C_BPUT_odd
fe/f5d3: 6b           ??mxd??? e ...#> @ret            rtl

fe/f5d4: 4b           ??mxd??? e ....> CheckEOF        phk
fe/f5d5: 20 3e f5     ??mxd??? e .....                 jsr     getFileHandleInfo
fe/f5d8: b0 0d        ??mxd??? e .....                 bcs     LFEF5E7
fe/f5da: 4b           ??mxd??c e .....                 phk
fe/f5db: 62 85 08     ??mxd??c e .....                 per     LFEFE63_anRTL
fe/f5de: f4 00 00     ??mxd??c e .....                 pea     $0000
fe/f5e1: ab           ??mxd??c e .....                 plb
fe/f5e2: ca           ??mxd??c e .....                 dex
fe/f5e3: da           ??mxd??c e .....                 phx
fe/f5e4: a2 1e 00     ??mxd??c e .....                 ldx     #FSOP_1E_CheckEOF
fe/f5e7: 6b           ??mxd??? e ...#> LFEF5E7         rtl

                                       ; QRY - dead code?
                                                       .rwid   shortm,shortx
fe/f5e8: 6b           ??MXd??? e @T.#.                 rtl

                                       ; QRY - dead code?
                                                       .rwid   longm,longx
fe/f5e9: 48           ??mxd??? e @T...                 pha
fe/f5ea: 98           ??mxd??? e .....                 tya
fe/f5eb: 29 ff 00     ??mxd??? e .....                 and     #$00ff
fe/f5ee: a8           n?mxd??? e .....                 tay
fe/f5ef: 68           ??mxd??? e .....                 pla
fe/f5f0: 5a           ??mxd??? e .....                 phy
fe/f5f1: 7a           ??mxd??? e .....                 ply
fe/f5f2: d0 0b        ??mxd??? e .....                 bne     @sk2
fe/f5f4: 48           ??mxd?Z? e .....                 pha
fe/f5f5: 68           ??mxd?Z? e .....                 pla
fe/f5f6: d0 03        ??mxd??? e .....                 bne     @sk
fe/f5f8: 82 bf 01     ??mxd?Z? e ...#.                 brl     LFEF7BA

fe/f5fb: a8           ??mxd?z? e ....> @sk             tay
fe/f5fc: 82 a1 01     ??mxd??? e ...#.                 brl     closeDevice

fe/f5ff: 0b           ??mxd??? e ....> @sk2            phd
fe/f600: ba           ??mxd??? e .....                 tsx
fe/f601: 0b           ??mxd??? e .....                 phd
fe/f602: 0b           ??mxd??? e .....                 phd
fe/f603: f4 00 00     ??mxd??? e .....                 pea     $0000
fe/f606: 0b           ??mxd??? e .....                 phd
fe/f607: 0b           ??mxd??? e .....                 phd
fe/f608: 0b           ??mxd??? e .....                 phd
fe/f609: 0b           ??mxd??? e .....                 phd
fe/f60a: 5a           ??mxd??? e .....                 phy
fe/f60b: 8b           ??mxd??? e .....                 phb
fe/f60c: 48           ??mxd??? e .....                 pha
fe/f60d: da           ??mxd??? e .....                 phx
fe/f60e: ba           ??mxd??? e .....                 tsx
fe/f60f: da           ??mxd??? e .....                 phx
fe/f610: 2b           ??mxd??? e .....                 pld
fe/f611: 5a           ??mxd??? e .....                 phy
fe/f612: 4b           ??mxd??? e .....                 phk
fe/f613: 20 28 f8     ??mxd??? e .....                 jsr     LFEF828
fe/f616: 84 14        ??mxd??? e .....                 sty     __MMFND
fe/f618: 7a           ??mxd??? e .....                 ply
fe/f619: b0 57        ??mxd??? e .....                 bcs     @errModuleNotFoundRestoreEnv
fe/f61b: 85 08        ??mxd??c e .....                 sta     DPCOP_DP
fe/f61d: 8b           ??mxd??c e .....                 phb
fe/f61e: 8b           ??mxd??c e .....                 phb
fe/f61f: 68           ??mxd??c e .....                 pla
fe/f620: 85 0a        ??mxd??c e .....                 sta     DPCOP_P
fe/f622: ca           ??mxd??c e .....                 dex
fe/f623: 86 0c        ??mxd??c e .....                 stx     DPCOP_PC+1
fe/f625: 4b           ??mxd??c e .....                 phk
fe/f626: 62 6b 00     ??mxd??c e .....                 per     LFEF695-1
fe/f629: f4 00 00     ??mxd??c e .....                 pea     $0000
                                                       .dbank  $00
fe/f62c: ab           ??mxd??c e .....                 plb
fe/f62d: da           ??mxd??c e .....                 phx
fe/f62e: 98           ??mxd??c e .....                 tya
fe/f62f: 29 c0 00     ??mxd??c e .....                 and     #$00c0
fe/f632: a8           n?mxd??c e .....                 tay
fe/f633: a5 08        ??mxd??c e .....                 lda     DPCOP_DP
fe/f635: d4 0a        ??mxd??c e .....                 pei     (DPCOP_P)
fe/f637: ab           ??mxd??c e .....                 plb
fe/f638: ab           ??mxd??c e .....                 plb
fe/f639: a2 12 00     ??mxd??c e .....                 ldx     #$0012
fe/f63c: 6b           n?mxd?zc e ...#.                 rtl

fe/f63d: 18           ??mxd??? e ....> LFEF63D         clc
fe/f63e: 80 50        ??mxd??c e ...#.                 bra     LFEF690

fe/f640: 02 26        ??mxd??c e ....> opbhaFileClosedByDriver cop COP_26_OPBHA
fe/f642: 46 69 6c 65+            .T...                 .zstr   “File closed by driver”
fe/f658: 80 2b        ??mxd??c e ...#.                 bra     LFEF685

fe/f65a: 02 26        ??mxd??C e ....> opbhaCouldntConfig cop  COP_26_OPBHA
fe/f65c: 43 6f 75 6c+            .T...                 .zstr   “Could not configure”
fe/f670: 80 13        ??mxd??C e ...#.                 bra     LFEF685

fe/f672: 02 26        ??mxd??C e ....> @errModuleNotFoundRestoreEnv cop COP_26_OPBHA
fe/f674: 4d 6f 64 75+            .T...                 .zstr   “Module not known”
fe/f685: a2 01 00     ??mxd??? e ....> LFEF685         ldx     #$0001            ;TODO - bad code move ldx to end save 2
                                                       .rwid   shortm,shortx
fe/f688: 9b           ????d??? e ....> LFEF688         txy
fe/f689: fa           ????d??? e .....                 plx
fe/f68a: 9a           ????d??? e .....                 txs
fe/f68b: 2b           ????d??? e .....                 pld
fe/f68c: bb           ????d??? e .....                 tyx
fe/f68d: 82 9b fe     ????d??? e ...#.                 brl     LFEF52B

                                                       .rwid   longm,longx
fe/f690: fa           ??mxd??c e ....> LFEF690         plx
fe/f691: 9a           ??mxd??c e .....                 txs
fe/f692: 2b           ??mxd??c e .....                 pld
fe/f693: 98           ??mxd??c e .....                 tya
                                                       .rwid   shortm,shortx
fe/f694: 6b           ????d??? e @T.#. LFEF694_rts     rtl

                                                       .rwid   longm,longx
fe/f695: b0 f1        ??mxd??? e @T... LFEF695         bcs     LFEF688
fe/f697: 84 0e        ??mxd??c e .....                 sty     $0e
fe/f699: a9 20 00     ??mxd??c e .....                 lda     #$0020
fe/f69c: 24 06        n?mxd?zc e .....                 bit     DPCOP_AH+1
fe/f69e: d0 0c        ??mxd??c e .....                 bne     LFEF6AC
fe/f6a0: a5 14        ??mxd?Zc e .....                 lda     __MMFND
fe/f6a2: 29 20 00     ??mxd??c e .....                 and     #$0020
fe/f6a5: d0 96        n?mxd??c e .....                 bne     LFEF63D
fe/f6a7: 20 fa f6     n?mxd?Zc e .....                 jsr     LFEF6FA
fe/f6aa: b0 ae        ??mxd??? e .....                 bcs     opbhaCouldntConfig
fe/f6ac: d4 0a        ??mxd??c e ....> LFEF6AC         pei     (DPCOP_P)
fe/f6ae: ab           ??mxd??c e .....                 plb
fe/f6af: ab           ??mxd??c e .....                 plb
fe/f6b0: a5 08        ??mxd??c e .....                 lda     DPCOP_DP
fe/f6b2: 4b           ??mxd??c e .....                 phk
fe/f6b3: 20 04 f8     ??mxd??c e .....                 jsr     LFEF804
fe/f6b6: 85 08        ??mxd??? e .....                 sta     DPCOP_DP
fe/f6b8: 8b           ??mxd??? e .....                 phb
fe/f6b9: 8b           ??mxd??? e .....                 phb
fe/f6ba: 68           ??mxd??? e .....                 pla
fe/f6bb: 85 0a        ??mxd??? e .....                 sta     DPCOP_P
fe/f6bd: b0 1d        ??mxd??? e .....                 bcs     LFEF6DC
fe/f6bf: a0 00 00     ??mxd??c e .....                 ldy     #$0000
fe/f6c2: b7 08        ??mxd??? e ....> LFEF6C2         lda     [DPCOP_DP],y
fe/f6c4: 29 ff 00     ??mxd??? e .....                 and     #$00ff
fe/f6c7: c9 20 00     n?mxd??? e .....                 cmp     #$0020
fe/f6ca: 90 10        ??mxd??? e .....                 bcc     LFEF6DC
fe/f6cc: c9 3b 00     ??mxd??C e .....                 cmp     #$003b
fe/f6cf: d0 03        ??mxd??? e .....                 bne     LFEF6D4
fe/f6d1: a9 0d 00     ??mxd?Z? e .....                 lda     #$000d
fe/f6d4: 5a           ??mxd?z? e ....> LFEF6D4         phy
fe/f6d5: 20 88 f7     ??mxd?z? e .....                 jsr     LFEF788
fe/f6d8: 7a           ??mxd??? e .....                 ply
fe/f6d9: c8           ??mxd??? e .....                 iny
fe/f6da: 80 e6        ??mxd??? e ...#.                 bra     LFEF6C2

fe/f6dc: 20 85 f7     ??mxd??? e ....> LFEF6DC         jsr     LFEF785
fe/f6df: a9 3b 00     ??mxd??? e .....                 lda     #$003b
fe/f6e2: 20 88 f7     n?mxd?z? e .....                 jsr     LFEF788
fe/f6e5: 20 85 f7     ??mxd??? e .....                 jsr     LFEF785
fe/f6e8: 20 8d f7     ??mxd??? e .....                 jsr     LFEF78D
fe/f6eb: 90 03        ??mxd??? e .....                 bcc     LFEF6F0
fe/f6ed: 82 4d ff     ??mxd??C e ...#.                 brl     LFEF63D

fe/f6f0: 02 45        ??mxd??c e ....> LFEF6F0         cop     COP_45_OPCLS
fe/f6f2: 90 03        ??mxd??c e ...#.                 bcc     LFEF6F7

                                                       .rwid   shortm,shortx
fe/f6f4: 82 91 ff     ??MXd??? e @T.#.                 brl     LFEF688

                                                       .rwid   longm,longx
fe/f6f7: 82 46 ff     ??mxd??c e ...#> LFEF6F7         brl     opbhaFileClosedByDriver

fe/f6fa: 0b           n?mxd?Zc e ....> LFEF6FA         phd
fe/f6fb: 02 10        n?mxd?Zc e .....                 cop     COP_10_OPADP
fe/f6fd: 12 00                   .T...                 .dd2    $0012             ;size to allocate - 18 bytes
fe/f6ff: 2b           n?mxd?Zc e .....                 pld
fe/f700: b0 78        ??mxd??c e ..!..                 bcs     LFEF77A
fe/f702: 85 10        ??mxd??c e .....                 sta     $10
fe/f704: aa           ??mxd??c e .....                 tax
fe/f705: a9 52 41     ??mxd??c e .....                 lda     #$4152
fe/f708: 9f 00 00 00  n?mxd?zc e .....                 stal    f:$000000,x
fe/f70c: a9 4d 3a     n?mxd?zc e .....                 lda     #$3a4d
fe/f70f: 9f 02 00 00  n?mxd?zc e .....                 stal    f:DPCOP_Y+1,x
fe/f713: a9 21 43     n?mxd?zc e .....                 lda     #$4321
fe/f716: 9f 04 00 00  n?mxd?zc e .....                 stal    f:DPCOP_X+1,x
fe/f71a: a9 2e 00     n?mxd?zc e .....                 lda     #$002e
fe/f71d: 9f 06 00 00  n?mxd?zc e .....                 stal    f:DPCOP_AH+1,x
fe/f721: a0 00 00     n?mxd?zc e .....                 ldy     #$0000
fe/f724: b7 03        ??mxd??c e ....> LFEF724         lda     [DPCOP_X],y
fe/f726: e2 20        ??mxd??c e .....                 sep     #$20
                                                       .rwid   shortm
fe/f728: c9 3a        ??Mxd??c e .....                 cmp     #$3a
fe/f72a: d0 02        ??Mxd??? e .....                 bne     LFEF72E
fe/f72c: a9 00        ??Mxd?Z? e .....                 lda     #$00
fe/f72e: 9f 07 00 00  ??Mxd??? e ....> LFEF72E         stal    f:DPCOP_B,x
fe/f732: c2 20        ??Mxd??? e .....                 rep     #$20
                                                       .rwid   longm
fe/f734: f0 09        ??mxd??? e .....                 beq     LFEF73F
fe/f736: e8           ??mxd?z? e .....                 inx
fe/f737: c8           ??mxd??? e .....                 iny
fe/f738: c0 0b 00     ??mxd??? e .....                 cpy     #$000b
fe/f73b: b0 3d        ??mxd??? e .....                 bcs     LFEF77A
fe/f73d: 80 e5        ??mxd??c e ...#.                 bra     LFEF724

fe/f73f: f4 00 00     ??mxd?Z? e ....> LFEF73F         pea     $0000
fe/f742: ab           ??mxd?Z? e .....                 plb
fe/f743: ab           ??mxd??? e .....                 plb
fe/f744: a5 10        ??mxd??? e .....                 lda     $10
fe/f746: a0 60 00     ??mxd??? e .....                 ldy     #$0060
fe/f749: 4b           n?mxd?z? e .....                 phk
fe/f74a: 20 ff f5     n?mxd?z? e .....                 jsr     @sk2
fe/f74d: b0 2a        ??mxd??? e .....                 bcs     LFEF779
fe/f74f: 84 12        ??mxd??c e .....                 sty     $12
fe/f751: a4 12        ??mxd??? e ....> LFEF751         ldy     $12
fe/f753: 02 0a        ??mxd??? e .....                 cop     COP_0A_OPBGT
fe/f755: b0 1b        ??mxd??? e .....                 bcs     LFEF772
fe/f757: 29 ff 00     ??mxd??c e .....                 and     #$00ff
fe/f75a: c9 3b 00     n?mxd??c e .....                 cmp     #$003b
fe/f75d: d0 0e        ??mxd??? e .....                 bne     LFEF76D
fe/f75f: 02 0a        ??mxd??? e ....> LFEF75F         cop     COP_0A_OPBGT
fe/f761: b0 0f        ??mxd??? e .....                 bcs     LFEF772
fe/f763: 29 ff 00     ??mxd??c e .....                 and     #$00ff
fe/f766: c9 0d 00     n?mxd??c e .....                 cmp     #$000d
fe/f769: d0 f4        ??mxd??? e .....                 bne     LFEF75F
fe/f76b: 80 e4        ??mxd?Z? e ...#.                 bra     LFEF751

fe/f76d: 20 88 f7     ??mxd?z? e ....> LFEF76D         jsr     LFEF788
fe/f770: 80 df        ??mxd??? e ...#.                 bra     LFEF751

fe/f772: 4b           ??mxd??C e ....> LFEF772         phk
fe/f773: 20 a0 f7     ??mxd??C e .....                 jsr     closeDevice
fe/f776: 20 85 f7     ??mxd??? e .....                 jsr     LFEF785
fe/f779: 18           ??mxd??? e ....> LFEF779         clc
fe/f77a: 08           ??mxd??? e ....> LFEF77A         php
fe/f77b: a5 10        ??mxd??? e .....                 lda     $10
fe/f77d: f0 04        ??mxd??? e .....                 beq     LFEF783
fe/f77f: 02 1a        ??mxd?z? e .....                 cop     COP_1A_OPFZB
fe/f781: 64 10        ??mxd?z? e .....                 stz     $10
fe/f783: 28           ??mxd??? e ....> LFEF783         plp
fe/f784: 60           ??mxd??? e ...#.                 rts

fe/f785: a9 0d 00     ??mxd??? e ....> LFEF785         lda     #$000d
fe/f788: a2 1c 00     ??mxd?z? e ....> LFEF788         ldx     #$001c
fe/f78b: 80 03        n?mxd?z? e ...#.                 bra     LFEF790

fe/f78d: a2 1a 00     ??mxd??? e ....> LFEF78D         ldx     #$001a
fe/f790: 4b           n?mxd?z? e ....> LFEF790         phk
fe/f791: 62 08 00     n?mxd?z? e .....                 per     LFEF79C
fe/f794: f4 00 00     n?mxd?z? e .....                 pea     $0000
fe/f797: ab           n?mxd?z? e .....                 plb
fe/f798: d4 0c        ??mxd??? e .....                 pei     ($0c)
fe/f79a: a4 0e        ??mxd??? e .....                 ldy     $0e
fe/f79c: 6b           ??mxd??? e ...#. LFEF79C         rtl

                                       ; TODO poss dead code
                                                       .rwid   shortm,shortx
fe/f79d: a4 0e        ??MXd??? e @T...                 ldy     $0e
fe/f79f: 60           ??MXd??? e ...#.                 rts

                                                       .rwid   longm,longx
fe/f7a0: 4b           ??mxd??? e ....> closeDevice     phk
fe/f7a1: 20 3e f5     ??mxd??? e .....                 jsr     getFileHandleInfo
fe/f7a4: b0 13        ??mxd??? e .....                 bcs     LFEF7B9
fe/f7a6: 4b           ??mxd??c e .....                 phk
fe/f7a7: 62 b9 06     ??mxd??c e .....                 per     LFEFE63_anRTL
fe/f7aa: f4 00 00     ??mxd??c e .....                 pea     $0000
fe/f7ad: ab           ??mxd??c e .....                 plb
fe/f7ae: ca           ??mxd??c e .....                 dex
fe/f7af: da           ??mxd??c e .....                 phx
fe/f7b0: a9 00 00     ??mxd??c e .....                 lda     #$0000
fe/f7b3: 50 01        n?mxd?Zc e .....                 bvc     LFEF7B6
fe/f7b5: 1a           nVmxd?Zc e .....                 inc     A
fe/f7b6: a2 14 00     ??mxd??c e ....> LFEF7B6         ldx     #$0014
fe/f7b9: 6b           ??mxd??? e ...#> LFEF7B9         rtl

fe/f7ba: a2 fe fd     ??mxd??? e ....> LFEF7BA         ldx     #$fdfe
fe/f7bd: da           n?mxd?z? e .....                 phx
fe/f7be: bf 00 00 00  n?mxd?z? e .....                 ldal    f:$000000,x
fe/f7c2: c3 01        ??mxd??? e ....> LFEF7C2         cmp     $01,S
fe/f7c4: f0 0f        ??mxd??? e .....                 beq     LFEF7D5
fe/f7c6: aa           ??mxd?z? e .....                 tax
fe/f7c7: bf 00 00 00  ??mxd??? e .....                 ldal    f:$000000,x
fe/f7cb: 48           ??mxd??? e .....                 pha
fe/f7cc: 9b           ??mxd??? e .....                 txy
fe/f7cd: c8           ??mxd??? e .....                 iny
fe/f7ce: 4b           ??mxd??? e .....                 phk
fe/f7cf: 20 a0 f7     ??mxd??? e .....                 jsr     closeDevice
fe/f7d2: 68           ??mxd??? e .....                 pla
fe/f7d3: 80 ed        ??mxd??? e ...#.                 bra     LFEF7C2

fe/f7d5: fa           ??mxd?Z? e ....> LFEF7D5         plx
fe/f7d6: 18           ??mxd??? e .....                 clc
fe/f7d7: 6b           ??mxd??c e ...#.                 rtl

                                                       .rwid   shortm,shortx
fe/f7d8: 08           ????d??? e ....> LFEF7D8         php
fe/f7d9: c2 30        ????d??? e .....                 rep     #$30
                                                       .rwid   longm,longx
fe/f7db: 0b           ??mxd??? e .....                 phd
fe/f7dc: 5a           ??mxd??? e .....                 phy
fe/f7dd: 80 03        ??mxd??? e ...#.                 bra     LFEF7E2

fe/f7df: 20 b4 f8     ??mxd?Z? e ....> LFEF7DF         jsr     LFEF8B4
fe/f7e2: 8b           ??mxd??? e ....> LFEF7E2         phb
fe/f7e3: 48           ??mxd??? e .....                 pha
fe/f7e4: a0 00 00     ??mxd??? e .....                 ldy     #$0000
fe/f7e7: b3 01        n?mxd?Z? e .....                 lda     ($01,S),y
fe/f7e9: 29 ff 00     ??mxd??? e .....                 and     #$00ff
fe/f7ec: a8           n?mxd??? e .....                 tay
fe/f7ed: 68           ??mxd??? e .....                 pla
fe/f7ee: ab           ??mxd??? e .....                 plb
fe/f7ef: c0 20 00     ??mxd??? e .....                 cpy     #$0020
fe/f7f2: f0 eb        ??mxd??? e .....                 beq     LFEF7DF
fe/f7f4: b0 03        ??mxd?z? e .....                 bcs     LFEF7F9
fe/f7f6: 38           ??mxd?zc e .....                 sec
fe/f7f7: 80 01        ??mxd?zC e ...#.                 bra     LFEF7FA

fe/f7f9: 18           ??mxd?zC e ....> LFEF7F9         clc
fe/f7fa: 7a           ??mxd?z? e ....> LFEF7FA         ply
fe/f7fb: 2b           ??mxd??? e .....                 pld
fe/f7fc: b0 03        ??mxd??? e .....                 bcs     LFEF801
fe/f7fe: 28           ??mxd??c e .....                 plp
fe/f7ff: 18           ??mxd??? e .....                 clc
fe/f800: 6b           ??mxd??c e ...#.                 rtl

fe/f801: 28           ??mxd??C e ....> LFEF801         plp
fe/f802: 38           ??mxd??? e .....                 sec
fe/f803: 6b           ??mxd??C e ...#.                 rtl

fe/f804: 0b           ??mxd??c e ....> LFEF804         phd
fe/f805: 5a           ??mxd??c e .....                 phy
fe/f806: 8b           ??mxd??? e ....> LFEF806         phb
fe/f807: 48           ??mxd??? e .....                 pha
fe/f808: a0 00 00     ??mxd??? e .....                 ldy     #$0000
fe/f80b: b3 01        n?mxd?Z? e .....                 lda     ($01,S),y
fe/f80d: 29 ff 00     ??mxd??? e .....                 and     #$00ff
fe/f810: a8           n?mxd??? e .....                 tay
fe/f811: 68           ??mxd??? e .....                 pla
fe/f812: ab           ??mxd??? e .....                 plb
fe/f813: 20 b4 f8     ??mxd??? e .....                 jsr     LFEF8B4
fe/f816: c0 20 00     ??mxd??? e .....                 cpy     #$0020
fe/f819: f0 05        ??mxd??? e .....                 beq     LFEF820
fe/f81b: b0 e9        ??mxd?z? e .....                 bcs     LFEF806
fe/f81d: 38           ??mxd?zc e .....                 sec
fe/f81e: 80 05        ??mxd?zC e ...#.                 bra     LFEF825

fe/f820: 4b           ??mxd?Z? e ....> LFEF820         phk
fe/f821: 20 d8 f7     ??mxd?Z? e .....                 jsr     LFEF7D8
fe/f824: 18           ??mxd??? e .....                 clc
fe/f825: 7a           ??mxd??? e ....> LFEF825         ply
fe/f826: 2b           ??mxd??? e .....                 pld
fe/f827: 6b           ??mxd??? e ...#.                 rtl

fe/f828: 0b           ??mxd??? e ....> LFEF828         phd
fe/f829: 5a           ??mxd??? e .....                 phy
fe/f82a: 8b           ??mxd??? e .....                 phb
fe/f82b: 48           ??mxd??? e .....                 pha
fe/f82c: 3b           ??mxd??? e .....                 tsc
fe/f82d: 5b           ??mxd??? e .....                 tcd
fe/f82e: a7 01        ??mxd??? e .....                 lda     [DPCOP_Y]
fe/f830: 29 ff 00     ??mxd??? e .....                 and     #$00ff
fe/f833: c9 3a 00     n?mxd??? e .....                 cmp     #$003a
fe/f836: f0 15        ??mxd??? e .....                 beq     LFEF84D
fe/f838: a0 00 00     ??mxd?z? e .....                 ldy     #$0000
fe/f83b: b7 01        ??mxd??? e ....> LFEF83B         lda     [DPCOP_Y],y
fe/f83d: 29 ff 00     ??mxd??? e .....                 and     #$00ff
fe/f840: c9 21 00     n?mxd??? e .....                 cmp     #$0021
fe/f843: 90 08        ??mxd??? e .....                 bcc     LFEF84D
fe/f845: c9 3a 00     ??mxd??C e .....                 cmp     #$003a
fe/f848: f0 17        ??mxd??? e .....                 beq     LFEF861
fe/f84a: c8           ??mxd?z? e .....                 iny
fe/f84b: d0 ee        ??mxd??? e .....                 bne     LFEF83B
fe/f84d: 02 26        ??mxd??? e ....> LFEF84D         cop     COP_26_OPBHA
fe/f84f: 4e 45 54 3a+            .T...                 .zstr   “NET:”
fe/f854: 4b           ??mxd??? e .....                 phk
fe/f855: 20 28 f8     ??mxd??? e .....                 jsr     LFEF828
fe/f858: 84 04        ??mxd??? e .....                 sty     DPCOP_X+1
fe/f85a: b0 4d        ??mxd??? e .....                 bcs     LFEF8A9
fe/f85c: 68           ??mxd??c e .....                 pla
fe/f85d: ab           ??mxd??c e .....                 plb
fe/f85e: 18           ??mxd??c e .....                 clc
fe/f85f: 80 4e        ??mxd??c e ...#.                 bra     LFEF8AF

fe/f861: 68           ??mxd?Z? e ....> LFEF861         pla
fe/f862: ab           ??mxd??? e .....                 plb
fe/f863: 8b           ??mxd??? e .....                 phb
fe/f864: 48           ??mxd??? e .....                 pha
fe/f865: a2 00 00     ??mxd??? e .....                 ldx     #$0000
fe/f868: a0 02 00     n?mxd?Z? e .....                 ldy     #$0002
fe/f86b: 02 34        n?mxd?z? e .....                 cop     COP_34_OPRMI
fe/f86d: b0 3a        n?mxd?z? e .....                 bcs     LFEF8A9
fe/f86f: 85 04        n?mxd?zc e .....                 sta     DPCOP_X+1
fe/f871: 29 60 00     n?mxd?zc e .....                 and     #$0060
fe/f874: f0 33        n?mxd??c e .....                 beq     LFEF8A9
fe/f876: 68           n?mxd?zc e .....                 pla
fe/f877: ab           ??mxd??c e .....                 plb
fe/f878: a2 00 00     ??mxd??c e .....                 ldx     #$0000
fe/f87b: a0 00 00     n?mxd?Zc e .....                 ldy     #$0000
fe/f87e: 4b           n?mxd?Zc e .....                 phk
fe/f87f: 20 31 f2     n?mxd?Zc e .....                 jsr     LFEF231
fe/f882: b0 27        ??mxd??? e .....                 bcs     LFEF8AB
fe/f884: 8b           ??mxd??c e .....                 phb
fe/f885: 48           ??mxd??c e .....                 pha
fe/f886: 8a           ??mxd??c e .....                 txa
fe/f887: 4b           ??mxd??c e .....                 phk
fe/f888: 20 dd f1     ??mxd??c e .....                 jsr     getOrCreateModCallBlock
fe/f88b: b0 1c        ??mxd??? e .....                 bcs     LFEF8A9
fe/f88d: aa           ??mxd??c e .....                 tax
fe/f88e: 68           ??mxd??c e .....                 pla
fe/f88f: ab           ??mxd??c e .....                 plb
fe/f890: 48           ??mxd??c e .....                 pha
fe/f891: a0 00 00     ??mxd??c e .....                 ldy     #$0000
fe/f894: b3 01        n?mxd?Zc e .....                 lda     ($01,S),y
fe/f896: 29 ff 00     ??mxd??c e .....                 and     #$00ff
fe/f899: 49 3a 00     n?mxd??c e .....                 eor     #$003a
fe/f89c: c9 01 00     ??mxd??c e .....                 cmp     #$0001
fe/f89f: 68           ??mxd??? e .....                 pla
fe/f8a0: b0 09        ??mxd??? e .....                 bcs     LFEF8AB
fe/f8a2: 20 b4 f8     ??mxd??c e .....                 jsr     LFEF8B4
fe/f8a5: b8           ??mxd??? e .....                 clv
fe/f8a6: 18           ?vmxd??? e .....                 clc
fe/f8a7: 80 08        ?vmxd??c e ...#.                 bra     LFEF8B1

fe/f8a9: 68           ??mxd??? e ....> LFEF8A9         pla
fe/f8aa: ab           ??mxd??? e .....                 plb
fe/f8ab: a2 00 00     ??mxd??? e ....> LFEF8AB         ldx     #$0000
fe/f8ae: 38           n?mxd?Z? e .....                 sec
fe/f8af: e2 40        ??mxd??? e ....> LFEF8AF         sep     #$40
fe/f8b1: 7a           ??mxd??? e ....> LFEF8B1         ply
fe/f8b2: 2b           ??mxd??? e .....                 pld
fe/f8b3: 6b           ??mxd??? e ...#.                 rtl

fe/f8b4: 08           ??mxd??? e ....> LFEF8B4         php
fe/f8b5: c2 20        ??mxd??? e .....                 rep     #$20
fe/f8b7: 0b           ??mxd??? e .....                 phd
fe/f8b8: 8b           ??mxd??? e .....                 phb
fe/f8b9: 48           ??mxd??? e .....                 pha
fe/f8ba: 3b           ??mxd??? e .....                 tsc
fe/f8bb: 5b           ??mxd??? e .....                 tcd
fe/f8bc: e2 20        ??mxd??? e .....                 sep     #$20
                                                       .rwid   shortm
fe/f8be: e6 01        ??Mxd??? e .....                 inc     DPCOP_Y
fe/f8c0: d0 06        ??Mxd??? e .....                 bne     LFEF8C8
fe/f8c2: e6 02        ??Mxd?Z? e .....                 inc     DPCOP_Y+1
fe/f8c4: d0 02        ??Mxd??? e .....                 bne     LFEF8C8
fe/f8c6: e6 03        ??Mxd?Z? e .....                 inc     DPCOP_X
fe/f8c8: c2 20        ??Mxd??? e ....> LFEF8C8         rep     #$20
                                                       .rwid   longm
fe/f8ca: 68           ??mxd??? e .....                 pla
fe/f8cb: ab           ??mxd??? e .....                 plb
fe/f8cc: 2b           ??mxd??? e .....                 pld
fe/f8cd: 28           ??mxd??? e .....                 plp
fe/f8ce: 60           ??mxd??? e ...#.                 rts

                                       ; TODO: seemingly pointless dead code?
                                                       .rwid   shortm,shortx
fe/f8cf: 08           ??MXd??? e @T...                 php
fe/f8d0: 8b           ??MXd??? e .....                 phb
fe/f8d1: 48           ??MXd??? e .....                 pha
fe/f8d2: 68           ??MXd??? e .....                 pla
fe/f8d3: ab           ??MXd??? e .....                 plb
fe/f8d4: 28           ??MXd??? e .....                 plp
fe/f8d5: 60           ??MXd??? e ...#.                 rts

fe/f8d6: 5a           ??MXd??? e @T...                 phy
fe/f8d7: bb           ??MXd??? e .....                 tyx
fe/f8d8: bf 00 00 00  ??MXd??? e .....                 ldal    f:$000000,x
fe/f8dc: c3 01        ??MXd??? e .....                 cmp     $01,S
fe/f8de: f0 02        ??MXd??? e .....                 beq     LFEF8E2
fe/f8e0: aa           ??MXd?z? e .....                 tax
fe/f8e1: 18           ??MXd??? e .....                 clc
fe/f8e2: 7a           ??MXd??? e ....> LFEF8E2         ply
fe/f8e3: 60           ??MXd??? e ...#.                 rts

                                                       .rwid   longm,longx
fe/f8e4: 20 01 ce     nvmxd?zc e ....> LFEF8E4         jsr     obtainFreeBlock
fe/f8e7: b0 03        ??mxd??? e .....                 bcs     LFEF8EC
fe/f8e9: 20 ed f8     ??mxd??c e .....                 jsr     LFEF8ED
fe/f8ec: 60           ??mxd??? e ...#> LFEF8EC         rts

fe/f8ed: da           ??mxd??c e ....> LFEF8ED         phx
fe/f8ee: 5a           ??mxd??c e .....                 phy
fe/f8ef: bb           ??mxd??c e .....                 tyx
fe/f8f0: 20 42 f9     ??mxd??c e .....                 jsr     LFEF942
fe/f8f3: 90 28        ??mxd??? e .....                 bcc     LFEF91D
fe/f8f5: 00 00        ??mxd??C e ...#.                 brk     $00

fe/f8f7: 4c                      .....                 .dd1    $4c
fe/f8f8: 69                      .....                 .dd1    $69
fe/f8f9: 73                      .....                 .dd1    $73
fe/f8fa: 74                      .....                 .dd1    $74
fe/f8fb: 20                      .....                 .dd1    $20
fe/f8fc: 68                      .....                 .dd1    $68
fe/f8fd: 65                      .....                 .dd1    $65
fe/f8fe: 61                      .....                 .dd1    $61
fe/f8ff: 64                      .....                 .dd1    $64
fe/f900: 65                      .....                 .dd1    $65
fe/f901: 72                      .....                 .dd1    $72
fe/f902: 20                      .....                 .dd1    $20
fe/f903: 6e                      .....                 .dd1    $6e
fe/f904: 6f                      .....                 .dd1    $6f
fe/f905: 74                      .....                 .dd1    $74
fe/f906: 20                      .....                 .dd1    $20
fe/f907: 66                      .....                 .dd1    $66
fe/f908: 6f                      .....                 .dd1    $6f
fe/f909: 75                      .....                 .dd1    $75
fe/f90a: 6e                      .....                 .dd1    $6e
fe/f90b: 64                      .....                 .dd1    $64
fe/f90c: 20                      .....                 .dd1    $20
fe/f90d: 2d                      .....                 .dd1    $2d
fe/f90e: 20                      .....                 .dd1    $20
fe/f90f: 73                      .....                 .dd1    $73
fe/f910: 65                      .....                 .dd1    $65
fe/f911: 72                      .....                 .dd1    $72
fe/f912: 69                      .....                 .dd1    $69
fe/f913: 6f                      .....                 .dd1    $6f
fe/f914: 75                      .....                 .dd1    $75
fe/f915: 73                      .....                 .dd1    $73
fe/f916: 20                      .....                 .dd1    $20
fe/f917: 65                      .....                 .dd1    $65
fe/f918: 72                      .....                 .dd1    $72
fe/f919: 72                      .....                 .dd1    $72
fe/f91a: 6f                      .....                 .dd1    $6f
fe/f91b: 72                      .....                 .dd1    $72
fe/f91c: 00                      .....                 .dd1    $00

fe/f91d: 68           ??mxd??c e ....> LFEF91D         pla
fe/f91e: fa           ??mxd??c e .....                 plx
fe/f91f: 9f 00 00 00  ??mxd??c e .....                 stal    f:$000000,x
fe/f923: 8a           ??mxd??c e .....                 txa
fe/f924: bb           ??mxd??c e .....                 tyx
fe/f925: 9f 00 00 00  ??mxd??c e .....                 stal    f:$000000,x
fe/f929: aa           ??mxd??c e .....                 tax
fe/f92a: 18           ??mxd??c e .....                 clc
fe/f92b: 60           ??mxd??c e ...#.                 rts

fe/f92c: 20 35 f9     n?mxd?z? e ....> LFEF92C         jsr     LFEF935
fe/f92f: b0 03        ??mxd??? e .....                 bcs     LFEF934
fe/f931: 20 da cd     ??mxd??c e .....                 jsr     returnXToFreeList
fe/f934: 60           ??mxd??? e ...#> LFEF934         rts

fe/f935: 20 42 f9     n?mxd?z? e ....> LFEF935         jsr     LFEF942
fe/f938: b0 07        ??mxd??? e .....                 bcs     LFEF941
fe/f93a: da           ??mxd??c e .....                 phx
fe/f93b: bb           ??mxd??c e .....                 tyx
fe/f93c: 9f 00 00 00  ??mxd??c e .....                 stal    f:$000000,x
fe/f940: fa           ??mxd??c e .....                 plx
fe/f941: 60           ??mxd??? e ...#> LFEF941         rts

fe/f942: da           ??mxd??? e ....> LFEF942         phx
fe/f943: 5a           ??mxd??? e .....                 phy
fe/f944: 98           ??mxd??? e .....                 tya
fe/f945: aa           ??mxd??? e ....> LFEF945         tax
fe/f946: bf 00 00 00  ??mxd??? e .....                 ldal    f:$000000,x
fe/f94a: c3 03        ??mxd??? e .....                 cmp     $03,S
fe/f94c: f0 08        ??mxd??? e .....                 beq     LFEF956
fe/f94e: c3 01        ??mxd?z? e .....                 cmp     $01,S
fe/f950: d0 f3        ??mxd??? e .....                 bne     LFEF945
fe/f952: 7a           ??mxd?Z? e .....                 ply
fe/f953: fa           ??mxd??? e .....                 plx
fe/f954: 38           ??mxd??? e .....                 sec
fe/f955: 60           ??mxd??C e ...#.                 rts

fe/f956: 9b           ??mxd?Z? e ....> LFEF956         txy
fe/f957: fa           ??mxd??? e .....                 plx
fe/f958: fa           ??mxd??? e .....                 plx
fe/f959: bf 00 00 00  ??mxd??? e .....                 ldal    f:$000000,x
fe/f95d: 18           ??mxd??? e .....                 clc
fe/f95e: 60           ??mxd??c e ...#.                 rts

fe/f95f: c2 30        ??mxd??? e ....> doOPSTAR        rep     #$30
fe/f961: 02 0e        ??mxd??? e .....                 cop     COP_0E_OPCOM
fe/f963: 08           ??mxd??? e .....                 php                       ;TODO - bcc before all the pushing and popping!
fe/f964: 8b           ??mxd??? e .....                 phb
fe/f965: 48           ??mxd??? e .....                 pha
fe/f966: da           ??mxd??? e .....                 phx
fe/f967: 5a           ??mxd??? e .....                 phy
fe/f968: 90 0a        ??mxd??? e .....                 bcc     @sk
fe/f96a: 02 61        ??mxd??C e .....                 cop     COP_61_OPERC
fe/f96c: a2 00 00     ??mxd??C e .....                 ldx     #$0000
fe/f96f: 02 02        n?mxd?ZC e .....                 cop     COP_02_OPWRA
fe/f971: 02 03        n?mxd?ZC e .....                 cop     COP_03_OPNLI
fe/f973: 38           n?mxd?ZC e .....                 sec
fe/f974: 7a           ??mxd??? e ....> @sk             ply
fe/f975: fa           ??mxd??? e .....                 plx
fe/f976: 68           ??mxd??? e .....                 pla
fe/f977: ab           ??mxd??? e .....                 plb
fe/f978: 28           ??mxd??? e .....                 plp
fe/f979: 60           ??mxd??? e ...#.                 rts

                                                       .rwid   shortm,shortx
fe/f97a: 02 5b        ??MXd??? e @T... starDELETE      cop     COP_5B_OPDEL
fe/f97c: 60           ??MXd??? e ...#.                 rts

fe/f97d: 02 5c        ??MXd??? e @T... starRENAME      cop     COP_5C_OPREN
fe/f97f: 60           ??MXd??? e ...#.                 rts

fe/f980: 0b           ??MXd??? e @T... starEX          phd
fe/f981: c2 30        ??MXd??? e .....                 rep     #$30
                                                       .rwid   longm,longx
fe/f983: a0 ff ff     ??mxd??? e .....                 ldy     #$ffff
fe/f986: 80 06        n?mxd?z? e ...#.                 bra     LFEF98E

                                                       .rwid   shortm,shortx
fe/f988: 0b           ??MXd?Z? e .T..> starCAT         phd
fe/f989: c2 30        ??MXd?Z? e .....                 rep     #$30
                                                       .rwid   longm,longx
fe/f98b: a0 00 00     ??mxd?Z? e .....                 ldy     #$0000
fe/f98e: ba           n?mxd??? e ....> LFEF98E         tsx
fe/f98f: f4 00 00     ??mxd??? e .....                 pea     $0000
fe/f992: f4 00 00     ??mxd??? e .....                 pea     $0000
fe/f995: 8b           ??mxd??? e .....                 phb
fe/f996: 8b           ??mxd??? e .....                 phb
fe/f997: 48           ??mxd??? e .....                 pha
fe/f998: da           ??mxd??? e .....                 phx
fe/f999: 5a           ??mxd??? e .....                 phy
fe/f99a: 02 10        ??mxd??? e .....                 cop     COP_10_OPADP
fe/f99c: 00 01                   .T...                 .dd2    $0100             ;direct page size to allocate
fe/f99e: 7a           ??mxd??? e .....                 ply
fe/f99f: 90 29        ??mxd??? e .....                 bcc     LFEF9CA
fe/f9a1: fa           ??mxd??C e .....                 plx
fe/f9a2: 9a           ??mxd??C e .....                 txs
fe/f9a3: 2b           ??mxd??C e .....                 pld
fe/f9a4: 02 26        ??mxd??C e .....                 cop     COP_26_OPBHA
fe/f9a6: 46 61 69 6c+            .T...                 .zstr   “Failed to allocate direct page”
fe/f9c5: a2 01 00     ??mxd??C e .....                 ldx     #$0001
fe/f9c8: 38           n?mxd?zC e .....                 sec
fe/f9c9: 60           n?mxd?zC e ...#.                 rts

fe/f9ca: 5b           ??mxd??c e ....> LFEF9CA         tcd
fe/f9cb: 84 00        ??mxd??c e .....                 sty     $00
fe/f9cd: a3 03        ??mxd??c e .....                 lda     $03,S
fe/f9cf: 4b           ??mxd??c e .....                 phk
fe/f9d0: 20 d8 f7     ??mxd??c e .....                 jsr     LFEF7D8
fe/f9d3: 83 03        ??mxd??? e .....                 sta     $03,S
fe/f9d5: f4 00 00     ??mxd??? e .....                 pea     $0000
fe/f9d8: ab           ??mxd??? e .....                 plb
fe/f9d9: ab           ??mxd??? e .....                 plb
fe/f9da: ba           ??mxd??? e .....                 tsx
fe/f9db: e8           ??mxd??? e .....                 inx
fe/f9dc: e8           ??mxd??? e .....                 inx
fe/f9dd: e8           ??mxd??? e .....                 inx
fe/f9de: 0b           ??mxd??? e .....                 phd
fe/f9df: a9 0a 00     ??mxd??? e .....                 lda     #$000a
fe/f9e2: 18           n?mxd?z? e .....                 clc
fe/f9e3: 63 01        n?mxd?zc e .....                 adc     $01,S
fe/f9e5: 83 09        ??mxd??? e .....                 sta     $09,S
fe/f9e7: 8a           ??mxd??? e .....                 txa
fe/f9e8: fa           ??mxd??? e .....                 plx
fe/f9e9: 02 59        ??mxd??? e .....                 cop     COP_59_OPRCH
fe/f9eb: 90 03        ??mxd??? e .....                 bcc     LFEF9F0
fe/f9ed: 4c a1 fa     ??mxd??C e ...#.                 jmp     LFEFAA1

fe/f9f0: a2 0d 00     ??mxd??c e ....> LFEF9F0         ldx     #$000d
fe/f9f3: a0 0a 00     n?mxd?zc e .....                 ldy     #$000a
fe/f9f6: 20 85 fb     n?mxd?zc e .....                 jsr     writeYcharsFromDPX
fe/f9f9: a9 20 00     ??mxd??? e .....                 lda     #$0020
fe/f9fc: 02 00        n?mxd?z? e .....                 cop     COP_00_OPWRC
fe/f9fe: a9 28 00     n?mxd?z? e .....                 lda     #$0028
fe/fa01: 02 00        n?mxd?z? e .....                 cop     COP_00_OPWRC
fe/fa03: a5 0b        n?mxd?z? e .....                 lda     DPCOP_PC
fe/fa05: 29 ff 00     ??mxd??? e .....                 and     #$00ff
fe/fa08: 85 02        n?mxd??? e .....                 sta     DPCOP_Y+1
fe/fa0a: a9 64 00     n?mxd??? e .....                 lda     #$0064
fe/fa0d: 85 04        n?mxd?z? e .....                 sta     DPCOP_X+1
fe/fa0f: 20 5f fb     n?mxd?z? e .....                 jsr     LFEFB5F
fe/fa12: a9 0a 00     ??mxd??? e .....                 lda     #$000a
fe/fa15: 85 04        n?mxd?z? e .....                 sta     DPCOP_X+1
fe/fa17: 20 5f fb     n?mxd?z? e .....                 jsr     LFEFB5F
fe/fa1a: a9 30 00     ??mxd??? e .....                 lda     #$0030
fe/fa1d: 18           n?mxd?z? e .....                 clc
fe/fa1e: 65 02        n?mxd?zc e .....                 adc     DPCOP_Y+1
fe/fa20: 02 00        ??mxd??? e .....                 cop     COP_00_OPWRC
fe/fa22: a9 29 00     ??mxd??? e .....                 lda     #$0029
fe/fa25: 02 00        n?mxd?z? e .....                 cop     COP_00_OPWRC
fe/fa27: a2 04 00     n?mxd?z? e .....                 ldx     #$0004
fe/fa2a: 20 79 fb     n?mxd?z? e .....                 jsr     LFEFB79
fe/fa2d: a5 0a        ??mxd??? e .....                 lda     DPCOP_P
fe/fa2f: 29 ff 00     ??mxd??? e .....                 and     #$00ff
fe/fa32: d0 0a        n?mxd??? e .....                 bne     LFEFA3E
fe/fa34: 02 01        n?mxd?Z? e .....                 cop     COP_01_OPWRS
fe/fa36: 4f 77 6e 65+            .T...                 .zstr   “Owner”
fe/fa3c: 80 09        n?mxd?Z? e ...#.                 bra     LFEFA47

fe/fa3e: 02 01        n?mxd?z? e ....> LFEFA3E         cop     COP_01_OPWRS
fe/fa40: 50 75 62 6c+            .T...                 .zstr   “Public”
fe/fa47: 02 03        n?mxd??? e ....> LFEFA47         cop     COP_03_OPNLI
fe/fa49: a2 17 00     n?mxd??? e .....                 ldx     #$0017
fe/fa4c: a0 10 00     n?mxd?z? e .....                 ldy     #$0010
fe/fa4f: 20 85 fb     n?mxd?z? e .....                 jsr     writeYcharsFromDPX
fe/fa52: a2 04 00     ??mxd??? e .....                 ldx     #$0004
fe/fa55: 20 79 fb     n?mxd?z? e .....                 jsr     LFEFB79
fe/fa58: 02 01        ??mxd??? e .....                 cop     COP_01_OPWRS
fe/fa5a: 4f 70 74 69+            .T...                 .zstr   “Option ”
fe/fa62: a5 0c        ??mxd??? e .....                 lda     DPCOP_PC+1
fe/fa64: 29 03 00     ??mxd??? e .....                 and     #$0003
fe/fa67: 0a           n?mxd??? e .....                 asl     A
fe/fa68: aa           ??mxd??? e .....                 tax
fe/fa69: 4b           ??mxd??? e .....                 phk
                                                       .dbank  K (auto)
fe/fa6a: ab           ??mxd??? e .....                 plb
fe/fa6b: bd 93 fb     ??mxd??? e .....                 lda     tblStrPtrOpts & $ffff,x
fe/fa6e: a2 00 00     ??mxd??? e .....                 ldx     #$0000
fe/fa71: 02 02        n?mxd?Z? e .....                 cop     COP_02_OPWRA
fe/fa73: 02 03        n?mxd?Z? e .....                 cop     COP_03_OPNLI
fe/fa75: 02 01        n?mxd?Z? e .....                 cop     COP_01_OPWRS
fe/fa77: 44 69 72 2e+            .T...                 .zstr   “Dir. ”
fe/fa7d: a2 27 00     n?mxd?Z? e .....                 ldx     #$0027
fe/fa80: a0 0a 00     n?mxd?z? e .....                 ldy     #$000a
fe/fa83: 20 85 fb     n?mxd?z? e .....                 jsr     writeYcharsFromDPX
fe/fa86: a2 05 00     ??mxd??? e .....                 ldx     #$0005
fe/fa89: 20 79 fb     n?mxd?z? e .....                 jsr     LFEFB79
fe/fa8c: 02 01        ??mxd??? e .....                 cop     COP_01_OPWRS
fe/fa8e: 4c 69 62 2e+            .T...                 .zstr   “Lib. ”
fe/fa94: a2 31 00     ??mxd??? e .....                 ldx     #$0031
fe/fa97: a0 0a 00     n?mxd?z? e .....                 ldy     #$000a
fe/fa9a: 20 85 fb     n?mxd?z? e .....                 jsr     writeYcharsFromDPX
fe/fa9d: 02 03        ??mxd??? e .....                 cop     COP_03_OPNLI
fe/fa9f: 02 03        ??mxd??? e .....                 cop     COP_03_OPNLI
fe/faa1: fa           ??mxd??? e ....> LFEFAA1         plx
fe/faa2: 68           ??mxd??? e .....                 pla
fe/faa3: ab           ??mxd??? e .....                 plb
fe/faa4: ab           ??mxd??? e .....                 plb
fe/faa5: 85 02        ??mxd??? e .....                 sta     DPCOP_Y+1
fe/faa7: 68           ??mxd??? e .....                 pla
fe/faa8: 68           ??mxd??? e .....                 pla
fe/faa9: a0 08 00     ??mxd??? e .....                 ldy     #$0008
fe/faac: f4 00 00     ??mxd?z? e ....> LFEFAAC         pea     $0000
fe/faaf: 88           ??mxd?z? e .....                 dey
fe/fab0: d0 fa        ??mxd??? e .....                 bne     LFEFAAC
fe/fab2: f4 0c 00     ??mxd?Z? e .....                 pea     $000c
fe/fab5: a9 01 00     ??mxd?Z? e .....                 lda     #$0001
fe/fab8: 24 00        n?mxd?z? e .....                 bit     $00
fe/faba: 10 01        ??mxd??? e .....                 bpl     LFEFABD
fe/fabc: 1a           N?mxd??? e .....                 inc     A
fe/fabd: 48           ??mxd??? e ....> LFEFABD         pha
fe/fabe: f4 00 00     ??mxd??? e .....                 pea     $0000
fe/fac1: 0b           ??mxd??? e .....                 phd
fe/fac2: a9 0a 00     ??mxd??? e .....                 lda     #$000a
fe/fac5: 18           n?mxd?z? e .....                 clc
fe/fac6: 63 01        n?mxd?zc e .....                 adc     $01,S
fe/fac8: 83 01        ??mxd??? e .....                 sta     $01,S
fe/faca: 8b           ??mxd??? e .....                 phb
fe/facb: 8b           ??mxd??? e .....                 phb
fe/facc: d4 02        ??mxd??? e .....                 pei     (DPCOP_Y+1)
fe/face: da           ??mxd??? e .....                 phx
fe/facf: a2 08 00     ??mxd??? e .....                 ldx     #$0008
fe/fad2: a9 a0 00     n?mxd?z? e .....                 lda     #$00a0
fe/fad5: 02 06        n?mxd?z? e .....                 cop     COP_06_OPOSB
fe/fad7: 86 04        n?mxd?z? e .....                 stx     DPCOP_X+1
fe/fad9: a2 0a 00     n?mxd?z? e .....                 ldx     #$000a
fe/fadc: 02 06        n?mxd?z? e .....                 cop     COP_06_OPOSB
fe/fade: 8a           n?mxd?z? e .....                 txa
fe/fadf: 38           ??mxd??? e .....                 sec
fe/fae0: e5 04        ??mxd??C e .....                 sbc     DPCOP_X+1
fe/fae2: 85 04        ??mxd??? e .....                 sta     DPCOP_X+1
fe/fae4: 85 06        ??mxd??? e .....                 sta     DPCOP_AH+1
fe/fae6: ba           ??mxd??? e .....                 tsx
fe/fae7: 8a           ??mxd??? e .....                 txa
fe/fae8: 1a           ??mxd??? e .....                 inc     A
fe/fae9: 1a           ??mxd??? e .....                 inc     A
fe/faea: 1a           ??mxd??? e .....                 inc     A
fe/faeb: 85 02        ??mxd??? e .....                 sta     DPCOP_Y+1
fe/faed: f4 00 00     ??mxd??? e ....> LFEFAED         pea     $0000
fe/faf0: ab           ??mxd??? e .....                 plb
fe/faf1: ab           ??mxd??? e .....                 plb
fe/faf2: 02 5a        ??mxd??? e .....                 cop     COP_5A_OPRFN
fe/faf4: 90 12        ??mxd??? e .....                 bcc     LFEFB08
fe/faf6: 86 02        ??mxd??C e .....                 stx     DPCOP_Y+1
fe/faf8: fa           ??mxd??C e .....                 plx
fe/faf9: 9a           ??mxd??C e .....                 txs
fe/fafa: a6 02        ??mxd??C e .....                 ldx     DPCOP_Y+1
fe/fafc: da           ??mxd??C e .....                 phx
fe/fafd: 8b           ??mxd??C e .....                 phb
fe/fafe: 48           ??mxd??C e .....                 pha
fe/faff: 7b           ??mxd??C e .....                 tdc
fe/fb00: 02 1a        ??mxd??C e .....                 cop     COP_1A_OPFZB
fe/fb02: 68           ??mxd??C e .....                 pla
fe/fb03: ab           ??mxd??C e .....                 plb
fe/fb04: fa           ??mxd??C e .....                 plx
fe/fb05: 2b           ??mxd??C e .....                 pld
fe/fb06: 38           ??mxd??C e .....                 sec
fe/fb07: 60           ??mxd??C e ...#.                 rts

fe/fb08: f4 00 00     ??mxd??c e ....> LFEFB08         pea     $0000
fe/fb0b: ab           ??mxd??c e .....                 plb
                                                       .dbank  $00
fe/fb0c: ab           ??mxd??c e .....                 plb
fe/fb0d: 9b           ??mxd??c e .....                 txy
fe/fb0e: d0 10        ??mxd??c e .....                 bne     LFEFB20
fe/fb10: a6 04        ??mxd?Zc e .....                 ldx     DPCOP_X+1
fe/fb12: e4 06        ??mxd??c e .....                 cpx     DPCOP_AH+1
fe/fb14: f0 02        ??mxd??? e .....                 beq     LFEFB18
fe/fb16: 02 03        ??mxd?z? e .....                 cop     COP_03_OPNLI
fe/fb18: 7b           ??mxd??? e ....> LFEFB18         tdc
fe/fb19: 02 1a        ??mxd??? e .....                 cop     COP_1A_OPFZB
fe/fb1b: fa           ??mxd??? e .....                 plx
fe/fb1c: 9a           ??mxd??? e .....                 txs
fe/fb1d: 2b           ??mxd??? e .....                 pld
fe/fb1e: 18           ??mxd??? e .....                 clc
fe/fb1f: 60           ??mxd??c e ...#.                 rts

fe/fb20: a2 00 00     ??mxd?zc e ....> LFEFB20         ldx     #$0000
fe/fb23: a9 14 00     ??mxd??? e ....> LFEFB23         lda     #$0014
fe/fb26: 85 08        n?mxd?z? e .....                 sta     DPCOP_DP
fe/fb28: e2 20        n?mxd?z? e .....                 sep     #$20
                                                       .rwid   shortm
fe/fb2a: b5 0a        ??Mxd??? e ....> LFEFB2A         lda     DPCOP_P,x
fe/fb2c: f0 07        ??Mxd??? e .....                 beq     LFEFB35
fe/fb2e: e8           ??Mxd?z? e .....                 inx
fe/fb2f: 02 00        ??Mxd??? e .....                 cop     COP_00_OPWRC
fe/fb31: c6 08        ??Mxd??? e .....                 dec     DPCOP_DP
fe/fb33: 80 f5        ??Mxd??? e ...#.                 bra     LFEFB2A

fe/fb35: e8           ??Mxd?Z? e ....> LFEFB35         inx
fe/fb36: 24 00        ??Mxd??? e .....                 bit     $00
fe/fb38: 30 1a        ??Mxd??? e .....                 bmi     LFEFB54
fe/fb3a: a5 06        n?Mxd??? e .....                 lda     DPCOP_AH+1
fe/fb3c: 38           ??Mxd??? e .....                 sec
fe/fb3d: e9 14        ??Mxd??C e .....                 sbc     #$14
fe/fb3f: 85 06        ??Mxd??? e .....                 sta     DPCOP_AH+1
fe/fb41: 90 0d        ??Mxd??? e .....                 bcc     LFEFB50
fe/fb43: da           ??Mxd??C e .....                 phx
fe/fb44: a6 08        ??Mxd??C e .....                 ldx     DPCOP_DP
fe/fb46: c2 30        ??Mxd??C e .....                 rep     #$30
                                                       .rwid   longm
fe/fb48: 20 79 fb     ??mxd??C e .....                 jsr     LFEFB79
fe/fb4b: e2 20        ??mxd??? e .....                 sep     #$20
                                                       .rwid   shortm
fe/fb4d: fa           ??Mxd??? e .....                 plx
fe/fb4e: 80 06        ??Mxd??? e ...#.                 bra     LFEFB56

fe/fb50: a5 04        ??Mxd??c e ....> LFEFB50         lda     DPCOP_X+1
fe/fb52: 85 06        ??Mxd??c e .....                 sta     DPCOP_AH+1
fe/fb54: 02 03        ??Mxd??? e ....> LFEFB54         cop     COP_03_OPNLI
fe/fb56: c2 30        ??Mxd??? e ....> LFEFB56         rep     #$30
                                                       .rwid   longm
fe/fb58: 88           ??mxd??? e .....                 dey
fe/fb59: d0 c8        ??mxd??? e .....                 bne     LFEFB23
fe/fb5b: a5 02        ??mxd?Z? e .....                 lda     DPCOP_Y+1
fe/fb5d: 80 8e        ??mxd??? e ...#.                 bra     LFEFAED

fe/fb5f: 64 06        n?mxd?z? e ....> LFEFB5F         stz     DPCOP_AH+1
fe/fb61: a5 02        n?mxd?z? e .....                 lda     DPCOP_Y+1
fe/fb63: 38           ??mxd??? e .....                 sec
fe/fb64: e5 04        ??mxd??C e ....> LFEFB64         sbc     DPCOP_X+1
fe/fb66: 90 04        ??mxd??? e .....                 bcc     LFEFB6C
fe/fb68: e6 06        ??mxd??C e .....                 inc     DPCOP_AH+1
fe/fb6a: 80 f8        ??mxd??C e ...#.                 bra     LFEFB64

fe/fb6c: 65 04        ??mxd??c e ....> LFEFB6C         adc     DPCOP_X+1
fe/fb6e: 85 02        ??mxd??? e .....                 sta     DPCOP_Y+1
fe/fb70: 18           ??mxd??? e .....                 clc
fe/fb71: a9 30 00     ??mxd??c e .....                 lda     #$0030
fe/fb74: 65 06        n?mxd?zc e .....                 adc     DPCOP_AH+1
fe/fb76: 02 00        ??mxd??? e .....                 cop     COP_00_OPWRC
fe/fb78: 60           ??mxd??? e ...#.                 rts

fe/fb79: 8a           ??mxd??? e ....> LFEFB79         txa
fe/fb7a: f0 08        ??mxd??? e .....                 beq     LFEFB84
fe/fb7c: a9 20 00     ??mxd?z? e .....                 lda     #$0020
fe/fb7f: 02 00        ??mxd?z? e ....> LFEFB7F         cop     COP_00_OPWRC
fe/fb81: ca           ??mxd?z? e .....                 dex
fe/fb82: d0 fb        ??mxd??? e .....                 bne     LFEFB7F
fe/fb84: 60           ??mxd?Z? e ...#> LFEFB84         rts

fe/fb85: f4 00 00     ??mxd?z? e ....> writeYcharsFromDPX pea  $0000
fe/fb88: ab           ??mxd?z? e .....                 plb
                                                       .dbank  $00
fe/fb89: ab           ??mxd??? e .....                 plb
fe/fb8a: b5 00        ??mxd??? e .....                 lda     $00,x
fe/fb8c: 02 00        ??mxd??? e .....                 cop     COP_00_OPWRC
fe/fb8e: e8           ??mxd??? e .....                 inx
fe/fb8f: 88           ??mxd??? e .....                 dey
fe/fb90: d0 f3        ??mxd??? e .....                 bne     writeYcharsFromDPX
fe/fb92: 60           ??mxd?Z? e ...#.                 rts

fe/fb93: 9b fb                   ..... tblStrPtrOpts   .dd2    strOff & $ffff
fe/fb95: a4 fb                   .....                 .dd2    strLoad & $ffff
fe/fb97: ae fb                   .....                 .dd2    strRun & $ffff
fe/fb99: b7 fb                   .....                 .dd2    strExec & $ffff
fe/fb9b: 30 30 20 28+            ..... strOff          .zstr   “00 (Off)”
fe/fba4: 30 31 20 28+            ..... strLoad         .zstr   “01 (Load)”
fe/fbae: 30 32 20 28+            ..... strRun          .zstr   “02 (Run)”
fe/fbb7: 30 33 20 28+            ..... strExec         .zstr   “03 (Exec)”

                                       ; TODO - dead code?
                                                       .rwid   shortm,shortx
fe/fbc1: 60           ??MXd??? e @T.#.                 rts

fe/fbc2: c2 30        ???????? e @T... default_IVIRQ   rep     #$30
                                                       .rwid   longm,longx
fe/fbc4: 8b           ??mx???? e .....                 phb
fe/fbc5: 48           ??mx???? e .....                 pha
fe/fbc6: da           ??mx???? e .....                 phx
fe/fbc7: af 10 fe 00  ??mx???? e .....                 ldal    f:$00fe10
fe/fbcb: f0 12        ??mx???? e .....                 beq     LFEFBDF
fe/fbcd: ba           ??mx??z? e .....                 tsx
fe/fbce: 1b           ??mx???? e .....                 tcs
fe/fbcf: 4b           ??mx???? e .....                 phk
fe/fbd0: 62 4b 00     ??mx???? e .....                 per     LFEFC1E
fe/fbd3: f4 00 04     ??mx???? e .....                 pea     $0400
fe/fbd6: 48           ??mx???? e .....                 pha
fe/fbd7: da           ??mx???? e .....                 phx
fe/fbd8: a9 00 00     ??mx???? e .....                 lda     #$0000
fe/fbdb: 8f 10 fe 00  n?mx??Z? e .....                 stal    f:$00fe10
fe/fbdf: 0b           ??mx??Z? e ....> LFEFBDF         phd
fe/fbe0: 5a           ??mx??Z? e .....                 phy
fe/fbe1: f4 06 fe     ??mx??Z? e .....                 pea     0+(LFEFE05 & $ffff)+1
fe/fbe4: e2 30        ??mx??Z? e .....                 sep     #$30
                                                       .rwid   shortm,shortx
fe/fbe6: 2b           ??MX??Z? e .....                 pld
fe/fbe7: d4 00        ??MX???? e ....> LFEFBE7         pei     ($00)
fe/fbe9: 2b           ??MX???? e .....                 pld
fe/fbea: a7 02        ??MX???? e .....                 lda     [DPCOP_Y+1]
fe/fbec: a8           ??MX???? e .....                 tay
fe/fbed: 27 09        ??MX???? e .....                 and     [DPCOP_DP+1]
fe/fbef: 45 06        ??MX???? e .....                 eor     DPCOP_AH+1
fe/fbf1: 25 05        ??MX???? e .....                 and     DPCOP_AH
fe/fbf3: f0 f2        ??MX???? e .....                 beq     LFEFBE7
fe/fbf5: 0b           ??MX??z? e .....                 phd
fe/fbf6: 4b           ??MX??z? e .....                 phk
fe/fbf7: f4 12 fc     ??MX??z? e .....                 pea     LFEFC12 & $ffff
fe/fbfa: d4 07        ??MX??z? e .....                 pei     (DPCOP_B)
fe/fbfc: 2b           ??MX??z? e .....                 pld
fe/fbfd: e6 07        ??MX???? e .....                 inc     DPCOP_B
fe/fbff: d0 0a        ??MX???? e .....                 bne     LFEFC0B
fe/fc01: e6 08        ??MX??Z? e .....                 inc     DPCOP_DP
fe/fc03: d0 06        ??MX???? e .....                 bne     LFEFC0B
fe/fc05: e6 09        ??MX??Z? e .....                 inc     DPCOP_DP+1
fe/fc07: d0 02        ??MX???? e .....                 bne     LFEFC0B
fe/fc09: e6 0a        ??MX??Z? e .....                 inc     DPCOP_P
fe/fc0b: d4 05        ??MX???? e ....> LFEFC0B         pei     (DPCOP_AH)
fe/fc0d: d4 03        ??MX???? e .....                 pei     (DPCOP_X)
fe/fc0f: d4 01        ??MX???? e .....                 pei     (DPCOP_Y)
fe/fc11: 2b           ??MX???? e .....                 pld
fe/fc12: 40           ??MX???? e ...#. LFEFC12         rti

fe/fc13: b0                      .....                 .dd1    $b0
fe/fc14: cf                      .....                 .dd1    $cf
fe/fc15: 2b                      .....                 .dd1    $2b
fe/fc16: c2                      .....                 .dd1    $c2
fe/fc17: 30                      .....                 .dd1    $30
fe/fc18: 7a                      .....                 .dd1    $7a
fe/fc19: 2b                      .....                 .dd1    $2b
fe/fc1a: fa                      .....                 .dd1    $fa
fe/fc1b: 68                      .....                 .dd1    $68
fe/fc1c: ab                      .....                 .dd1    $ab
fe/fc1d: 40                      .....                 .dd1    $40
fe/fc1e: 8f                      ..... LFEFC1E         .dd1    $8f
fe/fc1f: 10                      .....                 .dd1    $10
fe/fc20: fe                      .....                 .dd1    $fe
fe/fc21: 00                      .....                 .dd1    $00
fe/fc22: 9a                      .....                 .dd1    $9a
fe/fc23: fa                      .....                 .dd1    $fa
fe/fc24: 68                      .....                 .dd1    $68
fe/fc25: ab                      .....                 .dd1    $ab
fe/fc26: 40                      .....                 .dd1    $40

                                       ********************************************************************************
                                       * COP 2F - OPIIQ -                                                             *
                                       *                                                                              *
                                       * Action: This call is used to add a device's interrupt service to the list of *
                                       * such services maintained by the operating system.                            *
                                       *                                                                              *
                                       * On entry: Inline 3 byte hardware address of the device which requires        *
                                       *           servicing's status register.                                       *
                                       *           Inline 1 byte EOR mask, allowing inversion of bits to the correct  *
                                       *           logic level if necessary.                                          *
                                       *           BHA points to the start address of the interrupt routine.          *
                                       *           X contains an AND mask to discriminate between different devices   *
                                       *           causing interrupts. (X must be set to zero if a call to OPMIQ is   *
                                       *           required.)                                                         *
                                       *           Y contains the priority (range 1 to 255). This will be the         *
                                       *           position within the list of devices which the new entry will       *
                                       * occupy.                                                                      *
                                       *           The lower the value the higher the priority.                       *
                                       *           D is set to the direct page required whilst in the interrupt       *
                                       *           routine.                                                           *
                                       *           P flags are set to give the mode required in the interrupt         *
                                       * routine.                                                                     *
                                       *           (The operating system sets the I flag.)                            *
                                       * On exit:  If C = O then the call succeeded. Y = handle and HA = handle.      *
                                       *           If C = 1 then the call failed. Y = 0 and HA = O.                   *
                                       *           No registers preserved                                             *
                                       ********************************************************************************
                                                       .rwid   longm,longx
fe/fc27: c0 00 00     ??mxd??? e @T... COP_2F          cpy     #$0000
fe/fc2a: d0 09        ??mxd??? e .....                 bne     @YnZ
fe/fc2c: af 06 fe 00  ??mxd?Z? e .....                 ldal    f:B0LST_IRQ_HANDLER
fe/fc30: f0 03        ??mxd??? e .....                 beq     @YnZ
fe/fc32: 82 c1 00     ??mxd?z? e ...#.                 brl     @retSec

fe/fc35: a9 0e 00     ??mxd??? e ....> @YnZ            lda     #HND_type_E_CBIQ
fe/fc38: 20 01 ce     n?mxd?z? e .....                 jsr     obtainFreeBlock
fe/fc3b: 90 03        ??mxd??? e .....                 bcc     @skok1
fe/fc3d: 82 b6 00     ??mxd??C e ...#.                 brl     @retSec

fe/fc40: da           ??mxd??c e ....> @skok1          phx
fe/fc41: a9 0e 00     ??mxd??c e .....                 lda     #HND_type_E_CBIQ
fe/fc44: 20 01 ce     n?mxd?zc e .....                 jsr     obtainFreeBlock
fe/fc47: 90 03        ??mxd??? e .....                 bcc     @skok2
fe/fc49: 82 a6 00     ??mxd??C e ...#.                 brl     @retSec2

fe/fc4c: e2 20        ??mxd??c e ....> @skok2          sep     #$20
                                                       .rwid   shortm
fe/fc4e: a5 01        ??Mxd??c e .....                 lda     DPCOP_Y
fe/fc50: 9f 00 00 00  ??Mxd??c e .....                 stal    f:$000000,x
fe/fc54: a5 0a        ??Mxd??c e .....                 lda     DPCOP_P
fe/fc56: 09 04        ??Mxd??c e .....                 ora     #$04
fe/fc58: 9f 03 00 00  ??Mxd?zc e .....                 stal    f:$000003,x
fe/fc5c: c2 20        ??Mxd?zc e .....                 rep     #$20
                                                       .rwid   longm
fe/fc5e: a5 06        ??mxd?zc e .....                 lda     DPCOP_AH+1
fe/fc60: 9f 05 00 00  ??mxd??c e .....                 stal    f:$000005,x
fe/fc64: a5 05        ??mxd??c e .....                 lda     DPCOP_AH
fe/fc66: 9f 04 00 00  ??mxd??c e .....                 stal    f:$000004,x
fe/fc6a: a5 08        ??mxd??c e .....                 lda     DPCOP_DP
fe/fc6c: 9f 01 00 00  ??mxd??c e .....                 stal    f:$000001,x
fe/fc70: a9 00 00     ??mxd??c e .....                 lda     #$0000
fe/fc73: 9f 07 00 00  n?mxd?Zc e .....                 stal    f:$000007,x
fe/fc77: 9f 09 00 00  n?mxd?Zc e .....                 stal    f:$000009,x
fe/fc7b: 8a           n?mxd?Zc e .....                 txa
fe/fc7c: fa           ??mxd??c e .....                 plx
fe/fc7d: 9f 07 00 00  ??mxd??c e .....                 stal    f:$000007,x
fe/fc81: a0 01 00     ??mxd??c e .....                 ldy     #$0001
fe/fc84: b7 0b        n?mxd?zc e .....                 lda     [DPCOP_PC],y
fe/fc86: 9f 02 00 00  ??mxd??c e .....                 stal    f:$000002,x
fe/fc8a: c8           ??mxd??c e .....                 iny
fe/fc8b: b7 0b        ??mxd??c e .....                 lda     [DPCOP_PC],y
fe/fc8d: 9f 03 00 00  ??mxd??c e .....                 stal    f:$000003,x
fe/fc91: e2 20        ??mxd??c e .....                 sep     #$20
                                                       .rwid   shortm
fe/fc93: c8           ??Mxd??c e .....                 iny
fe/fc94: c8           ??Mxd??c e .....                 iny
fe/fc95: b7 0b        ??Mxd??c e .....                 lda     [DPCOP_PC],y
fe/fc97: 9f 06 00 00  ??Mxd??c e .....                 stal    f:$000006,x
fe/fc9b: a5 03        ??Mxd??c e .....                 lda     DPCOP_X
fe/fc9d: 9f 05 00 00  ??Mxd??c e .....                 stal    f:$000005,x
fe/fca1: c2 20        ??Mxd??c e .....                 rep     #$20
                                                       .rwid   longm
fe/fca3: a9 06 fd     ??mxd??c e .....                 lda     #LFD06_anFF & $ffff
fe/fca6: 9f 09 00 00  n?mxd?zc e .....                 stal    f:$000009,x
fe/fcaa: e2 20        n?mxd?zc e .....                 sep     #$20
                                                       .rwid   shortm
fe/fcac: 4b           n?Mxd?zc e .....                 phk
fe/fcad: 68           n?Mxd?zc e .....                 pla
fe/fcae: 9f 0b 00 00  ??Mxd??c e .....                 stal    f:$00000b,x
fe/fcb2: c2 20        ??Mxd??c e .....                 rep     #$20
                                                       .rwid   longm
fe/fcb4: f4 00 00     ??mxd??c e .....                 pea     $0000
fe/fcb7: ab           ??mxd??c e .....                 plb
                                                       .dbank  $00
fe/fcb8: ab           ??mxd??c e .....                 plb
fe/fcb9: d4 01        ??mxd??c e .....                 pei     (DPCOP_Y)         ;push original Y parameter
fe/fcbb: 0b           ??mxd??c e .....                 phd                       ;push DP of COP handler stack frame
fe/fcbc: 08           ??mxd??c e .....                 php                       ;push current flags/mode
fe/fcbd: 78           ??mxd??c e .....                 sei                       ;disable interrupts
fe/fcbe: da           ??mxdI?c e .....                 phx                       ;push X of 1st IRQ handler block
fe/fcbf: f4 06 fe     ??mxdI?c e .....                 pea     B0LST_IRQ_HANDLER ;push address of IRQ list head
fe/fcc2: 2b           ??mxdI?c e .....                 pld                       ;make that DP
fe/fcc3: 0b           ??mxdI?? e ....> @lp             phd
                                       ; stack 
                                       ; +8 Y param (priority)
                                       ; +6 COP frame
                                       ; +5 flags/mode
                                       ; +3 pointer to IQ block
                                       ; +1 next entry pointer
fe/fcc4: a5 00        ??mxdI?? e .....                 lda     $00               ;get pointer at offset 0 (next item)
fe/fcc6: f0 0d        ??mxdI?? e .....                 beq     @skdone           ;if 0 exit
fe/fcc8: 5b           ??mxdIz? e .....                 tcd                       ;make DP point at it
fe/fcc9: b2 07        ??mxdI?? e .....                 lda     ($07)             ;get the interrupt priority from the 1st byte of the second block
fe/fccb: 29 ff 00     ??mxdI?? e .....                 and     #$00ff
fe/fcce: c3 08        n?mxdI?? e .....                 cmp     $08,S             ;compare with stacked Y parameters
fe/fcd0: 68           ??mxdI?? e .....                 pla
fe/fcd1: b0 f0        ??mxdI?? e .....                 bcs     @lp               ;if current entry higher or same priority loop
fe/fcd3: 48           ??mxdI?c e .....                 pha
fe/fcd4: 7b           ??mxdI?c e .....                 tdc
                                       ; we're now at a point in the list that is lower priority - insert here, or at
                                       ; the end
                                       ; 
                                       ; stack
                                       ; +8 Y param (priority)
                                       ; +6 COP frame
                                       ; +5 flags/mode
                                       ; +3 pointer to IQ block
                                       ; +1 address of pointer to current entry (or B0LST_IRQ_HANDLER)
                                       ; 
                                       ; A points at current entry or zero if end of list
fe/fcd5: 2b           ??mxdI?? e ....> @skdone         pld
fe/fcd6: fa           ??mxdI?? e .....                 plx
fe/fcd7: 9f 00 00 00  ??mxdI?? e .....                 stal    f:$000000,x       ;store pointer to new entry at next pointer
fe/fcdb: 8a           ??mxdI?? e .....                 txa
fe/fcdc: 85 00        ??mxdI?? e .....                 sta     $00               ;update previous item's (or list front) to point at new entry
fe/fcde: 28           ??mxdI?? e .....                 plp
fe/fcdf: 2b           ??mxd??c e .....                 pld
fe/fce0: fa           ??mxd??c e .....                 plx
fe/fce1: aa           ??mxd??c e .....                 tax
fe/fce2: 20 a1 ce     ??mxd??c e .....                 jsr     allocHandleQRY
fe/fce5: 84 01        ??mxd??? e .....                 sty     DPCOP_Y
fe/fce7: 90 10        ??mxd??? e .....                 bcc     @retY
fe/fce9: da           ??mxd??C e .....                 phx
fe/fcea: bf 07 00 00  ??mxd??C e .....                 ldal    f:$000007,x
fe/fcee: aa           ??mxd??C e .....                 tax
fe/fcef: 20 da cd     ??mxd??C e .....                 jsr     returnXToFreeList
fe/fcf2: fa           ??mxd??? e ....> @retSec2        plx
fe/fcf3: 20 da cd     ??mxd??? e .....                 jsr     returnXToFreeList
fe/fcf6: 38           ??mxd??? e ....> @retSec         sec
fe/fcf7: 64 01        ??mxd??C e .....                 stz     DPCOP_Y
fe/fcf9: a5 01        ??mxd??? e ....> @retY           lda     DPCOP_Y
fe/fcfb: 85 05        ??mxd??? e .....                 sta     DPCOP_AH
fe/fcfd: e6 0b        ??mxd??? e .....                 inc     DPCOP_PC
fe/fcff: e6 0b        ??mxd??? e .....                 inc     DPCOP_PC
fe/fd01: e6 0b        ??mxd??? e .....                 inc     DPCOP_PC
fe/fd03: e6 0b        ??mxd??? e .....                 inc     DPCOP_PC
fe/fd05: 6b           ??mxd??? e ...#.                 rtl

fe/fd06: ff                      ..... LFD06_anFF      .dd1    $ff

                                       ********************************************************************************
                                       * COP 31 - OPMIQ - Modify interrupt intercept                                  *
                                       *                                                                              *
                                       * Action: This call allows the modification of the address of the AND mask (by *
                                       * default set to a location containing &FF), and the value of the AND mask     *
                                       * contained in X. (X should be set to zero by OPIIQ before using OPMIQ. OPMIQ  *
                                       * is then used to specify the required mask.)                                  *
                                       *                                                                              *
                                       * On entry: Y = handle returned by OPIIQ.                                      *
                                       *           BHA = 0 means do not modify the address of the AND mask.           *
                                       *           BHA <> 0 means BHA is the new address of the AND mask.             *
                                       *           X = 0 means do not modify the AND mask.                            *
                                       *           X <> 0 means X is the new AND mask.                                *
                                       * On exit:  C = 0 means that the inieirupt intercept was modified.             *
                                       *           C = 1 means that the interrupt intercept was not modified.         *
                                       *           No registers preserved                                             *
                                       ********************************************************************************
fe/fd07: 20 da ce     ??mxd??? e @T... COP_31          jsr     getHandleYinDP
fe/fd0a: b0 36        ??mxd??? e .....                 bcs     @retsec
fe/fd0c: da           ??mxd??c e .....                 phx
fe/fd0d: bf 07 00 00  ??mxd??c e .....                 ldal    f:$000007,x
fe/fd11: aa           ??mxd??c e .....                 tax
fe/fd12: bf 0b 00 00  ??mxd??c e .....                 ldal    f:$00000b,x
fe/fd16: fa           ??mxd??c e .....                 plx
fe/fd17: 29 ff 00     ??mxd??c e .....                 and     #$00ff
fe/fd1a: c9 0e 00     n?mxd??c e .....                 cmp     #$000e
fe/fd1d: d0 23        ??mxd??? e .....                 bne     @retsec
fe/fd1f: a5 06        ??mxd?Z? e .....                 lda     DPCOP_AH+1
fe/fd21: 05 05        ??mxd??? e .....                 ora     DPCOP_AH
fe/fd23: 08           ??mxd??? e .....                 php
fe/fd24: 78           ??mxd??? e .....                 sei
fe/fd25: f0 0c        ??mxdI?? e .....                 beq     @sk
fe/fd27: a5 06        ??mxdIz? e .....                 lda     DPCOP_AH+1
fe/fd29: 9f 0a 00 00  ??mxdI?? e .....                 stal    f:DPCOP_P,x
fe/fd2d: a5 05        ??mxdI?? e .....                 lda     DPCOP_AH
fe/fd2f: 9f 09 00 00  ??mxdI?? e .....                 stal    f:DPCOP_DP+1,x
fe/fd33: a5 03        ??mxdI?? e ....> @sk             lda     DPCOP_X
fe/fd35: f0 08        ??mxdI?? e .....                 beq     @plpretclc
fe/fd37: e2 20        ??mxdIz? e .....                 sep     #$20
                                                       .rwid   shortm
fe/fd39: 9f 05 00 00  ??MxdIz? e .....                 stal    f:DPCOP_AH,x
fe/fd3d: c2 20        ??MxdIz? e .....                 rep     #$20
                                                       .rwid   longm
fe/fd3f: 28           ??mxdI?? e ....> @plpretclc      plp
fe/fd40: 18           ??mxd??? e .....                 clc
fe/fd41: 6b           ??mxd??c e ...#.                 rtl

fe/fd42: 38           ??mxd??? e ....> @retsec         sec
fe/fd43: 6b           ??mxd??C e ...#.                 rtl

                                       ********************************************************************************
                                       * COP 30 - OPRIQ - release interrupt                                           *
                                       *                                                                              *
                                       * Action: This call removes the specified interrupt service from the list      *
                                       *                                                                              *
                                       * On entry: Y = handle returned by OPIIQ.                                      *
                                       * On exit:  C = 0 means that the call released the interrupt intercept.        *
                                       *           C = 1 means that the call failed to release the interrupt          *
                                       * intercept                                                                    *
                                       *           No registers preserved                                             *
                                       ********************************************************************************
fe/fd44: 20 da ce     ??mxd??? e @T... COP_30          jsr     getHandleYinDP
fe/fd47: b0 32        ??mxd??? e .....                 bcs     @retsec
fe/fd49: da           ??mxd??c e .....                 phx
fe/fd4a: 08           ??mxd??c e .....                 php
fe/fd4b: 78           ??mxd??c e .....                 sei
fe/fd4c: bf 00 00 00  ??mxdI?c e .....                 ldal    f:$000000,x
fe/fd50: 48           ??mxdI?c e .....                 pha
fe/fd51: a9 06 fe     ??mxdI?c e .....                 lda     #B0LST_IRQ_HANDLER
fe/fd54: aa           ??mxdIz? e ....> @lp             tax
fe/fd55: bf 00 00 00  ??mxdI?? e .....                 ldal    f:$000000,x
fe/fd59: f0 1d        ??mxdI?? e .....                 beq     @retsk
fe/fd5b: c3 04        ??mxdIz? e .....                 cmp     $04,S
fe/fd5d: d0 f5        ??mxdI?? e .....                 bne     @lp
fe/fd5f: 68           ??mxdIZ? e .....                 pla
fe/fd60: 9f 00 00 00  ??mxdI?? e .....                 stal    f:$000000,x
fe/fd64: 28           ??mxdI?? e .....                 plp
fe/fd65: fa           ??mxd??c e .....                 plx
fe/fd66: 20 1e cf     ??mxd??c e .....                 jsr     freeHandlePointerX
fe/fd69: da           ??mxd??? e .....                 phx
fe/fd6a: bf 07 00 00  ??mxd??? e .....                 ldal    f:$000007,x
fe/fd6e: aa           ??mxd??? e .....                 tax
fe/fd6f: 20 da cd     ??mxd??? e .....                 jsr     returnXToFreeList
fe/fd72: fa           ??mxd??? e .....                 plx
fe/fd73: 20 da cd     ??mxd??? e .....                 jsr     returnXToFreeList
fe/fd76: 18           ??mxd??? e .....                 clc
fe/fd77: 6b           ??mxd??c e ...#.                 rtl

fe/fd78: 28           ??mxdIZ? e ....> @retsk          plp
fe/fd79: 2b           ??mxd??c e .....                 pld
fe/fd7a: 2b           ??mxd??c e .....                 pld
fe/fd7b: 6b           ??mxd??? e ...#> @retsec         rtl

                                                       .rwid   shortm,shortx
fe/fd7c: 08           ??MXdI?? e ....> LFEFD7C         php
fe/fd7d: c2 30        ??MXdI?? e .....                 rep     #$30
                                                       .rwid   longm,longx
fe/fd7f: 0b           ??mxdI?? e .....                 phd
fe/fd80: 8b           ??mxdI?? e .....                 phb
fe/fd81: 02 13        ??mxdI?? e .....                 cop     COP_13_OPAST
fe/fd83: 00 01                   .T...                 .dd2    $0100             ;stack size
fe/fd85: b0 fe        ??mxdI?? e ....> LFEFD85         bcs     LFEFD85
fe/fd87: 8f 10 fe 00  ??mxdI?c e .....                 stal    f:$00fe10
fe/fd8b: a9 00 00     ??mxdI?c e .....                 lda     #$0000
fe/fd8e: 8f 06 fe 00  n?mxdIZc e .....                 stal    f:B0LST_IRQ_HANDLER
fe/fd92: 4b           n?mxdIZc e .....                 phk
                                                       .dbank  K (auto)
fe/fd93: ab           n?mxdIZc e .....                 plb
fe/fd94: e2 30        ??mxdI?c e .....                 sep     #$30
                                                       .rwid   shortm,shortx
fe/fd96: a9 cc        ??MXdI?c e .....                 lda     #$cc
fe/fd98: eb           N?MXdIzc e .....                 xba
fe/fd99: a9 b9        ??MXdI?c e .....                 lda     #$b9
fe/fd9b: a2 ff        N?MXdIzc e .....                 ldx     #$ff
fe/fd9d: a0 00        N?MXdIzc e .....                 ldy     #$00
fe/fd9f: f4 00 ac     n?MXdIZc e .....                 pea     DPSYS
fe/fda2: 2b           n?MXdIZc e .....                 pld
fe/fda3: 02 2f        ??MXdI?c e .....                 cop     COP_2F_OPIIQ
fe/fda5: ff ff 00                .T...                 .dd3    $00ffff           ;device address
fe/fda8: 00                      .T...                 .dd1    $00               ;device eor mask
fe/fda9: a9 cd        ??MXdI?c e .....                 lda     #$cd
fe/fdab: eb           N?MXdIzc e .....                 xba
fe/fdac: a9 00        ??MXdI?c e .....                 lda     #$00
fe/fdae: a0 21        n?MXdIZc e .....                 ldy     #$21
fe/fdb0: 20 fb fd     n?MXdIzc e .....                 jsr     LFEFDFB
fe/fdb3: a2 08        ??MXdI?? e .....                 ldx     #$08
fe/fdb5: 20 ee fd     n?MXdIz? e .....                 jsr     LFEFDEE
fe/fdb8: a9 cc        ??MXdI?? e .....                 lda     #$cc
fe/fdba: eb           N?MXdIz? e .....                 xba
fe/fdbb: a9 ca        ??MXdI?? e .....                 lda     #$ca
fe/fdbd: a0 20        N?MXdIz? e .....                 ldy     #$20
fe/fdbf: 20 fb fd     n?MXdIz? e .....                 jsr     LFEFDFB
fe/fdc2: a2 04        ??MXdI?? e .....                 ldx     #$04
fe/fdc4: 20 ee fd     n?MXdIz? e .....                 jsr     LFEFDEE
fe/fdc7: a9 cc        ??MXdI?? e .....                 lda     #$cc
fe/fdc9: eb           N?MXdIz? e .....                 xba
fe/fdca: a9 ba        ??MXdI?? e .....                 lda     #$ba
fe/fdcc: 4b           N?MXdIz? e .....                 phk
                                                       .dbank  K (auto)
fe/fdcd: ab           N?MXdIz? e .....                 plb
fe/fdce: a2 00        ??MXdI?? e .....                 ldx     #$00
fe/fdd0: a0 10        n?MXdIZ? e .....                 ldy     #$10
fe/fdd2: f4 00 ac     n?MXdIz? e .....                 pea     DPSYS
fe/fdd5: 2b           n?MXdIz? e .....                 pld
fe/fdd6: 02 2f        ??MXdI?? e .....                 cop     COP_2F_OPIIQ
fe/fdd8: 0d 00 42                .T...                 .dd3    VIA_IFR
fe/fddb: 00                      .T...                 .dd1    $00
fe/fddc: a2 10        ??MXdI?? e .....                 ldx     #$10
fe/fdde: f4 00 42     n?MXdIz? e .....                 pea     $4200             ;TODO: set to >VIA base
fe/fde1: ab           n?MXdIz? e .....                 plb
fe/fde2: ab           ??MXdI?? e .....                 plb
fe/fde3: a9 00        ??MXdI?? e .....                 lda     #>VIA_IER
fe/fde5: eb           n?MXdIZ? e .....                 xba
fe/fde6: a9 0e        ??MXdI?? e .....                 lda     #<VIA_IER
fe/fde8: 02 31        n?MXdIz? e .....                 cop     COP_31_OPMIQ
fe/fdea: ab           n?MXdIz? e .....                 plb
fe/fdeb: 2b           ??MXdI?? e .....                 pld
fe/fdec: 28           ??MXdI?? e .....                 plp
fe/fded: 60           ??MXdI?? e ...#.                 rts

fe/fdee: f4 00 00     n?MXdIz? e ....> LFEFDEE         pea     $0000
                                                       .dbank  $00
fe/fdf1: ab           n?MXdIz? e .....                 plb
fe/fdf2: ab           ??MXdI?? e .....                 plb
fe/fdf3: a9 a5        ??MXdI?? e .....                 lda     #>SYSVAR_ELK_ULA_IE
fe/fdf5: eb           N?MXdIz? e .....                 xba
fe/fdf6: a9 5b        ??MXdI?? e .....                 lda     #<SYSVAR_ELK_ULA_IE
fe/fdf8: 02 31        n?MXdIz? e .....                 cop     COP_31_OPMIQ
fe/fdfa: 60           n?MXdIz? e ...#.                 rts

fe/fdfb: 4b           n?MXdIz? e ....> LFEFDFB         phk
                                                       .dbank  K (auto)
fe/fdfc: ab           n?MXdIz? e .....                 plb
fe/fdfd: a2 00        ??MXdI?? e .....                 ldx     #$00
fe/fdff: f4 00 ac     n?MXdIZ? e .....                 pea     DPSYS
fe/fe02: 2b           n?MXdIZ? e .....                 pld
fe/fe03: 02 2f        ??MXdI?? e .....                 cop     COP_2F_OPIIQ
fe/fe05: 00 fe 45                .T... LFEFE05         .dd3    sheila_ULA_IRQ_CTL
fe/fe08: 00                      .T...                 .dd1    $00
fe/fe09: 60           ??MXdI?? e ...#.                 rts

                                                       .rwid   longm,longx
fe/fe0a: 02 26        ??mxdI?? e ....> LFEFE0A         cop     COP_26_OPBHA
fe/fe0c: 56 44 55 00             .T...                 .zstr   “VDU”
fe/fe10: a2 bf 00     ??mxdI?? e .....                 ldx     #DPSYS_MOD_VDU-$ac00
fe/fe13: a0 00 00     n?mxdIz? e .....                 ldy     #$0000
fe/fe16: 02 29        n?mxdIZ? e .....                 cop     COP_29_OPRFR
fe/fe18: 02 26        n?mxdIZ? e .....                 cop     COP_26_OPBHA
fe/fe1a: 4e 45 54 00             .T...                 .zstr   “NET”
fe/fe1e: a2 af 00     n?mxdIZ? e .....                 ldx     #DPSYS_MOD_NET-$ac00
fe/fe21: a0 00 00     n?mxdIz? e .....                 ldy     #$0000
fe/fe24: 02 29        n?mxdIZ? e .....                 cop     COP_29_OPRFR
fe/fe26: 02 26        n?mxdIZ? e .....                 cop     COP_26_OPBHA
fe/fe28: 45 43 4f 4e+            .T...                 .zstr   “ECONET”
fe/fe2f: a2 9f 00     n?mxdIZ? e .....                 ldx     #DPSYS_MOD_ECONET-$ac00
fe/fe32: a0 00 00     n?mxdIz? e .....                 ldy     #$0000
fe/fe35: 02 29        n?mxdIZ? e .....                 cop     COP_29_OPRFR
fe/fe37: 60           n?mxdIZ? e ...#.                 rts

                                                       .rwid   shortm,shortx
fe/fe38: 08           ????d??? e ....> callModVDU      php
fe/fe39: 0b           ????d??? e .....                 phd
fe/fe3a: 4b           ????d??? e .....                 phk
fe/fe3b: 20 41 fe     ????d??? e .....                 jsr     _callModVduInt
fe/fe3e: 2b           ????d??? e .....                 pld
fe/fe3f: 28           ????d??? e .....                 plp
fe/fe40: 6b           n???d?z? e ...#.                 rtl

fe/fe41: f4 00 ac     ????d??? e ....> _callModVduInt  pea     DPSYS
fe/fe44: 2b           ????d??? e .....                 pld
fe/fe45: d4 c3        ????d??? e .....                 pei     (<DPSYS_MOD_VDU+4)
fe/fe47: d4 c1        ????d??? e .....                 pei     (<DPSYS_MOD_VDU+2)
fe/fe49: d4 bf        ????d??? e .....                 pei     (<DPSYS_MOD_VDU)
fe/fe4b: 6b           ????d??? e ...#.                 rtl

                                                       .rwid   longm,longx
fe/fe4c: d4 b3        ??mxd??? e ....> _callModNetwork pei     (<DPSYS_MOD_NET+4)
fe/fe4e: d4 b1        ??mxd??? e .....                 pei     (<DPSYS_MOD_NET+2)
fe/fe50: d4 af        ??mxd??? e .....                 pei     (<DPSYS_MOD_NET)
fe/fe52: 6b           ??mxd??? e ...#.                 rtl

fe/fe53: d4 a3        ??mxd??? e ....> _callModEconet  pei     (<DPSYS_MOD_ECONET+4)
fe/fe55: d4 a1        ??mxd??? e .....                 pei     (<DPSYS_MOD_ECONET+2)
fe/fe57: d4 9f        ??mxd??? e .....                 pei     (<DPSYS_MOD_ECONET)
fe/fe59: d4 9d        ??mxd??? e .....                 pei     (<DPSYS_DP_ECO)
fe/fe5b: 2b           ??mxd??? e .....                 pld
fe/fe5c: 6b           ??mxd??? e ...#.                 rtl

                                                       .rwid   shortm,shortx
fe/fe5d: d4 cb        ???????? e @T... default__KB     pei     (<DPSYS_DP_KEYBOARD+4)
fe/fe5f: d4 c9        ???????? e .....                 pei     (<DPSYS_DP_KEYBOARD+2)
fe/fe61: d4 c7        ???????? e .....                 pei     (<DPSYS_DP_KEYBOARD)
fe/fe63: 6b           ???????? e ...#. LFEFE63_anRTL   rtl

fe/fe64: 6b           ??MXd??? e @T.#. LFEFE64_anRTL   rtl                       ;This is where module calls return to by default

fe/fe65: 66 79                   .T...                 .dd2    $7966             ;checksum TODO - generate post assemble
fe/fe67: ff ff ff ff+            .....                 .fill   153,$ff           ;padding TODO - remove
                                                       .adrend ↑ $feae00
